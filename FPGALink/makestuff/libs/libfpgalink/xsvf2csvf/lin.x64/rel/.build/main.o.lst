   1              		.file	"main.c"
   2              		.text
   3              		.section	.rodata.str1.8,"aMS",@progbits,1
   4              		.align 8
   5              	.LC0:
   6 0000 53796E6F 		.string	"Synopsis: %s [-u] <src.xsvf|src.svf> <dst.csvf>\n"
   6      70736973 
   6      3A202573 
   6      205B2D75 
   6      5D203C73 
   7              		.section	.rodata.str1.1,"aMS",@progbits,1
   8              	.LC1:
   9 0000 2E737666 		.string	".svf"
   9      00
  10              	.LC2:
  11 0005 2E787376 		.string	".xsvf"
  11      6600
  12              		.section	.rodata.str1.8
  13 0031 00000000 		.align 8
  13      000000
  14              	.LC3:
  15 0038 536F7572 		.string	"Source filename should have an .svf or an .xsvf extension\n"
  15      63652066 
  15      696C656E 
  15      616D6520 
  15      73686F75 
  16              		.section	.rodata.str1.1
  17              	.LC4:
  18 000b 25730A00 		.string	"%s\n"
  19              		.section	.text.startup,"ax",@progbits
  20              		.p2align 4
  21              		.globl	main
  23              	main:
  24              	.LFB34:
  25              		.cfi_startproc
  26 0000 F30F1EFA 		endbr64
  27 0004 4156     		pushq	%r14
  28              		.cfi_def_cfa_offset 16
  29              		.cfi_offset 14, -16
  30 0006 660FEFC0 		pxor	%xmm0, %xmm0
  31 000a 4155     		pushq	%r13
  32              		.cfi_def_cfa_offset 24
  33              		.cfi_offset 13, -24
  34 000c 4154     		pushq	%r12
  35              		.cfi_def_cfa_offset 32
  36              		.cfi_offset 12, -32
  37 000e 55       		pushq	%rbp
  38              		.cfi_def_cfa_offset 40
  39              		.cfi_offset 6, -40
  40 000f 53       		pushq	%rbx
  41              		.cfi_def_cfa_offset 48
  42              		.cfi_offset 3, -48
  43 0010 4883EC40 		subq	$64, %rsp
  44              		.cfi_def_cfa_offset 112
  45 0014 64488B04 		movq	%fs:40, %rax
  45      25280000 
  45      00
  46 001d 48894424 		movq	%rax, 56(%rsp)
  46      38
  47 0022 31C0     		xorl	%eax, %eax
  48 0024 C7442404 		movl	$0, 4(%rsp)
  48      00000000 
  49 002c 48C74424 		movq	$0, 8(%rsp)
  49      08000000 
  49      00
  50 0035 0F294424 		movaps	%xmm0, 16(%rsp)
  50      10
  51 003a 0F294424 		movaps	%xmm0, 32(%rsp)
  51      20
  52 003f 83FF03   		cmpl	$3, %edi
  53 0042 0F848000 		je	.L2
  53      0000
  54 0048 488B0E   		movq	(%rsi), %rcx
  55 004b BE010000 		movl	$1, %esi
  55      00
  56 0050 488B3D00 		movq	stderr(%rip), %rdi
  56      000000
  57 0057 488D1500 		leaq	.LC0(%rip), %rdx
  57      000000
  58 005e 41BC0100 		movl	$1, %r12d
  58      0000
  59 0064 488D6C24 		leaq	16(%rsp), %rbp
  59      10
  60 0069 E8000000 		call	__fprintf_chk@PLT
  60      00
  61              	.L3:
  62 006e 4889EF   		movq	%rbp, %rdi
  63 0071 E8000000 		call	bufDestroy@PLT
  63      00
  64 0076 488B4C24 		movq	8(%rsp), %rcx
  64      08
  65 007b 4885C9   		testq	%rcx, %rcx
  66 007e 7424     		je	.L1
  67 0080 488B3D00 		movq	stderr(%rip), %rdi
  67      000000
  68 0087 488D1500 		leaq	.LC4(%rip), %rdx
  68      000000
  69 008e BE010000 		movl	$1, %esi
  69      00
  70 0093 31C0     		xorl	%eax, %eax
  71 0095 E8000000 		call	__fprintf_chk@PLT
  71      00
  72 009a 488B7C24 		movq	8(%rsp), %rdi
  72      08
  73 009f E8000000 		call	bufFreeError@PLT
  73      00
  74              	.L1:
  75 00a4 488B4424 		movq	56(%rsp), %rax
  75      38
  76 00a9 64482B04 		subq	%fs:40, %rax
  76      25280000 
  76      00
  77 00b2 0F85FA00 		jne	.L17
  77      0000
  78 00b8 4883C440 		addq	$64, %rsp
  79              		.cfi_remember_state
  80              		.cfi_def_cfa_offset 48
  81 00bc 4489E0   		movl	%r12d, %eax
  82 00bf 5B       		popq	%rbx
  83              		.cfi_def_cfa_offset 40
  84 00c0 5D       		popq	%rbp
  85              		.cfi_def_cfa_offset 32
  86 00c1 415C     		popq	%r12
  87              		.cfi_def_cfa_offset 24
  88 00c3 415D     		popq	%r13
  89              		.cfi_def_cfa_offset 16
  90 00c5 415E     		popq	%r14
  91              		.cfi_def_cfa_offset 8
  92 00c7 C3       		ret
  93              	.L2:
  94              		.cfi_restore_state
  95 00c8 4C8B6608 		movq	8(%rsi), %r12
  96 00cc 488D5C24 		leaq	8(%rsp), %rbx
  96      08
  97 00d1 488D6C24 		leaq	16(%rsp), %rbp
  97      10
  98 00d6 4C8B6E10 		movq	16(%rsi), %r13
  99 00da 4C89E7   		movq	%r12, %rdi
 100 00dd E8000000 		call	strlen@PLT
 100      00
 101 00e2 31D2     		xorl	%edx, %edx
 102 00e4 4889D9   		movq	%rbx, %rcx
 103 00e7 BE002800 		movl	$10240, %esi
 103      00
 104 00ec 4889EF   		movq	%rbp, %rdi
 105 00ef 4D8D7404 		leaq	-5(%r12,%rax), %r14
 105      FB
 106 00f4 E8000000 		call	bufInitialise@PLT
 106      00
 107 00f9 85C0     		testl	%eax, %eax
 108 00fb 0F858100 		jne	.L9
 108      0000
 109 0101 498D7601 		leaq	1(%r14), %rsi
 110 0105 488D3D00 		leaq	.LC1(%rip), %rdi
 110      000000
 111 010c E8000000 		call	strcmp@PLT
 111      00
 112 0111 85C0     		testl	%eax, %eax
 113 0113 744D     		je	.L18
 114 0115 4C89F6   		movq	%r14, %rsi
 115 0118 488D3D00 		leaq	.LC2(%rip), %rdi
 115      000000
 116 011f E8000000 		call	strcmp@PLT
 116      00
 117 0124 85C0     		testl	%eax, %eax
 118 0126 7565     		jne	.L6
 119 0128 488D5424 		leaq	4(%rsp), %rdx
 119      04
 120 012d 4889D9   		movq	%rbx, %rcx
 121 0130 4889EE   		movq	%rbp, %rsi
 122 0133 4C89E7   		movq	%r12, %rdi
 123 0136 E8000000 		call	flLoadXsvfAndConvertToCsvf@PLT
 123      00
 124              	.L5:
 125 013b 85C0     		testl	%eax, %eax
 126 013d 7538     		jne	.L10
 127 013f 488B4C24 		movq	24(%rsp), %rcx
 127      18
 128 0144 31D2     		xorl	%edx, %edx
 129 0146 4989D8   		movq	%rbx, %r8
 130 0149 4C89EE   		movq	%r13, %rsi
 131 014c 4889EF   		movq	%rbp, %rdi
 132 014f E8000000 		call	bufWriteBinaryFile@PLT
 132      00
 133 0154 F7D8     		negl	%eax
 134 0156 4519E4   		sbbl	%r12d, %r12d
 135 0159 4183E406 		andl	$6, %r12d
 136 015d E90CFFFF 		jmp	.L3
 136      FF
 137              	.L18:
 138 0162 488D5424 		leaq	4(%rsp), %rdx
 138      04
 139 0167 4889D9   		movq	%rbx, %rcx
 140 016a 4889EE   		movq	%rbp, %rsi
 141 016d 4C89E7   		movq	%r12, %rdi
 142 0170 E8000000 		call	flLoadSvfAndConvertToCsvf@PLT
 142      00
 143 0175 EBC4     		jmp	.L5
 144              	.L10:
 145 0177 41BC0400 		movl	$4, %r12d
 145      0000
 146 017d E9ECFEFF 		jmp	.L3
 146      FF
 147              	.L9:
 148 0182 41BC0200 		movl	$2, %r12d
 148      0000
 149 0188 E9E1FEFF 		jmp	.L3
 149      FF
 150              	.L6:
 151 018d 488B3D00 		movq	stderr(%rip), %rdi
 151      000000
 152 0194 488D1500 		leaq	.LC3(%rip), %rdx
 152      000000
 153 019b BE010000 		movl	$1, %esi
 153      00
 154 01a0 31C0     		xorl	%eax, %eax
 155 01a2 41BC0300 		movl	$3, %r12d
 155      0000
 156 01a8 E8000000 		call	__fprintf_chk@PLT
 156      00
 157 01ad E9BCFEFF 		jmp	.L3
 157      FF
 158              	.L17:
 159 01b2 E8000000 		call	__stack_chk_fail@PLT
 159      00
 160              		.cfi_endproc
 161              	.LFE34:
 163              		.ident	"GCC: (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0"
 164              		.section	.note.GNU-stack,"",@progbits
 165              		.section	.note.gnu.property,"a"
 166              		.align 8
 167 0000 04000000 		.long	1f - 0f
 168 0004 10000000 		.long	4f - 1f
 169 0008 05000000 		.long	5
 170              	0:
 171 000c 474E5500 		.string	"GNU"
 172              	1:
 173              		.align 8
 174 0010 020000C0 		.long	0xc0000002
 175 0014 04000000 		.long	3f - 2f
 176              	2:
 177 0018 03000000 		.long	0x3
 178              	3:
 179 001c 00000000 		.align 8
 180              	4:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccmAcQna.s:23     .text.startup:0000000000000000 main
     /tmp/ccmAcQna.s:5      .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccmAcQna.s:17     .rodata.str1.1:000000000000000b .LC4
     /tmp/ccmAcQna.s:8      .rodata.str1.1:0000000000000000 .LC1
     /tmp/ccmAcQna.s:10     .rodata.str1.1:0000000000000005 .LC2
     /tmp/ccmAcQna.s:14     .rodata.str1.8:0000000000000038 .LC3

UNDEFINED SYMBOLS
stderr
__fprintf_chk
bufDestroy
bufFreeError
strlen
bufInitialise
strcmp
flLoadXsvfAndConvertToCsvf
bufWriteBinaryFile
flLoadSvfAndConvertToCsvf
__stack_chk_fail
