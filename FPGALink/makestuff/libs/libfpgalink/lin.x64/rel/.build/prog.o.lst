   1              		.file	"prog.c"
   2              		.text
   3              		.p2align 4
   5              	makeLookup:
   6              	.LFB40:
   7              		.cfi_startproc
   8 0000 4989F0   		movq	%rsi, %r8
   9 0003 31C0     		xorl	%eax, %eax
  10 0005 31D2     		xorl	%edx, %edx
  11 0007 BE010000 		movl	$1, %esi
  11      00
  12 000c EB14     		jmp	.L2
  13 000e 6690     		.p2align 4,,10
  14              		.p2align 3
  15              	.L11:
  16 0010 31D2     		xorl	%edx, %edx
  17 0012 A880     		testb	$-128, %al
  18 0014 7408     		je	.L3
  19 0016 0FB64F07 		movzbl	7(%rdi), %ecx
  20 001a 89F2     		movl	%esi, %edx
  21 001c D3E2     		sall	%cl, %edx
  22              	.L3:
  23 001e 4983C001 		addq	$1, %r8
  24              	.L2:
  25 0022 A840     		testb	$64, %al
  26 0024 740D     		je	.L4
  27 0026 0FB64F06 		movzbl	6(%rdi), %ecx
  28 002a 4189F1   		movl	%esi, %r9d
  29 002d 41D3E1   		sall	%cl, %r9d
  30 0030 4409CA   		orl	%r9d, %edx
  31              	.L4:
  32 0033 A820     		testb	$32, %al
  33 0035 740D     		je	.L5
  34 0037 0FB64F05 		movzbl	5(%rdi), %ecx
  35 003b 4189F2   		movl	%esi, %r10d
  36 003e 41D3E2   		sall	%cl, %r10d
  37 0041 4409D2   		orl	%r10d, %edx
  38              	.L5:
  39 0044 A810     		testb	$16, %al
  40 0046 740D     		je	.L6
  41 0048 0FB64F04 		movzbl	4(%rdi), %ecx
  42 004c 4189F3   		movl	%esi, %r11d
  43 004f 41D3E3   		sall	%cl, %r11d
  44 0052 4409DA   		orl	%r11d, %edx
  45              	.L6:
  46 0055 A808     		testb	$8, %al
  47 0057 740D     		je	.L7
  48 0059 0FB64F03 		movzbl	3(%rdi), %ecx
  49 005d 4189F1   		movl	%esi, %r9d
  50 0060 41D3E1   		sall	%cl, %r9d
  51 0063 4409CA   		orl	%r9d, %edx
  52              	.L7:
  53 0066 A804     		testb	$4, %al
  54 0068 740D     		je	.L8
  55 006a 0FB64F02 		movzbl	2(%rdi), %ecx
  56 006e 4189F2   		movl	%esi, %r10d
  57 0071 41D3E2   		sall	%cl, %r10d
  58 0074 4409D2   		orl	%r10d, %edx
  59              	.L8:
  60 0077 A802     		testb	$2, %al
  61 0079 740D     		je	.L9
  62 007b 0FB64F01 		movzbl	1(%rdi), %ecx
  63 007f 4189F3   		movl	%esi, %r11d
  64 0082 41D3E3   		sall	%cl, %r11d
  65 0085 4409DA   		orl	%r11d, %edx
  66              	.L9:
  67 0088 A801     		testb	$1, %al
  68 008a 740C     		je	.L10
  69 008c 0FB60F   		movzbl	(%rdi), %ecx
  70 008f 4189F1   		movl	%esi, %r9d
  71 0092 41D3E1   		sall	%cl, %r9d
  72 0095 4409CA   		orl	%r9d, %edx
  73              	.L10:
  74 0098 83C001   		addl	$1, %eax
  75 009b 418810   		movb	%dl, (%r8)
  76 009e 663D0001 		cmpw	$256, %ax
  77 00a2 0F8568FF 		jne	.L11
  77      FFFF
  78 00a8 C3       		ret
  79              		.cfi_endproc
  80              	.LFE40:
  82              		.section	.rodata.str1.8,"aMS",@progbits,1
  83              		.align 8
  84              	.LC0:
  85 0000 20202020 		.string	"                                                                                         
  85      20202020 
  85      20202020 
  85      20202020 
  85      20202020 
  86 0101 00000000 		.align 8
  86      000000
  87              	.LC1:
  88 0108 706F7075 		.string	"populateMap(): Unexpected end of config string:\n  %s\n  %s^"
  88      6C617465 
  88      4D617028 
  88      293A2055 
  88      6E657870 
  89 0143 00000000 		.align 8
  89      00
  90              	.LC2:
  91 0148 706F7075 		.string	"populateMap(): Port is not valid (try 'A', 'B', 'C', etc):\n  %s\n  %s^"
  91      6C617465 
  91      4D617028 
  91      293A2050 
  91      6F727420 
  92 018e 0000     		.align 8
  93              	.LC3:
  94 0190 706F7075 		.string	"populateMap(): Bit number is not valid:\n  %s\n  %s^"
  94      6C617465 
  94      4D617028 
  94      293A2042 
  94      6974206E 
  95 01c3 00000000 		.align 8
  95      00
  96              	.LC4:
  97 01c8 706F7075 		.string	"populateMap(): port '%c%d' is already used:\n  %s\n  %s^"
  97      6C617465 
  97      4D617028 
  97      293A2070 
  97      6F727420 
  98 01ff 00       		.align 8
  99              	.LC5:
 100 0200 706F7075 		.string	"populateMap(): Expecting '+', '-' or '?' at char %d"
 100      6C617465 
 100      4D617028 
 100      293A2045 
 100      78706563 
 101              		.text
 102 00a9 0F1F8000 		.p2align 4
 102      000000
 104              	populateMap:
 105              	.LFB38:
 106              		.cfi_startproc
 107 00b0 4157     		pushq	%r15
 108              		.cfi_def_cfa_offset 16
 109              		.cfi_offset 15, -16
 110 00b2 4889F0   		movq	%rsi, %rax
 111 00b5 4156     		pushq	%r14
 112              		.cfi_def_cfa_offset 24
 113              		.cfi_offset 14, -24
 114 00b7 4D89C6   		movq	%r8, %r14
 115 00ba 4155     		pushq	%r13
 116              		.cfi_def_cfa_offset 32
 117              		.cfi_offset 13, -32
 118 00bc 4989FD   		movq	%rdi, %r13
 119 00bf 4154     		pushq	%r12
 120              		.cfi_def_cfa_offset 40
 121              		.cfi_offset 12, -40
 122 00c1 55       		pushq	%rbp
 123              		.cfi_def_cfa_offset 48
 124              		.cfi_offset 6, -48
 125 00c2 4889CD   		movq	%rcx, %rbp
 126 00c5 53       		pushq	%rbx
 127              		.cfi_def_cfa_offset 56
 128              		.cfi_offset 3, -56
 129 00c6 4883EC18 		subq	$24, %rsp
 130              		.cfi_def_cfa_offset 80
 131 00ca 48897424 		movq	%rsi, 8(%rsp)
 131      08
 132 00cf 4C8D6424 		leaq	8(%rsp), %r12
 132      08
 133 00d4 48891424 		movq	%rdx, (%rsp)
 134 00d8 EB4E     		jmp	.L50
 135 00da 660F1F44 		.p2align 4,,10
 135      0000
 136              		.p2align 3
 137              	.L43:
 138 00e0 80FA2D   		cmpb	$45, %dl
 139 00e3 0F84F700 		je	.L56
 139      0000
 140 00e9 80FA3F   		cmpb	$63, %dl
 141 00ec 0F854202 		jne	.L48
 141      0000
 142 00f2 0FB6DB   		movzbl	%bl, %ebx
 143 00f5 440FB6D0 		movzbl	%al, %r10d
 144 00f9 0FB6C0   		movzbl	%al, %eax
 145 00fc 48C1E307 		salq	$7, %rbx
 146 0100 4801EB   		addq	%rbp, %rbx
 147 0103 8B1483   		movl	(%rbx,%rax,4), %edx
 148 0106 85D2     		testl	%edx, %edx
 149 0108 0F85E201 		jne	.L55
 149      0000
 150 010e C7048303 		movl	$3, (%rbx,%rax,4)
 150      000000
 151              	.L45:
 152 0115 488D4602 		leaq	2(%rsi), %rax
 153 0119 48894424 		movq	%rax, 8(%rsp)
 153      08
 154 011e 807E012C 		cmpb	$44, 1(%rsi)
 155 0122 0F859600 		jne	.L57
 155      0000
 156              	.L50:
 157 0128 440FB638 		movzbl	(%rax), %r15d
 158 012c 4584FF   		testb	%r15b, %r15b
 159 012f 0F84DB00 		je	.L58
 159      0000
 160 0135 418D5FBF 		leal	-65(%r15), %ebx
 161 0139 80FB19   		cmpb	$25, %bl
 162 013c 0F870E01 		ja	.L59
 162      0000
 163 0142 488D7801 		leaq	1(%rax), %rdi
 164 0146 48897C24 		movq	%rdi, 8(%rsp)
 164      08
 165 014b 0FB64001 		movzbl	1(%rax), %eax
 166 014f 84C0     		testb	%al, %al
 167 0151 0F843901 		je	.L60
 167      0000
 168 0157 83E830   		subl	$48, %eax
 169 015a 3C09     		cmpb	$9, %al
 170 015c 0F874601 		ja	.L61
 170      0000
 171 0162 BA0A0000 		movl	$10, %edx
 171      00
 172 0167 4C89E6   		movq	%r12, %rsi
 173 016a E8000000 		call	strtoul@PLT
 173      00
 174 016f 488B7424 		movq	8(%rsp), %rsi
 174      08
 175 0174 0FB616   		movzbl	(%rsi), %edx
 176 0177 84D2     		testb	%dl, %dl
 177 0179 0F846901 		je	.L62
 177      0000
 178 017f 80FA2B   		cmpb	$43, %dl
 179 0182 0F8558FF 		jne	.L43
 179      FFFF
 180 0188 0FB6DB   		movzbl	%bl, %ebx
 181 018b 440FB6D0 		movzbl	%al, %r10d
 182 018f 0FB6C0   		movzbl	%al, %eax
 183 0192 48C1E307 		salq	$7, %rbx
 184 0196 4801EB   		addq	%rbp, %rbx
 185 0199 8B3C83   		movl	(%rbx,%rax,4), %edi
 186 019c 85FF     		testl	%edi, %edi
 187 019e 0F854C01 		jne	.L55
 187      0000
 188 01a4 C7048301 		movl	$1, (%rbx,%rax,4)
 188      000000
 189 01ab 488D4602 		leaq	2(%rsi), %rax
 190 01af 48894424 		movq	%rax, 8(%rsp)
 190      08
 191 01b4 807E012C 		cmpb	$44, 1(%rsi)
 192 01b8 0F846AFF 		je	.L50
 192      FFFF
 193              	.L57:
 194              	.L38:
 195 01be 488B0424 		movq	(%rsp), %rax
 196 01c2 4883C601 		addq	$1, %rsi
 197 01c6 488930   		movq	%rsi, (%rax)
 198 01c9 4883C418 		addq	$24, %rsp
 199              		.cfi_remember_state
 200              		.cfi_def_cfa_offset 56
 201 01cd 31C0     		xorl	%eax, %eax
 202 01cf 5B       		popq	%rbx
 203              		.cfi_def_cfa_offset 48
 204 01d0 5D       		popq	%rbp
 205              		.cfi_def_cfa_offset 40
 206 01d1 415C     		popq	%r12
 207              		.cfi_def_cfa_offset 32
 208 01d3 415D     		popq	%r13
 209              		.cfi_def_cfa_offset 24
 210 01d5 415E     		popq	%r14
 211              		.cfi_def_cfa_offset 16
 212 01d7 415F     		popq	%r15
 213              		.cfi_def_cfa_offset 8
 214 01d9 C3       		ret
 215 01da 660F1F44 		.p2align 4,,10
 215      0000
 216              		.p2align 3
 217              	.L56:
 218              		.cfi_restore_state
 219 01e0 0FB6DB   		movzbl	%bl, %ebx
 220 01e3 440FB6D0 		movzbl	%al, %r10d
 221 01e7 0FB6C0   		movzbl	%al, %eax
 222 01ea 48C1E307 		salq	$7, %rbx
 223 01ee 4801EB   		addq	%rbp, %rbx
 224 01f1 8B0C83   		movl	(%rbx,%rax,4), %ecx
 225 01f4 85C9     		testl	%ecx, %ecx
 226 01f6 0F85F400 		jne	.L55
 226      0000
 227 01fc C7048302 		movl	$2, (%rbx,%rax,4)
 227      000000
 228 0203 E90DFFFF 		jmp	.L45
 228      FF
 229 0208 0F1F8400 		.p2align 4,,10
 229      00000000 
 230              		.p2align 3
 231              	.L58:
 232 0210 4C89EA   		movq	%r13, %rdx
 233 0213 4829C2   		subq	%rax, %rdx
 234 0216 488D0500 		leaq	.LC0(%rip), %rax
 234      000000
 235              	.L53:
 236 021d 488D8C02 		leaq	256(%rdx,%rax), %rcx
 236      00010000 
 237 0225 488D3500 		leaq	.LC1(%rip), %rsi
 237      000000
 238 022c 31C0     		xorl	%eax, %eax
 239 022e 4C89EA   		movq	%r13, %rdx
 240 0231 4C89F7   		movq	%r14, %rdi
 241 0234 E8000000 		call	errRender@PLT
 241      00
 242 0239 B80B0000 		movl	$11, %eax
 242      00
 243              	.L36:
 244 023e 4883C418 		addq	$24, %rsp
 245              		.cfi_remember_state
 246              		.cfi_def_cfa_offset 56
 247 0242 5B       		popq	%rbx
 248              		.cfi_def_cfa_offset 48
 249 0243 5D       		popq	%rbp
 250              		.cfi_def_cfa_offset 40
 251 0244 415C     		popq	%r12
 252              		.cfi_def_cfa_offset 32
 253 0246 415D     		popq	%r13
 254              		.cfi_def_cfa_offset 24
 255 0248 415E     		popq	%r14
 256              		.cfi_def_cfa_offset 16
 257 024a 415F     		popq	%r15
 258              		.cfi_def_cfa_offset 8
 259 024c C3       		ret
 260 024d 0F1F00   		.p2align 4,,10
 261              		.p2align 3
 262              	.L59:
 263              		.cfi_restore_state
 264 0250 4C89EA   		movq	%r13, %rdx
 265 0253 4C89F7   		movq	%r14, %rdi
 266 0256 488D3500 		leaq	.LC2(%rip), %rsi
 266      000000
 267 025d 4829C2   		subq	%rax, %rdx
 268 0260 488D0500 		leaq	.LC0(%rip), %rax
 268      000000
 269 0267 488D8C10 		leaq	256(%rax,%rdx), %rcx
 269      00010000 
 270 026f 4C89EA   		movq	%r13, %rdx
 271 0272 31C0     		xorl	%eax, %eax
 272 0274 E8000000 		call	errRender@PLT
 272      00
 273 0279 4883C418 		addq	$24, %rsp
 274              		.cfi_remember_state
 275              		.cfi_def_cfa_offset 56
 276 027d B80B0000 		movl	$11, %eax
 276      00
 277 0282 5B       		popq	%rbx
 278              		.cfi_def_cfa_offset 48
 279 0283 5D       		popq	%rbp
 280              		.cfi_def_cfa_offset 40
 281 0284 415C     		popq	%r12
 282              		.cfi_def_cfa_offset 32
 283 0286 415D     		popq	%r13
 284              		.cfi_def_cfa_offset 24
 285 0288 415E     		popq	%r14
 286              		.cfi_def_cfa_offset 16
 287 028a 415F     		popq	%r15
 288              		.cfi_def_cfa_offset 8
 289 028c C3       		ret
 290 028d 0F1F00   		.p2align 4,,10
 291              		.p2align 3
 292              	.L60:
 293              		.cfi_restore_state
 294 0290 4C89E8   		movq	%r13, %rax
 295 0293 4829F8   		subq	%rdi, %rax
 296              	.L54:
 297 0296 488D1500 		leaq	.LC0(%rip), %rdx
 297      000000
 298 029d E97BFFFF 		jmp	.L53
 298      FF
 299              		.p2align 4,,10
 300 02a2 660F1F44 		.p2align 3
 300      0000
 301              	.L61:
 302 02a8 4C89E8   		movq	%r13, %rax
 303 02ab 488D1500 		leaq	.LC0(%rip), %rdx
 303      000000
 304 02b2 488D3500 		leaq	.LC3(%rip), %rsi
 304      000000
 305 02b9 4829F8   		subq	%rdi, %rax
 306 02bc 4C89F7   		movq	%r14, %rdi
 307 02bf 488D8C02 		leaq	256(%rdx,%rax), %rcx
 307      00010000 
 308 02c7 4C89EA   		movq	%r13, %rdx
 309 02ca 31C0     		xorl	%eax, %eax
 310 02cc E8000000 		call	errRender@PLT
 310      00
 311 02d1 4883C418 		addq	$24, %rsp
 312              		.cfi_remember_state
 313              		.cfi_def_cfa_offset 56
 314 02d5 B80B0000 		movl	$11, %eax
 314      00
 315 02da 5B       		popq	%rbx
 316              		.cfi_def_cfa_offset 48
 317 02db 5D       		popq	%rbp
 318              		.cfi_def_cfa_offset 40
 319 02dc 415C     		popq	%r12
 320              		.cfi_def_cfa_offset 32
 321 02de 415D     		popq	%r13
 322              		.cfi_def_cfa_offset 24
 323 02e0 415E     		popq	%r14
 324              		.cfi_def_cfa_offset 16
 325 02e2 415F     		popq	%r15
 326              		.cfi_def_cfa_offset 8
 327 02e4 C3       		ret
 328              		.p2align 4,,10
 329 02e5 0F1F00   		.p2align 3
 330              	.L62:
 331              		.cfi_restore_state
 332 02e8 4C89E8   		movq	%r13, %rax
 333 02eb 4829F0   		subq	%rsi, %rax
 334 02ee EBA6     		jmp	.L54
 335              		.p2align 4,,10
 336              		.p2align 3
 337              	.L55:
 338 02f0 4C89E8   		movq	%r13, %rax
 339 02f3 488D0D00 		leaq	.LC0(%rip), %rcx
 339      000000
 340 02fa 4D89E8   		movq	%r13, %r8
 341 02fd 4C89F7   		movq	%r14, %rdi
 342 0300 4829F0   		subq	%rsi, %rax
 343 0303 410FB6D7 		movzbl	%r15b, %edx
 344 0307 488D3500 		leaq	.LC4(%rip), %rsi
 344      000000
 345 030e 4C8D8C01 		leaq	257(%rcx,%rax), %r9
 345      01010000 
 346 0316 31C0     		xorl	%eax, %eax
 347 0318 4489D1   		movl	%r10d, %ecx
 348 031b E8000000 		call	errRender@PLT
 348      00
 349 0320 4883C418 		addq	$24, %rsp
 350              		.cfi_remember_state
 351              		.cfi_def_cfa_offset 56
 352 0324 B80B0000 		movl	$11, %eax
 352      00
 353 0329 5B       		popq	%rbx
 354              		.cfi_def_cfa_offset 48
 355 032a 5D       		popq	%rbp
 356              		.cfi_def_cfa_offset 40
 357 032b 415C     		popq	%r12
 358              		.cfi_def_cfa_offset 32
 359 032d 415D     		popq	%r13
 360              		.cfi_def_cfa_offset 24
 361 032f 415E     		popq	%r14
 362              		.cfi_def_cfa_offset 16
 363 0331 415F     		popq	%r15
 364              		.cfi_def_cfa_offset 8
 365 0333 C3       		ret
 366              	.L48:
 367              		.cfi_restore_state
 368 0334 4C29EE   		subq	%r13, %rsi
 369 0337 31C0     		xorl	%eax, %eax
 370 0339 4C89F7   		movq	%r14, %rdi
 371 033c 4889F2   		movq	%rsi, %rdx
 372 033f 488D3500 		leaq	.LC5(%rip), %rsi
 372      000000
 373 0346 E8000000 		call	errRender@PLT
 373      00
 374 034b B80B0000 		movl	$11, %eax
 374      00
 375 0350 E9E9FEFF 		jmp	.L36
 375      FF
 376              		.cfi_endproc
 377              	.LFE38:
 379              		.section	.rodata.str1.1,"aMS",@progbits,1
 380              	.LC6:
 381 0000 62656769 		.string	"beginShift()"
 381      6E536869 
 381      66742829 
 381      00
 382              	.LC7:
 383 000d 64617461 		.string	"dataWrite()"
 383      57726974 
 383      65282900 
 384              	.LC8:
 385 0019 646F5365 		.string	"doSend()"
 385      6E642829 
 385      00
 386              		.text
 387 0355 66662E0F 		.p2align 4
 387      1F840000 
 387      000000
 389              	dataWrite:
 390              	.LFB41:
 391              		.cfi_startproc
 392 0360 4157     		pushq	%r15
 393              		.cfi_def_cfa_offset 16
 394              		.cfi_offset 15, -16
 395 0362 4989FB   		movq	%rdi, %r11
 396 0365 4189CF   		movl	%ecx, %r15d
 397 0368 4156     		pushq	%r14
 398              		.cfi_def_cfa_offset 24
 399              		.cfi_offset 14, -24
 400 036a 4155     		pushq	%r13
 401              		.cfi_def_cfa_offset 32
 402              		.cfi_offset 13, -32
 403 036c 4D89CD   		movq	%r9, %r13
 404 036f 4154     		pushq	%r12
 405              		.cfi_def_cfa_offset 40
 406              		.cfi_offset 12, -40
 407 0371 4D89C4   		movq	%r8, %r12
 408 0374 55       		pushq	%rbp
 409              		.cfi_def_cfa_offset 48
 410              		.cfi_offset 6, -48
 411 0375 4889D5   		movq	%rdx, %rbp
 412 0378 31D2     		xorl	%edx, %edx
 413 037a 53       		pushq	%rbx
 414              		.cfi_def_cfa_offset 56
 415              		.cfi_offset 3, -56
 416 037b 4881EC88 		subq	$136, %rsp
 416      000000
 417              		.cfi_def_cfa_offset 192
 418 0382 488B3F   		movq	(%rdi), %rdi
 419 0385 64488B04 		movq	%fs:40, %rax
 419      25280000 
 419      00
 420 038e 48894424 		movq	%rax, 120(%rsp)
 420      78
 421 0393 31C0     		xorl	%eax, %eax
 422 0395 894C242C 		movl	%ecx, 44(%rsp)
 423 0399 89F1     		movl	%esi, %ecx
 424 039b BE810000 		movl	$129, %esi
 424      00
 425 03a0 4151     		pushq	%r9
 426              		.cfi_def_cfa_offset 200
 427 03a2 41B90400 		movl	$4, %r9d
 427      0000
 428 03a8 68881300 		pushq	$5000
 428      00
 429              		.cfi_def_cfa_offset 208
 430 03ad 4C8D4424 		leaq	60(%rsp), %r8
 430      3C
 431 03b2 4C895C24 		movq	%r11, 24(%rsp)
 431      18
 432 03b7 E8000000 		call	usbControlWrite@PLT
 432      00
 433 03bc 8944242C 		movl	%eax, 44(%rsp)
 434 03c0 5A       		popq	%rdx
 435              		.cfi_def_cfa_offset 200
 436 03c1 59       		popq	%rcx
 437              		.cfi_def_cfa_offset 192
 438 03c2 85C0     		testl	%eax, %eax
 439 03c4 0F85D900 		jne	.L64
 439      0000
 440 03ca 4585FF   		testl	%r15d, %r15d
 441 03cd 4C8B5C24 		movq	8(%rsp), %r11
 441      08
 442 03d2 4C8D7424 		leaq	48(%rsp), %r14
 442      30
 443 03d7 7476     		je	.L63
 444 03d9 4D89E9   		movq	%r13, %r9
 445 03dc 4D89DD   		movq	%r11, %r13
 446 03df 90       		.p2align 4,,10
 447              		.p2align 3
 448              	.L65:
 449 03e0 4183FF3F 		cmpl	$63, %r15d
 450 03e4 BB400000 		movl	$64, %ebx
 450      00
 451 03e9 B9400000 		movl	$64, %ecx
 451      00
 452 03ee 410F46DF 		cmovbe	%r15d, %ebx
 453 03f2 410F46CF 		cmovbe	%r15d, %ecx
 454 03f6 31C0     		xorl	%eax, %eax
 455 03f8 0F1F8400 		.p2align 4,,10
 455      00000000 
 456              		.p2align 3
 457              	.L68:
 458 0400 0FB65405 		movzbl	0(%rbp,%rax), %edx
 458      00
 459 0405 410FB614 		movzbl	(%r12,%rdx), %edx
 459      14
 460 040a 41881406 		movb	%dl, (%r14,%rax)
 461 040e 4883C001 		addq	$1, %rax
 462 0412 6639C3   		cmpw	%ax, %bx
 463 0415 77E9     		ja	.L68
 464 0417 410FB675 		movzbl	21(%r13), %esi
 464      15
 465 041c 498B7D00 		movq	0(%r13), %rdi
 466 0420 4C89F2   		movq	%r14, %rdx
 467 0423 894C2408 		movl	%ecx, 8(%rsp)
 468 0427 41B88813 		movl	$5000, %r8d
 468      0000
 469 042d 4C894C24 		movq	%r9, 16(%rsp)
 469      10
 470 0432 E8000000 		call	usbBulkWrite@PLT
 470      00
 471 0437 8B4C2408 		movl	8(%rsp), %ecx
 472 043b 4C8B4C24 		movq	16(%rsp), %r9
 472      10
 473 0440 85C0     		testl	%eax, %eax
 474 0442 7534     		jne	.L79
 475 0444 0FB7DB   		movzwl	%bx, %ebx
 476 0447 4801DD   		addq	%rbx, %rbp
 477 044a 4129CF   		subl	%ecx, %r15d
 478 044d 7591     		jne	.L65
 479              	.L66:
 480              	.L63:
 481 044f 488B4424 		movq	120(%rsp), %rax
 481      78
 482 0454 64482B04 		subq	%fs:40, %rax
 482      25280000 
 482      00
 483 045d 756C     		jne	.L80
 484 045f 8B44241C 		movl	28(%rsp), %eax
 485 0463 4881C488 		addq	$136, %rsp
 485      000000
 486              		.cfi_remember_state
 487              		.cfi_def_cfa_offset 56
 488 046a 5B       		popq	%rbx
 489              		.cfi_def_cfa_offset 48
 490 046b 5D       		popq	%rbp
 491              		.cfi_def_cfa_offset 40
 492 046c 415C     		popq	%r12
 493              		.cfi_def_cfa_offset 32
 494 046e 415D     		popq	%r13
 495              		.cfi_def_cfa_offset 24
 496 0470 415E     		popq	%r14
 497              		.cfi_def_cfa_offset 16
 498 0472 415F     		popq	%r15
 499              		.cfi_def_cfa_offset 8
 500 0474 C3       		ret
 501              		.p2align 4,,10
 502 0475 0F1F00   		.p2align 3
 503              	.L79:
 504              		.cfi_restore_state
 505 0478 4D89CD   		movq	%r9, %r13
 506 047b 4C89CF   		movq	%r9, %rdi
 507 047e 488D3500 		leaq	.LC8(%rip), %rsi
 507      000000
 508 0485 E8000000 		call	errPrefix@PLT
 508      00
 509 048a 488D3500 		leaq	.LC7(%rip), %rsi
 509      000000
 510 0491 4C89EF   		movq	%r13, %rdi
 511 0494 E8000000 		call	errPrefix@PLT
 511      00
 512 0499 C744241C 		movl	$13, 28(%rsp)
 512      0D000000 
 513 04a1 EBAC     		jmp	.L63
 514              	.L64:
 515 04a3 488D3500 		leaq	.LC6(%rip), %rsi
 515      000000
 516 04aa 4C89EF   		movq	%r13, %rdi
 517 04ad E8000000 		call	errPrefix@PLT
 517      00
 518 04b2 488D3500 		leaq	.LC7(%rip), %rsi
 518      000000
 519 04b9 4C89EF   		movq	%r13, %rdi
 520 04bc E8000000 		call	errPrefix@PLT
 520      00
 521 04c1 C744241C 		movl	$15, 28(%rsp)
 521      0F000000 
 522 04c9 EB84     		jmp	.L63
 523              	.L80:
 524 04cb E8000000 		call	__stack_chk_fail@PLT
 524      00
 525              		.cfi_endproc
 526              	.LFE41:
 528              		.section	.rodata.str1.1
 529              	.LC9:
 530 0022 6A746167 		.string	"jtagShiftInOut()"
 530      53686966 
 530      74496E4F 
 530      75742829 
 530      00
 531              	.LC10:
 532 0033 646F5265 		.string	"doReceive()"
 532      63656976 
 532      65282900 
 533              		.text
 534              		.p2align 4
 535              		.globl	jtagShiftInOut
 537              	jtagShiftInOut:
 538              	.LFB49:
 539              		.cfi_startproc
 540 04d0 F30F1EFA 		endbr64
 541 04d4 4157     		pushq	%r15
 542              		.cfi_def_cfa_offset 16
 543              		.cfi_offset 15, -16
 544 04d6 89F0     		movl	%esi, %eax
 545 04d8 4156     		pushq	%r14
 546              		.cfi_def_cfa_offset 24
 547              		.cfi_offset 14, -24
 548 04da 4989D6   		movq	%rdx, %r14
 549 04dd 4155     		pushq	%r13
 550              		.cfi_def_cfa_offset 32
 551              		.cfi_offset 13, -32
 552 04df 4989CD   		movq	%rcx, %r13
 553 04e2 4154     		pushq	%r12
 554              		.cfi_def_cfa_offset 40
 555              		.cfi_offset 12, -40
 556 04e4 4531E4   		xorl	%r12d, %r12d
 557 04e7 55       		pushq	%rbp
 558              		.cfi_def_cfa_offset 48
 559              		.cfi_offset 6, -48
 560 04e8 4C89CD   		movq	%r9, %rbp
 561 04eb 53       		pushq	%rbx
 562              		.cfi_def_cfa_offset 56
 563              		.cfi_offset 3, -56
 564 04ec 4889FB   		movq	%rdi, %rbx
 565 04ef 4883EC28 		subq	$40, %rsp
 566              		.cfi_def_cfa_offset 96
 567 04f3 488B3F   		movq	(%rdi), %rdi
 568 04f6 64488B14 		movq	%fs:40, %rdx
 568      25280000 
 568      00
 569 04ff 48895424 		movq	%rdx, 24(%rsp)
 569      18
 570 0504 31D2     		xorl	%edx, %edx
 571 0506 A807     		testb	$7, %al
 572 0508 89F2     		movl	%esi, %edx
 573 050a 410F95C4 		setne	%r12b
 574 050e C1EA03   		shrl	$3, %edx
 575 0511 4101D4   		addl	%edx, %r12d
 576 0514 4983FEFF 		cmpq	$-1, %r14
 577 0518 0F84EA00 		je	.L100
 577      0000
 578 051e B9010000 		movl	$1, %ecx
 578      00
 579 0523 31D2     		xorl	%edx, %edx
 580 0525 4D85F6   		testq	%r14, %r14
 581 0528 0F84E400 		je	.L82
 581      0000
 582 052e 89742414 		movl	%esi, 20(%rsp)
 583 0532 31D2     		xorl	%edx, %edx
 584 0534 4584C0   		testb	%r8b, %r8b
 585 0537 B9010000 		movl	$1, %ecx
 585      00
 586 053c 4151     		pushq	%r9
 587              		.cfi_def_cfa_offset 104
 588 053e 0F95C2   		setne	%dl
 589 0541 41B90400 		movl	$4, %r9d
 589      0000
 590 0547 BE810000 		movl	$129, %esi
 590      00
 591 054c 68881300 		pushq	$5000
 591      00
 592              		.cfi_def_cfa_offset 112
 593 0551 4C8D4424 		leaq	36(%rsp), %r8
 593      24
 594 0556 E8000000 		call	usbControlWrite@PLT
 594      00
 595 055b 5A       		popq	%rdx
 596              		.cfi_def_cfa_offset 104
 597 055c 59       		popq	%rcx
 598              		.cfi_def_cfa_offset 96
 599 055d 85C0     		testl	%eax, %eax
 600 055f 0F858301 		jne	.L108
 600      0000
 601 0565 4585E4   		testl	%r12d, %r12d
 602 0568 7545     		jne	.L84
 603 056a E9A10100 		jmp	.L89
 603      00
 604 056f 90       		.p2align 4,,10
 605              		.p2align 3
 606              	.L87:
 607 0570 0FB67316 		movzbl	22(%rbx), %esi
 608 0574 488B3B   		movq	(%rbx), %rdi
 609 0577 4589FA   		movl	%r15d, %r10d
 610 057a 4989E9   		movq	%rbp, %r9
 611 057d 41B88813 		movl	$5000, %r8d
 611      0000
 612 0583 4489F9   		movl	%r15d, %ecx
 613 0586 4C89EA   		movq	%r13, %rdx
 614 0589 4D01D6   		addq	%r10, %r14
 615 058c 4C895424 		movq	%r10, 8(%rsp)
 615      08
 616 0591 E8000000 		call	usbBulkRead@PLT
 616      00
 617 0596 4C8B5424 		movq	8(%rsp), %r10
 617      08
 618 059b 85C0     		testl	%eax, %eax
 619 059d 0F850001 		jne	.L93
 619      0000
 620 05a3 4D01D5   		addq	%r10, %r13
 621 05a6 4529FC   		subl	%r15d, %r12d
 622 05a9 0F846101 		je	.L89
 622      0000
 623              	.L84:
 624 05af 4183FC3F 		cmpl	$63, %r12d
 625 05b3 41BF4000 		movl	$64, %r15d
 625      0000
 626 05b9 488B3B   		movq	(%rbx), %rdi
 627 05bc 4989E9   		movq	%rbp, %r9
 628 05bf 450F46FC 		cmovbe	%r12d, %r15d
 629 05c3 0FB67315 		movzbl	21(%rbx), %esi
 630 05c7 41B88813 		movl	$5000, %r8d
 630      0000
 631 05cd 4C89F2   		movq	%r14, %rdx
 632 05d0 4489F9   		movl	%r15d, %ecx
 633 05d3 E8000000 		call	usbBulkWrite@PLT
 633      00
 634 05d8 85C0     		testl	%eax, %eax
 635 05da 7494     		je	.L87
 636 05dc 488D3500 		leaq	.LC8(%rip), %rsi
 636      000000
 637 05e3 4889EF   		movq	%rbp, %rdi
 638 05e6 E8000000 		call	errPrefix@PLT
 638      00
 639 05eb 488D3500 		leaq	.LC9(%rip), %rsi
 639      000000
 640 05f2 4889EF   		movq	%rbp, %rdi
 641 05f5 E8000000 		call	errPrefix@PLT
 641      00
 642 05fa B80D0000 		movl	$13, %eax
 642      00
 643 05ff E9C20000 		jmp	.L81
 643      00
 644              	.L85:
 645              		.p2align 4,,10
 646 0604 0F1F4000 		.p2align 3
 647              	.L100:
 648 0608 B9030000 		movl	$3, %ecx
 648      00
 649 060d BA020000 		movl	$2, %edx
 649      00
 650              	.L82:
 651 0612 89442414 		movl	%eax, 20(%rsp)
 652 0616 4584C0   		testb	%r8b, %r8b
 653 0619 BE810000 		movl	$129, %esi
 653      00
 654 061e 41B90400 		movl	$4, %r9d
 654      0000
 655 0624 55       		pushq	%rbp
 656              		.cfi_def_cfa_offset 104
 657 0625 0F45D1   		cmovne	%ecx, %edx
 658 0628 B9030000 		movl	$3, %ecx
 658      00
 659 062d 68881300 		pushq	$5000
 659      00
 660              		.cfi_def_cfa_offset 112
 661 0632 4C8D4424 		leaq	36(%rsp), %r8
 661      24
 662 0637 E8000000 		call	usbControlWrite@PLT
 662      00
 663 063c 5E       		popq	%rsi
 664              		.cfi_def_cfa_offset 104
 665 063d 5F       		popq	%rdi
 666              		.cfi_def_cfa_offset 96
 667 063e 85C0     		testl	%eax, %eax
 668 0640 0F85A200 		jne	.L108
 668      0000
 669 0646 4585E4   		testl	%r12d, %r12d
 670 0649 0F84C100 		je	.L89
 670      0000
 671 064f 4589E6   		movl	%r12d, %r14d
 672 0652 4183E63F 		andl	$63, %r14d
 673 0656 EB27     		jmp	.L94
 674 0658 0F1F8400 		.p2align 4,,10
 674      00000000 
 675              		.p2align 3
 676              	.L111:
 677 0660 B9400000 		movl	$64, %ecx
 677      00
 678 0665 4C89EA   		movq	%r13, %rdx
 679 0668 E8000000 		call	usbBulkRead@PLT
 679      00
 680 066d 85C0     		testl	%eax, %eax
 681 066f 7532     		jne	.L93
 682 0671 4983C540 		addq	$64, %r13
 683 0675 4183EC40 		subl	$64, %r12d
 684 0679 0F849100 		je	.L89
 684      0000
 685              	.L94:
 686 067f 0FB67316 		movzbl	22(%rbx), %esi
 687 0683 488B3B   		movq	(%rbx), %rdi
 688 0686 4989E9   		movq	%rbp, %r9
 689 0689 41B88813 		movl	$5000, %r8d
 689      0000
 690 068f 4539F4   		cmpl	%r14d, %r12d
 691 0692 75CC     		jne	.L111
 692 0694 4489E1   		movl	%r12d, %ecx
 693 0697 4C89EA   		movq	%r13, %rdx
 694 069a E8000000 		call	usbBulkRead@PLT
 694      00
 695 069f 85C0     		testl	%eax, %eax
 696 06a1 746D     		je	.L89
 697              	.L93:
 698 06a3 488D3500 		leaq	.LC10(%rip), %rsi
 698      000000
 699 06aa 4889EF   		movq	%rbp, %rdi
 700 06ad E8000000 		call	errPrefix@PLT
 700      00
 701 06b2 488D3500 		leaq	.LC9(%rip), %rsi
 701      000000
 702 06b9 4889EF   		movq	%rbp, %rdi
 703 06bc E8000000 		call	errPrefix@PLT
 703      00
 704 06c1 B80E0000 		movl	$14, %eax
 704      00
 705              	.L81:
 706 06c6 488B5424 		movq	24(%rsp), %rdx
 706      18
 707 06cb 64482B14 		subq	%fs:40, %rdx
 707      25280000 
 707      00
 708 06d4 753E     		jne	.L112
 709 06d6 4883C428 		addq	$40, %rsp
 710              		.cfi_remember_state
 711              		.cfi_def_cfa_offset 56
 712 06da 5B       		popq	%rbx
 713              		.cfi_def_cfa_offset 48
 714 06db 5D       		popq	%rbp
 715              		.cfi_def_cfa_offset 40
 716 06dc 415C     		popq	%r12
 717              		.cfi_def_cfa_offset 32
 718 06de 415D     		popq	%r13
 719              		.cfi_def_cfa_offset 24
 720 06e0 415E     		popq	%r14
 721              		.cfi_def_cfa_offset 16
 722 06e2 415F     		popq	%r15
 723              		.cfi_def_cfa_offset 8
 724 06e4 C3       		ret
 725              		.p2align 4,,10
 726 06e5 0F1F00   		.p2align 3
 727              	.L108:
 728              		.cfi_restore_state
 729 06e8 488D3500 		leaq	.LC6(%rip), %rsi
 729      000000
 730 06ef 4889EF   		movq	%rbp, %rdi
 731 06f2 E8000000 		call	errPrefix@PLT
 731      00
 732 06f7 488D3500 		leaq	.LC9(%rip), %rsi
 732      000000
 733 06fe 4889EF   		movq	%rbp, %rdi
 734 0701 E8000000 		call	errPrefix@PLT
 734      00
 735 0706 B80F0000 		movl	$15, %eax
 735      00
 736 070b EBB9     		jmp	.L81
 737 070d 0F1F00   		.p2align 4,,10
 738              		.p2align 3
 739              	.L89:
 740 0710 31C0     		xorl	%eax, %eax
 741 0712 EBB2     		jmp	.L81
 742              	.L112:
 743 0714 E8000000 		call	__stack_chk_fail@PLT
 743      00
 744              		.cfi_endproc
 745              	.LFE49:
 747 0719 0F1F8000 		.p2align 4
 747      000000
 748              		.globl	jtagShiftInOnly
 750              	jtagShiftInOnly:
 751              	.LFB50:
 752              		.cfi_startproc
 753 0720 F30F1EFA 		endbr64
 754 0724 4157     		pushq	%r15
 755              		.cfi_def_cfa_offset 16
 756              		.cfi_offset 15, -16
 757 0726 4189F7   		movl	%esi, %r15d
 758 0729 4156     		pushq	%r14
 759              		.cfi_def_cfa_offset 24
 760              		.cfi_offset 14, -24
 761 072b 4155     		pushq	%r13
 762              		.cfi_def_cfa_offset 32
 763              		.cfi_offset 13, -32
 764 072d 4154     		pushq	%r12
 765              		.cfi_def_cfa_offset 40
 766              		.cfi_offset 12, -40
 767 072f 55       		pushq	%rbp
 768              		.cfi_def_cfa_offset 48
 769              		.cfi_offset 6, -48
 770 0730 4C89C5   		movq	%r8, %rbp
 771 0733 53       		pushq	%rbx
 772              		.cfi_def_cfa_offset 56
 773              		.cfi_offset 3, -56
 774 0734 4889FB   		movq	%rdi, %rbx
 775 0737 4883EC18 		subq	$24, %rsp
 776              		.cfi_def_cfa_offset 80
 777 073b 488B3F   		movq	(%rdi), %rdi
 778 073e 64488B04 		movq	%fs:40, %rax
 778      25280000 
 778      00
 779 0747 48894424 		movq	%rax, 8(%rsp)
 779      08
 780 074c 31C0     		xorl	%eax, %eax
 781 074e 4883FAFF 		cmpq	$-1, %rdx
 782 0752 0F84F800 		je	.L128
 782      0000
 783 0758 4989D5   		movq	%rdx, %r13
 784 075b B8010000 		movl	$1, %eax
 784      00
 785 0760 31D2     		xorl	%edx, %edx
 786 0762 4D85ED   		testq	%r13, %r13
 787 0765 0F84EF00 		je	.L114
 787      0000
 788              	.L117:
 789 076b 89742404 		movl	%esi, 4(%rsp)
 790 076f 31D2     		xorl	%edx, %edx
 791 0771 84C9     		testb	%cl, %cl
 792 0773 BE810000 		movl	$129, %esi
 792      00
 793 0778 4150     		pushq	%r8
 794              		.cfi_def_cfa_offset 88
 795 077a B9020000 		movl	$2, %ecx
 795      00
 796 077f 0F95C2   		setne	%dl
 797 0782 41B90400 		movl	$4, %r9d
 797      0000
 798 0788 68881300 		pushq	$5000
 798      00
 799              		.cfi_def_cfa_offset 96
 800 078d 4C8D4424 		leaq	20(%rsp), %r8
 800      14
 801 0792 E8000000 		call	usbControlWrite@PLT
 801      00
 802 0797 59       		popq	%rcx
 803              		.cfi_def_cfa_offset 88
 804 0798 5E       		popq	%rsi
 805              		.cfi_def_cfa_offset 80
 806 0799 4189C6   		movl	%eax, %r14d
 807 079c 85C0     		testl	%eax, %eax
 808 079e 0F85EA00 		jne	.L135
 808      0000
 809 07a4 4531E4   		xorl	%r12d, %r12d
 810 07a7 41F6C707 		testb	$7, %r15b
 811 07ab 410F95C4 		setne	%r12b
 812 07af 41C1EF03 		shrl	$3, %r15d
 813 07b3 4501FC   		addl	%r15d, %r12d
 814 07b6 4589E7   		movl	%r12d, %r15d
 815 07b9 4183E73F 		andl	$63, %r15d
 816 07bd 4585E4   		testl	%r12d, %r12d
 817 07c0 7521     		jne	.L120
 818 07c2 EB67     		jmp	.L113
 819              		.p2align 4,,10
 820 07c4 0F1F4000 		.p2align 3
 821              	.L137:
 822 07c8 B9400000 		movl	$64, %ecx
 822      00
 823 07cd 4C89EA   		movq	%r13, %rdx
 824 07d0 E8000000 		call	usbBulkWrite@PLT
 824      00
 825 07d5 85C0     		testl	%eax, %eax
 826 07d7 752E     		jne	.L126
 827 07d9 4983C540 		addq	$64, %r13
 828 07dd 4183EC40 		subl	$64, %r12d
 829 07e1 7448     		je	.L113
 830              	.L120:
 831 07e3 0FB67315 		movzbl	21(%rbx), %esi
 832 07e7 488B3B   		movq	(%rbx), %rdi
 833 07ea 4989E9   		movq	%rbp, %r9
 834 07ed 41B88813 		movl	$5000, %r8d
 834      0000
 835 07f3 4539FC   		cmpl	%r15d, %r12d
 836 07f6 75D0     		jne	.L137
 837 07f8 4489E1   		movl	%r12d, %ecx
 838 07fb 4C89EA   		movq	%r13, %rdx
 839 07fe E8000000 		call	usbBulkWrite@PLT
 839      00
 840 0803 85C0     		testl	%eax, %eax
 841 0805 7424     		je	.L113
 842              	.L126:
 843 0807 488D3500 		leaq	.LC8(%rip), %rsi
 843      000000
 844 080e 4889EF   		movq	%rbp, %rdi
 845 0811 41BE0D00 		movl	$13, %r14d
 845      0000
 846 0817 E8000000 		call	errPrefix@PLT
 846      00
 847 081c 488D3500 		leaq	.LC9(%rip), %rsi
 847      000000
 848 0823 4889EF   		movq	%rbp, %rdi
 849 0826 E8000000 		call	errPrefix@PLT
 849      00
 850              	.L113:
 851 082b 488B4424 		movq	8(%rsp), %rax
 851      08
 852 0830 64482B04 		subq	%fs:40, %rax
 852      25280000 
 852      00
 853 0839 757C     		jne	.L138
 854 083b 4883C418 		addq	$24, %rsp
 855              		.cfi_remember_state
 856              		.cfi_def_cfa_offset 56
 857 083f 4489F0   		movl	%r14d, %eax
 858 0842 5B       		popq	%rbx
 859              		.cfi_def_cfa_offset 48
 860 0843 5D       		popq	%rbp
 861              		.cfi_def_cfa_offset 40
 862 0844 415C     		popq	%r12
 863              		.cfi_def_cfa_offset 32
 864 0846 415D     		popq	%r13
 865              		.cfi_def_cfa_offset 24
 866 0848 415E     		popq	%r14
 867              		.cfi_def_cfa_offset 16
 868 084a 415F     		popq	%r15
 869              		.cfi_def_cfa_offset 8
 870 084c C3       		ret
 871 084d 0F1F00   		.p2align 4,,10
 872              		.p2align 3
 873              	.L128:
 874              		.cfi_restore_state
 875 0850 B8030000 		movl	$3, %eax
 875      00
 876 0855 BA020000 		movl	$2, %edx
 876      00
 877              	.L114:
 878 085a 44897C24 		movl	%r15d, 4(%rsp)
 878      04
 879 085f 84C9     		testb	%cl, %cl
 880 0861 41B90400 		movl	$4, %r9d
 880      0000
 881 0867 B9040000 		movl	$4, %ecx
 881      00
 882 086c 55       		pushq	%rbp
 883              		.cfi_def_cfa_offset 88
 884 086d 0F45D0   		cmovne	%eax, %edx
 885 0870 BE810000 		movl	$129, %esi
 885      00
 886 0875 68881300 		pushq	$5000
 886      00
 887              		.cfi_def_cfa_offset 96
 888 087a 4C8D4424 		leaq	20(%rsp), %r8
 888      14
 889 087f E8000000 		call	usbControlWrite@PLT
 889      00
 890 0884 4189C6   		movl	%eax, %r14d
 891 0887 58       		popq	%rax
 892              		.cfi_def_cfa_offset 88
 893 0888 5A       		popq	%rdx
 894              		.cfi_def_cfa_offset 80
 895 0889 4585F6   		testl	%r14d, %r14d
 896 088c 749D     		je	.L113
 897              	.L135:
 898 088e 488D3500 		leaq	.LC6(%rip), %rsi
 898      000000
 899 0895 4889EF   		movq	%rbp, %rdi
 900 0898 41BE0F00 		movl	$15, %r14d
 900      0000
 901 089e E8000000 		call	errPrefix@PLT
 901      00
 902 08a3 488D3500 		leaq	.LC9(%rip), %rsi
 902      000000
 903 08aa 4889EF   		movq	%rbp, %rdi
 904 08ad E8000000 		call	errPrefix@PLT
 904      00
 905 08b2 E974FFFF 		jmp	.L113
 905      FF
 906              	.L138:
 907 08b7 E8000000 		call	__stack_chk_fail@PLT
 907      00
 908              		.cfi_endproc
 909              	.LFE50:
 911              		.section	.rodata.str1.1
 912              	.LC11:
 913 003f 6A746167 		.string	"jtagClockFSM()"
 913      436C6F63 
 913      6B46534D 
 913      282900
 914              		.text
 915 08bc 0F1F4000 		.p2align 4
 916              		.globl	jtagClockFSM
 918              	jtagClockFSM:
 919              	.LFB51:
 920              		.cfi_startproc
 921 08c0 F30F1EFA 		endbr64
 922 08c4 55       		pushq	%rbp
 923              		.cfi_def_cfa_offset 16
 924              		.cfi_offset 6, -16
 925 08c5 0FB6D2   		movzbl	%dl, %edx
 926 08c8 4889CD   		movq	%rcx, %rbp
 927 08cb 41B90400 		movl	$4, %r9d
 927      0000
 928 08d1 4883EC10 		subq	$16, %rsp
 929              		.cfi_def_cfa_offset 32
 930 08d5 488B3F   		movq	(%rdi), %rdi
 931 08d8 64488B04 		movq	%fs:40, %rax
 931      25280000 
 931      00
 932 08e1 48894424 		movq	%rax, 8(%rsp)
 932      08
 933 08e6 31C0     		xorl	%eax, %eax
 934 08e8 89742404 		movl	%esi, 4(%rsp)
 935 08ec BE820000 		movl	$130, %esi
 935      00
 936 08f1 51       		pushq	%rcx
 937              		.cfi_def_cfa_offset 40
 938 08f2 31C9     		xorl	%ecx, %ecx
 939 08f4 68881300 		pushq	$5000
 939      00
 940              		.cfi_def_cfa_offset 48
 941 08f9 4C8D4424 		leaq	20(%rsp), %r8
 941      14
 942 08fe E8000000 		call	usbControlWrite@PLT
 942      00
 943 0903 5A       		popq	%rdx
 944              		.cfi_def_cfa_offset 40
 945 0904 59       		popq	%rcx
 946              		.cfi_def_cfa_offset 32
 947 0905 85C0     		testl	%eax, %eax
 948 0907 7517     		jne	.L146
 949              	.L139:
 950 0909 488B5424 		movq	8(%rsp), %rdx
 950      08
 951 090e 64482B14 		subq	%fs:40, %rdx
 951      25280000 
 951      00
 952 0917 751D     		jne	.L147
 953 0919 4883C410 		addq	$16, %rsp
 954              		.cfi_remember_state
 955              		.cfi_def_cfa_offset 16
 956 091d 5D       		popq	%rbp
 957              		.cfi_def_cfa_offset 8
 958 091e C3       		ret
 959 091f 90       		.p2align 4,,10
 960              		.p2align 3
 961              	.L146:
 962              		.cfi_restore_state
 963              	.L140:
 964 0920 488D3500 		leaq	.LC11(%rip), %rsi
 964      000000
 965 0927 4889EF   		movq	%rbp, %rdi
 966 092a E8000000 		call	errPrefix@PLT
 966      00
 967 092f B8100000 		movl	$16, %eax
 967      00
 968 0934 EBD3     		jmp	.L139
 969              	.L147:
 970 0936 E8000000 		call	__stack_chk_fail@PLT
 970      00
 971              		.cfi_endproc
 972              	.LFE51:
 974              		.section	.rodata.str1.1
 975              	.LC12:
 976 004e 6A746167 		.string	"jtagClocks()"
 976      436C6F63 
 976      6B732829 
 976      00
 977              		.text
 978 093b 0F1F4400 		.p2align 4
 978      00
 979              		.globl	jtagClocks
 981              	jtagClocks:
 982              	.LFB52:
 983              		.cfi_startproc
 984 0940 F30F1EFA 		endbr64
 985 0944 55       		pushq	%rbp
 986              		.cfi_def_cfa_offset 16
 987              		.cfi_offset 6, -16
 988 0945 4889D5   		movq	%rdx, %rbp
 989 0948 89F1     		movl	%esi, %ecx
 990 094a 488B3F   		movq	(%rdi), %rdi
 991 094d 55       		pushq	%rbp
 992              		.cfi_def_cfa_offset 24
 993 094e 0FB7D6   		movzwl	%si, %edx
 994 0951 C1E910   		shrl	$16, %ecx
 995 0954 4531C9   		xorl	%r9d, %r9d
 996 0957 6860EA00 		pushq	$60000
 996      00
 997              		.cfi_def_cfa_offset 32
 998 095c 4531C0   		xorl	%r8d, %r8d
 999 095f BE830000 		movl	$131, %esi
 999      00
 1000 0964 E8000000 		call	usbControlWrite@PLT
 1000      00
 1001 0969 5A       		popq	%rdx
 1002              		.cfi_def_cfa_offset 24
 1003 096a 59       		popq	%rcx
 1004              		.cfi_def_cfa_offset 16
 1005 096b 85C0     		testl	%eax, %eax
 1006 096d 7509     		jne	.L154
 1007 096f 5D       		popq	%rbp
 1008              		.cfi_remember_state
 1009              		.cfi_def_cfa_offset 8
 1010 0970 C3       		ret
 1011              		.p2align 4,,10
 1012 0971 0F1F8000 		.p2align 3
 1012      000000
 1013              	.L154:
 1014              		.cfi_restore_state
 1015              	.L149:
 1016 0978 4889EF   		movq	%rbp, %rdi
 1017 097b 488D3500 		leaq	.LC12(%rip), %rsi
 1017      000000
 1018 0982 E8000000 		call	errPrefix@PLT
 1018      00
 1019 0987 B8110000 		movl	$17, %eax
 1019      00
 1020 098c 5D       		popq	%rbp
 1021              		.cfi_def_cfa_offset 8
 1022 098d C3       		ret
 1023              		.cfi_endproc
 1024              	.LFE52:
 1026              		.section	.rodata.str1.1
 1027              	.LC13:
 1028 005b 666C5369 		.string	"flSingleBitPortAccess()"
 1028      6E676C65 
 1028      42697450 
 1028      6F727441 
 1028      63636573 
 1029              		.text
 1030 098e 6690     		.p2align 4
 1031              		.globl	flSingleBitPortAccess
 1033              	flSingleBitPortAccess:
 1034              	.LFB56:
 1035              		.cfi_startproc
 1036 0990 F30F1EFA 		endbr64
 1037 0994 55       		pushq	%rbp
 1038              		.cfi_def_cfa_offset 16
 1039              		.cfi_offset 6, -16
 1040 0995 400FB6F6 		movzbl	%sil, %esi
 1041 0999 0FB6C9   		movzbl	%cl, %ecx
 1042 099c C1E208   		sall	$8, %edx
 1043 099f 53       		pushq	%rbx
 1044              		.cfi_def_cfa_offset 24
 1045              		.cfi_offset 3, -24
 1046 09a0 09F2     		orl	%esi, %edx
 1047 09a2 4C89C3   		movq	%r8, %rbx
 1048 09a5 4C89CD   		movq	%r9, %rbp
 1049 09a8 0FB7D2   		movzwl	%dx, %edx
 1050 09ab BE850000 		movl	$133, %esi
 1050      00
 1051 09b0 4883EC18 		subq	$24, %rsp
 1052              		.cfi_def_cfa_offset 48
 1053 09b4 488B3F   		movq	(%rdi), %rdi
 1054 09b7 64488B04 		movq	%fs:40, %rax
 1054      25280000 
 1054      00
 1055 09c0 48894424 		movq	%rax, 8(%rsp)
 1055      08
 1056 09c5 31C0     		xorl	%eax, %eax
 1057 09c7 4151     		pushq	%r9
 1058              		.cfi_def_cfa_offset 56
 1059 09c9 488D0500 		leaq	indexValues(%rip), %rax
 1059      000000
 1060 09d0 41B90100 		movl	$1, %r9d
 1060      0000
 1061 09d6 68E80300 		pushq	$1000
 1061      00
 1062              		.cfi_def_cfa_offset 64
 1063 09db 0FB70C48 		movzwl	(%rax,%rcx,2), %ecx
 1064 09df 4C8D4424 		leaq	23(%rsp), %r8
 1064      17
 1065 09e4 E8000000 		call	usbControlRead@PLT
 1065      00
 1066 09e9 5A       		popq	%rdx
 1067              		.cfi_def_cfa_offset 56
 1068 09ea 59       		popq	%rcx
 1069              		.cfi_def_cfa_offset 48
 1070 09eb 85C0     		testl	%eax, %eax
 1071 09ed 7529     		jne	.L163
 1072 09ef 4885DB   		testq	%rbx, %rbx
 1073 09f2 7407     		je	.L155
 1074 09f4 0FB65424 		movzbl	7(%rsp), %edx
 1074      07
 1075 09f9 8813     		movb	%dl, (%rbx)
 1076              	.L157:
 1077              	.L155:
 1078 09fb 488B5424 		movq	8(%rsp), %rdx
 1078      08
 1079 0a00 64482B14 		subq	%fs:40, %rdx
 1079      25280000 
 1079      00
 1080 0a09 7523     		jne	.L164
 1081 0a0b 4883C418 		addq	$24, %rsp
 1082              		.cfi_remember_state
 1083              		.cfi_def_cfa_offset 24
 1084 0a0f 5B       		popq	%rbx
 1085              		.cfi_def_cfa_offset 16
 1086 0a10 5D       		popq	%rbp
 1087              		.cfi_def_cfa_offset 8
 1088 0a11 C3       		ret
 1089              		.p2align 4,,10
 1090 0a12 660F1F44 		.p2align 3
 1090      0000
 1091              	.L163:
 1092              		.cfi_restore_state
 1093 0a18 488D3500 		leaq	.LC13(%rip), %rsi
 1093      000000
 1094 0a1f 4889EF   		movq	%rbp, %rdi
 1095 0a22 E8000000 		call	errPrefix@PLT
 1095      00
 1096 0a27 B8150000 		movl	$21, %eax
 1096      00
 1097 0a2c EBCD     		jmp	.L155
 1098              	.L164:
 1099 0a2e E8000000 		call	__stack_chk_fail@PLT
 1099      00
 1100              		.cfi_endproc
 1101              	.LFE56:
 1103              		.section	.rodata.str1.8
 1104 0234 00000000 		.align 8
 1105              	.LC14:
 1106 0238 70726F67 		.string	"progOpen(): Unexpected end of config string:\n  %s\n  %s^"
 1106      4F70656E 
 1106      28293A20 
 1106      556E6578 
 1106      70656374 
 1107              		.align 8
 1108              	.LC15:
 1109 0270 70726F67 		.string	"progOpen(): Port is not valid (try 'A', 'B', 'C', etc):\n  %s\n  %s^"
 1109      4F70656E 
 1109      28293A20 
 1109      506F7274 
 1109      20697320 
 1110 02b3 00000000 		.align 8
 1110      00
 1111              	.LC16:
 1112 02b8 70726F67 		.string	"progOpen(): Bit number is not valid:\n  %s\n  %s^"
 1112      4F70656E 
 1112      28293A20 
 1112      42697420 
 1112      6E756D62 
 1113              		.section	.rodata.str1.1
 1114              	.LC17:
 1115 0073 706F7274 		.string	"portMap()"
 1115      4D617028 
 1115      2900
 1116              	.LC18:
 1117 007d 70726F67 		.string	"progOpen()"
 1117      4F70656E 
 1117      282900
 1118              		.section	.rodata.str1.8
 1119              		.align 8
 1120              	.LC19:
 1121 02e8 70726F67 		.string	"progOpen(): port '%c%d' is already used:\n  %s\n  %s^"
 1121      4F70656E 
 1121      28293A20 
 1121      706F7274 
 1121      20272563 
 1122              		.text
 1123 0a33 66662E0F 		.p2align 4
 1123      1F840000 
 1123      00000066 
 1123      90
 1125              	progOpenInternal:
 1126              	.LFB44:
 1127              		.cfi_startproc
 1128 0a40 4157     		pushq	%r15
 1129              		.cfi_def_cfa_offset 16
 1130              		.cfi_offset 15, -16
 1131 0a42 4989F7   		movq	%rsi, %r15
 1132 0a45 4889D6   		movq	%rdx, %rsi
 1133 0a48 4156     		pushq	%r14
 1134              		.cfi_def_cfa_offset 24
 1135              		.cfi_offset 14, -24
 1136 0a4a 4155     		pushq	%r13
 1137              		.cfi_def_cfa_offset 32
 1138              		.cfi_offset 13, -32
 1139 0a4c 4154     		pushq	%r12
 1140              		.cfi_def_cfa_offset 40
 1141              		.cfi_offset 12, -40
 1142 0a4e 4989FC   		movq	%rdi, %r12
 1143 0a51 55       		pushq	%rbp
 1144              		.cfi_def_cfa_offset 48
 1145              		.cfi_offset 6, -48
 1146 0a52 4889CD   		movq	%rcx, %rbp
 1147 0a55 B9A00100 		movl	$416, %ecx
 1147      00
 1148 0a5a 53       		pushq	%rbx
 1149              		.cfi_def_cfa_offset 56
 1150              		.cfi_offset 3, -56
 1151 0a5b 4881EC58 		subq	$3416, %rsp
 1151      0D0000
 1152              		.cfi_def_cfa_offset 3472
 1153 0a62 48895424 		movq	%rdx, 56(%rsp)
 1153      38
 1154 0a67 488D7C24 		leaq	64(%rsp), %rdi
 1154      40
 1155 0a6c 0FB61A   		movzbl	(%rdx), %ebx
 1156 0a6f 64488B04 		movq	%fs:40, %rax
 1156      25280000 
 1156      00
 1157 0a78 48898424 		movq	%rax, 3400(%rsp)
 1157      480D0000 
 1158 0a80 31C0     		xorl	%eax, %eax
 1159 0a82 F348AB   		rep stosq
 1160 0a85 4C89F8   		movq	%r15, %rax
 1161 0a88 4829D0   		subq	%rdx, %rax
 1162 0a8b 84DB     		testb	%bl, %bl
 1163 0a8d 0F842304 		je	.L196
 1163      0000
 1164 0a93 4C89F8   		movq	%r15, %rax
 1165 0a96 83EB41   		subl	$65, %ebx
 1166 0a99 4829D0   		subq	%rdx, %rax
 1167 0a9c 488D1500 		leaq	.LC0(%rip), %rdx
 1167      000000
 1168 0aa3 80FB19   		cmpb	$25, %bl
 1169 0aa6 0F87E904 		ja	.L197
 1169      0000
 1170 0aac 488D7E01 		leaq	1(%rsi), %rdi
 1171 0ab0 48897C24 		movq	%rdi, 56(%rsp)
 1171      38
 1172 0ab5 0FB64601 		movzbl	1(%rsi), %eax
 1173 0ab9 84C0     		testb	%al, %al
 1174 0abb 0F84EF03 		je	.L199
 1174      0000
 1175 0ac1 83E830   		subl	$48, %eax
 1176 0ac4 3C09     		cmpb	$9, %al
 1177 0ac6 0F874404 		ja	.L198
 1177      0000
 1178 0acc 4C8D7424 		leaq	56(%rsp), %r14
 1178      38
 1179 0ad1 BA0A0000 		movl	$10, %edx
 1179      00
 1180 0ad6 4C89F6   		movq	%r14, %rsi
 1181 0ad9 E8000000 		call	strtoul@PLT
 1181      00
 1182 0ade 89D9     		movl	%ebx, %ecx
 1183 0ae0 4531C0   		xorl	%r8d, %r8d
 1184 0ae3 4531C9   		xorl	%r9d, %r9d
 1185 0ae6 4989C5   		movq	%rax, %r13
 1186 0ae9 0FB6C3   		movzbl	%bl, %eax
 1187 0aec C1E108   		sall	$8, %ecx
 1188 0aef BE860000 		movl	$134, %esi
 1188      00
 1189 0af4 8944240C 		movl	%eax, 12(%rsp)
 1190 0af8 0FB6C3   		movzbl	%bl, %eax
 1191 0afb 410FB6D5 		movzbl	%r13b, %edx
 1192 0aff 410FB6FD 		movzbl	%r13b, %edi
 1193 0b03 48C1E005 		salq	$5, %rax
 1194 0b07 897C2410 		movl	%edi, 16(%rsp)
 1195 0b0b 83C901   		orl	$1, %ecx
 1196 0b0e 4801D0   		addq	%rdx, %rax
 1197 0b11 89FA     		movl	%edi, %edx
 1198 0b13 498B3C24 		movq	(%r12), %rdi
 1199 0b17 0FB7C9   		movzwl	%cx, %ecx
 1200 0b1a C7448440 		movl	$3, 64(%rsp,%rax,4)
 1200      03000000 
 1201 0b22 55       		pushq	%rbp
 1202              		.cfi_def_cfa_offset 3480
 1203 0b23 68E80300 		pushq	$1000
 1203      00
 1204              		.cfi_def_cfa_offset 3488
 1205 0b28 E8000000 		call	usbControlWrite@PLT
 1205      00
 1206 0b2d 5F       		popq	%rdi
 1207              		.cfi_def_cfa_offset 3480
 1208 0b2e 4158     		popq	%r8
 1209              		.cfi_def_cfa_offset 3472
 1210 0b30 85C0     		testl	%eax, %eax
 1211 0b32 0F850804 		jne	.L171
 1211      0000
 1212 0b38 488B4424 		movq	56(%rsp), %rax
 1212      38
 1213 0b3d 440FB618 		movzbl	(%rax), %r11d
 1214 0b41 4584DB   		testb	%r11b, %r11b
 1215 0b44 0F842604 		je	.L203
 1215      0000
 1216 0b4a 4183EB41 		subl	$65, %r11d
 1217 0b4e 4180FB19 		cmpb	$25, %r11b
 1218 0b52 0F873004 		ja	.L200
 1218      0000
 1219 0b58 488D7801 		leaq	1(%rax), %rdi
 1220 0b5c 48897C24 		movq	%rdi, 56(%rsp)
 1220      38
 1221 0b61 0FB64001 		movzbl	1(%rax), %eax
 1222 0b65 84C0     		testb	%al, %al
 1223 0b67 0F844303 		je	.L199
 1223      0000
 1224 0b6d 83E830   		subl	$48, %eax
 1225 0b70 3C09     		cmpb	$9, %al
 1226 0b72 0F879803 		ja	.L198
 1226      0000
 1227 0b78 BA0A0000 		movl	$10, %edx
 1227      00
 1228 0b7d 4C89F6   		movq	%r14, %rsi
 1229 0b80 44885C24 		movb	%r11b, 20(%rsp)
 1229      14
 1230 0b85 E8000000 		call	strtoul@PLT
 1230      00
 1231 0b8a 0FB65424 		movzbl	20(%rsp), %edx
 1231      14
 1232 0b8f 0FB6C8   		movzbl	%al, %ecx
 1233 0b92 48894424 		movq	%rax, 32(%rsp)
 1233      20
 1234 0b97 4189D3   		movl	%edx, %r11d
 1235 0b9a 8954241C 		movl	%edx, 28(%rsp)
 1236 0b9e 0FB6D0   		movzbl	%al, %edx
 1237 0ba1 410FB6C3 		movzbl	%r11b, %eax
 1238 0ba5 89542414 		movl	%edx, 20(%rsp)
 1239 0ba9 4889C2   		movq	%rax, %rdx
 1240 0bac 48C1E205 		salq	$5, %rdx
 1241 0bb0 4801CA   		addq	%rcx, %rdx
 1242 0bb3 8B749440 		movl	64(%rsp,%rdx,4), %esi
 1243 0bb7 85F6     		testl	%esi, %esi
 1244 0bb9 0F850104 		jne	.L204
 1244      0000
 1245 0bbf 48C1E005 		salq	$5, %rax
 1246 0bc3 44885C24 		movb	%r11b, 24(%rsp)
 1246      18
 1247 0bc8 498B3C24 		movq	(%r12), %rdi
 1248 0bcc 4531C9   		xorl	%r9d, %r9d
 1249 0bcf 4801C8   		addq	%rcx, %rax
 1250 0bd2 4489D9   		movl	%r11d, %ecx
 1251 0bd5 4531C0   		xorl	%r8d, %r8d
 1252 0bd8 BE860000 		movl	$134, %esi
 1252      00
 1253 0bdd C7448440 		movl	$2, 64(%rsp,%rax,4)
 1253      02000000 
 1254 0be5 C1E108   		sall	$8, %ecx
 1255 0be8 55       		pushq	%rbp
 1256              		.cfi_def_cfa_offset 3480
 1257 0be9 83C902   		orl	$2, %ecx
 1258 0bec 68E80300 		pushq	$1000
 1258      00
 1259              		.cfi_def_cfa_offset 3488
 1260 0bf1 8B542424 		movl	36(%rsp), %edx
 1261 0bf5 0FB7C9   		movzwl	%cx, %ecx
 1262 0bf8 E8000000 		call	usbControlWrite@PLT
 1262      00
 1263 0bfd 5A       		popq	%rdx
 1264              		.cfi_def_cfa_offset 3480
 1265 0bfe 59       		popq	%rcx
 1266              		.cfi_def_cfa_offset 3472
 1267 0bff 85C0     		testl	%eax, %eax
 1268 0c01 0F853903 		jne	.L171
 1268      0000
 1269 0c07 488B4424 		movq	56(%rsp), %rax
 1269      38
 1270 0c0c 440FB65C 		movzbl	24(%rsp), %r11d
 1270      2418
 1271 0c12 0FB610   		movzbl	(%rax), %edx
 1272 0c15 84D2     		testb	%dl, %dl
 1273 0c17 0F845303 		je	.L203
 1273      0000
 1274 0c1d 448D52BF 		leal	-65(%rdx), %r10d
 1275 0c21 4180FA19 		cmpb	$25, %r10b
 1276 0c25 0F875D03 		ja	.L200
 1276      0000
 1277 0c2b 488D7801 		leaq	1(%rax), %rdi
 1278 0c2f 48897C24 		movq	%rdi, 56(%rsp)
 1278      38
 1279 0c34 0FB64001 		movzbl	1(%rax), %eax
 1280 0c38 84C0     		testb	%al, %al
 1281 0c3a 0F847002 		je	.L199
 1281      0000
 1282 0c40 83E830   		subl	$48, %eax
 1283 0c43 3C09     		cmpb	$9, %al
 1284 0c45 0F87C502 		ja	.L198
 1284      0000
 1285 0c4b BA0A0000 		movl	$10, %edx
 1285      00
 1286 0c50 4C89F6   		movq	%r14, %rsi
 1287 0c53 44885424 		movb	%r10b, 24(%rsp)
 1287      18
 1288 0c58 44885C24 		movb	%r11b, 53(%rsp)
 1288      35
 1289 0c5d E8000000 		call	strtoul@PLT
 1289      00
 1290 0c62 0FB65424 		movzbl	24(%rsp), %edx
 1290      18
 1291 0c67 48894424 		movq	%rax, 40(%rsp)
 1291      28
 1292 0c6c 4189D2   		movl	%edx, %r10d
 1293 0c6f 89542430 		movl	%edx, 48(%rsp)
 1294 0c73 0FB6D0   		movzbl	%al, %edx
 1295 0c76 89542418 		movl	%edx, 24(%rsp)
 1296 0c7a 0FB6D0   		movzbl	%al, %edx
 1297 0c7d 410FB6C2 		movzbl	%r10b, %eax
 1298 0c81 48C1E005 		salq	$5, %rax
 1299 0c85 4801D0   		addq	%rdx, %rax
 1300 0c88 448B5C84 		movl	64(%rsp,%rax,4), %r11d
 1300      40
 1301 0c8d 4585DB   		testl	%r11d, %r11d
 1302 0c90 440FB65C 		movzbl	53(%rsp), %r11d
 1302      2435
 1303 0c96 0F856403 		jne	.L205
 1303      0000
 1304 0c9c 4489D1   		movl	%r10d, %ecx
 1305 0c9f 44885C24 		movb	%r11b, 54(%rsp)
 1305      36
 1306 0ca4 498B3C24 		movq	(%r12), %rdi
 1307 0ca8 4531C9   		xorl	%r9d, %r9d
 1308 0cab 44885424 		movb	%r10b, 53(%rsp)
 1308      35
 1309 0cb0 C1E108   		sall	$8, %ecx
 1310 0cb3 4531C0   		xorl	%r8d, %r8d
 1311 0cb6 BE860000 		movl	$134, %esi
 1311      00
 1312 0cbb C7448440 		movl	$2, 64(%rsp,%rax,4)
 1312      02000000 
 1313 0cc3 83C903   		orl	$3, %ecx
 1314 0cc6 55       		pushq	%rbp
 1315              		.cfi_def_cfa_offset 3480
 1316 0cc7 0FB7C9   		movzwl	%cx, %ecx
 1317 0cca 68E80300 		pushq	$1000
 1317      00
 1318              		.cfi_def_cfa_offset 3488
 1319 0ccf 8B542428 		movl	40(%rsp), %edx
 1320 0cd3 E8000000 		call	usbControlWrite@PLT
 1320      00
 1321 0cd8 4159     		popq	%r9
 1322              		.cfi_def_cfa_offset 3480
 1323 0cda 415A     		popq	%r10
 1324              		.cfi_def_cfa_offset 3472
 1325 0cdc 85C0     		testl	%eax, %eax
 1326 0cde 0F855C02 		jne	.L171
 1326      0000
 1327 0ce4 488B4424 		movq	56(%rsp), %rax
 1327      38
 1328 0ce9 440FB654 		movzbl	53(%rsp), %r10d
 1328      2435
 1329 0cef 440FB65C 		movzbl	54(%rsp), %r11d
 1329      2436
 1330 0cf5 0FB608   		movzbl	(%rax), %ecx
 1331 0cf8 84C9     		testb	%cl, %cl
 1332 0cfa 0F847002 		je	.L203
 1332      0000
 1333 0d00 83E941   		subl	$65, %ecx
 1334 0d03 80F919   		cmpb	$25, %cl
 1335 0d06 0F877C02 		ja	.L200
 1335      0000
 1336 0d0c 488D7801 		leaq	1(%rax), %rdi
 1337 0d10 48897C24 		movq	%rdi, 56(%rsp)
 1337      38
 1338 0d15 0FB64001 		movzbl	1(%rax), %eax
 1339 0d19 84C0     		testb	%al, %al
 1340 0d1b 0F848F01 		je	.L199
 1340      0000
 1341 0d21 83E830   		subl	$48, %eax
 1342 0d24 3C09     		cmpb	$9, %al
 1343 0d26 0F87E401 		ja	.L198
 1343      0000
 1344 0d2c 4C89F6   		movq	%r14, %rsi
 1345 0d2f BA0A0000 		movl	$10, %edx
 1345      00
 1346 0d34 884C2437 		movb	%cl, 55(%rsp)
 1347 0d38 450FB6ED 		movzbl	%r13b, %r13d
 1348 0d3c 44885C24 		movb	%r11b, 53(%rsp)
 1348      35
 1349 0d41 0FB6DB   		movzbl	%bl, %ebx
 1350 0d44 44885424 		movb	%r10b, 54(%rsp)
 1350      36
 1351 0d49 E8000000 		call	strtoul@PLT
 1351      00
 1352 0d4e 440FB65C 		movzbl	53(%rsp), %r11d
 1352      2435
 1353 0d54 4889C2   		movq	%rax, %rdx
 1354 0d57 0FB6F0   		movzbl	%al, %esi
 1355 0d5a 0FB64424 		movzbl	55(%rsp), %eax
 1355      37
 1356 0d5f 48C1E608 		salq	$8, %rsi
 1357 0d63 4889C1   		movq	%rax, %rcx
 1358 0d66 4809C6   		orq	%rax, %rsi
 1359 0d69 0FB64424 		movzbl	40(%rsp), %eax
 1359      28
 1360 0d6e 48C1E608 		salq	$8, %rsi
 1361 0d72 440FB6F1 		movzbl	%cl, %r14d
 1362 0d76 4809C6   		orq	%rax, %rsi
 1363 0d79 0FB64424 		movzbl	54(%rsp), %eax
 1363      36
 1364 0d7e 48C1E608 		salq	$8, %rsi
 1365 0d82 4809C6   		orq	%rax, %rsi
 1366 0d85 0FB64424 		movzbl	32(%rsp), %eax
 1366      20
 1367 0d8a 48C1E608 		salq	$8, %rsi
 1368 0d8e 4809F0   		orq	%rsi, %rax
 1369 0d91 48C1E008 		salq	$8, %rax
 1370 0d95 4C09D8   		orq	%r11, %rax
 1371 0d98 48C1E008 		salq	$8, %rax
 1372 0d9c 4C09E8   		orq	%r13, %rax
 1373 0d9f 440FB6EA 		movzbl	%dl, %r13d
 1374 0da3 0FB6D2   		movzbl	%dl, %edx
 1375 0da6 48C1E008 		salq	$8, %rax
 1376 0daa 4809C3   		orq	%rax, %rbx
 1377 0dad 0FB6C1   		movzbl	%cl, %eax
 1378 0db0 48C1E005 		salq	$5, %rax
 1379 0db4 4801D0   		addq	%rdx, %rax
 1380 0db7 448B4484 		movl	64(%rsp,%rax,4), %r8d
 1380      40
 1381 0dbc 4585C0   		testl	%r8d, %r8d
 1382 0dbf 0F857E02 		jne	.L206
 1382      0000
 1383 0dc5 55       		pushq	%rbp
 1384              		.cfi_def_cfa_offset 3480
 1385 0dc6 C1E108   		sall	$8, %ecx
 1386 0dc9 498B3C24 		movq	(%r12), %rdi
 1387 0dcd BE860000 		movl	$134, %esi
 1387      00
 1388 0dd2 68E80300 		pushq	$1000
 1388      00
 1389              		.cfi_def_cfa_offset 3488
 1390 0dd7 83C904   		orl	$4, %ecx
 1391 0dda 4531C9   		xorl	%r9d, %r9d
 1392 0ddd 4531C0   		xorl	%r8d, %r8d
 1393 0de0 0FB7C9   		movzwl	%cx, %ecx
 1394 0de3 4489EA   		movl	%r13d, %edx
 1395 0de6 E8000000 		call	usbControlWrite@PLT
 1395      00
 1396 0deb 5E       		popq	%rsi
 1397              		.cfi_def_cfa_offset 3480
 1398 0dec 5F       		popq	%rdi
 1399              		.cfi_def_cfa_offset 3472
 1400 0ded 85C0     		testl	%eax, %eax
 1401 0def 0F854B01 		jne	.L171
 1401      0000
 1402 0df5 55       		pushq	%rbp
 1403              		.cfi_def_cfa_offset 3480
 1404 0df6 498B3C24 		movq	(%r12), %rdi
 1405 0dfa 31C9     		xorl	%ecx, %ecx
 1406 0dfc 31D2     		xorl	%edx, %edx
 1407 0dfe 68E80300 		pushq	$1000
 1407      00
 1408              		.cfi_def_cfa_offset 3488
 1409 0e03 4531C9   		xorl	%r9d, %r9d
 1410 0e06 4531C0   		xorl	%r8d, %r8d
 1411 0e09 BE860000 		movl	$134, %esi
 1411      00
 1412 0e0e E8000000 		call	usbControlWrite@PLT
 1412      00
 1413 0e13 5A       		popq	%rdx
 1414              		.cfi_def_cfa_offset 3480
 1415 0e14 59       		popq	%rcx
 1416              		.cfi_def_cfa_offset 3472
 1417 0e15 85C0     		testl	%eax, %eax
 1418 0e17 0F852301 		jne	.L171
 1418      0000
 1419 0e1d 8B542410 		movl	16(%rsp), %edx
 1420 0e21 8B74240C 		movl	12(%rsp), %esi
 1421 0e25 4531C0   		xorl	%r8d, %r8d
 1422 0e28 4989E9   		movq	%rbp, %r9
 1423 0e2b B9030000 		movl	$3, %ecx
 1423      00
 1424 0e30 4C89E7   		movq	%r12, %rdi
 1425 0e33 E8000000 		call	flSingleBitPortAccess@PLT
 1425      00
 1426 0e38 85C0     		testl	%eax, %eax
 1427 0e3a 0F85E701 		jne	.L195
 1427      0000
 1428 0e40 8B542414 		movl	20(%rsp), %edx
 1429 0e44 8B74241C 		movl	28(%rsp), %esi
 1430 0e48 4531C0   		xorl	%r8d, %r8d
 1431 0e4b 4989E9   		movq	%rbp, %r9
 1432 0e4e B9020000 		movl	$2, %ecx
 1432      00
 1433 0e53 4C89E7   		movq	%r12, %rdi
 1434 0e56 E8000000 		call	flSingleBitPortAccess@PLT
 1434      00
 1435 0e5b 85C0     		testl	%eax, %eax
 1436 0e5d 0F85C401 		jne	.L195
 1436      0000
 1437 0e63 8B542418 		movl	24(%rsp), %edx
 1438 0e67 8B742430 		movl	48(%rsp), %esi
 1439 0e6b 4531C0   		xorl	%r8d, %r8d
 1440 0e6e 4989E9   		movq	%rbp, %r9
 1441 0e71 B9020000 		movl	$2, %ecx
 1441      00
 1442 0e76 4C89E7   		movq	%r12, %rdi
 1443 0e79 E8000000 		call	flSingleBitPortAccess@PLT
 1443      00
 1444 0e7e 85C0     		testl	%eax, %eax
 1445 0e80 0F85A101 		jne	.L195
 1445      0000
 1446 0e86 4531C0   		xorl	%r8d, %r8d
 1447 0e89 4989E9   		movq	%rbp, %r9
 1448 0e8c B9020000 		movl	$2, %ecx
 1448      00
 1449 0e91 4489EA   		movl	%r13d, %edx
 1450 0e94 4489F6   		movl	%r14d, %esi
 1451 0e97 4C89E7   		movq	%r12, %rdi
 1452 0e9a E8000000 		call	flSingleBitPortAccess@PLT
 1452      00
 1453 0e9f 85C0     		testl	%eax, %eax
 1454 0ea1 0F858001 		jne	.L195
 1454      0000
 1455              	.L167:
 1456 0ea7 49895C24 		movq	%rbx, 23(%r12)
 1456      17
 1457 0eac EB30     		jmp	.L165
 1458 0eae 6690     		.p2align 4,,10
 1459              		.p2align 3
 1460              	.L199:
 1461 0eb0 4C89F8   		movq	%r15, %rax
 1462 0eb3 4829F8   		subq	%rdi, %rax
 1463              	.L196:
 1464 0eb6 488D1500 		leaq	.LC0(%rip), %rdx
 1464      000000
 1465              	.L201:
 1466 0ebd 488D8C02 		leaq	256(%rdx,%rax), %rcx
 1466      00010000 
 1467 0ec5 488D3500 		leaq	.LC14(%rip), %rsi
 1467      000000
 1468 0ecc 31C0     		xorl	%eax, %eax
 1469 0ece 4C89FA   		movq	%r15, %rdx
 1470 0ed1 4889EF   		movq	%rbp, %rdi
 1471 0ed4 E8000000 		call	errRender@PLT
 1471      00
 1472 0ed9 B80B0000 		movl	$11, %eax
 1472      00
 1473              	.L165:
 1474 0ede 488B9424 		movq	3400(%rsp), %rdx
 1474      480D0000 
 1475 0ee6 64482B14 		subq	%fs:40, %rdx
 1475      25280000 
 1475      00
 1476 0eef 0F857401 		jne	.L207
 1476      0000
 1477 0ef5 4881C458 		addq	$3416, %rsp
 1477      0D0000
 1478              		.cfi_remember_state
 1479              		.cfi_def_cfa_offset 56
 1480 0efc 5B       		popq	%rbx
 1481              		.cfi_def_cfa_offset 48
 1482 0efd 5D       		popq	%rbp
 1483              		.cfi_def_cfa_offset 40
 1484 0efe 415C     		popq	%r12
 1485              		.cfi_def_cfa_offset 32
 1486 0f00 415D     		popq	%r13
 1487              		.cfi_def_cfa_offset 24
 1488 0f02 415E     		popq	%r14
 1489              		.cfi_def_cfa_offset 16
 1490 0f04 415F     		popq	%r15
 1491              		.cfi_def_cfa_offset 8
 1492 0f06 C3       		ret
 1493 0f07 660F1F84 		.p2align 4,,10
 1493      00000000 
 1493      00
 1494              		.p2align 3
 1495              	.L198:
 1496              		.cfi_restore_state
 1497 0f10 4C89F8   		movq	%r15, %rax
 1498 0f13 488D1500 		leaq	.LC0(%rip), %rdx
 1498      000000
 1499 0f1a 488D3500 		leaq	.LC16(%rip), %rsi
 1499      000000
 1500 0f21 4829F8   		subq	%rdi, %rax
 1501 0f24 4889EF   		movq	%rbp, %rdi
 1502 0f27 488D8C02 		leaq	256(%rdx,%rax), %rcx
 1502      00010000 
 1503 0f2f 31C0     		xorl	%eax, %eax
 1504 0f31 4C89FA   		movq	%r15, %rdx
 1505 0f34 E8000000 		call	errRender@PLT
 1505      00
 1506 0f39 B80B0000 		movl	$11, %eax
 1506      00
 1507 0f3e EB9E     		jmp	.L165
 1508              		.p2align 4,,10
 1509              		.p2align 3
 1510              	.L171:
 1511 0f40 488D3500 		leaq	.LC17(%rip), %rsi
 1511      000000
 1512 0f47 4889EF   		movq	%rbp, %rdi
 1513 0f4a E8000000 		call	errPrefix@PLT
 1513      00
 1514 0f4f 488D3500 		leaq	.LC18(%rip), %rsi
 1514      000000
 1515 0f56 4889EF   		movq	%rbp, %rdi
 1516 0f59 E8000000 		call	errPrefix@PLT
 1516      00
 1517 0f5e B80C0000 		movl	$12, %eax
 1517      00
 1518 0f63 E976FFFF 		jmp	.L165
 1518      FF
 1519 0f68 0F1F8400 		.p2align 4,,10
 1519      00000000 
 1520              		.p2align 3
 1521              	.L203:
 1522 0f70 4C89FA   		movq	%r15, %rdx
 1523 0f73 4829C2   		subq	%rax, %rdx
 1524 0f76 488D0500 		leaq	.LC0(%rip), %rax
 1524      000000
 1525 0f7d E93BFFFF 		jmp	.L201
 1525      FF
 1526              		.p2align 4,,10
 1527 0f82 660F1F44 		.p2align 3
 1527      0000
 1528              	.L200:
 1529 0f88 4C89FA   		movq	%r15, %rdx
 1530 0f8b 4829C2   		subq	%rax, %rdx
 1531 0f8e 488D0500 		leaq	.LC0(%rip), %rax
 1531      000000
 1532              	.L197:
 1533 0f95 488D8C10 		leaq	256(%rax,%rdx), %rcx
 1533      00010000 
 1534 0f9d 488D3500 		leaq	.LC15(%rip), %rsi
 1534      000000
 1535 0fa4 31C0     		xorl	%eax, %eax
 1536 0fa6 4C89FA   		movq	%r15, %rdx
 1537 0fa9 4889EF   		movq	%rbp, %rdi
 1538 0fac E8000000 		call	errRender@PLT
 1538      00
 1539 0fb1 B80B0000 		movl	$11, %eax
 1539      00
 1540 0fb6 E923FFFF 		jmp	.L165
 1540      FF
 1541 0fbb 0F1F4400 		.p2align 4,,10
 1541      00
 1542              		.p2align 3
 1543              	.L204:
 1544 0fc0 488D0D00 		leaq	.LC0(%rip), %rcx
 1544      000000
 1545 0fc7 8B54241C 		movl	28(%rsp), %edx
 1546 0fcb 4C89F8   		movq	%r15, %rax
 1547 0fce 482B4424 		subq	56(%rsp), %rax
 1547      38
 1548 0fd3 4C8D8C01 		leaq	257(%rcx,%rax), %r9
 1548      01010000 
 1549 0fdb 8B4C2414 		movl	20(%rsp), %ecx
 1550 0fdf 4D89F8   		movq	%r15, %r8
 1551 0fe2 83C241   		addl	$65, %edx
 1552              	.L202:
 1553 0fe5 31C0     		xorl	%eax, %eax
 1554 0fe7 488D3500 		leaq	.LC19(%rip), %rsi
 1554      000000
 1555 0fee 4889EF   		movq	%rbp, %rdi
 1556 0ff1 E8000000 		call	errRender@PLT
 1556      00
 1557 0ff6 B80B0000 		movl	$11, %eax
 1557      00
 1558 0ffb E9DEFEFF 		jmp	.L165
 1558      FF
 1559              		.p2align 4,,10
 1560              		.p2align 3
 1561              	.L205:
 1562 1000 8B542430 		movl	48(%rsp), %edx
 1563 1004 488D0D00 		leaq	.LC0(%rip), %rcx
 1563      000000
 1564 100b 4C89F8   		movq	%r15, %rax
 1565 100e 4D89F8   		movq	%r15, %r8
 1566 1011 482B4424 		subq	56(%rsp), %rax
 1566      38
 1567 1016 4C8D8C01 		leaq	257(%rcx,%rax), %r9
 1567      01010000 
 1568 101e 83C241   		addl	$65, %edx
 1569 1021 8B4C2418 		movl	24(%rsp), %ecx
 1570 1025 EBBE     		jmp	.L202
 1571              	.L195:
 1572 1027 488D3500 		leaq	.LC18(%rip), %rsi
 1572      000000
 1573 102e 4889EF   		movq	%rbp, %rdi
 1574 1031 8944240C 		movl	%eax, 12(%rsp)
 1575 1035 E8000000 		call	errPrefix@PLT
 1575      00
 1576 103a 8B44240C 		movl	12(%rsp), %eax
 1577 103e E99BFEFF 		jmp	.L165
 1577      FF
 1578              	.L206:
 1579 1043 488D0D00 		leaq	.LC0(%rip), %rcx
 1579      000000
 1580 104a 4C89F8   		movq	%r15, %rax
 1581 104d 482B4424 		subq	56(%rsp), %rax
 1581      38
 1582 1052 4D89F8   		movq	%r15, %r8
 1583 1055 4C8D8C01 		leaq	257(%rcx,%rax), %r9
 1583      01010000 
 1584 105d 418D5641 		leal	65(%r14), %edx
 1585 1061 4489E9   		movl	%r13d, %ecx
 1586 1064 E97CFFFF 		jmp	.L202
 1586      FF
 1587              	.L207:
 1588 1069 E8000000 		call	__stack_chk_fail@PLT
 1588      00
 1589              		.cfi_endproc
 1590              	.LFE44:
 1592 106e 6690     		.p2align 4
 1593              		.globl	progOpen
 1595              	progOpen:
 1596              	.LFB47:
 1597              		.cfi_startproc
 1598 1070 F30F1EFA 		endbr64
 1599 1074 4889D1   		movq	%rdx, %rcx
 1600 1077 4889F2   		movq	%rsi, %rdx
 1601 107a E9C1F9FF 		jmp	progOpenInternal
 1601      FF
 1602              		.cfi_endproc
 1603              	.LFE47:
 1605              		.section	.rodata.str1.1
 1606              	.LC20:
 1607 0088 70726F67 		.string	"progClose()"
 1607      436C6F73 
 1607      65282900 
 1608              		.text
 1609 107f 90       		.p2align 4
 1610              		.globl	progClose
 1612              	progClose:
 1613              	.LFB48:
 1614              		.cfi_startproc
 1615 1080 F30F1EFA 		endbr64
 1616 1084 4155     		pushq	%r13
 1617              		.cfi_def_cfa_offset 16
 1618              		.cfi_offset 13, -16
 1619 1086 4989F5   		movq	%rsi, %r13
 1620 1089 4531C0   		xorl	%r8d, %r8d
 1621 108c B9030000 		movl	$3, %ecx
 1621      00
 1622 1091 4154     		pushq	%r12
 1623              		.cfi_def_cfa_offset 24
 1624              		.cfi_offset 12, -24
 1625 1093 4D89E9   		movq	%r13, %r9
 1626 1096 55       		pushq	%rbp
 1627              		.cfi_def_cfa_offset 32
 1628              		.cfi_offset 6, -32
 1629 1097 0FB65718 		movzbl	24(%rdi), %edx
 1630 109b 4889FD   		movq	%rdi, %rbp
 1631 109e 0FB67717 		movzbl	23(%rdi), %esi
 1632 10a2 E8000000 		call	flSingleBitPortAccess@PLT
 1632      00
 1633 10a7 85C0     		testl	%eax, %eax
 1634 10a9 0F859100 		jne	.L219
 1634      0000
 1635 10af 0FB6551A 		movzbl	26(%rbp), %edx
 1636 10b3 0FB67519 		movzbl	25(%rbp), %esi
 1637 10b7 4D89E9   		movq	%r13, %r9
 1638 10ba 4531C0   		xorl	%r8d, %r8d
 1639 10bd B9030000 		movl	$3, %ecx
 1639      00
 1640 10c2 4889EF   		movq	%rbp, %rdi
 1641 10c5 E8000000 		call	flSingleBitPortAccess@PLT
 1641      00
 1642 10ca 4189C4   		movl	%eax, %r12d
 1643 10cd 85C0     		testl	%eax, %eax
 1644 10cf 754F     		jne	.L218
 1645 10d1 0FB6551C 		movzbl	28(%rbp), %edx
 1646 10d5 0FB6751B 		movzbl	27(%rbp), %esi
 1647 10d9 4D89E9   		movq	%r13, %r9
 1648 10dc 4531C0   		xorl	%r8d, %r8d
 1649 10df B9030000 		movl	$3, %ecx
 1649      00
 1650 10e4 4889EF   		movq	%rbp, %rdi
 1651 10e7 E8000000 		call	flSingleBitPortAccess@PLT
 1651      00
 1652 10ec 4189C4   		movl	%eax, %r12d
 1653 10ef 85C0     		testl	%eax, %eax
 1654 10f1 752D     		jne	.L218
 1655 10f3 0FB6551E 		movzbl	30(%rbp), %edx
 1656 10f7 0FB6751D 		movzbl	29(%rbp), %esi
 1657 10fb 4D89E9   		movq	%r13, %r9
 1658 10fe 4531C0   		xorl	%r8d, %r8d
 1659 1101 B9030000 		movl	$3, %ecx
 1659      00
 1660 1106 4889EF   		movq	%rbp, %rdi
 1661 1109 E8000000 		call	flSingleBitPortAccess@PLT
 1661      00
 1662 110e 4189C4   		movl	%eax, %r12d
 1663 1111 85C0     		testl	%eax, %eax
 1664 1113 750B     		jne	.L218
 1665 1115 4489E0   		movl	%r12d, %eax
 1666 1118 5D       		popq	%rbp
 1667              		.cfi_remember_state
 1668              		.cfi_def_cfa_offset 24
 1669 1119 415C     		popq	%r12
 1670              		.cfi_def_cfa_offset 16
 1671 111b 415D     		popq	%r13
 1672              		.cfi_def_cfa_offset 8
 1673 111d C3       		ret
 1674 111e 6690     		.p2align 4,,10
 1675              		.p2align 3
 1676              	.L218:
 1677              		.cfi_restore_state
 1678              	.L211:
 1679 1120 4C89EF   		movq	%r13, %rdi
 1680 1123 488D3500 		leaq	.LC20(%rip), %rsi
 1680      000000
 1681 112a E8000000 		call	errPrefix@PLT
 1681      00
 1682 112f 4489E0   		movl	%r12d, %eax
 1683 1132 5D       		popq	%rbp
 1684              		.cfi_remember_state
 1685              		.cfi_def_cfa_offset 24
 1686 1133 415C     		popq	%r12
 1687              		.cfi_def_cfa_offset 16
 1688 1135 415D     		popq	%r13
 1689              		.cfi_def_cfa_offset 8
 1690 1137 C3       		ret
 1691 1138 0F1F8400 		.p2align 4,,10
 1691      00000000 
 1692              		.p2align 3
 1693              	.L219:
 1694              		.cfi_restore_state
 1695 1140 4189C4   		movl	%eax, %r12d
 1696 1143 4C89EF   		movq	%r13, %rdi
 1697 1146 488D3500 		leaq	.LC20(%rip), %rsi
 1697      000000
 1698 114d E8000000 		call	errPrefix@PLT
 1698      00
 1699 1152 4489E0   		movl	%r12d, %eax
 1700 1155 5D       		popq	%rbp
 1701              		.cfi_def_cfa_offset 24
 1702 1156 415C     		popq	%r12
 1703              		.cfi_def_cfa_offset 16
 1704 1158 415D     		popq	%r13
 1705              		.cfi_def_cfa_offset 8
 1706 115a C3       		ret
 1707              		.cfi_endproc
 1708              	.LFE48:
 1710              		.section	.rodata.str1.1
 1711              	.LC21:
 1712 0094 6A746167 		.string	"jtagScanChain()"
 1712      5363616E 
 1712      43686169 
 1712      6E282900 
 1713              		.text
 1714 115b 0F1F4400 		.p2align 4
 1714      00
 1715              		.globl	jtagScanChain
 1717              	jtagScanChain:
 1718              	.LFB53:
 1719              		.cfi_startproc
 1720 1160 F30F1EFA 		endbr64
 1721 1164 4157     		pushq	%r15
 1722              		.cfi_def_cfa_offset 16
 1723              		.cfi_offset 15, -16
 1724 1166 4156     		pushq	%r14
 1725              		.cfi_def_cfa_offset 24
 1726              		.cfi_offset 14, -24
 1727 1168 4989FE   		movq	%rdi, %r14
 1728 116b 4155     		pushq	%r13
 1729              		.cfi_def_cfa_offset 32
 1730              		.cfi_offset 13, -32
 1731 116d 4154     		pushq	%r12
 1732              		.cfi_def_cfa_offset 40
 1733              		.cfi_offset 12, -40
 1734 116f 4D89CC   		movq	%r9, %r12
 1735 1172 55       		pushq	%rbp
 1736              		.cfi_def_cfa_offset 48
 1737              		.cfi_offset 6, -48
 1738 1173 4489C5   		movl	%r8d, %ebp
 1739 1176 53       		pushq	%rbx
 1740              		.cfi_def_cfa_offset 56
 1741              		.cfi_offset 3, -56
 1742 1177 4889CB   		movq	%rcx, %rbx
 1743 117a 4C89C9   		movq	%r9, %rcx
 1744 117d 4883EC28 		subq	$40, %rsp
 1745              		.cfi_def_cfa_offset 96
 1746 1181 48895424 		movq	%rdx, 8(%rsp)
 1746      08
 1747 1186 4889F2   		movq	%rsi, %rdx
 1748 1189 64488B04 		movq	%fs:40, %rax
 1748      25280000 
 1748      00
 1749 1192 48894424 		movq	%rax, 24(%rsp)
 1749      18
 1750 1197 31C0     		xorl	%eax, %eax
 1751 1199 E8A2F8FF 		call	progOpenInternal
 1751      FF
 1752 119e 85C0     		testl	%eax, %eax
 1753 11a0 756F     		jne	.L265
 1754 11a2 4C89E1   		movq	%r12, %rcx
 1755 11a5 BA090000 		movl	$9, %edx
 1755      00
 1756 11aa BE5F0000 		movl	$95, %esi
 1756      00
 1757 11af 4C89F7   		movq	%r14, %rdi
 1758 11b2 E8000000 		call	jtagClockFSM@PLT
 1758      00
 1759 11b7 4C8D6C24 		leaq	20(%rsp), %r13
 1759      14
 1760 11bc 4189C7   		movl	%eax, %r15d
 1761 11bf 4585FF   		testl	%r15d, %r15d
 1762 11c2 7431     		je	.L223
 1763 11c4 E9070200 		jmp	.L266
 1763      00
 1764 11c9 0F1F8000 		.p2align 4,,10
 1764      000000
 1765              		.p2align 3
 1766              	.L224:
 1767 11d0 8B442414 		movl	20(%rsp), %eax
 1768 11d4 4885DB   		testq	%rbx, %rbx
 1769 11d7 0F95C1   		setne	%cl
 1770 11da 8D50FF   		leal	-1(%rax), %edx
 1771 11dd 83FAFD   		cmpl	$-3, %edx
 1772 11e0 776E     		ja	.L225
 1773 11e2 4139EF   		cmpl	%ebp, %r15d
 1774 11e5 730A     		jnb	.L226
 1775 11e7 84C9     		testb	%cl, %cl
 1776 11e9 7406     		je	.L226
 1777 11eb 4489FA   		movl	%r15d, %edx
 1778 11ee 890493   		movl	%eax, (%rbx,%rdx,4)
 1779              	.L226:
 1780 11f1 4183C701 		addl	$1, %r15d
 1781              	.L223:
 1782 11f5 4531C0   		xorl	%r8d, %r8d
 1783 11f8 31D2     		xorl	%edx, %edx
 1784 11fa 4D89E1   		movq	%r12, %r9
 1785 11fd 4C89E9   		movq	%r13, %rcx
 1786 1200 BE200000 		movl	$32, %esi
 1786      00
 1787 1205 4C89F7   		movq	%r14, %rdi
 1788 1208 E8000000 		call	jtagShiftInOut@PLT
 1788      00
 1789 120d 85C0     		testl	%eax, %eax
 1790 120f 74BF     		je	.L224
 1791              	.L265:
 1792 1211 488D3500 		leaq	.LC21(%rip), %rsi
 1792      000000
 1793 1218 4C89E7   		movq	%r12, %rdi
 1794 121b 89442408 		movl	%eax, 8(%rsp)
 1795 121f E8000000 		call	errPrefix@PLT
 1795      00
 1796 1224 8B442408 		movl	8(%rsp), %eax
 1797              	.L222:
 1798              	.L220:
 1799 1228 488B5424 		movq	24(%rsp), %rdx
 1799      18
 1800 122d 64482B14 		subq	%fs:40, %rdx
 1800      25280000 
 1800      00
 1801 1236 0F85B201 		jne	.L267
 1801      0000
 1802 123c 4883C428 		addq	$40, %rsp
 1803              		.cfi_remember_state
 1804              		.cfi_def_cfa_offset 56
 1805 1240 5B       		popq	%rbx
 1806              		.cfi_def_cfa_offset 48
 1807 1241 5D       		popq	%rbp
 1808              		.cfi_def_cfa_offset 40
 1809 1242 415C     		popq	%r12
 1810              		.cfi_def_cfa_offset 32
 1811 1244 415D     		popq	%r13
 1812              		.cfi_def_cfa_offset 24
 1813 1246 415E     		popq	%r14
 1814              		.cfi_def_cfa_offset 16
 1815 1248 415F     		popq	%r15
 1816              		.cfi_def_cfa_offset 8
 1817 124a C3       		ret
 1818 124b 0F1F4400 		.p2align 4,,10
 1818      00
 1819              		.p2align 3
 1820              	.L225:
 1821              		.cfi_restore_state
 1822 1250 4585FF   		testl	%r15d, %r15d
 1823 1253 0F842901 		je	.L231
 1823      0000
 1824 1259 84C9     		testb	%cl, %cl
 1825 125b 0F842101 		je	.L231
 1825      0000
 1826 1261 4139EF   		cmpl	%ebp, %r15d
 1827 1264 89E8     		movl	%ebp, %eax
 1828 1266 490F46C7 		cmovbe	%r15, %rax
 1829 126a 48C1E002 		salq	$2, %rax
 1830 126e 4C8D40FC 		leaq	-4(%rax), %r8
 1831 1272 4A8D3403 		leaq	(%rbx,%r8), %rsi
 1832 1276 4839F3   		cmpq	%rsi, %rbx
 1833 1279 0F830301 		jnb	.L231
 1833      0000
 1834 127f 488D48FB 		leaq	-5(%rax), %rcx
 1835 1283 4889DA   		movq	%rbx, %rdx
 1836 1286 4989CB   		movq	%rcx, %r11
 1837 1289 49C1EB03 		shrq	$3, %r11
 1838 128d 4C89DF   		movq	%r11, %rdi
 1839 1290 4D8D5301 		leaq	1(%r11), %r10
 1840 1294 48F7DF   		negq	%rdi
 1841 1297 4A8D2C95 		leaq	0(,%r10,4), %rbp
 1841      00000000 
 1842 129f 4D8D04B8 		leaq	(%r8,%rdi,4), %r8
 1843 12a3 4C39C5   		cmpq	%r8, %rbp
 1844 12a6 410F9EC0 		setle	%r8b
 1845 12aa 4885C0   		testq	%rax, %rax
 1846 12ad 400F9EC5 		setle	%bpl
 1847 12b1 4108E8   		orb	%bpl, %r8b
 1848 12b4 0F84F600 		je	.L253
 1848      0000
 1849 12ba 4883F907 		cmpq	$7, %rcx
 1850 12be 0F86EC00 		jbe	.L253
 1850      0000
 1851 12c4 4883F917 		cmpq	$23, %rcx
 1852 12c8 0F861901 		jbe	.L241
 1852      0000
 1853 12ce 4D89D0   		movq	%r10, %r8
 1854 12d1 488D4C03 		leaq	-16(%rbx,%rax), %rcx
 1854      F0
 1855 12d6 49C1E802 		shrq	$2, %r8
 1856 12da 49C1E004 		salq	$4, %r8
 1857 12de 4901D8   		addq	%rbx, %r8
 1858              		.p2align 4,,10
 1859 12e1 0F1F8000 		.p2align 3
 1859      000000
 1860              	.L234:
 1861 12e8 F30F6F11 		movdqu	(%rcx), %xmm2
 1862 12ec F30F6F02 		movdqu	(%rdx), %xmm0
 1863 12f0 4883C210 		addq	$16, %rdx
 1864 12f4 4883E910 		subq	$16, %rcx
 1865 12f8 660F70CA 		pshufd	$27, %xmm2, %xmm1
 1865      1B
 1866 12fd 660F70C0 		pshufd	$27, %xmm0, %xmm0
 1866      1B
 1867 1302 0F114AF0 		movups	%xmm1, -16(%rdx)
 1868 1306 0F114110 		movups	%xmm0, 16(%rcx)
 1869 130a 4939D0   		cmpq	%rdx, %r8
 1870 130d 75D9     		jne	.L234
 1871 130f 4C89D1   		movq	%r10, %rcx
 1872 1312 4883E1FC 		andq	$-4, %rcx
 1873 1316 4C8D048D 		leaq	0(,%rcx,4), %r8
 1873      00000000 
 1874 131e 4A8D1403 		leaq	(%rbx,%r8), %rdx
 1875 1322 4C29C6   		subq	%r8, %rsi
 1876 1325 4939CA   		cmpq	%rcx, %r10
 1877 1328 7458     		je	.L231
 1878              	.L233:
 1879 132a 4929CA   		subq	%rcx, %r10
 1880 132d 4939CB   		cmpq	%rcx, %r11
 1881 1330 7448     		je	.L237
 1882 1332 48C1E102 		salq	$2, %rcx
 1883 1336 4883E808 		subq	$8, %rax
 1884 133a 4829C8   		subq	%rcx, %rax
 1885 133d 4C8D040B 		leaq	(%rbx,%rcx), %r8
 1886 1341 4801C3   		addq	%rax, %rbx
 1887 1344 F3410F7E 		movq	(%r8), %xmm0
 1887      00
 1888 1349 4C89D0   		movq	%r10, %rax
 1889 134c F30F7E0B 		movq	(%rbx), %xmm1
 1890 1350 4883E0FE 		andq	$-2, %rax
 1891 1354 488D0C85 		leaq	0(,%rax,4), %rcx
 1891      00000000 
 1892 135c 660F70C0 		pshufd	$225, %xmm0, %xmm0
 1892      E1
 1893 1361 660F70C9 		pshufd	$225, %xmm1, %xmm1
 1893      E1
 1894 1366 4801CA   		addq	%rcx, %rdx
 1895 1369 4829CE   		subq	%rcx, %rsi
 1896 136c 66410FD6 		movq	%xmm1, (%r8)
 1896      08
 1897 1371 660FD603 		movq	%xmm0, (%rbx)
 1898 1375 4939C2   		cmpq	%rax, %r10
 1899 1378 7408     		je	.L231
 1900              	.L237:
 1901 137a 8B02     		movl	(%rdx), %eax
 1902 137c 8B0E     		movl	(%rsi), %ecx
 1903 137e 890A     		movl	%ecx, (%rdx)
 1904 1380 8906     		movl	%eax, (%rsi)
 1905              	.L231:
 1906 1382 48837C24 		cmpq	$0, 8(%rsp)
 1906      0800
 1907 1388 7408     		je	.L230
 1908 138a 488B4424 		movq	8(%rsp), %rax
 1908      08
 1909 138f 448938   		movl	%r15d, (%rax)
 1910              	.L230:
 1911 1392 4C89E6   		movq	%r12, %rsi
 1912 1395 4C89F7   		movq	%r14, %rdi
 1913 1398 E8000000 		call	progClose@PLT
 1913      00
 1914 139d 85C0     		testl	%eax, %eax
 1915 139f 0F8483FE 		je	.L220
 1915      FFFF
 1916 13a5 E967FEFF 		jmp	.L265
 1916      FF
 1917 13aa 660F1F44 		.p2align 4,,10
 1917      0000
 1918              		.p2align 3
 1919              	.L253:
 1920 13b0 8B03     		movl	(%rbx), %eax
 1921 13b2 8B16     		movl	(%rsi), %edx
 1922 13b4 4883C304 		addq	$4, %rbx
 1923 13b8 4883EE04 		subq	$4, %rsi
 1924 13bc 8953FC   		movl	%edx, -4(%rbx)
 1925 13bf 894604   		movl	%eax, 4(%rsi)
 1926 13c2 4839F3   		cmpq	%rsi, %rbx
 1927 13c5 72E9     		jb	.L253
 1928 13c7 EBB9     		jmp	.L231
 1929 13c9 0F1F8000 		.p2align 4,,10
 1929      000000
 1930              		.p2align 3
 1931              	.L266:
 1932 13d0 488D3500 		leaq	.LC21(%rip), %rsi
 1932      000000
 1933 13d7 4C89E7   		movq	%r12, %rdi
 1934 13da E8000000 		call	errPrefix@PLT
 1934      00
 1935 13df 4489F8   		movl	%r15d, %eax
 1936 13e2 E941FEFF 		jmp	.L220
 1936      FF
 1937              	.L241:
 1938 13e7 31C9     		xorl	%ecx, %ecx
 1939 13e9 E93CFFFF 		jmp	.L233
 1939      FF
 1940              	.L267:
 1941 13ee E8000000 		call	__stack_chk_fail@PLT
 1941      00
 1942              		.cfi_endproc
 1943              	.LFE53:
 1945              		.section	.rodata.str1.8
 1946 031c 00000000 		.align 8
 1947              	.LC22:
 1948 0320 7850726F 		.string	"xProgram(): Unexpected end of config string:\n  %s\n  %s^"
 1948      6772616D 
 1948      28293A20 
 1948      556E6578 
 1948      70656374 
 1949              		.align 8
 1950              	.LC23:
 1951 0358 7850726F 		.string	"xProgram(): Expecting ':':\n  %s\n  %s^"
 1951      6772616D 
 1951      28293A20 
 1951      45787065 
 1951      6374696E 
 1952 037e 0000     		.align 8
 1953              	.LC24:
 1954 0380 7850726F 		.string	"xProgram(): Port is not valid (try 'A', 'B', 'C', etc):\n  %s\n  %s^"
 1954      6772616D 
 1954      28293A20 
 1954      506F7274 
 1954      20697320 
 1955 03c3 00000000 		.align 8
 1955      00
 1956              	.LC25:
 1957 03c8 7850726F 		.string	"xProgram(): Bit number is not valid:\n  %s\n  %s^"
 1957      6772616D 
 1957      28293A20 
 1957      42697420 
 1957      6E756D62 
 1958              		.align 8
 1959              	.LC26:
 1960 03f8 7850726F 		.string	"xProgram(): port '%c%d' is already used:\n  %s\n  %s^"
 1960      6772616D 
 1960      28293A20 
 1960      706F7274 
 1960      20272563 
 1961 042c 00000000 		.align 8
 1962              	.LC27:
 1963 0430 7850726F 		.string	"xProgram(): Bit '%c' is not valid at char %d"
 1963      6772616D 
 1963      28293A20 
 1963      42697420 
 1963      27256327 
 1964              		.section	.rodata.str1.1
 1965              	.LC28:
 1966 00a4 7850726F 		.string	"xProgram()"
 1966      6772616D 
 1966      282900
 1967              		.section	.rodata.str1.8
 1968 045d 000000   		.align 8
 1969              	.LC29:
 1970 0460 7850726F 		.string	"xProgram(): Expecting ']':\n  %s\n  %s^"
 1970      6772616D 
 1970      28293A20 
 1970      45787065 
 1970      6374696E 
 1971 0486 0000     		.align 8
 1972              	.LC30:
 1973 0488 7850726F 		.string	"xProgram(): Expecting ':' or end-of-string:\n  %s\n  %s^"
 1973      6772616D 
 1973      28293A20 
 1973      45787065 
 1973      6374696E 
 1974 04bf 00       		.align 8
 1975              	.LC31:
 1976 04c0 7850726F 		.string	"xProgram(): DONE did not assert"
 1976      6772616D 
 1976      28293A20 
 1976      444F4E45 
 1976      20646964 
 1977              		.align 8
 1978              	.LC32:
 1979 04e0 7850726F 		.string	"xProgram(): INIT unexpectedly low (CRC error during config)"
 1979      6772616D 
 1979      28293A20 
 1979      494E4954 
 1979      20756E65 
 1980              		.text
 1981 13f3 66662E0F 		.p2align 4
 1981      1F840000 
 1981      00000066 
 1981      90
 1983              	xProgram:
 1984              	.LFB42:
 1985              		.cfi_startproc
 1986 1400 4157     		pushq	%r15
 1987              		.cfi_def_cfa_offset 16
 1988              		.cfi_offset 15, -16
 1989 1402 660FEFC0 		pxor	%xmm0, %xmm0
 1990 1406 4156     		pushq	%r14
 1991              		.cfi_def_cfa_offset 24
 1992              		.cfi_offset 14, -24
 1993 1408 4989D6   		movq	%rdx, %r14
 1994 140b 4155     		pushq	%r13
 1995              		.cfi_def_cfa_offset 32
 1996              		.cfi_offset 13, -32
 1997 140d 4154     		pushq	%r12
 1998              		.cfi_def_cfa_offset 40
 1999              		.cfi_offset 12, -40
 2000 140f 55       		pushq	%rbp
 2001              		.cfi_def_cfa_offset 48
 2002              		.cfi_offset 6, -48
 2003 1410 4C89CD   		movq	%r9, %rbp
 2004 1413 53       		pushq	%rbx
 2005              		.cfi_def_cfa_offset 56
 2006              		.cfi_offset 3, -56
 2007 1414 4889FB   		movq	%rdi, %rbx
 2008 1417 4881ECF8 		subq	$3832, %rsp
 2008      0E0000
 2009              		.cfi_def_cfa_offset 3888
 2010 141e 48890C24 		movq	%rcx, (%rsp)
 2011 1422 4C8DAC24 		leaq	144(%rsp), %r13
 2011      90000000 
 2012 142a B9A00100 		movl	$416, %ecx
 2012      00
 2013 142f 44894424 		movl	%r8d, 8(%rsp)
 2013      08
 2014 1434 4C89EF   		movq	%r13, %rdi
 2015 1437 64488B04 		movq	%fs:40, %rax
 2015      25280000 
 2015      00
 2016 1440 48898424 		movq	%rax, 3816(%rsp)
 2016      E80E0000 
 2017 1448 31C0     		xorl	%eax, %eax
 2018 144a 488D4202 		leaq	2(%rdx), %rax
 2019 144e 0F298424 		movaps	%xmm0, 3488(%rsp)
 2019      A00D0000 
 2020 1456 48898424 		movq	%rax, 136(%rsp)
 2020      88000000 
 2021 145e 31C0     		xorl	%eax, %eax
 2022 1460 F348AB   		rep stosq
 2023 1463 0FB64202 		movzbl	2(%rdx), %eax
 2024 1467 0F298424 		movaps	%xmm0, 3504(%rsp)
 2024      B00D0000 
 2025 146f 488D0D00 		leaq	254+.LC0(%rip), %rcx
 2025      000000
 2026 1476 0F298424 		movaps	%xmm0, 3520(%rsp)
 2026      C00D0000 
 2027 147e 0F298424 		movaps	%xmm0, 3536(%rsp)
 2027      D00D0000 
 2028 1486 84C0     		testb	%al, %al
 2029 1488 0F84E107 		je	.L396
 2029      0000
 2030 148e 3C3A     		cmpb	$58, %al
 2031 1490 0F85FA07 		jne	.L410
 2031      0000
 2032 1496 0FB64A03 		movzbl	3(%rdx), %ecx
 2033 149a 488D4203 		leaq	3(%rdx), %rax
 2034 149e 48898424 		movq	%rax, 136(%rsp)
 2034      88000000 
 2035 14a6 84C9     		testb	%cl, %cl
 2036 14a8 0F841A08 		je	.L411
 2036      0000
 2037 14ae 83E941   		subl	$65, %ecx
 2038 14b1 80F919   		cmpb	$25, %cl
 2039 14b4 0F871E07 		ja	.L412
 2039      0000
 2040 14ba 0FB64204 		movzbl	4(%rdx), %eax
 2041 14be 488D7A04 		leaq	4(%rdx), %rdi
 2042 14c2 4889BC24 		movq	%rdi, 136(%rsp)
 2042      88000000 
 2043 14ca 84C0     		testb	%al, %al
 2044 14cc 0F849607 		je	.L413
 2044      0000
 2045 14d2 83E830   		subl	$48, %eax
 2046 14d5 3C09     		cmpb	$9, %al
 2047 14d7 0F87DB07 		ja	.L414
 2047      0000
 2048 14dd 4C8DBC24 		leaq	136(%rsp), %r15
 2048      88000000 
 2049 14e5 BA0A0000 		movl	$10, %edx
 2049      00
 2050 14ea 4189F4   		movl	%esi, %r12d
 2051 14ed 884C2414 		movb	%cl, 20(%rsp)
 2052 14f1 4C89FE   		movq	%r15, %rsi
 2053 14f4 E8000000 		call	strtoul@PLT
 2053      00
 2054 14f9 0FB67424 		movzbl	20(%rsp), %esi
 2054      14
 2055 14fe 0FB6D0   		movzbl	%al, %edx
 2056 1501 89F1     		movl	%esi, %ecx
 2057 1503 89742418 		movl	%esi, 24(%rsp)
 2058 1507 0FB6F0   		movzbl	%al, %esi
 2059 150a 0FB6C1   		movzbl	%cl, %eax
 2060 150d 8974241C 		movl	%esi, 28(%rsp)
 2061 1511 48894424 		movq	%rax, 32(%rsp)
 2061      20
 2062 1516 48C1E005 		salq	$5, %rax
 2063 151a 4801D0   		addq	%rdx, %rax
 2064 151d 48895424 		movq	%rdx, 40(%rsp)
 2064      28
 2065 1522 C7848490 		movl	$2, 144(%rsp,%rax,4)
 2065      00000002 
 2065      000000
 2066 152d 488B8424 		movq	136(%rsp), %rax
 2066      88000000 
 2067 1535 0FB608   		movzbl	(%rax), %ecx
 2068 1538 84C9     		testb	%cl, %cl
 2069 153a 0F84B007 		je	.L404
 2069      0000
 2070 1540 83E941   		subl	$65, %ecx
 2071 1543 80F919   		cmpb	$25, %cl
 2072 1546 0F87C407 		ja	.L405
 2072      0000
 2073 154c 488D7801 		leaq	1(%rax), %rdi
 2074 1550 4889BC24 		movq	%rdi, 136(%rsp)
 2074      88000000 
 2075 1558 0FB64001 		movzbl	1(%rax), %eax
 2076 155c 84C0     		testb	%al, %al
 2077 155e 0F84CC07 		je	.L409
 2077      0000
 2078 1564 83E830   		subl	$48, %eax
 2079 1567 3C09     		cmpb	$9, %al
 2080 1569 0F87C106 		ja	.L407
 2080      0000
 2081 156f BA0A0000 		movl	$10, %edx
 2081      00
 2082 1574 4C89FE   		movq	%r15, %rsi
 2083 1577 884C2414 		movb	%cl, 20(%rsp)
 2084 157b E8000000 		call	strtoul@PLT
 2084      00
 2085 1580 0FB67424 		movzbl	20(%rsp), %esi
 2085      14
 2086 1585 0FB6D0   		movzbl	%al, %edx
 2087 1588 89542440 		movl	%edx, 64(%rsp)
 2088 158c 0FB6D0   		movzbl	%al, %edx
 2089 158f 400FB6C6 		movzbl	%sil, %eax
 2090 1593 48894424 		movq	%rax, 48(%rsp)
 2090      30
 2091 1598 48C1E005 		salq	$5, %rax
 2092 159c 4801D0   		addq	%rdx, %rax
 2093 159f 89742414 		movl	%esi, 20(%rsp)
 2094 15a3 448B8C84 		movl	144(%rsp,%rax,4), %r9d
 2094      90000000 
 2095 15ab 48895424 		movq	%rdx, 56(%rsp)
 2095      38
 2096 15b0 4585C9   		testl	%r9d, %r9d
 2097 15b3 0F858707 		jne	.L415
 2097      0000
 2098 15b9 C7848490 		movl	$3, 144(%rsp,%rax,4)
 2098      00000003 
 2098      000000
 2099 15c4 488B8424 		movq	136(%rsp), %rax
 2099      88000000 
 2100 15cc 0FB608   		movzbl	(%rax), %ecx
 2101 15cf 84C9     		testb	%cl, %cl
 2102 15d1 0F841907 		je	.L404
 2102      0000
 2103 15d7 83E941   		subl	$65, %ecx
 2104 15da 80F919   		cmpb	$25, %cl
 2105 15dd 0F872D07 		ja	.L405
 2105      0000
 2106 15e3 488D7801 		leaq	1(%rax), %rdi
 2107 15e7 4889BC24 		movq	%rdi, 136(%rsp)
 2107      88000000 
 2108 15ef 0FB64001 		movzbl	1(%rax), %eax
 2109 15f3 84C0     		testb	%al, %al
 2110 15f5 0F843507 		je	.L409
 2110      0000
 2111 15fb 83E830   		subl	$48, %eax
 2112 15fe 3C09     		cmpb	$9, %al
 2113 1600 0F872A06 		ja	.L407
 2113      0000
 2114 1606 BA0A0000 		movl	$10, %edx
 2114      00
 2115 160b 4C89FE   		movq	%r15, %rsi
 2116 160e 884C2444 		movb	%cl, 68(%rsp)
 2117 1612 E8000000 		call	strtoul@PLT
 2117      00
 2118 1617 0FB65424 		movzbl	68(%rsp), %edx
 2118      44
 2119 161c 0FB6F0   		movzbl	%al, %esi
 2120 161f 89742468 		movl	%esi, 104(%rsp)
 2121 1623 0FB6F0   		movzbl	%al, %esi
 2122 1626 0FB6C2   		movzbl	%dl, %eax
 2123 1629 48894424 		movq	%rax, 72(%rsp)
 2123      48
 2124 162e 48C1E005 		salq	$5, %rax
 2125 1632 4801F0   		addq	%rsi, %rax
 2126 1635 89542444 		movl	%edx, 68(%rsp)
 2127 1639 448B8484 		movl	144(%rsp,%rax,4), %r8d
 2127      90000000 
 2128 1641 48897424 		movq	%rsi, 80(%rsp)
 2128      50
 2129 1646 4585C0   		testl	%r8d, %r8d
 2130 1649 0F85E607 		jne	.L416
 2130      0000
 2131 164f C7848490 		movl	$3, 144(%rsp,%rax,4)
 2131      00000003 
 2131      000000
 2132 165a 488B8424 		movq	136(%rsp), %rax
 2132      88000000 
 2133 1662 0FB610   		movzbl	(%rax), %edx
 2134 1665 84D2     		testb	%dl, %dl
 2135 1667 0F848306 		je	.L404
 2135      0000
 2136 166d 448D4ABF 		leal	-65(%rdx), %r9d
 2137 1671 4180F919 		cmpb	$25, %r9b
 2138 1675 0F879506 		ja	.L405
 2138      0000
 2139 167b 488D7801 		leaq	1(%rax), %rdi
 2140 167f 4889BC24 		movq	%rdi, 136(%rsp)
 2140      88000000 
 2141 1687 0FB64001 		movzbl	1(%rax), %eax
 2142 168b 84C0     		testb	%al, %al
 2143 168d 0F849D06 		je	.L409
 2143      0000
 2144 1693 83E830   		subl	$48, %eax
 2145 1696 3C09     		cmpb	$9, %al
 2146 1698 0F879205 		ja	.L407
 2146      0000
 2147 169e BA0A0000 		movl	$10, %edx
 2147      00
 2148 16a3 4C89FE   		movq	%r15, %rsi
 2149 16a6 44884C24 		movb	%r9b, 88(%rsp)
 2149      58
 2150 16ab E8000000 		call	strtoul@PLT
 2150      00
 2151 16b0 0FB65424 		movzbl	88(%rsp), %edx
 2151      58
 2152 16b5 0FB6F0   		movzbl	%al, %esi
 2153 16b8 0FB6C8   		movzbl	%al, %ecx
 2154 16bb 0FB6C2   		movzbl	%dl, %eax
 2155 16be 89742460 		movl	%esi, 96(%rsp)
 2156 16c2 4189D1   		movl	%edx, %r9d
 2157 16c5 48C1E005 		salq	$5, %rax
 2158 16c9 4801C8   		addq	%rcx, %rax
 2159 16cc 8BBC8490 		movl	144(%rsp,%rax,4), %edi
 2159      000000
 2160 16d3 85FF     		testl	%edi, %edi
 2161 16d5 0F85AC07 		jne	.L417
 2161      0000
 2162 16db C7848490 		movl	$2, 144(%rsp,%rax,4)
 2162      00000002 
 2162      000000
 2163 16e6 488B8424 		movq	136(%rsp), %rax
 2163      88000000 
 2164 16ee 0FB610   		movzbl	(%rax), %edx
 2165 16f1 84D2     		testb	%dl, %dl
 2166 16f3 0F84F705 		je	.L404
 2166      0000
 2167 16f9 8D72BF   		leal	-65(%rdx), %esi
 2168 16fc 40887424 		movb	%sil, 88(%rsp)
 2168      58
 2169 1701 4080FE19 		cmpb	$25, %sil
 2170 1705 0F870506 		ja	.L405
 2170      0000
 2171 170b 488D4801 		leaq	1(%rax), %rcx
 2172 170f 48898C24 		movq	%rcx, 136(%rsp)
 2172      88000000 
 2173 1717 4183FC05 		cmpl	$5, %r12d
 2174 171b 0F856706 		jne	.L293
 2174      0000
 2175 1721 0FBE5001 		movsbl	1(%rax), %edx
 2176 1725 84D2     		testb	%dl, %dl
 2177 1727 0F84F508 		je	.L294
 2177      0000
 2178 172d 8D72D0   		leal	-48(%rdx), %esi
 2179 1730 4080FE07 		cmpb	$7, %sil
 2180 1734 0F871E09 		ja	.L295
 2180      0000
 2181 173a 440FB654 		movzbl	88(%rsp), %r10d
 2181      2458
 2182 1740 400FB6D6 		movzbl	%sil, %edx
 2183 1744 440FB6DE 		movzbl	%sil, %r11d
 2184 1748 488D4802 		leaq	2(%rax), %rcx
 2185 174c 4088B424 		movb	%sil, 3472(%rsp)
 2185      900D0000 
 2186 1754 450FB6C2 		movzbl	%r10b, %r8d
 2187 1758 48898C24 		movq	%rcx, 136(%rsp)
 2187      88000000 
 2188 1760 4C89C7   		movq	%r8, %rdi
 2189 1763 48C1E705 		salq	$5, %rdi
 2190 1767 4801FA   		addq	%rdi, %rdx
 2191 176a 8BB49490 		movl	144(%rsp,%rdx,4), %esi
 2191      000000
 2192 1771 85F6     		testl	%esi, %esi
 2193 1773 0F85BB08 		jne	.L296
 2193      0000
 2194 1779 C7849490 		movl	$2, 144(%rsp,%rdx,4)
 2194      00000002 
 2194      000000
 2195 1784 0FBE5002 		movsbl	2(%rax), %edx
 2196 1788 84D2     		testb	%dl, %dl
 2197 178a 0F849208 		je	.L294
 2197      0000
 2198 1790 8D72D0   		leal	-48(%rdx), %esi
 2199 1793 4080FE07 		cmpb	$7, %sil
 2200 1797 0F87BB08 		ja	.L295
 2200      0000
 2201 179d 4088B424 		movb	%sil, 3473(%rsp)
 2201      910D0000 
 2202 17a5 440FB6DE 		movzbl	%sil, %r11d
 2203 17a9 400FB6F6 		movzbl	%sil, %esi
 2204 17ad 488D4803 		leaq	3(%rax), %rcx
 2205 17b1 4801F7   		addq	%rsi, %rdi
 2206 17b4 48898C24 		movq	%rcx, 136(%rsp)
 2206      88000000 
 2207 17bc 8BBCBC90 		movl	144(%rsp,%rdi,4), %edi
 2207      000000
 2208 17c3 85FF     		testl	%edi, %edi
 2209 17c5 0F856908 		jne	.L296
 2209      0000
 2210 17cb 4C89C7   		movq	%r8, %rdi
 2211 17ce 0FBE5003 		movsbl	3(%rax), %edx
 2212 17d2 48C1E705 		salq	$5, %rdi
 2213 17d6 4801FE   		addq	%rdi, %rsi
 2214 17d9 C784B490 		movl	$2, 144(%rsp,%rsi,4)
 2214      00000002 
 2214      000000
 2215 17e4 84D2     		testb	%dl, %dl
 2216 17e6 0F843608 		je	.L294
 2216      0000
 2217 17ec 8D72D0   		leal	-48(%rdx), %esi
 2218 17ef 4080FE07 		cmpb	$7, %sil
 2219 17f3 0F875F08 		ja	.L295
 2219      0000
 2220 17f9 400FB6D6 		movzbl	%sil, %edx
 2221 17fd 4088B424 		movb	%sil, 3474(%rsp)
 2221      920D0000 
 2222 1805 440FB6DE 		movzbl	%sil, %r11d
 2223 1809 488D4804 		leaq	4(%rax), %rcx
 2224 180d 4801FA   		addq	%rdi, %rdx
 2225 1810 48898C24 		movq	%rcx, 136(%rsp)
 2225      88000000 
 2226 1818 8BB49490 		movl	144(%rsp,%rdx,4), %esi
 2226      000000
 2227 181f 85F6     		testl	%esi, %esi
 2228 1821 0F850D08 		jne	.L296
 2228      0000
 2229 1827 C7849490 		movl	$2, 144(%rsp,%rdx,4)
 2229      00000002 
 2229      000000
 2230 1832 0FBE5004 		movsbl	4(%rax), %edx
 2231 1836 84D2     		testb	%dl, %dl
 2232 1838 0F84E407 		je	.L294
 2232      0000
 2233 183e 8D72D0   		leal	-48(%rdx), %esi
 2234 1841 4080FE07 		cmpb	$7, %sil
 2235 1845 0F870D08 		ja	.L295
 2235      0000
 2236 184b 400FB6D6 		movzbl	%sil, %edx
 2237 184f 4088B424 		movb	%sil, 3475(%rsp)
 2237      930D0000 
 2238 1857 440FB6DE 		movzbl	%sil, %r11d
 2239 185b 488D4805 		leaq	5(%rax), %rcx
 2240 185f 4801FA   		addq	%rdi, %rdx
 2241 1862 48898C24 		movq	%rcx, 136(%rsp)
 2241      88000000 
 2242 186a 8BB49490 		movl	144(%rsp,%rdx,4), %esi
 2242      000000
 2243 1871 85F6     		testl	%esi, %esi
 2244 1873 0F85BB07 		jne	.L296
 2244      0000
 2245 1879 C7849490 		movl	$2, 144(%rsp,%rdx,4)
 2245      00000002 
 2245      000000
 2246 1884 0FBE5005 		movsbl	5(%rax), %edx
 2247 1888 84D2     		testb	%dl, %dl
 2248 188a 0F849207 		je	.L294
 2248      0000
 2249 1890 8D72D0   		leal	-48(%rdx), %esi
 2250 1893 4080FE07 		cmpb	$7, %sil
 2251 1897 0F87BB07 		ja	.L295
 2251      0000
 2252 189d 4088B424 		movb	%sil, 3476(%rsp)
 2252      940D0000 
 2253 18a5 440FB6DE 		movzbl	%sil, %r11d
 2254 18a9 400FB6F6 		movzbl	%sil, %esi
 2255 18ad 488D4806 		leaq	6(%rax), %rcx
 2256 18b1 4801F7   		addq	%rsi, %rdi
 2257 18b4 48898C24 		movq	%rcx, 136(%rsp)
 2257      88000000 
 2258 18bc 8B94BC90 		movl	144(%rsp,%rdi,4), %edx
 2258      000000
 2259 18c3 85D2     		testl	%edx, %edx
 2260 18c5 0F856907 		jne	.L296
 2260      0000
 2261 18cb C784BC90 		movl	$2, 144(%rsp,%rdi,4)
 2261      00000002 
 2261      000000
 2262 18d6 0FBE5006 		movsbl	6(%rax), %edx
 2263 18da 84D2     		testb	%dl, %dl
 2264 18dc 0F844007 		je	.L294
 2264      0000
 2265 18e2 8D72D0   		leal	-48(%rdx), %esi
 2266 18e5 4080FE07 		cmpb	$7, %sil
 2267 18e9 0F876907 		ja	.L295
 2267      0000
 2268 18ef 4C89C7   		movq	%r8, %rdi
 2269 18f2 4088B424 		movb	%sil, 3477(%rsp)
 2269      950D0000 
 2270 18fa 440FB6DE 		movzbl	%sil, %r11d
 2271 18fe 400FB6F6 		movzbl	%sil, %esi
 2272 1902 48C1E705 		salq	$5, %rdi
 2273 1906 488D4807 		leaq	7(%rax), %rcx
 2274 190a 4801FE   		addq	%rdi, %rsi
 2275 190d 48898C24 		movq	%rcx, 136(%rsp)
 2275      88000000 
 2276 1915 448B84B4 		movl	144(%rsp,%rsi,4), %r8d
 2276      90000000 
 2277 191d 4585C0   		testl	%r8d, %r8d
 2278 1920 0F850E07 		jne	.L296
 2278      0000
 2279 1926 C784B490 		movl	$2, 144(%rsp,%rsi,4)
 2279      00000002 
 2279      000000
 2280 1931 0FBE5007 		movsbl	7(%rax), %edx
 2281 1935 84D2     		testb	%dl, %dl
 2282 1937 0F84E506 		je	.L294
 2282      0000
 2283 193d 8D72D0   		leal	-48(%rdx), %esi
 2284 1940 4080FE07 		cmpb	$7, %sil
 2285 1944 0F870E07 		ja	.L295
 2285      0000
 2286 194a 400FB6D6 		movzbl	%sil, %edx
 2287 194e 4088B424 		movb	%sil, 3478(%rsp)
 2287      960D0000 
 2288 1956 440FB6DE 		movzbl	%sil, %r11d
 2289 195a 488D4808 		leaq	8(%rax), %rcx
 2290 195e 4801FA   		addq	%rdi, %rdx
 2291 1961 48898C24 		movq	%rcx, 136(%rsp)
 2291      88000000 
 2292 1969 8BB49490 		movl	144(%rsp,%rdx,4), %esi
 2292      000000
 2293 1970 85F6     		testl	%esi, %esi
 2294 1972 0F85BC06 		jne	.L296
 2294      0000
 2295 1978 C7849490 		movl	$2, 144(%rsp,%rdx,4)
 2295      00000002 
 2295      000000
 2296 1983 0FBE5008 		movsbl	8(%rax), %edx
 2297 1987 84D2     		testb	%dl, %dl
 2298 1989 0F849306 		je	.L294
 2298      0000
 2299 198f 8D72D0   		leal	-48(%rdx), %esi
 2300 1992 4080FE07 		cmpb	$7, %sil
 2301 1996 0F87BC06 		ja	.L295
 2301      0000
 2302 199c 4088B424 		movb	%sil, 3479(%rsp)
 2302      970D0000 
 2303 19a4 440FB6DE 		movzbl	%sil, %r11d
 2304 19a8 400FB6F6 		movzbl	%sil, %esi
 2305 19ac 488D4809 		leaq	9(%rax), %rcx
 2306 19b0 4801F7   		addq	%rsi, %rdi
 2307 19b3 48898C24 		movq	%rcx, 136(%rsp)
 2307      88000000 
 2308 19bb 8B84BC90 		movl	144(%rsp,%rdi,4), %eax
 2308      000000
 2309 19c2 85C0     		testl	%eax, %eax
 2310 19c4 0F856A06 		jne	.L296
 2310      0000
 2311 19ca 488D8424 		leaq	3552(%rsp), %rax
 2311      E00D0000 
 2312 19d2 44884C24 		movb	%r9b, 108(%rsp)
 2312      6C
 2313 19d7 C784BC90 		movl	$2, 144(%rsp,%rdi,4)
 2313      00000002 
 2313      000000
 2314 19e2 4889C6   		movq	%rax, %rsi
 2315 19e5 488DBC24 		leaq	3472(%rsp), %rdi
 2315      900D0000 
 2316 19ed 48894424 		movq	%rax, 112(%rsp)
 2316      70
 2317 19f2 E809E6FF 		call	makeLookup
 2317      FF
 2318 19f7 440FB64C 		movzbl	108(%rsp), %r9d
 2318      246C
 2319              	.L300:
 2320 19fd 488B9424 		movq	136(%rsp), %rdx
 2320      88000000 
 2321 1a05 0FB602   		movzbl	(%rdx), %eax
 2322 1a08 84C0     		testb	%al, %al
 2323 1a0a 0F840006 		je	.L418
 2323      0000
 2324 1a10 3C5B     		cmpb	$91, %al
 2325 1a12 0F841D05 		je	.L419
 2325      0000
 2326              	.L306:
 2327 1a18 84C0     		testb	%al, %al
 2328 1a1a 7408     		je	.L310
 2329 1a1c 3C3A     		cmpb	$58, %al
 2330 1a1e 0F857105 		jne	.L420
 2330      0000
 2331              	.L310:
 2332 1a24 55       		pushq	%rbp
 2333              		.cfi_def_cfa_offset 3896
 2334 1a25 41C1E108 		sall	$8, %r9d
 2335 1a29 488B3B   		movq	(%rbx), %rdi
 2336 1a2c 4531C0   		xorl	%r8d, %r8d
 2337 1a2f 68E80300 		pushq	$1000
 2337      00
 2338              		.cfi_def_cfa_offset 3904
 2339 1a34 4183C904 		orl	$4, %r9d
 2340 1a38 8B542470 		movl	112(%rsp), %edx
 2341 1a3c BE860000 		movl	$134, %esi
 2341      00
 2342 1a41 410FB7C9 		movzwl	%r9w, %ecx
 2343 1a45 4531C9   		xorl	%r9d, %r9d
 2344 1a48 E8000000 		call	usbControlWrite@PLT
 2344      00
 2345 1a4d 4158     		popq	%r8
 2346              		.cfi_def_cfa_offset 3896
 2347 1a4f 4159     		popq	%r9
 2348              		.cfi_def_cfa_offset 3888
 2349 1a51 85C0     		testl	%eax, %eax
 2350 1a53 0F850504 		jne	.L311
 2350      0000
 2351 1a59 0FB74424 		movzwl	88(%rsp), %eax
 2351      58
 2352 1a5e 488B3B   		movq	(%rbx), %rdi
 2353 1a61 C1E008   		sall	$8, %eax
 2354 1a64 4183FC05 		cmpl	$5, %r12d
 2355 1a68 0F845B05 		je	.L421
 2355      0000
 2356 1a6e 0FB69424 		movzbl	3472(%rsp), %edx
 2356      900D0000 
 2357 1a76 55       		pushq	%rbp
 2358              		.cfi_def_cfa_offset 3896
 2359 1a77 83C802   		orl	$2, %eax
 2360 1a7a 4531C9   		xorl	%r9d, %r9d
 2361 1a7d 68E80300 		pushq	$1000
 2361      00
 2362              		.cfi_def_cfa_offset 3904
 2363 1a82 0FB7C8   		movzwl	%ax, %ecx
 2364 1a85 4531C0   		xorl	%r8d, %r8d
 2365              	.L395:
 2366 1a88 BE860000 		movl	$134, %esi
 2366      00
 2367 1a8d E8000000 		call	usbControlWrite@PLT
 2367      00
 2368 1a92 5E       		popq	%rsi
 2369              		.cfi_def_cfa_offset 3896
 2370 1a93 5F       		popq	%rdi
 2371              		.cfi_def_cfa_offset 3888
 2372 1a94 85C0     		testl	%eax, %eax
 2373 1a96 0F85C203 		jne	.L311
 2373      0000
 2374 1a9c 55       		pushq	%rbp
 2375              		.cfi_def_cfa_offset 3896
 2376 1a9d 488B3B   		movq	(%rbx), %rdi
 2377 1aa0 31C9     		xorl	%ecx, %ecx
 2378 1aa2 31D2     		xorl	%edx, %edx
 2379 1aa4 68E80300 		pushq	$1000
 2379      00
 2380              		.cfi_def_cfa_offset 3904
 2381 1aa9 4531C9   		xorl	%r9d, %r9d
 2382 1aac 4531C0   		xorl	%r8d, %r8d
 2383 1aaf BE860000 		movl	$134, %esi
 2383      00
 2384 1ab4 E8000000 		call	usbControlWrite@PLT
 2384      00
 2385 1ab9 5A       		popq	%rdx
 2386              		.cfi_def_cfa_offset 3896
 2387 1aba 59       		popq	%rcx
 2388              		.cfi_def_cfa_offset 3888
 2389 1abb 85C0     		testl	%eax, %eax
 2390 1abd 0F859B03 		jne	.L311
 2390      0000
 2391 1ac3 8B542440 		movl	64(%rsp), %edx
 2392 1ac7 8B742414 		movl	20(%rsp), %esi
 2393 1acb 4989E9   		movq	%rbp, %r9
 2394 1ace 4531C0   		xorl	%r8d, %r8d
 2395 1ad1 B9030000 		movl	$3, %ecx
 2395      00
 2396 1ad6 4889DF   		movq	%rbx, %rdi
 2397 1ad9 E8000000 		call	flSingleBitPortAccess@PLT
 2397      00
 2398 1ade 4189C7   		movl	%eax, %r15d
 2399 1ae1 85C0     		testl	%eax, %eax
 2400 1ae3 0F853804 		jne	.L400
 2400      0000
 2401 1ae9 8B542468 		movl	104(%rsp), %edx
 2402 1aed 8B742444 		movl	68(%rsp), %esi
 2403 1af1 4989E9   		movq	%rbp, %r9
 2404 1af4 4531C0   		xorl	%r8d, %r8d
 2405 1af7 B9030000 		movl	$3, %ecx
 2405      00
 2406 1afc 4889DF   		movq	%rbx, %rdi
 2407 1aff E8000000 		call	flSingleBitPortAccess@PLT
 2407      00
 2408 1b04 4189C7   		movl	%eax, %r15d
 2409 1b07 85C0     		testl	%eax, %eax
 2410 1b09 0F851204 		jne	.L400
 2410      0000
 2411 1b0f 8B54241C 		movl	28(%rsp), %edx
 2412 1b13 8B742418 		movl	24(%rsp), %esi
 2413 1b17 4989E9   		movq	%rbp, %r9
 2414 1b1a 4531C0   		xorl	%r8d, %r8d
 2415 1b1d B9020000 		movl	$2, %ecx
 2415      00
 2416 1b22 4889DF   		movq	%rbx, %rdi
 2417 1b25 E8000000 		call	flSingleBitPortAccess@PLT
 2417      00
 2418 1b2a 4189C7   		movl	%eax, %r15d
 2419 1b2d 488D8424 		leaq	134(%rsp), %rax
 2419      86000000 
 2420 1b35 48894424 		movq	%rax, 88(%rsp)
 2420      58
 2421 1b3a 488D8424 		leaq	135(%rsp), %rax
 2421      87000000 
 2422 1b42 48894424 		movq	%rax, 96(%rsp)
 2422      60
 2423 1b47 4585FF   		testl	%r15d, %r15d
 2424 1b4a 0F85D103 		jne	.L400
 2424      0000
 2425 1b50 44896424 		movl	%r12d, 108(%rsp)
 2425      6C
 2426 1b55 4C8B7424 		movq	88(%rsp), %r14
 2426      58
 2427 1b5a 4989C7   		movq	%rax, %r15
 2428 1b5d 4C896C24 		movq	%r13, 120(%rsp)
 2428      78
 2429 1b62 448B6424 		movl	20(%rsp), %r12d
 2429      14
 2430 1b67 448B6C24 		movl	64(%rsp), %r13d
 2430      40
 2431 1b6c EB36     		jmp	.L317
 2432 1b6e 6690     		.p2align 4,,10
 2433              		.p2align 3
 2434              	.L318:
 2435 1b70 8B542468 		movl	104(%rsp), %edx
 2436 1b74 8B742444 		movl	68(%rsp), %esi
 2437 1b78 4989E9   		movq	%rbp, %r9
 2438 1b7b 4D89F8   		movq	%r15, %r8
 2439 1b7e B9030000 		movl	$3, %ecx
 2439      00
 2440 1b83 4889DF   		movq	%rbx, %rdi
 2441 1b86 E8000000 		call	flSingleBitPortAccess@PLT
 2441      00
 2442 1b8b 85C0     		testl	%eax, %eax
 2443 1b8d 7532     		jne	.L402
 2444 1b8f 0FB68424 		movzbl	134(%rsp), %eax
 2444      86000000 
 2445 1b97 0A842487 		orb	135(%rsp), %al
 2445      000000
 2446 1b9e 0F847005 		je	.L422
 2446      0000
 2447              	.L317:
 2448 1ba4 4989E9   		movq	%rbp, %r9
 2449 1ba7 4D89F0   		movq	%r14, %r8
 2450 1baa B9030000 		movl	$3, %ecx
 2450      00
 2451 1baf 4489EA   		movl	%r13d, %edx
 2452 1bb2 4489E6   		movl	%r12d, %esi
 2453 1bb5 4889DF   		movq	%rbx, %rdi
 2454 1bb8 E8000000 		call	flSingleBitPortAccess@PLT
 2454      00
 2455 1bbd 85C0     		testl	%eax, %eax
 2456 1bbf 74AF     		je	.L318
 2457              	.L402:
 2458 1bc1 488D3500 		leaq	.LC28(%rip), %rsi
 2458      000000
 2459 1bc8 4889EF   		movq	%rbp, %rdi
 2460 1bcb 4189C7   		movl	%eax, %r15d
 2461 1bce E8000000 		call	errPrefix@PLT
 2461      00
 2462 1bd3 EB2B     		jmp	.L268
 2463              		.p2align 4,,10
 2464 1bd5 0F1F00   		.p2align 3
 2465              	.L412:
 2466 1bd8 488D0D00 		leaq	253+.LC0(%rip), %rcx
 2466      000000
 2467              	.L398:
 2468 1bdf 4C89F2   		movq	%r14, %rdx
 2469 1be2 488D3500 		leaq	.LC24(%rip), %rsi
 2469      000000
 2470 1be9 4889EF   		movq	%rbp, %rdi
 2471 1bec 31C0     		xorl	%eax, %eax
 2472 1bee E8000000 		call	errRender@PLT
 2472      00
 2473 1bf3 41BF0B00 		movl	$11, %r15d
 2473      0000
 2474              	.L270:
 2475 1bf9 0F1F8000 		.p2align 4,,10
 2475      000000
 2476              		.p2align 3
 2477              	.L268:
 2478 1c00 488B8424 		movq	3816(%rsp), %rax
 2478      E80E0000 
 2479 1c08 64482B04 		subq	%fs:40, %rax
 2479      25280000 
 2479      00
 2480 1c11 0F85F804 		jne	.L423
 2480      0000
 2481 1c17 4881C4F8 		addq	$3832, %rsp
 2481      0E0000
 2482              		.cfi_remember_state
 2483              		.cfi_def_cfa_offset 56
 2484 1c1e 4489F8   		movl	%r15d, %eax
 2485 1c21 5B       		popq	%rbx
 2486              		.cfi_def_cfa_offset 48
 2487 1c22 5D       		popq	%rbp
 2488              		.cfi_def_cfa_offset 40
 2489 1c23 415C     		popq	%r12
 2490              		.cfi_def_cfa_offset 32
 2491 1c25 415D     		popq	%r13
 2492              		.cfi_def_cfa_offset 24
 2493 1c27 415E     		popq	%r14
 2494              		.cfi_def_cfa_offset 16
 2495 1c29 415F     		popq	%r15
 2496              		.cfi_def_cfa_offset 8
 2497 1c2b C3       		ret
 2498 1c2c 0F1F4000 		.p2align 4,,10
 2499              		.p2align 3
 2500              	.L407:
 2501              		.cfi_restore_state
 2502 1c30 4C89F0   		movq	%r14, %rax
 2503 1c33 488D1500 		leaq	.LC0(%rip), %rdx
 2503      000000
 2504 1c3a 4829F8   		subq	%rdi, %rax
 2505 1c3d 488D8C02 		leaq	256(%rdx,%rax), %rcx
 2505      00010000 
 2506              	.L399:
 2507 1c45 4C89F2   		movq	%r14, %rdx
 2508 1c48 488D3500 		leaq	.LC25(%rip), %rsi
 2508      000000
 2509 1c4f 4889EF   		movq	%rbp, %rdi
 2510 1c52 31C0     		xorl	%eax, %eax
 2511 1c54 E8000000 		call	errRender@PLT
 2511      00
 2512 1c59 41BF0B00 		movl	$11, %r15d
 2512      0000
 2513 1c5f EB9F     		jmp	.L268
 2514              		.p2align 4,,10
 2515 1c61 0F1F8000 		.p2align 3
 2515      000000
 2516              	.L413:
 2517 1c68 488D0D00 		leaq	252+.LC0(%rip), %rcx
 2517      000000
 2518              	.L396:
 2519 1c6f 4C89F2   		movq	%r14, %rdx
 2520 1c72 488D3500 		leaq	.LC22(%rip), %rsi
 2520      000000
 2521 1c79 4889EF   		movq	%rbp, %rdi
 2522 1c7c E8000000 		call	errRender@PLT
 2522      00
 2523              	.L406:
 2524 1c81 41BF0B00 		movl	$11, %r15d
 2524      0000
 2525 1c87 E974FFFF 		jmp	.L268
 2525      FF
 2526 1c8c 0F1F4000 		.p2align 4,,10
 2527              		.p2align 3
 2528              	.L410:
 2529 1c90 488D0D00 		leaq	254+.LC0(%rip), %rcx
 2529      000000
 2530 1c97 488D3500 		leaq	.LC23(%rip), %rsi
 2530      000000
 2531 1c9e 4C89CF   		movq	%r9, %rdi
 2532 1ca1 31C0     		xorl	%eax, %eax
 2533 1ca3 E8000000 		call	errRender@PLT
 2533      00
 2534 1ca8 41BF0B00 		movl	$11, %r15d
 2534      0000
 2535 1cae E94DFFFF 		jmp	.L268
 2535      FF
 2536              		.p2align 4,,10
 2537 1cb3 0F1F4400 		.p2align 3
 2537      00
 2538              	.L414:
 2539 1cb8 488D0D00 		leaq	252+.LC0(%rip), %rcx
 2539      000000
 2540 1cbf EB84     		jmp	.L399
 2541              		.p2align 4,,10
 2542 1cc1 0F1F8000 		.p2align 3
 2542      000000
 2543              	.L411:
 2544 1cc8 488D0D00 		leaq	253+.LC0(%rip), %rcx
 2544      000000
 2545              	.L397:
 2546 1ccf 4C89F2   		movq	%r14, %rdx
 2547 1cd2 488D3500 		leaq	.LC22(%rip), %rsi
 2547      000000
 2548 1cd9 4889EF   		movq	%rbp, %rdi
 2549 1cdc 31C0     		xorl	%eax, %eax
 2550 1cde E8000000 		call	errRender@PLT
 2550      00
 2551 1ce3 41BF0B00 		movl	$11, %r15d
 2551      0000
 2552 1ce9 E912FFFF 		jmp	.L268
 2552      FF
 2553 1cee 6690     		.p2align 4,,10
 2554              		.p2align 3
 2555              	.L404:
 2556 1cf0 4C89F2   		movq	%r14, %rdx
 2557 1cf3 4829C2   		subq	%rax, %rdx
 2558 1cf6 488D0500 		leaq	.LC0(%rip), %rax
 2558      000000
 2559              	.L401:
 2560 1cfd 488D8C10 		leaq	256(%rax,%rdx), %rcx
 2560      00010000 
 2561 1d05 EBC8     		jmp	.L397
 2562 1d07 660F1F84 		.p2align 4,,10
 2562      00000000 
 2562      00
 2563              		.p2align 3
 2564              	.L405:
 2565 1d10 4C89F2   		movq	%r14, %rdx
 2566 1d13 4829C2   		subq	%rax, %rdx
 2567 1d16 488D0500 		leaq	.LC0(%rip), %rax
 2567      000000
 2568 1d1d 488D8C10 		leaq	256(%rax,%rdx), %rcx
 2568      00010000 
 2569 1d25 E9B5FEFF 		jmp	.L398
 2569      FF
 2570 1d2a 660F1F44 		.p2align 4,,10
 2570      0000
 2571              		.p2align 3
 2572              	.L409:
 2573 1d30 4C89F0   		movq	%r14, %rax
 2574 1d33 488D1500 		leaq	.LC0(%rip), %rdx
 2574      000000
 2575 1d3a 4829F8   		subq	%rdi, %rax
 2576 1d3d EBBE     		jmp	.L401
 2577 1d3f 90       		.p2align 4,,10
 2578              		.p2align 3
 2579              	.L415:
 2580 1d40 488D0D00 		leaq	.LC0(%rip), %rcx
 2580      000000
 2581 1d47 4C89F0   		movq	%r14, %rax
 2582 1d4a 89F2     		movl	%esi, %edx
 2583 1d4c 4D89F0   		movq	%r14, %r8
 2584 1d4f 482B8424 		subq	136(%rsp), %rax
 2584      88000000 
 2585 1d57 83C241   		addl	$65, %edx
 2586 1d5a 4C8D8C01 		leaq	257(%rcx,%rax), %r9
 2586      01010000 
 2587 1d62 8B4C2440 		movl	64(%rsp), %ecx
 2588              	.L403:
 2589 1d66 488D3500 		leaq	.LC26(%rip), %rsi
 2589      000000
 2590 1d6d 4889EF   		movq	%rbp, %rdi
 2591 1d70 31C0     		xorl	%eax, %eax
 2592 1d72 41BF0B00 		movl	$11, %r15d
 2592      0000
 2593 1d78 E8000000 		call	errRender@PLT
 2593      00
 2594 1d7d E97EFEFF 		jmp	.L268
 2594      FF
 2595              		.p2align 4,,10
 2596 1d82 660F1F44 		.p2align 3
 2596      0000
 2597              	.L293:
 2598 1d88 48B80706 		movabsq	$283686952306183, %rax
 2598      05040302 
 2598      0100
 2599 1d92 488DBC24 		leaq	3480(%rsp), %rdi
 2599      980D0000 
 2600 1d9a 44884C24 		movb	%r9b, 108(%rsp)
 2600      6C
 2601 1d9f 48898424 		movq	%rax, 3480(%rsp)
 2601      980D0000 
 2602 1da7 488D8424 		leaq	3552(%rsp), %rax
 2602      E00D0000 
 2603 1daf 4889C6   		movq	%rax, %rsi
 2604 1db2 48894424 		movq	%rax, 112(%rsp)
 2604      70
 2605 1db7 E844E2FF 		call	makeLookup
 2605      FF
 2606 1dbc 488BBC24 		movq	136(%rsp), %rdi
 2606      88000000 
 2607 1dc4 440FB64C 		movzbl	108(%rsp), %r9d
 2607      246C
 2608 1dca 0FB607   		movzbl	(%rdi), %eax
 2609 1dcd 84C0     		testb	%al, %al
 2610 1dcf 0F84A202 		je	.L424
 2610      0000
 2611 1dd5 83E830   		subl	$48, %eax
 2612 1dd8 3C09     		cmpb	$9, %al
 2613 1dda 0F870202 		ja	.L425
 2613      0000
 2614 1de0 BA0A0000 		movl	$10, %edx
 2614      00
 2615 1de5 4C89FE   		movq	%r15, %rsi
 2616 1de8 44884C24 		movb	%r9b, 108(%rsp)
 2616      6C
 2617 1ded E8000000 		call	strtoul@PLT
 2617      00
 2618 1df2 0FB65424 		movzbl	88(%rsp), %edx
 2618      58
 2619 1df7 440FB64C 		movzbl	108(%rsp), %r9d
 2619      246C
 2620 1dfd 88842490 		movb	%al, 3472(%rsp)
 2620      0D0000
 2621 1e04 0FB6C8   		movzbl	%al, %ecx
 2622 1e07 0FB6C0   		movzbl	%al, %eax
 2623 1e0a 4889D6   		movq	%rdx, %rsi
 2624 1e0d 48C1E605 		salq	$5, %rsi
 2625 1e11 4801F0   		addq	%rsi, %rax
 2626 1e14 448B9484 		movl	144(%rsp,%rax,4), %r10d
 2626      90000000 
 2627 1e1c 4585D2   		testl	%r10d, %r10d
 2628 1e1f 0F858002 		jne	.L426
 2628      0000
 2629 1e25 C7848490 		movl	$2, 144(%rsp,%rax,4)
 2629      00000002 
 2629      000000
 2630 1e30 E9C8FBFF 		jmp	.L300
 2630      FF
 2631              	.L416:
 2632 1e35 488D0D00 		leaq	.LC0(%rip), %rcx
 2632      000000
 2633 1e3c 4C89F0   		movq	%r14, %rax
 2634 1e3f 83C241   		addl	$65, %edx
 2635 1e42 4D89F0   		movq	%r14, %r8
 2636 1e45 482B8424 		subq	136(%rsp), %rax
 2636      88000000 
 2637 1e4d 4C8D8C01 		leaq	257(%rcx,%rax), %r9
 2637      01010000 
 2638 1e55 8B4C2468 		movl	104(%rsp), %ecx
 2639 1e59 E908FFFF 		jmp	.L403
 2639      FF
 2640              	.L311:
 2641 1e5e 488D3500 		leaq	.LC17(%rip), %rsi
 2641      000000
 2642 1e65 4889EF   		movq	%rbp, %rdi
 2643 1e68 41BF0C00 		movl	$12, %r15d
 2643      0000
 2644 1e6e E8000000 		call	errPrefix@PLT
 2644      00
 2645 1e73 488D3500 		leaq	.LC28(%rip), %rsi
 2645      000000
 2646 1e7a 4889EF   		movq	%rbp, %rdi
 2647 1e7d E8000000 		call	errPrefix@PLT
 2647      00
 2648 1e82 E979FDFF 		jmp	.L268
 2648      FF
 2649              	.L417:
 2650 1e87 488D0D00 		leaq	.LC0(%rip), %rcx
 2650      000000
 2651 1e8e 4C89F0   		movq	%r14, %rax
 2652 1e91 83C241   		addl	$65, %edx
 2653 1e94 4D89F0   		movq	%r14, %r8
 2654 1e97 482B8424 		subq	136(%rsp), %rax
 2654      88000000 
 2655 1e9f 4C8D8C01 		leaq	257(%rcx,%rax), %r9
 2655      01010000 
 2656 1ea7 89F1     		movl	%esi, %ecx
 2657 1ea9 E9B8FEFF 		jmp	.L403
 2657      FF
 2658              	.L429:
 2659 1eae 48834424 		addq	$1, 32(%rsp)
 2659      2001
 2660 1eb4 488B4424 		movq	32(%rsp), %rax
 2660      20
 2661 1eb9 4883F81A 		cmpq	$26, %rax
 2662 1ebd 0F85CF02 		jne	.L321
 2662      0000
 2663 1ec3 4C89E3   		movq	%r12, %rbx
 2664 1ec6 8B54241C 		movl	28(%rsp), %edx
 2665 1eca 8B742418 		movl	24(%rsp), %esi
 2666 1ece 4989E9   		movq	%rbp, %r9
 2667 1ed1 4531C0   		xorl	%r8d, %r8d
 2668 1ed4 B9010000 		movl	$1, %ecx
 2668      00
 2669 1ed9 4889DF   		movq	%rbx, %rdi
 2670 1edc 448B6424 		movl	40(%rsp), %r12d
 2670      28
 2671 1ee1 E8000000 		call	flSingleBitPortAccess@PLT
 2671      00
 2672 1ee6 4189C7   		movl	%eax, %r15d
 2673 1ee9 85C0     		testl	%eax, %eax
 2674 1eeb 7410     		je	.L325
 2675 1eed EB32     		jmp	.L400
 2676              	.L326:
 2677 1eef 80BC2486 		cmpb	$0, 134(%rsp)
 2677      00000000 
 2678 1ef7 0F85E902 		jne	.L427
 2678      0000
 2679              	.L325:
 2680 1efd 4C8B4424 		movq	88(%rsp), %r8
 2680      58
 2681 1f02 8B542440 		movl	64(%rsp), %edx
 2682 1f06 4989E9   		movq	%rbp, %r9
 2683 1f09 4889DF   		movq	%rbx, %rdi
 2684 1f0c 8B742414 		movl	20(%rsp), %esi
 2685 1f10 B9030000 		movl	$3, %ecx
 2685      00
 2686 1f15 E8000000 		call	flSingleBitPortAccess@PLT
 2686      00
 2687 1f1a 4189C7   		movl	%eax, %r15d
 2688 1f1d 85C0     		testl	%eax, %eax
 2689 1f1f 74CE     		je	.L326
 2690              	.L400:
 2691 1f21 488D3500 		leaq	.LC28(%rip), %rsi
 2691      000000
 2692 1f28 4889EF   		movq	%rbp, %rdi
 2693 1f2b E8000000 		call	errPrefix@PLT
 2693      00
 2694 1f30 E9CBFCFF 		jmp	.L268
 2694      FF
 2695              	.L419:
 2696 1f35 488D7201 		leaq	1(%rdx), %rsi
 2697 1f39 4989E8   		movq	%rbp, %r8
 2698 1f3c 4C89FA   		movq	%r15, %rdx
 2699 1f3f 4C89E9   		movq	%r13, %rcx
 2700 1f42 4C89F7   		movq	%r14, %rdi
 2701 1f45 44884C24 		movb	%r9b, 108(%rsp)
 2701      6C
 2702 1f4a 4889B424 		movq	%rsi, 136(%rsp)
 2702      88000000 
 2703 1f52 E859E1FF 		call	populateMap
 2703      FF
 2704 1f57 440FB64C 		movzbl	108(%rsp), %r9d
 2704      246C
 2705 1f5d 85C0     		testl	%eax, %eax
 2706 1f5f 4189C7   		movl	%eax, %r15d
 2707 1f62 75BD     		jne	.L400
 2708 1f64 488B8424 		movq	136(%rsp), %rax
 2708      88000000 
 2709 1f6c 0FB610   		movzbl	(%rax), %edx
 2710 1f6f 84D2     		testb	%dl, %dl
 2711 1f71 0F8479FD 		je	.L404
 2711      FFFF
 2712 1f77 80FA5D   		cmpb	$93, %dl
 2713 1f7a 0F855B01 		jne	.L428
 2713      0000
 2714 1f80 488D5001 		leaq	1(%rax), %rdx
 2715 1f84 48899424 		movq	%rdx, 136(%rsp)
 2715      88000000 
 2716 1f8c 0FB64001 		movzbl	1(%rax), %eax
 2717 1f90 E983FAFF 		jmp	.L306
 2717      FF
 2718              	.L420:
 2719 1f95 4C89F0   		movq	%r14, %rax
 2720 1f98 488D3500 		leaq	.LC30(%rip), %rsi
 2720      000000
 2721 1f9f 4889EF   		movq	%rbp, %rdi
 2722 1fa2 41BF0B00 		movl	$11, %r15d
 2722      0000
 2723 1fa8 4829D0   		subq	%rdx, %rax
 2724 1fab 488D1500 		leaq	.LC0(%rip), %rdx
 2724      000000
 2725 1fb2 488D8C02 		leaq	256(%rdx,%rax), %rcx
 2725      00010000 
 2726 1fba 4C89F2   		movq	%r14, %rdx
 2727 1fbd 31C0     		xorl	%eax, %eax
 2728 1fbf E8000000 		call	errRender@PLT
 2728      00
 2729 1fc4 E937FCFF 		jmp	.L268
 2729      FF
 2730              	.L421:
 2731 1fc9 83C805   		orl	$5, %eax
 2732 1fcc 55       		pushq	%rbp
 2733              		.cfi_remember_state
 2734              		.cfi_def_cfa_offset 3896
 2735 1fcd 4531C9   		xorl	%r9d, %r9d
 2736 1fd0 4531C0   		xorl	%r8d, %r8d
 2737 1fd3 68E80300 		pushq	$1000
 2737      00
 2738              		.cfi_def_cfa_offset 3904
 2739 1fd8 0FB7C8   		movzwl	%ax, %ecx
 2740 1fdb 31D2     		xorl	%edx, %edx
 2741 1fdd E9A6FAFF 		jmp	.L395
 2741      FF
 2742              	.L425:
 2743              		.cfi_restore_state
 2744 1fe2 4C89F0   		movq	%r14, %rax
 2745 1fe5 488D1500 		leaq	.LC0(%rip), %rdx
 2745      000000
 2746 1fec 488D3500 		leaq	.LC25(%rip), %rsi
 2746      000000
 2747 1ff3 4829F8   		subq	%rdi, %rax
 2748 1ff6 4889EF   		movq	%rbp, %rdi
 2749 1ff9 488D8C02 		leaq	256(%rdx,%rax), %rcx
 2749      00010000 
 2750 2001 4C89F2   		movq	%r14, %rdx
 2751 2004 31C0     		xorl	%eax, %eax
 2752 2006 E8000000 		call	errRender@PLT
 2752      00
 2753 200b E971FCFF 		jmp	.L406
 2753      FF
 2754              	.L418:
 2755 2010 4C89F0   		movq	%r14, %rax
 2756 2013 4829D0   		subq	%rdx, %rax
 2757 2016 488D1500 		leaq	.LC0(%rip), %rdx
 2757      000000
 2758 201d E9DBFCFF 		jmp	.L401
 2758      FF
 2759              	.L294:
 2760 2022 4C89F0   		movq	%r14, %rax
 2761 2025 488D1500 		leaq	.LC0(%rip), %rdx
 2761      000000
 2762 202c 4829C8   		subq	%rcx, %rax
 2763 202f E9C9FCFF 		jmp	.L401
 2763      FF
 2764              	.L296:
 2765 2034 4C89F0   		movq	%r14, %rax
 2766 2037 418D5241 		leal	65(%r10), %edx
 2767 203b 4D89F0   		movq	%r14, %r8
 2768 203e 4829C8   		subq	%rcx, %rax
 2769 2041 488D0D00 		leaq	.LC0(%rip), %rcx
 2769      000000
 2770 2048 4C8D8C01 		leaq	257(%rcx,%rax), %r9
 2770      01010000 
 2771 2050 4489D9   		movl	%r11d, %ecx
 2772 2053 E90EFDFF 		jmp	.L403
 2772      FF
 2773              	.L295:
 2774 2058 4C29F1   		subq	%r14, %rcx
 2775 205b 488D3500 		leaq	.LC27(%rip), %rsi
 2775      000000
 2776 2062 4889EF   		movq	%rbp, %rdi
 2777 2065 31C0     		xorl	%eax, %eax
 2778 2067 E8000000 		call	errRender@PLT
 2778      00
 2779 206c 41BF0B00 		movl	$11, %r15d
 2779      0000
 2780 2072 E989FBFF 		jmp	.L268
 2780      FF
 2781              	.L424:
 2782 2077 4C89F0   		movq	%r14, %rax
 2783 207a 488D1500 		leaq	.LC0(%rip), %rdx
 2783      000000
 2784 2081 488D3500 		leaq	.LC22(%rip), %rsi
 2784      000000
 2785 2088 4829F8   		subq	%rdi, %rax
 2786 208b 4889EF   		movq	%rbp, %rdi
 2787 208e 488D8C02 		leaq	256(%rdx,%rax), %rcx
 2787      00010000 
 2788 2096 4C89F2   		movq	%r14, %rdx
 2789 2099 31C0     		xorl	%eax, %eax
 2790 209b E8000000 		call	errRender@PLT
 2790      00
 2791 20a0 E9DCFBFF 		jmp	.L406
 2791      FF
 2792              	.L426:
 2793 20a5 4C89F0   		movq	%r14, %rax
 2794 20a8 488D3500 		leaq	.LC0(%rip), %rsi
 2794      000000
 2795 20af 83C241   		addl	$65, %edx
 2796 20b2 4D89F0   		movq	%r14, %r8
 2797 20b5 482B8424 		subq	136(%rsp), %rax
 2797      88000000 
 2798 20bd 4889EF   		movq	%rbp, %rdi
 2799 20c0 4C8D8C06 		leaq	257(%rsi,%rax), %r9
 2799      01010000 
 2800 20c8 488D3500 		leaq	.LC26(%rip), %rsi
 2800      000000
 2801 20cf 31C0     		xorl	%eax, %eax
 2802 20d1 E8000000 		call	errRender@PLT
 2802      00
 2803 20d6 E9A6FBFF 		jmp	.L406
 2803      FF
 2804              	.L428:
 2805 20db 4C89F2   		movq	%r14, %rdx
 2806 20de 488D3500 		leaq	.LC29(%rip), %rsi
 2806      000000
 2807 20e5 4889EF   		movq	%rbp, %rdi
 2808 20e8 41BF0B00 		movl	$11, %r15d
 2808      0000
 2809 20ee 4829C2   		subq	%rax, %rdx
 2810 20f1 488D0500 		leaq	.LC0(%rip), %rax
 2810      000000
 2811 20f8 488D8C10 		leaq	256(%rax,%rdx), %rcx
 2811      00010000 
 2812 2100 4C89F2   		movq	%r14, %rdx
 2813 2103 31C0     		xorl	%eax, %eax
 2814 2105 E8000000 		call	errRender@PLT
 2814      00
 2815 210a E9F1FAFF 		jmp	.L268
 2815      FF
 2816              	.L423:
 2817 210f E8000000 		call	__stack_chk_fail@PLT
 2817      00
 2818              	.L422:
 2819 2114 4889EA   		movq	%rbp, %rdx
 2820 2117 31F6     		xorl	%esi, %esi
 2821 2119 4889DF   		movq	%rbx, %rdi
 2822 211c 448B6424 		movl	108(%rsp), %r12d
 2822      6C
 2823 2121 4C8B6C24 		movq	120(%rsp), %r13
 2823      78
 2824 2126 E8000000 		call	flSelectConduit@PLT
 2824      00
 2825 212b 4189C7   		movl	%eax, %r15d
 2826 212e 85C0     		testl	%eax, %eax
 2827 2130 0F85EBFD 		jne	.L400
 2827      FFFF
 2828 2136 488B4424 		movq	32(%rsp), %rax
 2828      20
 2829 213b 48C74424 		movq	$0, 32(%rsp)
 2829      20000000 
 2829      00
 2830 2144 48C1E005 		salq	$5, %rax
 2831 2148 48034424 		addq	40(%rsp), %rax
 2831      28
 2832 214d 44896424 		movl	%r12d, 40(%rsp)
 2832      28
 2833 2152 4989DC   		movq	%rbx, %r12
 2834 2155 C7848490 		movl	$0, 144(%rsp,%rax,4)
 2834      00000000 
 2834      000000
 2835 2160 488B4424 		movq	48(%rsp), %rax
 2835      30
 2836 2165 48C1E005 		salq	$5, %rax
 2837 2169 48034424 		addq	56(%rsp), %rax
 2837      38
 2838 216e C7848490 		movl	$0, 144(%rsp,%rax,4)
 2838      00000000 
 2838      000000
 2839 2179 488B4424 		movq	72(%rsp), %rax
 2839      48
 2840 217e 48C1E005 		salq	$5, %rax
 2841 2182 48034424 		addq	80(%rsp), %rax
 2841      50
 2842 2187 C7848490 		movl	$0, 144(%rsp,%rax,4)
 2842      00000000 
 2842      000000
 2843              	.L321:
 2844 2192 488B5C24 		movq	32(%rsp), %rbx
 2844      20
 2845 2197 4531F6   		xorl	%r14d, %r14d
 2846 219a 4189DF   		movl	%ebx, %r15d
 2847 219d 48C1E307 		salq	$7, %rbx
 2848 21a1 4C01EB   		addq	%r13, %rbx
 2849 21a4 EB18     		jmp	.L323
 2850 21a6 662E0F1F 		.p2align 4,,10
 2850      84000000 
 2850      0000
 2851              		.p2align 3
 2852              	.L322:
 2853 21b0 4983C601 		addq	$1, %r14
 2854 21b4 4983FE20 		cmpq	$32, %r14
 2855 21b8 0F84F0FC 		je	.L429
 2855      FFFF
 2856              	.L323:
 2857 21be 428B04B3 		movl	(%rbx,%r14,4), %eax
 2858 21c2 4489F2   		movl	%r14d, %edx
 2859 21c5 85C0     		testl	%eax, %eax
 2860 21c7 74E7     		je	.L322
 2861 21c9 4531C0   		xorl	%r8d, %r8d
 2862 21cc 0FB6C8   		movzbl	%al, %ecx
 2863 21cf 4989E9   		movq	%rbp, %r9
 2864 21d2 4489FE   		movl	%r15d, %esi
 2865 21d5 4C89E7   		movq	%r12, %rdi
 2866 21d8 E8000000 		call	flSingleBitPortAccess@PLT
 2866      00
 2867 21dd 85C0     		testl	%eax, %eax
 2868 21df 74CF     		je	.L322
 2869 21e1 E9DBF9FF 		jmp	.L402
 2869      FF
 2870              	.L427:
 2871 21e6 4C8B4424 		movq	112(%rsp), %r8
 2871      70
 2872 21eb 8B4C2408 		movl	8(%rsp), %ecx
 2873 21ef 4989E9   		movq	%rbp, %r9
 2874 21f2 4489E6   		movl	%r12d, %esi
 2875 21f5 488B1424 		movq	(%rsp), %rdx
 2876 21f9 4889DF   		movq	%rbx, %rdi
 2877 21fc 41BE0A00 		movl	$10, %r14d
 2877      0000
 2878 2202 E859E1FF 		call	dataWrite
 2878      FF
 2879 2207 4189C7   		movl	%eax, %r15d
 2880 220a 488D8424 		leaq	3488(%rsp), %rax
 2880      A00D0000 
 2881 2212 48890424 		movq	%rax, (%rsp)
 2882 2216 4585FF   		testl	%r15d, %r15d
 2883 2219 742C     		je	.L327
 2884 221b E901FDFF 		jmp	.L400
 2884      FF
 2885              	.L332:
 2886 2220 4C8B4424 		movq	112(%rsp), %r8
 2886      70
 2887 2225 488B1424 		movq	(%rsp), %rdx
 2888 2229 4989E9   		movq	%rbp, %r9
 2889 222c 4489E6   		movl	%r12d, %esi
 2890 222f B9400000 		movl	$64, %ecx
 2890      00
 2891 2234 4889DF   		movq	%rbx, %rdi
 2892 2237 E824E1FF 		call	dataWrite
 2892      FF
 2893 223c 4189C7   		movl	%eax, %r15d
 2894 223f 85C0     		testl	%eax, %eax
 2895 2241 0F85DAFC 		jne	.L400
 2895      FFFF
 2896              	.L327:
 2897 2247 4C8B4424 		movq	88(%rsp), %r8
 2897      58
 2898 224c 8B542440 		movl	64(%rsp), %edx
 2899 2250 4989E9   		movq	%rbp, %r9
 2900 2253 4889DF   		movq	%rbx, %rdi
 2901 2256 8B742414 		movl	20(%rsp), %esi
 2902 225a B9030000 		movl	$3, %ecx
 2902      00
 2903 225f E8000000 		call	flSingleBitPortAccess@PLT
 2903      00
 2904 2264 4189C7   		movl	%eax, %r15d
 2905 2267 85C0     		testl	%eax, %eax
 2906 2269 0F85B2FC 		jne	.L400
 2906      FFFF
 2907 226f 4C8B4424 		movq	96(%rsp), %r8
 2907      60
 2908 2274 8B542468 		movl	104(%rsp), %edx
 2909 2278 4989E9   		movq	%rbp, %r9
 2910 227b 4889DF   		movq	%rbx, %rdi
 2911 227e 8B742444 		movl	68(%rsp), %esi
 2912 2282 B9030000 		movl	$3, %ecx
 2912      00
 2913 2287 E8000000 		call	flSingleBitPortAccess@PLT
 2913      00
 2914 228c 4189C7   		movl	%eax, %r15d
 2915 228f 85C0     		testl	%eax, %eax
 2916 2291 0F858AFC 		jne	.L400
 2916      FFFF
 2917 2297 80BC2487 		cmpb	$0, 135(%rsp)
 2917      00000000 
 2918 229f 7532     		jne	.L337
 2919 22a1 80BC2486 		cmpb	$0, 134(%rsp)
 2919      00000000 
 2920 22a9 0F849400 		je	.L331
 2920      0000
 2921 22af 4183EE01 		subl	$1, %r14d
 2922 22b3 0F8567FF 		jne	.L332
 2922      FFFF
 2923 22b9 488D3500 		leaq	.LC31(%rip), %rsi
 2923      000000
 2924 22c0 4889EF   		movq	%rbp, %rdi
 2925 22c3 41BF1400 		movl	$20, %r15d
 2925      0000
 2926 22c9 E8000000 		call	errPrefix@PLT
 2926      00
 2927 22ce E92DF9FF 		jmp	.L268
 2927      FF
 2928              	.L337:
 2929 22d3 890424   		movl	%eax, (%rsp)
 2930 22d6 4D89EF   		movq	%r13, %r15
 2931 22d9 4531E4   		xorl	%r12d, %r12d
 2932 22dc 4989E9   		movq	%rbp, %r9
 2933 22df 4989DD   		movq	%rbx, %r13
 2934              	.L330:
 2935 22e2 4C89E3   		movq	%r12, %rbx
 2936 22e5 4531F6   		xorl	%r14d, %r14d
 2937 22e8 4489E5   		movl	%r12d, %ebp
 2938 22eb 48C1E307 		salq	$7, %rbx
 2939 22ef 4C01FB   		addq	%r15, %rbx
 2940 22f2 EB0A     		jmp	.L334
 2941              	.L333:
 2942 22f4 4983C601 		addq	$1, %r14
 2943 22f8 4983FE20 		cmpq	$32, %r14
 2944 22fc 745F     		je	.L430
 2945              	.L334:
 2946 22fe 42833CB3 		cmpl	$0, (%rbx,%r14,4)
 2946      00
 2947 2303 4489F2   		movl	%r14d, %edx
 2948 2306 74EC     		je	.L333
 2949 2308 4531C0   		xorl	%r8d, %r8d
 2950 230b B9030000 		movl	$3, %ecx
 2950      00
 2951 2310 89EE     		movl	%ebp, %esi
 2952 2312 4C89EF   		movq	%r13, %rdi
 2953 2315 4C894C24 		movq	%r9, 8(%rsp)
 2953      08
 2954 231a E8000000 		call	flSingleBitPortAccess@PLT
 2954      00
 2955 231f 4C8B4C24 		movq	8(%rsp), %r9
 2955      08
 2956 2324 85C0     		testl	%eax, %eax
 2957 2326 74CC     		je	.L333
 2958 2328 488D3500 		leaq	.LC28(%rip), %rsi
 2958      000000
 2959 232f 4C89CF   		movq	%r9, %rdi
 2960 2332 890424   		movl	%eax, (%rsp)
 2961 2335 E8000000 		call	errPrefix@PLT
 2961      00
 2962 233a 448B3C24 		movl	(%rsp), %r15d
 2963 233e E9BDF8FF 		jmp	.L268
 2963      FF
 2964              	.L331:
 2965 2343 488D3500 		leaq	.LC32(%rip), %rsi
 2965      000000
 2966 234a 4889EF   		movq	%rbp, %rdi
 2967 234d 41BF1400 		movl	$20, %r15d
 2967      0000
 2968 2353 E8000000 		call	errPrefix@PLT
 2968      00
 2969 2358 E9A3F8FF 		jmp	.L268
 2969      FF
 2970              	.L430:
 2971 235d 4983C401 		addq	$1, %r12
 2972 2361 4983FC1A 		cmpq	$26, %r12
 2973 2365 0F8577FF 		jne	.L330
 2973      FFFF
 2974 236b 448B3C24 		movl	(%rsp), %r15d
 2975 236f E98CF8FF 		jmp	.L268
 2975      FF
 2976              		.cfi_endproc
 2977              	.LFE42:
 2979              		.section	.rodata.str1.8
 2980 051c 00000000 		.align 8
 2981              	.LC33:
 2982 0520 6150726F 		.string	"aProgram(): Unexpected end of config string:\n  %s\n  %s^"
 2982      6772616D 
 2982      28293A20 
 2982      556E6578 
 2982      70656374 
 2983              		.align 8
 2984              	.LC34:
 2985 0558 6150726F 		.string	"aProgram(): Expecting ':':\n  %s\n  %s^"
 2985      6772616D 
 2985      28293A20 
 2985      45787065 
 2985      6374696E 
 2986 057e 0000     		.align 8
 2987              	.LC35:
 2988 0580 6150726F 		.string	"aProgram(): Port is not valid (try 'A', 'B', 'C', etc):\n  %s\n  %s^"
 2988      6772616D 
 2988      28293A20 
 2988      506F7274 
 2988      20697320 
 2989 05c3 00000000 		.align 8
 2989      00
 2990              	.LC36:
 2991 05c8 6150726F 		.string	"aProgram(): Bit number is not valid:\n  %s\n  %s^"
 2991      6772616D 
 2991      28293A20 
 2991      42697420 
 2991      6E756D62 
 2992              		.section	.rodata.str1.1
 2993              	.LC37:
 2994 00af 6150726F 		.string	"aProgram()"
 2994      6772616D 
 2994      282900
 2995              		.section	.rodata.str1.8
 2996              		.align 8
 2997              	.LC38:
 2998 05f8 6150726F 		.string	"aProgram(): port '%c%d' is already used:\n  %s\n  %s^"
 2998      6772616D 
 2998      28293A20 
 2998      706F7274 
 2998      20272563 
 2999 062c 00000000 		.align 8
 3000              	.LC39:
 3001 0630 6150726F 		.string	"aProgram(): Expecting ']':\n  %s\n  %s^"
 3001      6772616D 
 3001      28293A20 
 3001      45787065 
 3001      6374696E 
 3002 0656 0000     		.align 8
 3003              	.LC40:
 3004 0658 6150726F 		.string	"aProgram(): Expecting ':' or end-of-string:\n  %s\n  %s^"
 3004      6772616D 
 3004      28293A20 
 3004      45787065 
 3004      6374696E 
 3005 068f 00       		.align 8
 3006              	.LC41:
 3007 0690 6150726F 		.string	"aProgram(): CONF_DONE remained low (CRC error during config)"
 3007      6772616D 
 3007      28293A20 
 3007      434F4E46 
 3007      5F444F4E 
 3008              		.text
 3009 2374 66662E0F 		.p2align 4
 3009      1F840000 
 3009      00000090 
 3011              	aProgram:
 3012              	.LFB43:
 3013              		.cfi_startproc
 3014 2380 4157     		pushq	%r15
 3015              		.cfi_def_cfa_offset 16
 3016              		.cfi_offset 15, -16
 3017 2382 4989F7   		movq	%rsi, %r15
 3018 2385 4156     		pushq	%r14
 3019              		.cfi_def_cfa_offset 24
 3020              		.cfi_offset 14, -24
 3021 2387 4155     		pushq	%r13
 3022              		.cfi_def_cfa_offset 32
 3023              		.cfi_offset 13, -32
 3024 2389 4154     		pushq	%r12
 3025              		.cfi_def_cfa_offset 40
 3026              		.cfi_offset 12, -40
 3027 238b 55       		pushq	%rbp
 3028              		.cfi_def_cfa_offset 48
 3029              		.cfi_offset 6, -48
 3030 238c 4C89C5   		movq	%r8, %rbp
 3031 238f 53       		pushq	%rbx
 3032              		.cfi_def_cfa_offset 56
 3033              		.cfi_offset 3, -56
 3034 2390 4889FB   		movq	%rdi, %rbx
 3035 2393 4881EC78 		subq	$3704, %rsp
 3035      0E0000
 3036              		.cfi_def_cfa_offset 3760
 3037 239a 894C2418 		movl	%ecx, 24(%rsp)
 3038 239e 4C8D6C24 		leaq	80(%rsp), %r13
 3038      50
 3039 23a3 B9A00100 		movl	$416, %ecx
 3039      00
 3040 23a8 48891424 		movq	%rdx, (%rsp)
 3041 23ac 4C89EF   		movq	%r13, %rdi
 3042 23af 64488B04 		movq	%fs:40, %rax
 3042      25280000 
 3042      00
 3043 23b8 48898424 		movq	%rax, 3688(%rsp)
 3043      680E0000 
 3044 23c0 31C0     		xorl	%eax, %eax
 3045 23c2 488D4602 		leaq	2(%rsi), %rax
 3046 23c6 48894424 		movq	%rax, 72(%rsp)
 3046      48
 3047 23cb 31C0     		xorl	%eax, %eax
 3048 23cd F348AB   		rep stosq
 3049 23d0 488D0D00 		leaq	254+.LC0(%rip), %rcx
 3049      000000
 3050 23d7 48B80001 		movabsq	$506097522914230528, %rax
 3050      02030405 
 3050      0607
 3051 23e1 48898424 		movq	%rax, 3416(%rsp)
 3051      580D0000 
 3052 23e9 0FB64602 		movzbl	2(%rsi), %eax
 3053 23ed 84C0     		testb	%al, %al
 3054 23ef 0F84BA03 		je	.L500
 3054      0000
 3055 23f5 3C3A     		cmpb	$58, %al
 3056 23f7 0F853304 		jne	.L512
 3056      0000
 3057 23fd 488D4603 		leaq	3(%rsi), %rax
 3058 2401 48894424 		movq	%rax, 72(%rsp)
 3058      48
 3059 2406 0FB64603 		movzbl	3(%rsi), %eax
 3060 240a 84C0     		testb	%al, %al
 3061 240c 0F849603 		je	.L513
 3061      0000
 3062 2412 448D60BF 		leal	-65(%rax), %r12d
 3063 2416 488D0D00 		leaq	253+.LC0(%rip), %rcx
 3063      000000
 3064 241d 4180FC19 		cmpb	$25, %r12b
 3065 2421 0F874E04 		ja	.L501
 3065      0000
 3066 2427 0FB64604 		movzbl	4(%rsi), %eax
 3067 242b 488D7E04 		leaq	4(%rsi), %rdi
 3068 242f 488D0D00 		leaq	252+.LC0(%rip), %rcx
 3068      000000
 3069 2436 48897C24 		movq	%rdi, 72(%rsp)
 3069      48
 3070 243b 84C0     		testb	%al, %al
 3071 243d 0F846C03 		je	.L500
 3071      0000
 3072 2443 83E830   		subl	$48, %eax
 3073 2446 488D0D00 		leaq	252+.LC0(%rip), %rcx
 3073      000000
 3074 244d 3C09     		cmpb	$9, %al
 3075 244f 0F87B803 		ja	.L503
 3075      0000
 3076 2455 4C8D7424 		leaq	72(%rsp), %r14
 3076      48
 3077 245a BA0A0000 		movl	$10, %edx
 3077      00
 3078 245f 4C89F6   		movq	%r14, %rsi
 3079 2462 E8000000 		call	strtoul@PLT
 3079      00
 3080 2467 410FB6F4 		movzbl	%r12b, %esi
 3081 246b 4989E9   		movq	%rbp, %r9
 3082 246e 4531C0   		xorl	%r8d, %r8d
 3083 2471 0FB6C8   		movzbl	%al, %ecx
 3084 2474 0FB6D0   		movzbl	%al, %edx
 3085 2477 410FB6C4 		movzbl	%r12b, %eax
 3086 247b 4889DF   		movq	%rbx, %rdi
 3087 247e 48894424 		movq	%rax, 8(%rsp)
 3087      08
 3088 2483 48C1E005 		salq	$5, %rax
 3089 2487 4801C8   		addq	%rcx, %rax
 3090 248a 48894C24 		movq	%rcx, 16(%rsp)
 3090      10
 3091 248f B9020000 		movl	$2, %ecx
 3091      00
 3092 2494 8974241C 		movl	%esi, 28(%rsp)
 3093 2498 89542420 		movl	%edx, 32(%rsp)
 3094 249c C7448450 		movl	$2, 80(%rsp,%rax,4)
 3094      02000000 
 3095 24a4 E8000000 		call	flSingleBitPortAccess@PLT
 3095      00
 3096 24a9 4189C4   		movl	%eax, %r12d
 3097 24ac 85C0     		testl	%eax, %eax
 3098 24ae 0F85E403 		jne	.L502
 3098      0000
 3099 24b4 488B4424 		movq	72(%rsp), %rax
 3099      48
 3100 24b9 440FB620 		movzbl	(%rax), %r12d
 3101 24bd 4584E4   		testb	%r12b, %r12b
 3102 24c0 0F84EA03 		je	.L511
 3102      0000
 3103 24c6 4183EC41 		subl	$65, %r12d
 3104 24ca 4180FC19 		cmpb	$25, %r12b
 3105 24ce 0F878C03 		ja	.L509
 3105      0000
 3106 24d4 488D7801 		leaq	1(%rax), %rdi
 3107 24d8 48897C24 		movq	%rdi, 72(%rsp)
 3107      48
 3108 24dd 0FB64001 		movzbl	1(%rax), %eax
 3109 24e1 84C0     		testb	%al, %al
 3110 24e3 0F84FF03 		je	.L508
 3110      0000
 3111 24e9 83E830   		subl	$48, %eax
 3112 24ec 3C09     		cmpb	$9, %al
 3113 24ee 0F870403 		ja	.L507
 3113      0000
 3114 24f4 BA0A0000 		movl	$10, %edx
 3114      00
 3115 24f9 4C89F6   		movq	%r14, %rsi
 3116 24fc E8000000 		call	strtoul@PLT
 3116      00
 3117 2501 410FB6D4 		movzbl	%r12b, %edx
 3118 2505 450FB6E4 		movzbl	%r12b, %r12d
 3119 2509 89542424 		movl	%edx, 36(%rsp)
 3120 250d 49C1E405 		salq	$5, %r12
 3121 2511 0FB6D0   		movzbl	%al, %edx
 3122 2514 0FB6C0   		movzbl	%al, %eax
 3123 2517 4901C4   		addq	%rax, %r12
 3124 251a 89542428 		movl	%edx, 40(%rsp)
 3125 251e 428B44A4 		movl	80(%rsp,%r12,4), %eax
 3125      50
 3126 2523 85C0     		testl	%eax, %eax
 3127 2525 0F85D503 		jne	.L514
 3127      0000
 3128 252b 42C744A4 		movl	$3, 80(%rsp,%r12,4)
 3128      50030000 
 3128      00
 3129 2534 488B4424 		movq	72(%rsp), %rax
 3129      48
 3130 2539 440FB608 		movzbl	(%rax), %r9d
 3131 253d 4584C9   		testb	%r9b, %r9b
 3132 2540 0F846A03 		je	.L511
 3132      0000
 3133 2546 4183E941 		subl	$65, %r9d
 3134 254a 4180F919 		cmpb	$25, %r9b
 3135 254e 0F870C03 		ja	.L509
 3135      0000
 3136 2554 488D7801 		leaq	1(%rax), %rdi
 3137 2558 48897C24 		movq	%rdi, 72(%rsp)
 3137      48
 3138 255d 0FB64001 		movzbl	1(%rax), %eax
 3139 2561 84C0     		testb	%al, %al
 3140 2563 0F847F03 		je	.L508
 3140      0000
 3141 2569 83E830   		subl	$48, %eax
 3142 256c 3C09     		cmpb	$9, %al
 3143 256e 0F878402 		ja	.L507
 3143      0000
 3144 2574 BA0A0000 		movl	$10, %edx
 3144      00
 3145 2579 4C89F6   		movq	%r14, %rsi
 3146 257c 44884C24 		movb	%r9b, 44(%rsp)
 3146      2C
 3147 2581 E8000000 		call	strtoul@PLT
 3147      00
 3148 2586 0FB64C24 		movzbl	44(%rsp), %ecx
 3148      2C
 3149 258b 0FB6D0   		movzbl	%al, %edx
 3150 258e 8954242C 		movl	%edx, 44(%rsp)
 3151 2592 0FB6D0   		movzbl	%al, %edx
 3152 2595 0FB6C1   		movzbl	%cl, %eax
 3153 2598 48C1E005 		salq	$5, %rax
 3154 259c 4801D0   		addq	%rdx, %rax
 3155 259f 448B5C84 		movl	80(%rsp,%rax,4), %r11d
 3155      50
 3156 25a4 4585DB   		testl	%r11d, %r11d
 3157 25a7 0F85BD03 		jne	.L515
 3157      0000
 3158 25ad C7448450 		movl	$2, 80(%rsp,%rax,4)
 3158      02000000 
 3159 25b5 488B4424 		movq	72(%rsp), %rax
 3159      48
 3160 25ba 0FB610   		movzbl	(%rax), %edx
 3161 25bd 84D2     		testb	%dl, %dl
 3162 25bf 0F84EB02 		je	.L511
 3162      0000
 3163 25c5 448D5ABF 		leal	-65(%rdx), %r11d
 3164 25c9 4180FB19 		cmpb	$25, %r11b
 3165 25cd 0F878D02 		ja	.L509
 3165      0000
 3166 25d3 488D7801 		leaq	1(%rax), %rdi
 3167 25d7 48897C24 		movq	%rdi, 72(%rsp)
 3167      48
 3168 25dc 0FB64001 		movzbl	1(%rax), %eax
 3169 25e0 84C0     		testb	%al, %al
 3170 25e2 0F840003 		je	.L508
 3170      0000
 3171 25e8 83E830   		subl	$48, %eax
 3172 25eb 3C09     		cmpb	$9, %al
 3173 25ed 0F870502 		ja	.L507
 3173      0000
 3174 25f3 BA0A0000 		movl	$10, %edx
 3174      00
 3175 25f8 4C89F6   		movq	%r14, %rsi
 3176 25fb 44885C24 		movb	%r11b, 48(%rsp)
 3176      30
 3177 2600 884C2436 		movb	%cl, 54(%rsp)
 3178 2604 E8000000 		call	strtoul@PLT
 3178      00
 3179 2609 0FB64C24 		movzbl	48(%rsp), %ecx
 3179      30
 3180 260e 440FB64C 		movzbl	54(%rsp), %r9d
 3180      2436
 3181 2614 0FB6F0   		movzbl	%al, %esi
 3182 2617 0FB6D0   		movzbl	%al, %edx
 3183 261a 0FB6C1   		movzbl	%cl, %eax
 3184 261d 89742430 		movl	%esi, 48(%rsp)
 3185 2621 4189CB   		movl	%ecx, %r11d
 3186 2624 48C1E005 		salq	$5, %rax
 3187 2628 4801D0   		addq	%rdx, %rax
 3188 262b 448B5484 		movl	80(%rsp,%rax,4), %r10d
 3188      50
 3189 2630 4585D2   		testl	%r10d, %r10d
 3190 2633 0F850005 		jne	.L516
 3190      0000
 3191 2639 488B5424 		movq	72(%rsp), %rdx
 3191      48
 3192 263e C7448450 		movl	$2, 80(%rsp,%rax,4)
 3192      02000000 
 3193 2646 0FB602   		movzbl	(%rdx), %eax
 3194 2649 84C0     		testb	%al, %al
 3195 264b 0F840C05 		je	.L517
 3195      0000
 3196 2651 3C5B     		cmpb	$91, %al
 3197 2653 0F844704 		je	.L518
 3197      0000
 3198              	.L456:
 3199 2659 84C0     		testb	%al, %al
 3200 265b 7408     		je	.L460
 3201 265d 3C3A     		cmpb	$58, %al
 3202 265f 0F85A004 		jne	.L519
 3202      0000
 3203              	.L460:
 3204 2665 488D8424 		leaq	3424(%rsp), %rax
 3204      600D0000 
 3205 266d 488DBC24 		leaq	3416(%rsp), %rdi
 3205      580D0000 
 3206 2675 44885C24 		movb	%r11b, 55(%rsp)
 3206      37
 3207 267a 4889C6   		movq	%rax, %rsi
 3208 267d 44884C24 		movb	%r9b, 54(%rsp)
 3208      36
 3209 2682 48894424 		movq	%rax, 56(%rsp)
 3209      38
 3210 2687 E874D9FF 		call	makeLookup
 3210      FF
 3211 268c 488B3B   		movq	(%rbx), %rdi
 3212 268f 4531C0   		xorl	%r8d, %r8d
 3213 2692 BE860000 		movl	$134, %esi
 3213      00
 3214 2697 440FB64C 		movzbl	54(%rsp), %r9d
 3214      2436
 3215 269d 55       		pushq	%rbp
 3216              		.cfi_def_cfa_offset 3768
 3217 269e 68E80300 		pushq	$1000
 3217      00
 3218              		.cfi_def_cfa_offset 3776
 3219 26a3 8B54243C 		movl	60(%rsp), %edx
 3220 26a7 41C1E108 		sall	$8, %r9d
 3221 26ab 4183C904 		orl	$4, %r9d
 3222 26af 410FB7C9 		movzwl	%r9w, %ecx
 3223 26b3 4531C9   		xorl	%r9d, %r9d
 3224 26b6 E8000000 		call	usbControlWrite@PLT
 3224      00
 3225 26bb 4158     		popq	%r8
 3226              		.cfi_def_cfa_offset 3768
 3227 26bd 4159     		popq	%r9
 3228              		.cfi_def_cfa_offset 3760
 3229 26bf 85C0     		testl	%eax, %eax
 3230 26c1 0F857A02 		jne	.L461
 3230      0000
 3231 26c7 440FB65C 		movzbl	55(%rsp), %r11d
 3231      2437
 3232 26cd 55       		pushq	%rbp
 3233              		.cfi_def_cfa_offset 3768
 3234 26ce BE860000 		movl	$134, %esi
 3234      00
 3235 26d3 4531C9   		xorl	%r9d, %r9d
 3236 26d6 68E80300 		pushq	$1000
 3236      00
 3237              		.cfi_def_cfa_offset 3776
 3238 26db 488B3B   		movq	(%rbx), %rdi
 3239 26de 4531C0   		xorl	%r8d, %r8d
 3240 26e1 41C1E308 		sall	$8, %r11d
 3241 26e5 8B542440 		movl	64(%rsp), %edx
 3242 26e9 4183CB02 		orl	$2, %r11d
 3243 26ed 410FB7CB 		movzwl	%r11w, %ecx
 3244 26f1 E8000000 		call	usbControlWrite@PLT
 3244      00
 3245 26f6 5E       		popq	%rsi
 3246              		.cfi_def_cfa_offset 3768
 3247 26f7 5F       		popq	%rdi
 3248              		.cfi_def_cfa_offset 3760
 3249 26f8 85C0     		testl	%eax, %eax
 3250 26fa 0F854102 		jne	.L461
 3250      0000
 3251 2700 55       		pushq	%rbp
 3252              		.cfi_def_cfa_offset 3768
 3253 2701 488B3B   		movq	(%rbx), %rdi
 3254 2704 31C9     		xorl	%ecx, %ecx
 3255 2706 31D2     		xorl	%edx, %edx
 3256 2708 68E80300 		pushq	$1000
 3256      00
 3257              		.cfi_def_cfa_offset 3776
 3258 270d 4531C9   		xorl	%r9d, %r9d
 3259 2710 4531C0   		xorl	%r8d, %r8d
 3260 2713 BE860000 		movl	$134, %esi
 3260      00
 3261 2718 E8000000 		call	usbControlWrite@PLT
 3261      00
 3262 271d 5A       		popq	%rdx
 3263              		.cfi_def_cfa_offset 3768
 3264 271e 59       		popq	%rcx
 3265              		.cfi_def_cfa_offset 3760
 3266 271f 85C0     		testl	%eax, %eax
 3267 2721 0F851A02 		jne	.L461
 3267      0000
 3268 2727 4889EA   		movq	%rbp, %rdx
 3269 272a 31F6     		xorl	%esi, %esi
 3270 272c 4889DF   		movq	%rbx, %rdi
 3271 272f E8000000 		call	flSelectConduit@PLT
 3271      00
 3272 2734 4189C3   		movl	%eax, %r11d
 3273 2737 85C0     		testl	%eax, %eax
 3274 2739 0F852904 		jne	.L520
 3274      0000
 3275 273f 488B4424 		movq	8(%rsp), %rax
 3275      08
 3276 2744 4D89EC   		movq	%r13, %r12
 3277 2747 4589DF   		movl	%r11d, %r15d
 3278 274a 48C1E005 		salq	$5, %rax
 3279 274e 48034424 		addq	16(%rsp), %rax
 3279      10
 3280 2753 C7448450 		movl	$0, 80(%rsp,%rax,4)
 3280      00000000 
 3281              	.L464:
 3282 275b 4531F6   		xorl	%r14d, %r14d
 3283 275e EB0E     		jmp	.L466
 3284              		.p2align 4,,10
 3285              		.p2align 3
 3286              	.L465:
 3287 2760 4983C601 		addq	$1, %r14
 3288 2764 4983FE20 		cmpq	$32, %r14
 3289 2768 0F841F02 		je	.L521
 3289      0000
 3290              	.L466:
 3291 276e 438B0CB4 		movl	(%r12,%r14,4), %ecx
 3292 2772 4489F2   		movl	%r14d, %edx
 3293 2775 85C9     		testl	%ecx, %ecx
 3294 2777 74E7     		je	.L465
 3295 2779 4531C0   		xorl	%r8d, %r8d
 3296 277c 0FB6C9   		movzbl	%cl, %ecx
 3297 277f 4989E9   		movq	%rbp, %r9
 3298 2782 4489FE   		movl	%r15d, %esi
 3299 2785 4889DF   		movq	%rbx, %rdi
 3300 2788 E8000000 		call	flSingleBitPortAccess@PLT
 3300      00
 3301 278d 85C0     		testl	%eax, %eax
 3302 278f 74CF     		je	.L465
 3303 2791 488D3500 		leaq	.LC37(%rip), %rsi
 3303      000000
 3304 2798 4889EF   		movq	%rbp, %rdi
 3305 279b 4189C4   		movl	%eax, %r12d
 3306 279e E8000000 		call	errPrefix@PLT
 3306      00
 3307 27a3 EB22     		jmp	.L431
 3308              		.p2align 4,,10
 3309 27a5 0F1F00   		.p2align 3
 3310              	.L513:
 3311 27a8 488D0D00 		leaq	253+.LC0(%rip), %rcx
 3311      000000
 3312              	.L500:
 3313 27af 4C89FA   		movq	%r15, %rdx
 3314 27b2 488D3500 		leaq	.LC33(%rip), %rsi
 3314      000000
 3315 27b9 4889EF   		movq	%rbp, %rdi
 3316 27bc 41BC0B00 		movl	$11, %r12d
 3316      0000
 3317 27c2 E8000000 		call	errRender@PLT
 3317      00
 3318              	.L431:
 3319 27c7 488B8424 		movq	3688(%rsp), %rax
 3319      680E0000 
 3320 27cf 64482B04 		subq	%fs:40, %rax
 3320      25280000 
 3320      00
 3321 27d8 0F85D903 		jne	.L522
 3321      0000
 3322 27de 4881C478 		addq	$3704, %rsp
 3322      0E0000
 3323              		.cfi_remember_state
 3324              		.cfi_def_cfa_offset 56
 3325 27e5 4489E0   		movl	%r12d, %eax
 3326 27e8 5B       		popq	%rbx
 3327              		.cfi_def_cfa_offset 48
 3328 27e9 5D       		popq	%rbp
 3329              		.cfi_def_cfa_offset 40
 3330 27ea 415C     		popq	%r12
 3331              		.cfi_def_cfa_offset 32
 3332 27ec 415D     		popq	%r13
 3333              		.cfi_def_cfa_offset 24
 3334 27ee 415E     		popq	%r14
 3335              		.cfi_def_cfa_offset 16
 3336 27f0 415F     		popq	%r15
 3337              		.cfi_def_cfa_offset 8
 3338 27f2 C3       		ret
 3339              		.p2align 4,,10
 3340 27f3 0F1F4400 		.p2align 3
 3340      00
 3341              	.L507:
 3342              		.cfi_restore_state
 3343 27f8 4C89F8   		movq	%r15, %rax
 3344 27fb 488D1500 		leaq	.LC0(%rip), %rdx
 3344      000000
 3345 2802 4829F8   		subq	%rdi, %rax
 3346 2805 488D8C02 		leaq	256(%rdx,%rax), %rcx
 3346      00010000 
 3347              	.L503:
 3348 280d 4C89FA   		movq	%r15, %rdx
 3349 2810 488D3500 		leaq	.LC36(%rip), %rsi
 3349      000000
 3350 2817 4889EF   		movq	%rbp, %rdi
 3351 281a 31C0     		xorl	%eax, %eax
 3352 281c E8000000 		call	errRender@PLT
 3352      00
 3353 2821 41BC0B00 		movl	$11, %r12d
 3353      0000
 3354 2827 EB9E     		jmp	.L431
 3355 2829 0F1F8000 		.p2align 4,,10
 3355      000000
 3356              		.p2align 3
 3357              	.L512:
 3358 2830 4889F2   		movq	%rsi, %rdx
 3359 2833 488D0D00 		leaq	254+.LC0(%rip), %rcx
 3359      000000
 3360 283a 4C89C7   		movq	%r8, %rdi
 3361 283d 31C0     		xorl	%eax, %eax
 3362 283f 488D3500 		leaq	.LC34(%rip), %rsi
 3362      000000
 3363 2846 41BC0B00 		movl	$11, %r12d
 3363      0000
 3364 284c E8000000 		call	errRender@PLT
 3364      00
 3365 2851 E971FFFF 		jmp	.L431
 3365      FF
 3366 2856 662E0F1F 		.p2align 4,,10
 3366      84000000 
 3366      0000
 3367              		.p2align 3
 3368              	.L509:
 3369 2860 4C89FA   		movq	%r15, %rdx
 3370 2863 4829C2   		subq	%rax, %rdx
 3371 2866 488D0500 		leaq	.LC0(%rip), %rax
 3371      000000
 3372 286d 488D8C10 		leaq	256(%rax,%rdx), %rcx
 3372      00010000 
 3373              	.L501:
 3374 2875 4C89FA   		movq	%r15, %rdx
 3375 2878 488D3500 		leaq	.LC35(%rip), %rsi
 3375      000000
 3376 287f 4889EF   		movq	%rbp, %rdi
 3377 2882 31C0     		xorl	%eax, %eax
 3378 2884 E8000000 		call	errRender@PLT
 3378      00
 3379 2889 41BC0B00 		movl	$11, %r12d
 3379      0000
 3380 288f E933FFFF 		jmp	.L431
 3380      FF
 3381              		.p2align 4,,10
 3382 2894 0F1F4000 		.p2align 3
 3383              	.L502:
 3384 2898 488D3500 		leaq	.LC37(%rip), %rsi
 3384      000000
 3385 289f 4889EF   		movq	%rbp, %rdi
 3386 28a2 E8000000 		call	errPrefix@PLT
 3386      00
 3387 28a7 E91BFFFF 		jmp	.L431
 3387      FF
 3388 28ac 0F1F4000 		.p2align 4,,10
 3389              		.p2align 3
 3390              	.L511:
 3391 28b0 4C89FA   		movq	%r15, %rdx
 3392 28b3 4829C2   		subq	%rax, %rdx
 3393 28b6 488D0500 		leaq	.LC0(%rip), %rax
 3393      000000
 3394              	.L504:
 3395 28bd 488D3500 		leaq	.LC33(%rip), %rsi
 3395      000000
 3396 28c4 4889EF   		movq	%rbp, %rdi
 3397 28c7 488D8C02 		leaq	256(%rdx,%rax), %rcx
 3397      00010000 
 3398 28cf 4C89FA   		movq	%r15, %rdx
 3399 28d2 31C0     		xorl	%eax, %eax
 3400 28d4 41BC0B00 		movl	$11, %r12d
 3400      0000
 3401 28da E8000000 		call	errRender@PLT
 3401      00
 3402 28df E9E3FEFF 		jmp	.L431
 3402      FF
 3403              		.p2align 4,,10
 3404 28e4 0F1F4000 		.p2align 3
 3405              	.L508:
 3406 28e8 4C89F8   		movq	%r15, %rax
 3407 28eb 4829F8   		subq	%rdi, %rax
 3408              	.L506:
 3409 28ee 488D1500 		leaq	.LC0(%rip), %rdx
 3409      000000
 3410 28f5 EBC6     		jmp	.L504
 3411 28f7 660F1F84 		.p2align 4,,10
 3411      00000000 
 3411      00
 3412              		.p2align 3
 3413              	.L514:
 3414 2900 488D0D00 		leaq	.LC0(%rip), %rcx
 3414      000000
 3415 2907 8B542424 		movl	36(%rsp), %edx
 3416 290b 4C89F8   		movq	%r15, %rax
 3417 290e 482B4424 		subq	72(%rsp), %rax
 3417      48
 3418 2913 4C8D8C01 		leaq	257(%rcx,%rax), %r9
 3418      01010000 
 3419 291b 8B4C2428 		movl	40(%rsp), %ecx
 3420 291f 4D89F8   		movq	%r15, %r8
 3421 2922 83C241   		addl	$65, %edx
 3422              	.L505:
 3423 2925 488D3500 		leaq	.LC38(%rip), %rsi
 3423      000000
 3424 292c 4889EF   		movq	%rbp, %rdi
 3425 292f 31C0     		xorl	%eax, %eax
 3426 2931 41BC0B00 		movl	$11, %r12d
 3426      0000
 3427 2937 E8000000 		call	errRender@PLT
 3427      00
 3428 293c E986FEFF 		jmp	.L431
 3428      FF
 3429              	.L461:
 3430 2941 488D3500 		leaq	.LC17(%rip), %rsi
 3430      000000
 3431 2948 4889EF   		movq	%rbp, %rdi
 3432 294b 41BC0C00 		movl	$12, %r12d
 3432      0000
 3433 2951 E8000000 		call	errPrefix@PLT
 3433      00
 3434 2956 488D3500 		leaq	.LC37(%rip), %rsi
 3434      000000
 3435 295d 4889EF   		movq	%rbp, %rdi
 3436 2960 E8000000 		call	errPrefix@PLT
 3436      00
 3437 2965 E95DFEFF 		jmp	.L431
 3437      FF
 3438              	.L515:
 3439 296a 4C89F8   		movq	%r15, %rax
 3440 296d 8D5141   		leal	65(%rcx), %edx
 3441 2970 482B4424 		subq	72(%rsp), %rax
 3441      48
 3442 2975 4D89F8   		movq	%r15, %r8
 3443 2978 488D0D00 		leaq	.LC0(%rip), %rcx
 3443      000000
 3444 297f 4C8D8C01 		leaq	257(%rcx,%rax), %r9
 3444      01010000 
 3445 2987 8B4C242C 		movl	44(%rsp), %ecx
 3446 298b EB98     		jmp	.L505
 3447              	.L521:
 3448 298d 4183C701 		addl	$1, %r15d
 3449 2991 4983EC80 		subq	$-128, %r12
 3450 2995 4183FF1A 		cmpl	$26, %r15d
 3451 2999 0F85BCFD 		jne	.L464
 3451      FFFF
 3452 299f 8B542420 		movl	32(%rsp), %edx
 3453 29a3 8B74241C 		movl	28(%rsp), %esi
 3454 29a7 4989E9   		movq	%rbp, %r9
 3455 29aa 4531C0   		xorl	%r8d, %r8d
 3456 29ad B9030000 		movl	$3, %ecx
 3456      00
 3457 29b2 4889DF   		movq	%rbx, %rdi
 3458 29b5 E8000000 		call	flSingleBitPortAccess@PLT
 3458      00
 3459 29ba 4189C4   		movl	%eax, %r12d
 3460 29bd 85C0     		testl	%eax, %eax
 3461 29bf 0F85D3FE 		jne	.L502
 3461      FFFF
 3462 29c5 4C8B4424 		movq	56(%rsp), %r8
 3462      38
 3463 29ca 8B4C2418 		movl	24(%rsp), %ecx
 3464 29ce 4989E9   		movq	%rbp, %r9
 3465 29d1 4889DF   		movq	%rbx, %rdi
 3466 29d4 488B1424 		movq	(%rsp), %rdx
 3467 29d8 BE060000 		movl	$6, %esi
 3467      00
 3468 29dd E87ED9FF 		call	dataWrite
 3468      FF
 3469 29e2 4189C4   		movl	%eax, %r12d
 3470 29e5 85C0     		testl	%eax, %eax
 3471 29e7 0F85ABFE 		jne	.L502
 3471      FFFF
 3472 29ed 8B542428 		movl	40(%rsp), %edx
 3473 29f1 8B742424 		movl	36(%rsp), %esi
 3474 29f5 4989E9   		movq	%rbp, %r9
 3475 29f8 4C8D4424 		leaq	71(%rsp), %r8
 3475      47
 3476 29fd B9030000 		movl	$3, %ecx
 3476      00
 3477 2a02 4889DF   		movq	%rbx, %rdi
 3478 2a05 E8000000 		call	flSingleBitPortAccess@PLT
 3478      00
 3479 2a0a 4189C4   		movl	%eax, %r12d
 3480 2a0d 85C0     		testl	%eax, %eax
 3481 2a0f 0F8583FE 		jne	.L502
 3481      FFFF
 3482 2a15 4531DB   		xorl	%r11d, %r11d
 3483 2a18 807C2447 		cmpb	$0, 71(%rsp)
 3483      00
 3484 2a1d 0F84B101 		je	.L523
 3484      0000
 3485 2a23 89442418 		movl	%eax, 24(%rsp)
 3486 2a27 4989DC   		movq	%rbx, %r12
 3487 2a2a 4C896C24 		movq	%r13, 8(%rsp)
 3487      08
 3488 2a2f 4989ED   		movq	%rbp, %r13
 3489 2a32 4C89DD   		movq	%r11, %rbp
 3490              	.L471:
 3491 2a35 4889EB   		movq	%rbp, %rbx
 3492 2a38 89EE     		movl	%ebp, %esi
 3493 2a3a 4531F6   		xorl	%r14d, %r14d
 3494 2a3d 48C1E307 		salq	$7, %rbx
 3495 2a41 48035C24 		addq	8(%rsp), %rbx
 3495      08
 3496 2a46 EB16     		jmp	.L473
 3497 2a48 0F1F8400 		.p2align 4,,10
 3497      00000000 
 3498              		.p2align 3
 3499              	.L472:
 3500 2a50 4983C601 		addq	$1, %r14
 3501 2a54 4983FE20 		cmpq	$32, %r14
 3502 2a58 0F845E01 		je	.L524
 3502      0000
 3503              	.L473:
 3504 2a5e 428B04B3 		movl	(%rbx,%r14,4), %eax
 3505 2a62 4489F2   		movl	%r14d, %edx
 3506 2a65 85C0     		testl	%eax, %eax
 3507 2a67 74E7     		je	.L472
 3508 2a69 4531C0   		xorl	%r8d, %r8d
 3509 2a6c 4D89E9   		movq	%r13, %r9
 3510 2a6f B9030000 		movl	$3, %ecx
 3510      00
 3511 2a74 4C89E7   		movq	%r12, %rdi
 3512 2a77 893424   		movl	%esi, (%rsp)
 3513 2a7a E8000000 		call	flSingleBitPortAccess@PLT
 3513      00
 3514 2a7f 8B3424   		movl	(%rsp), %esi
 3515 2a82 85C0     		testl	%eax, %eax
 3516 2a84 4189C7   		movl	%eax, %r15d
 3517 2a87 74C7     		je	.L472
 3518 2a89 488D3500 		leaq	.LC37(%rip), %rsi
 3518      000000
 3519 2a90 4C89EF   		movq	%r13, %rdi
 3520 2a93 4589FC   		movl	%r15d, %r12d
 3521 2a96 E8000000 		call	errPrefix@PLT
 3521      00
 3522 2a9b E927FDFF 		jmp	.L431
 3522      FF
 3523              		.p2align 4,,10
 3524              		.p2align 3
 3525              	.L518:
 3526 2aa0 488D7201 		leaq	1(%rdx), %rsi
 3527 2aa4 884C2437 		movb	%cl, 55(%rsp)
 3528 2aa8 4989E8   		movq	%rbp, %r8
 3529 2aab 4C89E9   		movq	%r13, %rcx
 3530 2aae 4C89F2   		movq	%r14, %rdx
 3531 2ab1 4C89FF   		movq	%r15, %rdi
 3532 2ab4 44884C24 		movb	%r9b, 54(%rsp)
 3532      36
 3533 2ab9 48897424 		movq	%rsi, 72(%rsp)
 3533      48
 3534 2abe E8EDD5FF 		call	populateMap
 3534      FF
 3535 2ac3 440FB64C 		movzbl	54(%rsp), %r9d
 3535      2436
 3536 2ac9 440FB65C 		movzbl	55(%rsp), %r11d
 3536      2437
 3537 2acf 85C0     		testl	%eax, %eax
 3538 2ad1 4189C4   		movl	%eax, %r12d
 3539 2ad4 0F85BEFD 		jne	.L502
 3539      FFFF
 3540 2ada 488B4424 		movq	72(%rsp), %rax
 3540      48
 3541 2adf 0FB610   		movzbl	(%rax), %edx
 3542 2ae2 84D2     		testb	%dl, %dl
 3543 2ae4 0F84C6FD 		je	.L511
 3543      FFFF
 3544 2aea 80FA5D   		cmpb	$93, %dl
 3545 2aed 0F859000 		jne	.L525
 3545      0000
 3546 2af3 488D5001 		leaq	1(%rax), %rdx
 3547 2af7 48895424 		movq	%rdx, 72(%rsp)
 3547      48
 3548 2afc 0FB64001 		movzbl	1(%rax), %eax
 3549 2b00 E954FBFF 		jmp	.L456
 3549      FF
 3550              	.L519:
 3551 2b05 4C89F8   		movq	%r15, %rax
 3552 2b08 488D3500 		leaq	.LC40(%rip), %rsi
 3552      000000
 3553 2b0f 4889EF   		movq	%rbp, %rdi
 3554 2b12 41BC0B00 		movl	$11, %r12d
 3554      0000
 3555 2b18 4829D0   		subq	%rdx, %rax
 3556 2b1b 488D1500 		leaq	.LC0(%rip), %rdx
 3556      000000
 3557 2b22 488D8C02 		leaq	256(%rdx,%rax), %rcx
 3557      00010000 
 3558 2b2a 4C89FA   		movq	%r15, %rdx
 3559 2b2d 31C0     		xorl	%eax, %eax
 3560 2b2f E8000000 		call	errRender@PLT
 3560      00
 3561 2b34 E98EFCFF 		jmp	.L431
 3561      FF
 3562              	.L516:
 3563 2b39 4C89F8   		movq	%r15, %rax
 3564 2b3c 8D5141   		leal	65(%rcx), %edx
 3565 2b3f 482B4424 		subq	72(%rsp), %rax
 3565      48
 3566 2b44 4D89F8   		movq	%r15, %r8
 3567 2b47 488D0D00 		leaq	.LC0(%rip), %rcx
 3567      000000
 3568 2b4e 4C8D8C01 		leaq	257(%rcx,%rax), %r9
 3568      01010000 
 3569 2b56 89F1     		movl	%esi, %ecx
 3570 2b58 E9C8FDFF 		jmp	.L505
 3570      FF
 3571              	.L517:
 3572 2b5d 4C89F8   		movq	%r15, %rax
 3573 2b60 4829D0   		subq	%rdx, %rax
 3574 2b63 E986FDFF 		jmp	.L506
 3574      FF
 3575              	.L520:
 3576 2b68 488D3500 		leaq	.LC37(%rip), %rsi
 3576      000000
 3577 2b6f 4889EF   		movq	%rbp, %rdi
 3578 2b72 890424   		movl	%eax, (%rsp)
 3579 2b75 E8000000 		call	errPrefix@PLT
 3579      00
 3580 2b7a 448B2424 		movl	(%rsp), %r12d
 3581 2b7e E944FCFF 		jmp	.L431
 3581      FF
 3582              	.L525:
 3583 2b83 4C89FA   		movq	%r15, %rdx
 3584 2b86 488D3500 		leaq	.LC39(%rip), %rsi
 3584      000000
 3585 2b8d 4889EF   		movq	%rbp, %rdi
 3586 2b90 41BC0B00 		movl	$11, %r12d
 3586      0000
 3587 2b96 4829C2   		subq	%rax, %rdx
 3588 2b99 488D0500 		leaq	.LC0(%rip), %rax
 3588      000000
 3589 2ba0 488D8C10 		leaq	256(%rax,%rdx), %rcx
 3589      00010000 
 3590 2ba8 4C89FA   		movq	%r15, %rdx
 3591 2bab 31C0     		xorl	%eax, %eax
 3592 2bad E8000000 		call	errRender@PLT
 3592      00
 3593 2bb2 E910FCFF 		jmp	.L431
 3593      FF
 3594              	.L522:
 3595 2bb7 E8000000 		call	__stack_chk_fail@PLT
 3595      00
 3596              	.L524:
 3597 2bbc 4883C501 		addq	$1, %rbp
 3598 2bc0 4883FD1A 		cmpq	$26, %rbp
 3599 2bc4 0F856BFE 		jne	.L471
 3599      FFFF
 3600              	.L433:
 3601 2bca 448B6424 		movl	24(%rsp), %r12d
 3601      18
 3602 2bcf E9F3FBFF 		jmp	.L431
 3602      FF
 3603              	.L523:
 3604 2bd4 488D3500 		leaq	.LC41(%rip), %rsi
 3604      000000
 3605 2bdb 4889EF   		movq	%rbp, %rdi
 3606 2bde 41BC1400 		movl	$20, %r12d
 3606      0000
 3607 2be4 E8000000 		call	errPrefix@PLT
 3607      00
 3608 2be9 E9D9FBFF 		jmp	.L431
 3608      FF
 3609              		.cfi_endproc
 3610              	.LFE43:
 3612              		.section	.rodata.str1.8
 3613 06cd 000000   		.align 8
 3614              	.LC42:
 3615 06d0 666C5072 		.string	"flProgram(): Missing Xilinx algorithm code"
 3615      6F677261 
 3615      6D28293A 
 3615      204D6973 
 3615      73696E67 
 3616 06fb 00000000 		.align 8
 3616      00
 3617              	.LC43:
 3618 0700 666C5072 		.string	"flProgram(): '%c' is not a valid Xilinx algorithm code"
 3618      6F677261 
 3618      6D28293A 
 3618      20272563 
 3618      27206973 
 3619 0737 00       		.align 8
 3620              	.LC44:
 3621 0738 666C5072 		.string	"flProgram(): Missing Altera algorithm code"
 3621      6F677261 
 3621      6D28293A 
 3621      204D6973 
 3621      73696E67 
 3622 0763 00000000 		.align 8
 3622      00
 3623              	.LC45:
 3624 0768 666C5072 		.string	"flProgram(): '%c' is not a valid Altera algorithm code"
 3624      6F677261 
 3624      6D28293A 
 3624      20272563 
 3624      27206973 
 3625 079f 00       		.align 8
 3626              	.LC46:
 3627 07a0 6A50726F 		.string	"jProgram(): Unexpected end of config string:\n  %s\n  %s^"
 3627      6772616D 
 3627      28293A20 
 3627      556E6578 
 3627      70656374 
 3628              		.align 8
 3629              	.LC47:
 3630 07d8 6A50726F 		.string	"jProgram(): Expecting ':':\n  %s\n  %s^"
 3630      6772616D 
 3630      28293A20 
 3630      45787065 
 3630      6374696E 
 3631              		.section	.rodata.str1.1
 3632              	.LC48:
 3633 00ba 6A50726F 		.string	"jProgram()"
 3633      6772616D 
 3633      282900
 3634              		.section	.rodata.str1.8
 3635 07fe 0000     		.align 8
 3636              	.LC49:
 3637 0800 666C5072 		.string	"flProgram(): Missing algorithm vendor code"
 3637      6F677261 
 3637      6D28293A 
 3637      204D6973 
 3637      73696E67 
 3638 082b 00000000 		.align 8
 3638      00
 3639              	.LC50:
 3640 0830 666C5072 		.string	"flProgram(): '%c' is not a valid algorithm vendor code"
 3640      6F677261 
 3640      6D28293A 
 3640      20272563 
 3640      27206973 
 3641              		.text
 3642 2bee 6690     		.p2align 4
 3643              		.globl	flProgramBlob
 3645              	flProgramBlob:
 3646              	.LFB54:
 3647              		.cfi_startproc
 3648 2bf0 F30F1EFA 		endbr64
 3649 2bf4 4155     		pushq	%r13
 3650              		.cfi_def_cfa_offset 16
 3651              		.cfi_offset 13, -16
 3652 2bf6 4989CD   		movq	%rcx, %r13
 3653 2bf9 4883EC10 		subq	$16, %rsp
 3654              		.cfi_def_cfa_offset 32
 3655 2bfd 0FB606   		movzbl	(%rsi), %eax
 3656 2c00 3C58     		cmpb	$88, %al
 3657 2c02 746C     		je	.L546
 3658 2c04 3C41     		cmpb	$65, %al
 3659 2c06 7430     		je	.L547
 3660 2c08 3C4A     		cmpb	$74, %al
 3661 2c0a 0F840001 		je	.L548
 3661      0000
 3662 2c10 84C0     		testb	%al, %al
 3663 2c12 0F859000 		jne	.L540
 3663      0000
 3664 2c18 488D3500 		leaq	.LC49(%rip), %rsi
 3664      000000
 3665 2c1f 4C89C7   		movq	%r8, %rdi
 3666 2c22 E8000000 		call	errPrefix@PLT
 3666      00
 3667 2c27 4883C410 		addq	$16, %rsp
 3668              		.cfi_remember_state
 3669              		.cfi_def_cfa_offset 16
 3670 2c2b B80B0000 		movl	$11, %eax
 3670      00
 3671 2c30 415D     		popq	%r13
 3672              		.cfi_def_cfa_offset 8
 3673 2c32 C3       		ret
 3674              		.p2align 4,,10
 3675 2c33 0F1F4400 		.p2align 3
 3675      00
 3676              	.L547:
 3677              		.cfi_restore_state
 3678 2c38 0FB64601 		movzbl	1(%rsi), %eax
 3679 2c3c 3C53     		cmpb	$83, %al
 3680 2c3e 0F845C01 		je	.L549
 3680      0000
 3681 2c44 84C0     		testb	%al, %al
 3682 2c46 0F85A400 		jne	.L534
 3682      0000
 3683 2c4c 488D3500 		leaq	.LC44(%rip), %rsi
 3683      000000
 3684 2c53 4C89C7   		movq	%r8, %rdi
 3685 2c56 E8000000 		call	errPrefix@PLT
 3685      00
 3686 2c5b B80B0000 		movl	$11, %eax
 3686      00
 3687              	.L526:
 3688 2c60 4883C410 		addq	$16, %rsp
 3689              		.cfi_remember_state
 3690              		.cfi_def_cfa_offset 16
 3691 2c64 415D     		popq	%r13
 3692              		.cfi_def_cfa_offset 8
 3693 2c66 C3       		ret
 3694 2c67 660F1F84 		.p2align 4,,10
 3694      00000000 
 3694      00
 3695              		.p2align 3
 3696              	.L546:
 3697              		.cfi_restore_state
 3698 2c70 0FB64601 		movzbl	1(%rsi), %eax
 3699 2c74 3C50     		cmpb	$80, %al
 3700 2c76 0F845C01 		je	.L550
 3700      0000
 3701 2c7c 3C53     		cmpb	$83, %al
 3702 2c7e 0F847401 		je	.L551
 3702      0000
 3703 2c84 84C0     		testb	%al, %al
 3704 2c86 7548     		jne	.L530
 3705 2c88 488D3500 		leaq	.LC42(%rip), %rsi
 3705      000000
 3706 2c8f 4C89C7   		movq	%r8, %rdi
 3707 2c92 E8000000 		call	errPrefix@PLT
 3707      00
 3708 2c97 4883C410 		addq	$16, %rsp
 3709              		.cfi_remember_state
 3710              		.cfi_def_cfa_offset 16
 3711 2c9b B80B0000 		movl	$11, %eax
 3711      00
 3712 2ca0 415D     		popq	%r13
 3713              		.cfi_def_cfa_offset 8
 3714 2ca2 C3       		ret
 3715              		.p2align 4,,10
 3716 2ca3 0F1F4400 		.p2align 3
 3716      00
 3717              	.L540:
 3718              		.cfi_restore_state
 3719 2ca8 0FBED0   		movsbl	%al, %edx
 3720 2cab 488D3500 		leaq	.LC50(%rip), %rsi
 3720      000000
 3721 2cb2 31C0     		xorl	%eax, %eax
 3722 2cb4 4C89C7   		movq	%r8, %rdi
 3723 2cb7 E8000000 		call	errRender@PLT
 3723      00
 3724 2cbc 4883C410 		addq	$16, %rsp
 3725              		.cfi_remember_state
 3726              		.cfi_def_cfa_offset 16
 3727 2cc0 B80B0000 		movl	$11, %eax
 3727      00
 3728 2cc5 415D     		popq	%r13
 3729              		.cfi_def_cfa_offset 8
 3730 2cc7 C3       		ret
 3731 2cc8 0F1F8400 		.p2align 4,,10
 3731      00000000 
 3732              		.p2align 3
 3733              	.L530:
 3734              		.cfi_restore_state
 3735 2cd0 0FBED0   		movsbl	%al, %edx
 3736 2cd3 488D3500 		leaq	.LC43(%rip), %rsi
 3736      000000
 3737 2cda 31C0     		xorl	%eax, %eax
 3738 2cdc 4C89C7   		movq	%r8, %rdi
 3739 2cdf E8000000 		call	errRender@PLT
 3739      00
 3740 2ce4 4883C410 		addq	$16, %rsp
 3741              		.cfi_remember_state
 3742              		.cfi_def_cfa_offset 16
 3743 2ce8 B80B0000 		movl	$11, %eax
 3743      00
 3744 2ced 415D     		popq	%r13
 3745              		.cfi_def_cfa_offset 8
 3746 2cef C3       		ret
 3747              		.p2align 4,,10
 3748              		.p2align 3
 3749              	.L534:
 3750              		.cfi_restore_state
 3751 2cf0 0FBED0   		movsbl	%al, %edx
 3752 2cf3 488D3500 		leaq	.LC45(%rip), %rsi
 3752      000000
 3753 2cfa 31C0     		xorl	%eax, %eax
 3754 2cfc 4C89C7   		movq	%r8, %rdi
 3755 2cff E8000000 		call	errRender@PLT
 3755      00
 3756 2d04 B80B0000 		movl	$11, %eax
 3756      00
 3757 2d09 E952FFFF 		jmp	.L526
 3757      FF
 3758 2d0e 6690     		.p2align 4,,10
 3759              		.p2align 3
 3760              	.L548:
 3761 2d10 0FB64601 		movzbl	1(%rsi), %eax
 3762 2d14 84C0     		testb	%al, %al
 3763 2d16 0F849400 		je	.L552
 3763      0000
 3764 2d1c 3C3A     		cmpb	$58, %al
 3765 2d1e 0F85F400 		jne	.L553
 3765      0000
 3766 2d24 4C89C1   		movq	%r8, %rcx
 3767 2d27 488D5602 		leaq	2(%rsi), %rdx
 3768 2d2b 4C894424 		movq	%r8, 8(%rsp)
 3768      08
 3769 2d30 48893C24 		movq	%rdi, (%rsp)
 3770 2d34 E807DDFF 		call	progOpenInternal
 3770      FF
 3771 2d39 488B3C24 		movq	(%rsp), %rdi
 3772 2d3d 4C8B4424 		movq	8(%rsp), %r8
 3772      08
 3773 2d42 85C0     		testl	%eax, %eax
 3774 2d44 753A     		jne	.L545
 3775 2d46 4C89C2   		movq	%r8, %rdx
 3776 2d49 4C89EE   		movq	%r13, %rsi
 3777 2d4c 4C894424 		movq	%r8, 8(%rsp)
 3777      08
 3778 2d51 48893C24 		movq	%rdi, (%rsp)
 3779 2d55 E8000000 		call	csvfPlay@PLT
 3779      00
 3780 2d5a 488B3C24 		movq	(%rsp), %rdi
 3781 2d5e 4C8B4424 		movq	8(%rsp), %r8
 3781      08
 3782 2d63 85C0     		testl	%eax, %eax
 3783 2d65 7519     		jne	.L545
 3784 2d67 4C89C6   		movq	%r8, %rsi
 3785 2d6a 4C890424 		movq	%r8, (%rsp)
 3786 2d6e E8000000 		call	progClose@PLT
 3786      00
 3787 2d73 4C8B0424 		movq	(%rsp), %r8
 3788 2d77 85C0     		testl	%eax, %eax
 3789 2d79 0F84E1FE 		je	.L526
 3789      FFFF
 3790 2d7f 90       		.p2align 4,,10
 3791              		.p2align 3
 3792              	.L545:
 3793 2d80 488D3500 		leaq	.LC48(%rip), %rsi
 3793      000000
 3794 2d87 4C89C7   		movq	%r8, %rdi
 3795 2d8a 890424   		movl	%eax, (%rsp)
 3796 2d8d E8000000 		call	errPrefix@PLT
 3796      00
 3797 2d92 8B0424   		movl	(%rsp), %eax
 3798 2d95 E9C6FEFF 		jmp	.L526
 3798      FF
 3799 2d9a 660F1F44 		.p2align 4,,10
 3799      0000
 3800              		.p2align 3
 3801              	.L549:
 3802 2da0 4883C410 		addq	$16, %rsp
 3803              		.cfi_remember_state
 3804              		.cfi_def_cfa_offset 16
 3805 2da4 89D1     		movl	%edx, %ecx
 3806 2da6 4C89EA   		movq	%r13, %rdx
 3807 2da9 415D     		popq	%r13
 3808              		.cfi_def_cfa_offset 8
 3809 2dab E9D0F5FF 		jmp	aProgram
 3809      FF
 3810              	.L552:
 3811              		.cfi_restore_state
 3812 2db0 4889F2   		movq	%rsi, %rdx
 3813 2db3 488D0D00 		leaq	255+.LC0(%rip), %rcx
 3813      000000
 3814 2dba 4C89C7   		movq	%r8, %rdi
 3815 2dbd 488D3500 		leaq	.LC46(%rip), %rsi
 3815      000000
 3816 2dc4 E8000000 		call	errRender@PLT
 3816      00
 3817 2dc9 B80B0000 		movl	$11, %eax
 3817      00
 3818 2dce E98DFEFF 		jmp	.L526
 3818      FF
 3819              		.p2align 4,,10
 3820 2dd3 0F1F4400 		.p2align 3
 3820      00
 3821              	.L550:
 3822 2dd8 4883C410 		addq	$16, %rsp
 3823              		.cfi_remember_state
 3824              		.cfi_def_cfa_offset 16
 3825 2ddc 4D89C1   		movq	%r8, %r9
 3826 2ddf 4189D0   		movl	%edx, %r8d
 3827 2de2 4889F2   		movq	%rsi, %rdx
 3828 2de5 415D     		popq	%r13
 3829              		.cfi_def_cfa_offset 8
 3830 2de7 BE050000 		movl	$5, %esi
 3830      00
 3831 2dec E90FE6FF 		jmp	xProgram
 3831      FF
 3832              		.p2align 4,,10
 3833 2df1 0F1F8000 		.p2align 3
 3833      000000
 3834              	.L551:
 3835              		.cfi_restore_state
 3836 2df8 4883C410 		addq	$16, %rsp
 3837              		.cfi_remember_state
 3838              		.cfi_def_cfa_offset 16
 3839 2dfc 4D89C1   		movq	%r8, %r9
 3840 2dff 4189D0   		movl	%edx, %r8d
 3841 2e02 4889F2   		movq	%rsi, %rdx
 3842 2e05 415D     		popq	%r13
 3843              		.cfi_def_cfa_offset 8
 3844 2e07 BE060000 		movl	$6, %esi
 3844      00
 3845 2e0c E9EFE5FF 		jmp	xProgram
 3845      FF
 3846              		.p2align 4,,10
 3847 2e11 0F1F8000 		.p2align 3
 3847      000000
 3848              	.L553:
 3849              		.cfi_restore_state
 3850 2e18 4889F2   		movq	%rsi, %rdx
 3851 2e1b 31C0     		xorl	%eax, %eax
 3852 2e1d 488D0D00 		leaq	255+.LC0(%rip), %rcx
 3852      000000
 3853 2e24 4C89C7   		movq	%r8, %rdi
 3854 2e27 488D3500 		leaq	.LC47(%rip), %rsi
 3854      000000
 3855 2e2e E8000000 		call	errRender@PLT
 3855      00
 3856 2e33 B80B0000 		movl	$11, %eax
 3856      00
 3857 2e38 E923FEFF 		jmp	.L526
 3857      FF
 3858              		.cfi_endproc
 3859              	.LFE54:
 3861              		.section	.rodata.str1.1
 3862              	.LC51:
 3863 00c5 706C6179 		.string	"playSVF()"
 3863      53564628 
 3863      2900
 3864              		.section	.rodata.str1.8
 3865 0867 00       		.align 8
 3866              	.LC52:
 3867 0868 666C5072 		.string	"flProgram(): portConfig terminated before first ':'"
 3867      6F677261 
 3867      6D28293A 
 3867      20706F72 
 3867      74436F6E 
 3868 089c 00000000 		.align 8
 3869              	.LC53:
 3870 08a0 666C5072 		.string	"flProgram(): progFile was NULL, and portConfig didn't specify a file"
 3870      6F677261 
 3870      6D28293A 
 3870      2070726F 
 3870      6746696C 
 3871              		.section	.rodata.str1.1
 3872              	.LC54:
 3873 00cf 2E737666 		.string	".svf"
 3873      00
 3874              	.LC55:
 3875 00d4 666C5072 		.string	"flProgram()"
 3875      6F677261 
 3875      6D282900 
 3876              	.LC56:
 3877 00e0 2E787376 		.string	".xsvf"
 3877      6600
 3878              	.LC57:
 3879 00e6 2E637376 		.string	".csvf"
 3879      6600
 3880              		.section	.rodata.str1.8
 3881 08e5 000000   		.align 8
 3882              	.LC58:
 3883 08e8 666C5072 		.string	"flProgram(): JTAG files should have .svf, .xsvf or .csvf extension"
 3883      6F677261 
 3883      6D28293A 
 3883      204A5441 
 3883      47206669 
 3884              		.text
 3885 2e3d 0F1F00   		.p2align 4
 3886              		.globl	flProgram
 3888              	flProgram:
 3889              	.LFB55:
 3890              		.cfi_startproc
 3891 2e40 F30F1EFA 		endbr64
 3892 2e44 4157     		pushq	%r15
 3893              		.cfi_def_cfa_offset 16
 3894              		.cfi_offset 15, -16
 3895 2e46 660FEFC0 		pxor	%xmm0, %xmm0
 3896 2e4a 4989FF   		movq	%rdi, %r15
 3897 2e4d 4156     		pushq	%r14
 3898              		.cfi_def_cfa_offset 24
 3899              		.cfi_offset 14, -24
 3900 2e4f 4155     		pushq	%r13
 3901              		.cfi_def_cfa_offset 32
 3902              		.cfi_offset 13, -32
 3903 2e51 4989F5   		movq	%rsi, %r13
 3904 2e54 4154     		pushq	%r12
 3905              		.cfi_def_cfa_offset 40
 3906              		.cfi_offset 12, -40
 3907 2e56 4989CC   		movq	%rcx, %r12
 3908 2e59 55       		pushq	%rbp
 3909              		.cfi_def_cfa_offset 48
 3910              		.cfi_offset 6, -48
 3911 2e5a 4889D5   		movq	%rdx, %rbp
 3912 2e5d 31D2     		xorl	%edx, %edx
 3913 2e5f 53       		pushq	%rbx
 3914              		.cfi_def_cfa_offset 56
 3915              		.cfi_offset 3, -56
 3916 2e60 4883EC38 		subq	$56, %rsp
 3917              		.cfi_def_cfa_offset 112
 3918 2e64 0FB61E   		movzbl	(%rsi), %ebx
 3919 2e67 BE000002 		movl	$131072, %esi
 3919      00
 3920 2e6c 64488B04 		movq	%fs:40, %rax
 3920      25280000 
 3920      00
 3921 2e75 48894424 		movq	%rax, 40(%rsp)
 3921      28
 3922 2e7a 31C0     		xorl	%eax, %eax
 3923 2e7c 4989E6   		movq	%rsp, %r14
 3924 2e7f 0F290424 		movaps	%xmm0, (%rsp)
 3925 2e83 4C89F7   		movq	%r14, %rdi
 3926 2e86 0F294424 		movaps	%xmm0, 16(%rsp)
 3926      10
 3927 2e8b E8000000 		call	bufInitialise@PLT
 3927      00
 3928 2e90 85C0     		testl	%eax, %eax
 3929 2e92 0F854001 		jne	.L611
 3929      0000
 3930 2e98 4885ED   		testq	%rbp, %rbp
 3931 2e9b 0F84BF00 		je	.L612
 3931      0000
 3932              	.L557:
 3933 2ea1 80FB4A   		cmpb	$74, %bl
 3934 2ea4 7553     		jne	.L608
 3935 2ea6 4889EF   		movq	%rbp, %rdi
 3936 2ea9 E8000000 		call	strlen@PLT
 3936      00
 3937 2eae 488D3D00 		leaq	.LC54(%rip), %rdi
 3937      000000
 3938 2eb5 488D5C05 		leaq	-5(%rbp,%rax), %rbx
 3938      FB
 3939 2eba 488D7301 		leaq	1(%rbx), %rsi
 3940 2ebe E8000000 		call	strcmp@PLT
 3940      00
 3941 2ec3 85C0     		testl	%eax, %eax
 3942 2ec5 0F846501 		je	.L613
 3942      0000
 3943 2ecb 4889DE   		movq	%rbx, %rsi
 3944 2ece 488D3D00 		leaq	.LC56(%rip), %rdi
 3944      000000
 3945 2ed5 E8000000 		call	strcmp@PLT
 3945      00
 3946 2eda 85C0     		testl	%eax, %eax
 3947 2edc 0F841601 		je	.L614
 3947      0000
 3948 2ee2 4889DE   		movq	%rbx, %rsi
 3949 2ee5 488D3D00 		leaq	.LC57(%rip), %rdi
 3949      000000
 3950 2eec E8000000 		call	strcmp@PLT
 3950      00
 3951 2ef1 85C0     		testl	%eax, %eax
 3952 2ef3 0F857701 		jne	.L570
 3952      0000
 3953              	.L608:
 3954 2ef9 4C89E2   		movq	%r12, %rdx
 3955 2efc 4889EE   		movq	%rbp, %rsi
 3956 2eff 4C89F7   		movq	%r14, %rdi
 3957 2f02 E8000000 		call	bufAppendFromBinaryFile@PLT
 3957      00
 3958 2f07 85C0     		testl	%eax, %eax
 3959 2f09 0F854101 		jne	.L615
 3959      0000
 3960              	.L568:
 3961 2f0f 488B0C24 		movq	(%rsp), %rcx
 3962 2f13 8B542408 		movl	8(%rsp), %edx
 3963 2f17 4D89E0   		movq	%r12, %r8
 3964 2f1a 4C89EE   		movq	%r13, %rsi
 3965 2f1d 4C89FF   		movq	%r15, %rdi
 3966 2f20 E8000000 		call	flProgramBlob@PLT
 3966      00
 3967 2f25 89C3     		movl	%eax, %ebx
 3968 2f27 85C0     		testl	%eax, %eax
 3969 2f29 0F85E900 		jne	.L609
 3969      0000
 3970              	.L556:
 3971 2f2f 4C89F7   		movq	%r14, %rdi
 3972 2f32 E8000000 		call	bufDestroy@PLT
 3972      00
 3973 2f37 488B4424 		movq	40(%rsp), %rax
 3973      28
 3974 2f3c 64482B04 		subq	%fs:40, %rax
 3974      25280000 
 3974      00
 3975 2f45 0F855E01 		jne	.L616
 3975      0000
 3976 2f4b 4883C438 		addq	$56, %rsp
 3977              		.cfi_remember_state
 3978              		.cfi_def_cfa_offset 56
 3979 2f4f 89D8     		movl	%ebx, %eax
 3980 2f51 5B       		popq	%rbx
 3981              		.cfi_def_cfa_offset 48
 3982 2f52 5D       		popq	%rbp
 3983              		.cfi_def_cfa_offset 40
 3984 2f53 415C     		popq	%r12
 3985              		.cfi_def_cfa_offset 32
 3986 2f55 415D     		popq	%r13
 3987              		.cfi_def_cfa_offset 24
 3988 2f57 415E     		popq	%r14
 3989              		.cfi_def_cfa_offset 16
 3990 2f59 415F     		popq	%r15
 3991              		.cfi_def_cfa_offset 8
 3992 2f5b C3       		ret
 3993 2f5c 0F1F4000 		.p2align 4,,10
 3994              		.p2align 3
 3995              	.L612:
 3996              		.cfi_restore_state
 3997 2f60 410FB645 		movzbl	0(%r13), %eax
 3997      00
 3998 2f65 4C89EA   		movq	%r13, %rdx
 3999 2f68 84C0     		testb	%al, %al
 4000 2f6a 7514     		jne	.L610
 4001 2f6c EB16     		jmp	.L558
 4002 2f6e 6690     		.p2align 4,,10
 4003              		.p2align 3
 4004              	.L617:
 4005 2f70 0FB64201 		movzbl	1(%rdx), %eax
 4006 2f74 4883C201 		addq	$1, %rdx
 4007 2f78 84C0     		testb	%al, %al
 4008 2f7a 0F841001 		je	.L606
 4008      0000
 4009              	.L610:
 4010 2f80 3C3A     		cmpb	$58, %al
 4011 2f82 75EC     		jne	.L617
 4012              	.L558:
 4013 2f84 84C0     		testb	%al, %al
 4014 2f86 0F840401 		je	.L606
 4014      0000
 4015 2f8c 0FB64201 		movzbl	1(%rdx), %eax
 4016 2f90 488D6A01 		leaq	1(%rdx), %rbp
 4017 2f94 3C3A     		cmpb	$58, %al
 4018 2f96 7418     		je	.L562
 4019 2f98 84C0     		testb	%al, %al
 4020 2f9a 7414     		je	.L562
 4021 2f9c 0F1F4000 		.p2align 4,,10
 4022              		.p2align 3
 4023              	.L563:
 4024 2fa0 0FB64501 		movzbl	1(%rbp), %eax
 4025 2fa4 4883C501 		addq	$1, %rbp
 4026 2fa8 84C0     		testb	%al, %al
 4027 2faa 7404     		je	.L562
 4028 2fac 3C3A     		cmpb	$58, %al
 4029 2fae 75F0     		jne	.L563
 4030              	.L562:
 4031 2fb0 4883C501 		addq	$1, %rbp
 4032 2fb4 84C0     		testb	%al, %al
 4033 2fb6 0F85E5FE 		jne	.L557
 4033      FFFF
 4034 2fbc 488D3500 		leaq	.LC53(%rip), %rsi
 4034      000000
 4035 2fc3 4C89E7   		movq	%r12, %rdi
 4036 2fc6 BB0B0000 		movl	$11, %ebx
 4036      00
 4037 2fcb E8000000 		call	errPrefix@PLT
 4037      00
 4038 2fd0 E95AFFFF 		jmp	.L556
 4038      FF
 4039              		.p2align 4,,10
 4040 2fd5 0F1F00   		.p2align 3
 4041              	.L611:
 4042 2fd8 488D3500 		leaq	.LC51(%rip), %rsi
 4042      000000
 4043 2fdf 4C89E7   		movq	%r12, %rdi
 4044 2fe2 BB010000 		movl	$1, %ebx
 4044      00
 4045 2fe7 E8000000 		call	errPrefix@PLT
 4045      00
 4046 2fec E93EFFFF 		jmp	.L556
 4046      FF
 4047              		.p2align 4,,10
 4048 2ff1 0F1F8000 		.p2align 3
 4048      000000
 4049              	.L614:
 4050 2ff8 4C89E1   		movq	%r12, %rcx
 4051 2ffb 31D2     		xorl	%edx, %edx
 4052 2ffd 4C89F6   		movq	%r14, %rsi
 4053 3000 4889EF   		movq	%rbp, %rdi
 4054 3003 E8000000 		call	flLoadXsvfAndConvertToCsvf@PLT
 4054      00
 4055 3008 89C3     		movl	%eax, %ebx
 4056 300a 85C0     		testl	%eax, %eax
 4057 300c 0F84FDFE 		je	.L568
 4057      FFFF
 4058              		.p2align 4,,10
 4059 3012 660F1F44 		.p2align 3
 4059      0000
 4060              	.L609:
 4061 3018 488D3500 		leaq	.LC55(%rip), %rsi
 4061      000000
 4062 301f 4C89E7   		movq	%r12, %rdi
 4063 3022 E8000000 		call	errPrefix@PLT
 4063      00
 4064 3027 E903FFFF 		jmp	.L556
 4064      FF
 4065 302c 0F1F4000 		.p2align 4,,10
 4066              		.p2align 3
 4067              	.L613:
 4068 3030 4C89E1   		movq	%r12, %rcx
 4069 3033 31D2     		xorl	%edx, %edx
 4070 3035 4C89F6   		movq	%r14, %rsi
 4071 3038 4889EF   		movq	%rbp, %rdi
 4072 303b E8000000 		call	flLoadSvfAndConvertToCsvf@PLT
 4072      00
 4073 3040 89C3     		movl	%eax, %ebx
 4074 3042 85C0     		testl	%eax, %eax
 4075 3044 0F84C5FE 		je	.L568
 4075      FFFF
 4076 304a EBCC     		jmp	.L609
 4077 304c 0F1F4000 		.p2align 4,,10
 4078              		.p2align 3
 4079              	.L615:
 4080 3050 488D3500 		leaq	.LC55(%rip), %rsi
 4080      000000
 4081 3057 4C89E7   		movq	%r12, %rdi
 4082 305a BB060000 		movl	$6, %ebx
 4082      00
 4083 305f E8000000 		call	errPrefix@PLT
 4083      00
 4084 3064 E9C6FEFF 		jmp	.L556
 4084      FF
 4085 3069 0F1F8000 		.p2align 4,,10
 4085      000000
 4086              		.p2align 3
 4087              	.L570:
 4088 3070 488D3500 		leaq	.LC58(%rip), %rsi
 4088      000000
 4089 3077 4C89E7   		movq	%r12, %rdi
 4090 307a BB060000 		movl	$6, %ebx
 4090      00
 4091 307f E8000000 		call	errPrefix@PLT
 4091      00
 4092 3084 E9A6FEFF 		jmp	.L556
 4092      FF
 4093 3089 0F1F8000 		.p2align 4,,10
 4093      000000
 4094              		.p2align 3
 4095              	.L606:
 4096 3090 488D3500 		leaq	.LC52(%rip), %rsi
 4096      000000
 4097 3097 4C89E7   		movq	%r12, %rdi
 4098 309a BB0B0000 		movl	$11, %ebx
 4098      00
 4099 309f E8000000 		call	errPrefix@PLT
 4099      00
 4100 30a4 E986FEFF 		jmp	.L556
 4100      FF
 4101              	.L616:
 4102 30a9 E8000000 		call	__stack_chk_fail@PLT
 4102      00
 4103              		.cfi_endproc
 4104              	.LFE55:
 4106              		.section	.rodata.str1.8
 4107 092b 00000000 		.align 8
 4107      00
 4108              	.LC59:
 4109 0930 666C4D75 		.string	"flMultiBitPortAccess(): Unexpected end of config string:\n  %s\n  %s^"
 4109      6C746942 
 4109      6974506F 
 4109      72744163 
 4109      63657373 
 4110 0974 00000000 		.align 8
 4111              	.LC60:
 4112 0978 666C4D75 		.string	"flMultiBitPortAccess(): Port is not valid (try 'A', 'B', 'C', etc):\n  %s\n  %s^"
 4112      6C746942 
 4112      6974506F 
 4112      72744163 
 4112      63657373 
 4113 09c7 00       		.align 8
 4114              	.LC61:
 4115 09c8 666C4D75 		.string	"flMultiBitPortAccess(): Bit number is not valid:\n  %s\n  %s^"
 4115      6C746942 
 4115      6974506F 
 4115      72744163 
 4115      63657373 
 4116 0a04 00000000 		.align 8
 4117              	.LC62:
 4118 0a08 666C4D75 		.string	"flMultiBitPortAccess(): Expecting '+', '-' or '?':\n  %s\n  %s^"
 4118      6C746942 
 4118      6974506F 
 4118      72744163 
 4118      63657373 
 4119 0a46 0000     		.align 8
 4120              	.LC63:
 4121 0a48 666C4D75 		.string	"flMultiBitPortAccess(): Expecting ',' or '\\0' here:\n  %s\n  %s^"
 4121      6C746942 
 4121      6974506F 
 4121      72744163 
 4121      63657373 
 4122              		.text
 4123 30ae 6690     		.p2align 4
 4124              		.globl	flMultiBitPortAccess
 4126              	flMultiBitPortAccess:
 4127              	.LFB57:
 4128              		.cfi_startproc
 4129 30b0 F30F1EFA 		endbr64
 4130 30b4 4157     		pushq	%r15
 4131              		.cfi_def_cfa_offset 16
 4132              		.cfi_offset 15, -16
 4133 30b6 4156     		pushq	%r14
 4134              		.cfi_def_cfa_offset 24
 4135              		.cfi_offset 14, -24
 4136 30b8 4155     		pushq	%r13
 4137              		.cfi_def_cfa_offset 32
 4138              		.cfi_offset 13, -32
 4139 30ba 4989FD   		movq	%rdi, %r13
 4140 30bd 4154     		pushq	%r12
 4141              		.cfi_def_cfa_offset 40
 4142              		.cfi_offset 12, -40
 4143 30bf 4989F4   		movq	%rsi, %r12
 4144 30c2 55       		pushq	%rbp
 4145              		.cfi_def_cfa_offset 48
 4146              		.cfi_offset 6, -48
 4147 30c3 4889CD   		movq	%rcx, %rbp
 4148 30c6 53       		pushq	%rbx
 4149              		.cfi_def_cfa_offset 56
 4150              		.cfi_offset 3, -56
 4151 30c7 31DB     		xorl	%ebx, %ebx
 4152 30c9 4883EC38 		subq	$56, %rsp
 4153              		.cfi_def_cfa_offset 112
 4154 30cd 48895424 		movq	%rdx, 8(%rsp)
 4154      08
 4155 30d2 4C8D7424 		leaq	32(%rsp), %r14
 4155      20
 4156 30d7 4889F2   		movq	%rsi, %rdx
 4157 30da 64488B04 		movq	%fs:40, %rax
 4157      25280000 
 4157      00
 4158 30e3 48894424 		movq	%rax, 40(%rsp)
 4158      28
 4159 30e8 31C0     		xorl	%eax, %eax
 4160 30ea 48897424 		movq	%rsi, 32(%rsp)
 4160      20
 4161              	.L627:
 4162 30ef 0FB60A   		movzbl	(%rdx), %ecx
 4163 30f2 84C9     		testb	%cl, %cl
 4164 30f4 0F844601 		je	.L640
 4164      0000
 4165 30fa 448D79BF 		leal	-65(%rcx), %r15d
 4166 30fe 4180FF19 		cmpb	$25, %r15b
 4167 3102 0F877001 		ja	.L641
 4167      0000
 4168 3108 488D7A01 		leaq	1(%rdx), %rdi
 4169 310c 48897C24 		movq	%rdi, 32(%rsp)
 4169      20
 4170 3111 0FB64201 		movzbl	1(%rdx), %eax
 4171 3115 84C0     		testb	%al, %al
 4172 3117 0F849301 		je	.L642
 4172      0000
 4173 311d 83E830   		subl	$48, %eax
 4174 3120 3C09     		cmpb	$9, %al
 4175 3122 0F879801 		ja	.L643
 4175      0000
 4176 3128 BA0A0000 		movl	$10, %edx
 4176      00
 4177 312d 4C89F6   		movq	%r14, %rsi
 4178 3130 E8000000 		call	strtoul@PLT
 4178      00
 4179 3135 488B7424 		movq	32(%rsp), %rsi
 4179      20
 4180 313a 0FB616   		movzbl	(%rsi), %edx
 4181 313d 84D2     		testb	%dl, %dl
 4182 313f 0F84B301 		je	.L644
 4182      0000
 4183 3145 80FA2D   		cmpb	$45, %dl
 4184 3148 0F84E200 		je	.L630
 4184      0000
 4185 314e 80FA3F   		cmpb	$63, %dl
 4186 3151 745D     		je	.L631
 4187 3153 80FA2B   		cmpb	$43, %dl
 4188 3156 0F84C400 		je	.L632
 4188      0000
 4189 315c 4C89E0   		movq	%r12, %rax
 4190 315f 488D1500 		leaq	.LC0(%rip), %rdx
 4190      000000
 4191 3166 4889EF   		movq	%rbp, %rdi
 4192 3169 4829F0   		subq	%rsi, %rax
 4193 316c 488D3500 		leaq	.LC62(%rip), %rsi
 4193      000000
 4194 3173 488D8C02 		leaq	256(%rdx,%rax), %rcx
 4194      00010000 
 4195 317b 31C0     		xorl	%eax, %eax
 4196 317d 4C89E2   		movq	%r12, %rdx
 4197 3180 E8000000 		call	errRender@PLT
 4197      00
 4198 3185 B80B0000 		movl	$11, %eax
 4198      00
 4199              	.L618:
 4200 318a 488B5424 		movq	40(%rsp), %rdx
 4200      28
 4201 318f 64482B14 		subq	%fs:40, %rdx
 4201      25280000 
 4201      00
 4202 3198 0F859801 		jne	.L645
 4202      0000
 4203 319e 4883C438 		addq	$56, %rsp
 4204              		.cfi_remember_state
 4205              		.cfi_def_cfa_offset 56
 4206 31a2 5B       		popq	%rbx
 4207              		.cfi_def_cfa_offset 48
 4208 31a3 5D       		popq	%rbp
 4209              		.cfi_def_cfa_offset 40
 4210 31a4 415C     		popq	%r12
 4211              		.cfi_def_cfa_offset 32
 4212 31a6 415D     		popq	%r13
 4213              		.cfi_def_cfa_offset 24
 4214 31a8 415E     		popq	%r14
 4215              		.cfi_def_cfa_offset 16
 4216 31aa 415F     		popq	%r15
 4217              		.cfi_def_cfa_offset 8
 4218 31ac C3       		ret
 4219 31ad 0F1F00   		.p2align 4,,10
 4220              		.p2align 3
 4221              	.L631:
 4222              		.cfi_restore_state
 4223 31b0 41BA0300 		movl	$3, %r10d
 4223      0000
 4224              	.L625:
 4225 31b6 0FB6D0   		movzbl	%al, %edx
 4226 31b9 410FB6F7 		movzbl	%r15b, %esi
 4227 31bd 4989E9   		movq	%rbp, %r9
 4228 31c0 4489D1   		movl	%r10d, %ecx
 4229 31c3 4C8D4424 		leaq	31(%rsp), %r8
 4229      1F
 4230 31c8 4C89EF   		movq	%r13, %rdi
 4231 31cb E8000000 		call	flSingleBitPortAccess@PLT
 4231      00
 4232 31d0 85C0     		testl	%eax, %eax
 4233 31d2 75B6     		jne	.L618
 4234 31d4 01DB     		addl	%ebx, %ebx
 4235 31d6 807C241F 		cmpb	$0, 31(%rsp)
 4235      00
 4236 31db 7403     		je	.L626
 4237 31dd 83CB01   		orl	$1, %ebx
 4238              	.L626:
 4239 31e0 488B4C24 		movq	32(%rsp), %rcx
 4239      20
 4240 31e5 488D5102 		leaq	2(%rcx), %rdx
 4241 31e9 48895424 		movq	%rdx, 32(%rsp)
 4241      20
 4242 31ee 0FB64901 		movzbl	1(%rcx), %ecx
 4243 31f2 80F92C   		cmpb	$44, %cl
 4244 31f5 0F84F4FE 		je	.L627
 4244      FFFF
 4245 31fb 84C9     		testb	%cl, %cl
 4246 31fd 0F850001 		jne	.L646
 4246      0000
 4247 3203 488B7C24 		movq	8(%rsp), %rdi
 4247      08
 4248 3208 4885FF   		testq	%rdi, %rdi
 4249 320b 0F8479FF 		je	.L618
 4249      FFFF
 4250              	.L620:
 4251 3211 891F     		movl	%ebx, (%rdi)
 4252 3213 E972FFFF 		jmp	.L618
 4252      FF
 4253 3218 0F1F8400 		.p2align 4,,10
 4253      00000000 
 4254              		.p2align 3
 4255              	.L632:
 4256 3220 41BA0100 		movl	$1, %r10d
 4256      0000
 4257 3226 EB8E     		jmp	.L625
 4258 3228 0F1F8400 		.p2align 4,,10
 4258      00000000 
 4259              		.p2align 3
 4260              	.L630:
 4261 3230 41BA0200 		movl	$2, %r10d
 4261      0000
 4262 3236 E97BFFFF 		jmp	.L625
 4262      FF
 4263 323b 0F1F4400 		.p2align 4,,10
 4263      00
 4264              		.p2align 3
 4265              	.L640:
 4266 3240 4C89E0   		movq	%r12, %rax
 4267 3243 4829D0   		subq	%rdx, %rax
 4268              	.L639:
 4269 3246 488D1500 		leaq	.LC0(%rip), %rdx
 4269      000000
 4270 324d 488D3500 		leaq	.LC59(%rip), %rsi
 4270      000000
 4271 3254 4889EF   		movq	%rbp, %rdi
 4272 3257 488D8C02 		leaq	256(%rdx,%rax), %rcx
 4272      00010000 
 4273 325f 31C0     		xorl	%eax, %eax
 4274 3261 4C89E2   		movq	%r12, %rdx
 4275 3264 E8000000 		call	errRender@PLT
 4275      00
 4276 3269 B80B0000 		movl	$11, %eax
 4276      00
 4277 326e E917FFFF 		jmp	.L618
 4277      FF
 4278              		.p2align 4,,10
 4279 3273 0F1F4400 		.p2align 3
 4279      00
 4280              	.L641:
 4281 3278 4C89E0   		movq	%r12, %rax
 4282 327b 488D3500 		leaq	.LC60(%rip), %rsi
 4282      000000
 4283 3282 4889EF   		movq	%rbp, %rdi
 4284 3285 4829D0   		subq	%rdx, %rax
 4285 3288 488D1500 		leaq	.LC0(%rip), %rdx
 4285      000000
 4286 328f 488D8C02 		leaq	256(%rdx,%rax), %rcx
 4286      00010000 
 4287 3297 31C0     		xorl	%eax, %eax
 4288 3299 4C89E2   		movq	%r12, %rdx
 4289 329c E8000000 		call	errRender@PLT
 4289      00
 4290 32a1 B80B0000 		movl	$11, %eax
 4290      00
 4291 32a6 E9DFFEFF 		jmp	.L618
 4291      FF
 4292 32ab 0F1F4400 		.p2align 4,,10
 4292      00
 4293              		.p2align 3
 4294              	.L642:
 4295 32b0 4C89E0   		movq	%r12, %rax
 4296 32b3 4829F8   		subq	%rdi, %rax
 4297 32b6 EB8E     		jmp	.L639
 4298 32b8 0F1F8400 		.p2align 4,,10
 4298      00000000 
 4299              		.p2align 3
 4300              	.L643:
 4301 32c0 4C89E0   		movq	%r12, %rax
 4302 32c3 488D1500 		leaq	.LC0(%rip), %rdx
 4302      000000
 4303 32ca 488D3500 		leaq	.LC61(%rip), %rsi
 4303      000000
 4304 32d1 4829F8   		subq	%rdi, %rax
 4305 32d4 4889EF   		movq	%rbp, %rdi
 4306 32d7 488D8C02 		leaq	256(%rdx,%rax), %rcx
 4306      00010000 
 4307 32df 31C0     		xorl	%eax, %eax
 4308 32e1 4C89E2   		movq	%r12, %rdx
 4309 32e4 E8000000 		call	errRender@PLT
 4309      00
 4310 32e9 B80B0000 		movl	$11, %eax
 4310      00
 4311 32ee E997FEFF 		jmp	.L618
 4311      FF
 4312              		.p2align 4,,10
 4313 32f3 0F1F4400 		.p2align 3
 4313      00
 4314              	.L644:
 4315 32f8 4C89E0   		movq	%r12, %rax
 4316 32fb 4829F0   		subq	%rsi, %rax
 4317 32fe E943FFFF 		jmp	.L639
 4317      FF
 4318              	.L646:
 4319 3303 4C89E0   		movq	%r12, %rax
 4320 3306 488D3500 		leaq	.LC63(%rip), %rsi
 4320      000000
 4321 330d 4889EF   		movq	%rbp, %rdi
 4322 3310 4829D0   		subq	%rdx, %rax
 4323 3313 488D1500 		leaq	.LC0(%rip), %rdx
 4323      000000
 4324 331a 488D8C02 		leaq	257(%rdx,%rax), %rcx
 4324      01010000 
 4325 3322 31C0     		xorl	%eax, %eax
 4326 3324 4C89E2   		movq	%r12, %rdx
 4327 3327 E8000000 		call	errRender@PLT
 4327      00
 4328 332c B80B0000 		movl	$11, %eax
 4328      00
 4329 3331 E954FEFF 		jmp	.L618
 4329      FF
 4330              	.L645:
 4331 3336 E8000000 		call	__stack_chk_fail@PLT
 4331      00
 4332              		.cfi_endproc
 4333              	.LFE57:
 4335              		.section	.rodata
 4336              		.align 8
 4339              	indexValues:
 4344              		.ident	"GCC: (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0"
 4345              		.section	.note.GNU-stack,"",@progbits
 4346              		.section	.note.gnu.property,"a"
 4347              		.align 8
 4348 0000 04000000 		.long	1f - 0f
 4349 0004 10000000 		.long	4f - 1f
 4350 0008 05000000 		.long	5
 4351              	0:
 4352 000c 474E5500 		.string	"GNU"
 4353              	1:
 4354              		.align 8
 4355 0010 020000C0 		.long	0xc0000002
 4356 0014 04000000 		.long	3f - 2f
 4357              	2:
 4358 0018 03000000 		.long	0x3
 4359              	3:
 4360 001c 00000000 		.align 8
 4361              	4:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 prog.c
     /tmp/ccjpPAk3.s:5      .text:0000000000000000 makeLookup
     /tmp/ccjpPAk3.s:104    .text:00000000000000b0 populateMap
     /tmp/ccjpPAk3.s:389    .text:0000000000000360 dataWrite
     /tmp/ccjpPAk3.s:537    .text:00000000000004d0 jtagShiftInOut
     /tmp/ccjpPAk3.s:750    .text:0000000000000720 jtagShiftInOnly
     /tmp/ccjpPAk3.s:918    .text:00000000000008c0 jtagClockFSM
     /tmp/ccjpPAk3.s:981    .text:0000000000000940 jtagClocks
     /tmp/ccjpPAk3.s:1033   .text:0000000000000990 flSingleBitPortAccess
     /tmp/ccjpPAk3.s:4339   .rodata:0000000000000000 indexValues
     /tmp/ccjpPAk3.s:1125   .text:0000000000000a40 progOpenInternal
     /tmp/ccjpPAk3.s:1595   .text:0000000000001070 progOpen
     /tmp/ccjpPAk3.s:1612   .text:0000000000001080 progClose
     /tmp/ccjpPAk3.s:1717   .text:0000000000001160 jtagScanChain
     /tmp/ccjpPAk3.s:1983   .text:0000000000001400 xProgram
     /tmp/ccjpPAk3.s:3011   .text:0000000000002380 aProgram
     /tmp/ccjpPAk3.s:3645   .text:0000000000002bf0 flProgramBlob
     /tmp/ccjpPAk3.s:3888   .text:0000000000002e40 flProgram
     /tmp/ccjpPAk3.s:4126   .text:00000000000030b0 flMultiBitPortAccess
     /tmp/ccjpPAk3.s:84     .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccjpPAk3.s:87     .rodata.str1.8:0000000000000108 .LC1
     /tmp/ccjpPAk3.s:90     .rodata.str1.8:0000000000000148 .LC2
     /tmp/ccjpPAk3.s:93     .rodata.str1.8:0000000000000190 .LC3
     /tmp/ccjpPAk3.s:96     .rodata.str1.8:00000000000001c8 .LC4
     /tmp/ccjpPAk3.s:99     .rodata.str1.8:0000000000000200 .LC5
     /tmp/ccjpPAk3.s:384    .rodata.str1.1:0000000000000019 .LC8
     /tmp/ccjpPAk3.s:382    .rodata.str1.1:000000000000000d .LC7
     /tmp/ccjpPAk3.s:380    .rodata.str1.1:0000000000000000 .LC6
     /tmp/ccjpPAk3.s:529    .rodata.str1.1:0000000000000022 .LC9
     /tmp/ccjpPAk3.s:531    .rodata.str1.1:0000000000000033 .LC10
     /tmp/ccjpPAk3.s:912    .rodata.str1.1:000000000000003f .LC11
     /tmp/ccjpPAk3.s:975    .rodata.str1.1:000000000000004e .LC12
     /tmp/ccjpPAk3.s:1027   .rodata.str1.1:000000000000005b .LC13
     /tmp/ccjpPAk3.s:1105   .rodata.str1.8:0000000000000238 .LC14
     /tmp/ccjpPAk3.s:1111   .rodata.str1.8:00000000000002b8 .LC16
     /tmp/ccjpPAk3.s:1114   .rodata.str1.1:0000000000000073 .LC17
     /tmp/ccjpPAk3.s:1116   .rodata.str1.1:000000000000007d .LC18
     /tmp/ccjpPAk3.s:1108   .rodata.str1.8:0000000000000270 .LC15
     /tmp/ccjpPAk3.s:1120   .rodata.str1.8:00000000000002e8 .LC19
     /tmp/ccjpPAk3.s:1606   .rodata.str1.1:0000000000000088 .LC20
     /tmp/ccjpPAk3.s:1711   .rodata.str1.1:0000000000000094 .LC21
     /tmp/ccjpPAk3.s:1965   .rodata.str1.1:00000000000000a4 .LC28
     /tmp/ccjpPAk3.s:1953   .rodata.str1.8:0000000000000380 .LC24
     /tmp/ccjpPAk3.s:1956   .rodata.str1.8:00000000000003c8 .LC25
     /tmp/ccjpPAk3.s:1947   .rodata.str1.8:0000000000000320 .LC22
     /tmp/ccjpPAk3.s:1950   .rodata.str1.8:0000000000000358 .LC23
     /tmp/ccjpPAk3.s:1959   .rodata.str1.8:00000000000003f8 .LC26
     /tmp/ccjpPAk3.s:1972   .rodata.str1.8:0000000000000488 .LC30
     /tmp/ccjpPAk3.s:1962   .rodata.str1.8:0000000000000430 .LC27
     /tmp/ccjpPAk3.s:1969   .rodata.str1.8:0000000000000460 .LC29
     /tmp/ccjpPAk3.s:1975   .rodata.str1.8:00000000000004c0 .LC31
     /tmp/ccjpPAk3.s:1978   .rodata.str1.8:00000000000004e0 .LC32
     /tmp/ccjpPAk3.s:2993   .rodata.str1.1:00000000000000af .LC37
     /tmp/ccjpPAk3.s:2981   .rodata.str1.8:0000000000000520 .LC33
     /tmp/ccjpPAk3.s:2990   .rodata.str1.8:00000000000005c8 .LC36
     /tmp/ccjpPAk3.s:2984   .rodata.str1.8:0000000000000558 .LC34
     /tmp/ccjpPAk3.s:2987   .rodata.str1.8:0000000000000580 .LC35
     /tmp/ccjpPAk3.s:2997   .rodata.str1.8:00000000000005f8 .LC38
     /tmp/ccjpPAk3.s:3003   .rodata.str1.8:0000000000000658 .LC40
     /tmp/ccjpPAk3.s:3000   .rodata.str1.8:0000000000000630 .LC39
     /tmp/ccjpPAk3.s:3006   .rodata.str1.8:0000000000000690 .LC41
     /tmp/ccjpPAk3.s:3636   .rodata.str1.8:0000000000000800 .LC49
     /tmp/ccjpPAk3.s:3620   .rodata.str1.8:0000000000000738 .LC44
     /tmp/ccjpPAk3.s:3614   .rodata.str1.8:00000000000006d0 .LC42
     /tmp/ccjpPAk3.s:3639   .rodata.str1.8:0000000000000830 .LC50
     /tmp/ccjpPAk3.s:3617   .rodata.str1.8:0000000000000700 .LC43
     /tmp/ccjpPAk3.s:3623   .rodata.str1.8:0000000000000768 .LC45
     /tmp/ccjpPAk3.s:3632   .rodata.str1.1:00000000000000ba .LC48
     /tmp/ccjpPAk3.s:3626   .rodata.str1.8:00000000000007a0 .LC46
     /tmp/ccjpPAk3.s:3629   .rodata.str1.8:00000000000007d8 .LC47
     /tmp/ccjpPAk3.s:3872   .rodata.str1.1:00000000000000cf .LC54
     /tmp/ccjpPAk3.s:3876   .rodata.str1.1:00000000000000e0 .LC56
     /tmp/ccjpPAk3.s:3878   .rodata.str1.1:00000000000000e6 .LC57
     /tmp/ccjpPAk3.s:3869   .rodata.str1.8:00000000000008a0 .LC53
     /tmp/ccjpPAk3.s:3862   .rodata.str1.1:00000000000000c5 .LC51
     /tmp/ccjpPAk3.s:3874   .rodata.str1.1:00000000000000d4 .LC55
     /tmp/ccjpPAk3.s:3882   .rodata.str1.8:00000000000008e8 .LC58
     /tmp/ccjpPAk3.s:3866   .rodata.str1.8:0000000000000868 .LC52
     /tmp/ccjpPAk3.s:4117   .rodata.str1.8:0000000000000a08 .LC62
     /tmp/ccjpPAk3.s:4108   .rodata.str1.8:0000000000000930 .LC59
     /tmp/ccjpPAk3.s:4111   .rodata.str1.8:0000000000000978 .LC60
     /tmp/ccjpPAk3.s:4114   .rodata.str1.8:00000000000009c8 .LC61
     /tmp/ccjpPAk3.s:4120   .rodata.str1.8:0000000000000a48 .LC63

UNDEFINED SYMBOLS
strtoul
errRender
usbControlWrite
usbBulkWrite
errPrefix
__stack_chk_fail
usbBulkRead
usbControlRead
flSelectConduit
csvfPlay
bufInitialise
strlen
strcmp
bufAppendFromBinaryFile
bufDestroy
flLoadXsvfAndConvertToCsvf
flLoadSvfAndConvertToCsvf
