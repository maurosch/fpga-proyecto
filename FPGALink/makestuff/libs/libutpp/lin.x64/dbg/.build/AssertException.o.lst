   1              		.file	"AssertException.cpp"
   2              		.text
   3              	.Ltext0:
   4              		.file 0 "/home/pong/FPGALink/makestuff/libs/libutpp" "AssertException.cpp"
   5              		.section	.text._ZNSt9exceptionC2Ev,"axG",@progbits,_ZNSt9exceptionC5Ev,comdat
   6              		.align 2
   7              		.weak	_ZNSt9exceptionC2Ev
   9              	_ZNSt9exceptionC2Ev:
  10              	.LFB1:
  11              		.file 1 "/usr/include/c++/11/bits/exception.h"
   1:/usr/include/c++/11/bits/exception.h **** // Exception Handling support header for -*- C++ -*-
   2:/usr/include/c++/11/bits/exception.h **** 
   3:/usr/include/c++/11/bits/exception.h **** // Copyright (C) 2016-2021 Free Software Foundation, Inc.
   4:/usr/include/c++/11/bits/exception.h **** //
   5:/usr/include/c++/11/bits/exception.h **** // This file is part of GCC.
   6:/usr/include/c++/11/bits/exception.h **** //
   7:/usr/include/c++/11/bits/exception.h **** // GCC is free software; you can redistribute it and/or modify
   8:/usr/include/c++/11/bits/exception.h **** // it under the terms of the GNU General Public License as published by
   9:/usr/include/c++/11/bits/exception.h **** // the Free Software Foundation; either version 3, or (at your option)
  10:/usr/include/c++/11/bits/exception.h **** // any later version.
  11:/usr/include/c++/11/bits/exception.h **** //
  12:/usr/include/c++/11/bits/exception.h **** // GCC is distributed in the hope that it will be useful,
  13:/usr/include/c++/11/bits/exception.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/usr/include/c++/11/bits/exception.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:/usr/include/c++/11/bits/exception.h **** // GNU General Public License for more details.
  16:/usr/include/c++/11/bits/exception.h **** //
  17:/usr/include/c++/11/bits/exception.h **** // Under Section 7 of GPL version 3, you are granted additional
  18:/usr/include/c++/11/bits/exception.h **** // permissions described in the GCC Runtime Library Exception, version
  19:/usr/include/c++/11/bits/exception.h **** // 3.1, as published by the Free Software Foundation.
  20:/usr/include/c++/11/bits/exception.h **** 
  21:/usr/include/c++/11/bits/exception.h **** // You should have received a copy of the GNU General Public License and
  22:/usr/include/c++/11/bits/exception.h **** // a copy of the GCC Runtime Library Exception along with this program;
  23:/usr/include/c++/11/bits/exception.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:/usr/include/c++/11/bits/exception.h **** // <http://www.gnu.org/licenses/>.
  25:/usr/include/c++/11/bits/exception.h **** 
  26:/usr/include/c++/11/bits/exception.h **** /** @file bits/exception.h
  27:/usr/include/c++/11/bits/exception.h ****  *  This is an internal header file, included by other library headers.
  28:/usr/include/c++/11/bits/exception.h ****  *  Do not attempt to use it directly.
  29:/usr/include/c++/11/bits/exception.h ****  */
  30:/usr/include/c++/11/bits/exception.h **** 
  31:/usr/include/c++/11/bits/exception.h **** #ifndef __EXCEPTION_H
  32:/usr/include/c++/11/bits/exception.h **** #define __EXCEPTION_H 1
  33:/usr/include/c++/11/bits/exception.h **** 
  34:/usr/include/c++/11/bits/exception.h **** #pragma GCC system_header
  35:/usr/include/c++/11/bits/exception.h **** 
  36:/usr/include/c++/11/bits/exception.h **** #pragma GCC visibility push(default)
  37:/usr/include/c++/11/bits/exception.h **** 
  38:/usr/include/c++/11/bits/exception.h **** #include <bits/c++config.h>
  39:/usr/include/c++/11/bits/exception.h **** 
  40:/usr/include/c++/11/bits/exception.h **** extern "C++" {
  41:/usr/include/c++/11/bits/exception.h **** 
  42:/usr/include/c++/11/bits/exception.h **** namespace std
  43:/usr/include/c++/11/bits/exception.h **** {
  44:/usr/include/c++/11/bits/exception.h ****   /**
  45:/usr/include/c++/11/bits/exception.h ****    * @defgroup exceptions Exceptions
  46:/usr/include/c++/11/bits/exception.h ****    * @ingroup diagnostics
  47:/usr/include/c++/11/bits/exception.h ****    * @since C++98
  48:/usr/include/c++/11/bits/exception.h ****    *
  49:/usr/include/c++/11/bits/exception.h ****    * Classes and functions for reporting errors via exceptions.
  50:/usr/include/c++/11/bits/exception.h ****    * @{
  51:/usr/include/c++/11/bits/exception.h ****    */
  52:/usr/include/c++/11/bits/exception.h **** 
  53:/usr/include/c++/11/bits/exception.h ****   /**
  54:/usr/include/c++/11/bits/exception.h ****    *  @brief Base class for all library exceptions.
  55:/usr/include/c++/11/bits/exception.h ****    *
  56:/usr/include/c++/11/bits/exception.h ****    *  This is the base class for all exceptions thrown by the standard
  57:/usr/include/c++/11/bits/exception.h ****    *  library, and by certain language expressions.  You are free to derive
  58:/usr/include/c++/11/bits/exception.h ****    *  your own %exception classes, or use a different hierarchy, or to
  59:/usr/include/c++/11/bits/exception.h ****    *  throw non-class data (e.g., fundamental types).
  60:/usr/include/c++/11/bits/exception.h ****    */
  61:/usr/include/c++/11/bits/exception.h ****   class exception
  62:/usr/include/c++/11/bits/exception.h ****   {
  63:/usr/include/c++/11/bits/exception.h ****   public:
  64:/usr/include/c++/11/bits/exception.h ****     exception() _GLIBCXX_NOTHROW { }
  12              		.loc 1 64 5
  13              		.cfi_startproc
  14 0000 F30F1EFA 		endbr64
  15 0004 55       		pushq	%rbp
  16              		.cfi_def_cfa_offset 16
  17              		.cfi_offset 6, -16
  18 0005 4889E5   		movq	%rsp, %rbp
  19              		.cfi_def_cfa_register 6
  20 0008 48897DF8 		movq	%rdi, -8(%rbp)
  21              	.LBB2:
  22              		.loc 1 64 34
  23 000c 488B0500 		movq	_ZTVSt9exception@GOTPCREL(%rip), %rax
  23      000000
  24 0013 488D5010 		leaq	16(%rax), %rdx
  25 0017 488B45F8 		movq	-8(%rbp), %rax
  26 001b 488910   		movq	%rdx, (%rax)
  27              	.LBE2:
  28              		.loc 1 64 36
  29 001e 90       		nop
  30 001f 5D       		popq	%rbp
  31              		.cfi_def_cfa 7, 8
  32 0020 C3       		ret
  33              		.cfi_endproc
  34              	.LFE1:
  36              		.weak	_ZNSt9exceptionC1Ev
  37              		.set	_ZNSt9exceptionC1Ev,_ZNSt9exceptionC2Ev
  38              		.text
  39              		.align 2
  40              		.globl	_ZN8UnitTest15AssertExceptionC2EPKcS2_i
  42              	_ZN8UnitTest15AssertExceptionC2EPKcS2_i:
  43              	.LFB7:
  44              		.file 2 "AssertException.cpp"
   1:AssertException.cpp **** #include "AssertException.h"
   2:AssertException.cpp **** #include <cstring>
   3:AssertException.cpp **** 
   4:AssertException.cpp **** namespace UnitTest {
   5:AssertException.cpp **** 
   6:AssertException.cpp **** AssertException::AssertException(char const* description, char const* filename, int lineNumber)
  45              		.loc 2 6 1
  46              		.cfi_startproc
  47 0000 F30F1EFA 		endbr64
  48 0004 55       		pushq	%rbp
  49              		.cfi_def_cfa_offset 16
  50              		.cfi_offset 6, -16
  51 0005 4889E5   		movq	%rsp, %rbp
  52              		.cfi_def_cfa_register 6
  53 0008 4883EC20 		subq	$32, %rsp
  54 000c 48897DF8 		movq	%rdi, -8(%rbp)
  55 0010 488975F0 		movq	%rsi, -16(%rbp)
  56 0014 488955E8 		movq	%rdx, -24(%rbp)
  57 0018 894DE4   		movl	%ecx, -28(%rbp)
  58              	.LBB3:
   7:AssertException.cpp ****     : m_lineNumber(lineNumber)
  59              		.loc 2 7 30
  60 001b 488B45F8 		movq	-8(%rbp), %rax
  61 001f 4889C7   		movq	%rax, %rdi
  62 0022 E8000000 		call	_ZNSt9exceptionC2Ev@PLT
  62      00
  63 0027 488B0500 		movq	_ZTVN8UnitTest15AssertExceptionE@GOTPCREL(%rip), %rax
  63      000000
  64 002e 488D5010 		leaq	16(%rax), %rdx
  65 0032 488B45F8 		movq	-8(%rbp), %rax
  66 0036 488910   		movq	%rdx, (%rax)
  67              		.loc 2 7 7
  68 0039 488B45F8 		movq	-8(%rbp), %rax
  69 003d 8B55E4   		movl	-28(%rbp), %edx
  70 0040 89900803 		movl	%edx, 776(%rax)
  70      0000
  71              	.LBB4:
   8:AssertException.cpp **** {
   9:AssertException.cpp **** 	using namespace std;
  10:AssertException.cpp **** 
  11:AssertException.cpp ****     strcpy(m_description, description);
  72              		.loc 2 11 12
  73 0046 488B45F8 		movq	-8(%rbp), %rax
  74 004a 488D5008 		leaq	8(%rax), %rdx
  75              		.loc 2 11 11
  76 004e 488B45F0 		movq	-16(%rbp), %rax
  77 0052 4889C6   		movq	%rax, %rsi
  78 0055 4889D7   		movq	%rdx, %rdi
  79 0058 E8000000 		call	strcpy@PLT
  79      00
  12:AssertException.cpp ****     strcpy(m_filename, filename);
  80              		.loc 2 12 12
  81 005d 488B45F8 		movq	-8(%rbp), %rax
  82 0061 488D9008 		leaq	520(%rax), %rdx
  82      020000
  83              		.loc 2 12 11
  84 0068 488B45E8 		movq	-24(%rbp), %rax
  85 006c 4889C6   		movq	%rax, %rsi
  86 006f 4889D7   		movq	%rdx, %rdi
  87 0072 E8000000 		call	strcpy@PLT
  87      00
  88              	.LBE4:
  89              	.LBE3:
  13:AssertException.cpp **** }
  90              		.loc 2 13 1
  91 0077 90       		nop
  92 0078 C9       		leave
  93              		.cfi_def_cfa 7, 8
  94 0079 C3       		ret
  95              		.cfi_endproc
  96              	.LFE7:
  98              		.globl	_ZN8UnitTest15AssertExceptionC1EPKcS2_i
  99              		.set	_ZN8UnitTest15AssertExceptionC1EPKcS2_i,_ZN8UnitTest15AssertExceptionC2EPKcS2_i
 100              		.align 2
 101              		.globl	_ZN8UnitTest15AssertExceptionD2Ev
 103              	_ZN8UnitTest15AssertExceptionD2Ev:
 104              	.LFB10:
  14:AssertException.cpp **** 
  15:AssertException.cpp **** AssertException::~AssertException() throw()
 105              		.loc 2 15 1
 106              		.cfi_startproc
 107 007a F30F1EFA 		endbr64
 108 007e 55       		pushq	%rbp
 109              		.cfi_def_cfa_offset 16
 110              		.cfi_offset 6, -16
 111 007f 4889E5   		movq	%rsp, %rbp
 112              		.cfi_def_cfa_register 6
 113 0082 4883EC10 		subq	$16, %rsp
 114 0086 48897DF8 		movq	%rdi, -8(%rbp)
 115              	.LBB5:
 116              		.loc 2 15 43
 117 008a 488B0500 		movq	_ZTVN8UnitTest15AssertExceptionE@GOTPCREL(%rip), %rax
 117      000000
 118 0091 488D5010 		leaq	16(%rax), %rdx
 119 0095 488B45F8 		movq	-8(%rbp), %rax
 120 0099 488910   		movq	%rdx, (%rax)
  16:AssertException.cpp **** {
  17:AssertException.cpp **** }
 121              		.loc 2 17 1
 122 009c 488B45F8 		movq	-8(%rbp), %rax
 123 00a0 4889C7   		movq	%rax, %rdi
 124 00a3 E8000000 		call	_ZNSt9exceptionD2Ev@PLT
 124      00
 125              	.LBE5:
 126 00a8 90       		nop
 127 00a9 C9       		leave
 128              		.cfi_def_cfa 7, 8
 129 00aa C3       		ret
 130              		.cfi_endproc
 131              	.LFE10:
 133              		.globl	_ZN8UnitTest15AssertExceptionD1Ev
 134              		.set	_ZN8UnitTest15AssertExceptionD1Ev,_ZN8UnitTest15AssertExceptionD2Ev
 135 00ab 90       		.align 2
 136              		.globl	_ZN8UnitTest15AssertExceptionD0Ev
 138              	_ZN8UnitTest15AssertExceptionD0Ev:
 139              	.LFB12:
  15:AssertException.cpp **** {
 140              		.loc 2 15 1
 141              		.cfi_startproc
 142 00ac F30F1EFA 		endbr64
 143 00b0 55       		pushq	%rbp
 144              		.cfi_def_cfa_offset 16
 145              		.cfi_offset 6, -16
 146 00b1 4889E5   		movq	%rsp, %rbp
 147              		.cfi_def_cfa_register 6
 148 00b4 4883EC10 		subq	$16, %rsp
 149 00b8 48897DF8 		movq	%rdi, -8(%rbp)
 150              		.loc 2 17 1
 151 00bc 488B45F8 		movq	-8(%rbp), %rax
 152 00c0 4889C7   		movq	%rax, %rdi
 153 00c3 E8000000 		call	_ZN8UnitTest15AssertExceptionD1Ev@PLT
 153      00
 154 00c8 488B45F8 		movq	-8(%rbp), %rax
 155 00cc 4889C7   		movq	%rax, %rdi
 156 00cf E8000000 		call	_ZdlPv@PLT
 156      00
 157 00d4 C9       		leave
 158              		.cfi_def_cfa 7, 8
 159 00d5 C3       		ret
 160              		.cfi_endproc
 161              	.LFE12:
 163              		.align 2
 164              		.globl	_ZNK8UnitTest15AssertException4whatEv
 166              	_ZNK8UnitTest15AssertException4whatEv:
 167              	.LFB13:
  18:AssertException.cpp **** 
  19:AssertException.cpp **** char const* AssertException::what() const throw()
  20:AssertException.cpp **** {
 168              		.loc 2 20 1
 169              		.cfi_startproc
 170 00d6 F30F1EFA 		endbr64
 171 00da 55       		pushq	%rbp
 172              		.cfi_def_cfa_offset 16
 173              		.cfi_offset 6, -16
 174 00db 4889E5   		movq	%rsp, %rbp
 175              		.cfi_def_cfa_register 6
 176 00de 48897DF8 		movq	%rdi, -8(%rbp)
  21:AssertException.cpp ****     return m_description;
 177              		.loc 2 21 12
 178 00e2 488B45F8 		movq	-8(%rbp), %rax
 179 00e6 4883C008 		addq	$8, %rax
  22:AssertException.cpp **** }
 180              		.loc 2 22 1
 181 00ea 5D       		popq	%rbp
 182              		.cfi_def_cfa 7, 8
 183 00eb C3       		ret
 184              		.cfi_endproc
 185              	.LFE13:
 187              		.align 2
 188              		.globl	_ZNK8UnitTest15AssertException8FilenameEv
 190              	_ZNK8UnitTest15AssertException8FilenameEv:
 191              	.LFB14:
  23:AssertException.cpp **** 
  24:AssertException.cpp **** char const* AssertException::Filename() const
  25:AssertException.cpp **** {
 192              		.loc 2 25 1
 193              		.cfi_startproc
 194 00ec F30F1EFA 		endbr64
 195 00f0 55       		pushq	%rbp
 196              		.cfi_def_cfa_offset 16
 197              		.cfi_offset 6, -16
 198 00f1 4889E5   		movq	%rsp, %rbp
 199              		.cfi_def_cfa_register 6
 200 00f4 48897DF8 		movq	%rdi, -8(%rbp)
  26:AssertException.cpp ****     return m_filename;
 201              		.loc 2 26 12
 202 00f8 488B45F8 		movq	-8(%rbp), %rax
 203 00fc 48050802 		addq	$520, %rax
 203      0000
  27:AssertException.cpp **** }
 204              		.loc 2 27 1
 205 0102 5D       		popq	%rbp
 206              		.cfi_def_cfa 7, 8
 207 0103 C3       		ret
 208              		.cfi_endproc
 209              	.LFE14:
 211              		.align 2
 212              		.globl	_ZNK8UnitTest15AssertException10LineNumberEv
 214              	_ZNK8UnitTest15AssertException10LineNumberEv:
 215              	.LFB15:
  28:AssertException.cpp **** 
  29:AssertException.cpp **** int AssertException::LineNumber() const
  30:AssertException.cpp **** {
 216              		.loc 2 30 1
 217              		.cfi_startproc
 218 0104 F30F1EFA 		endbr64
 219 0108 55       		pushq	%rbp
 220              		.cfi_def_cfa_offset 16
 221              		.cfi_offset 6, -16
 222 0109 4889E5   		movq	%rsp, %rbp
 223              		.cfi_def_cfa_register 6
 224 010c 48897DF8 		movq	%rdi, -8(%rbp)
  31:AssertException.cpp ****     return m_lineNumber;
 225              		.loc 2 31 12
 226 0110 488B45F8 		movq	-8(%rbp), %rax
 227 0114 8B800803 		movl	776(%rax), %eax
 227      0000
  32:AssertException.cpp **** }
 228              		.loc 2 32 1
 229 011a 5D       		popq	%rbp
 230              		.cfi_def_cfa 7, 8
 231 011b C3       		ret
 232              		.cfi_endproc
 233              	.LFE15:
 235              		.weak	_ZTVN8UnitTest15AssertExceptionE
 236              		.section	.data.rel.ro._ZTVN8UnitTest15AssertExceptionE,"awG",@progbits,_ZTVN8UnitTest15AssertExcep
 237              		.align 8
 240              	_ZTVN8UnitTest15AssertExceptionE:
 241 0000 00000000 		.quad	0
 241      00000000 
 242 0008 00000000 		.quad	_ZTIN8UnitTest15AssertExceptionE
 242      00000000 
 243 0010 00000000 		.quad	_ZN8UnitTest15AssertExceptionD1Ev
 243      00000000 
 244 0018 00000000 		.quad	_ZN8UnitTest15AssertExceptionD0Ev
 244      00000000 
 245 0020 00000000 		.quad	_ZNK8UnitTest15AssertException4whatEv
 245      00000000 
 246              		.weak	_ZTIN8UnitTest15AssertExceptionE
 247              		.section	.data.rel.ro._ZTIN8UnitTest15AssertExceptionE,"awG",@progbits,_ZTIN8UnitTest15AssertExcep
 248              		.align 8
 251              	_ZTIN8UnitTest15AssertExceptionE:
 252 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 252      00000000 
 253 0008 00000000 		.quad	_ZTSN8UnitTest15AssertExceptionE
 253      00000000 
 254 0010 00000000 		.quad	_ZTISt9exception
 254      00000000 
 255              		.weak	_ZTSN8UnitTest15AssertExceptionE
 256              		.section	.rodata._ZTSN8UnitTest15AssertExceptionE,"aG",@progbits,_ZTSN8UnitTest15AssertExceptionE,
 257              		.align 16
 260              	_ZTSN8UnitTest15AssertExceptionE:
 261 0000 4E38556E 		.string	"N8UnitTest15AssertExceptionE"
 261      69745465 
 261      73743135 
 261      41737365 
 261      72744578 
 262              		.text
 263              	.Letext0:
 264              		.file 3 "/usr/include/c++/11/cstring"
 265              		.file 4 "/usr/include/string.h"
 266              		.file 5 "AssertException.h"
 267              		.file 6 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h"
 268              		.file 7 "/usr/include/x86_64-linux-gnu/c++/11/bits/c++config.h"
 1811              		.section	.note.gnu.property,"a"
 1812              		.align 8
 1813 0000 04000000 		.long	1f - 0f
 1814 0004 10000000 		.long	4f - 1f
 1815 0008 05000000 		.long	5
 1816              	0:
 1817 000c 474E5500 		.string	"GNU"
 1818              	1:
 1819              		.align 8
 1820 0010 020000C0 		.long	0xc0000002
 1821 0014 04000000 		.long	3f - 2f
 1822              	2:
 1823 0018 03000000 		.long	0x3
 1824              	3:
 1825 001c 00000000 		.align 8
 1826              	4:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 AssertException.cpp
     /tmp/ccyZycEe.s:9      .text._ZNSt9exceptionC2Ev:0000000000000000 _ZNSt9exceptionC2Ev
     /tmp/ccyZycEe.s:9      .text._ZNSt9exceptionC2Ev:0000000000000000 _ZNSt9exceptionC1Ev
     /tmp/ccyZycEe.s:42     .text:0000000000000000 _ZN8UnitTest15AssertExceptionC2EPKcS2_i
     /tmp/ccyZycEe.s:240    .data.rel.ro._ZTVN8UnitTest15AssertExceptionE:0000000000000000 _ZTVN8UnitTest15AssertExceptionE
     /tmp/ccyZycEe.s:42     .text:0000000000000000 _ZN8UnitTest15AssertExceptionC1EPKcS2_i
     /tmp/ccyZycEe.s:103    .text:000000000000007a _ZN8UnitTest15AssertExceptionD2Ev
     /tmp/ccyZycEe.s:103    .text:000000000000007a _ZN8UnitTest15AssertExceptionD1Ev
     /tmp/ccyZycEe.s:138    .text:00000000000000ac _ZN8UnitTest15AssertExceptionD0Ev
     /tmp/ccyZycEe.s:166    .text:00000000000000d6 _ZNK8UnitTest15AssertException4whatEv
     /tmp/ccyZycEe.s:190    .text:00000000000000ec _ZNK8UnitTest15AssertException8FilenameEv
     /tmp/ccyZycEe.s:214    .text:0000000000000104 _ZNK8UnitTest15AssertException10LineNumberEv
     /tmp/ccyZycEe.s:251    .data.rel.ro._ZTIN8UnitTest15AssertExceptionE:0000000000000000 _ZTIN8UnitTest15AssertExceptionE
     /tmp/ccyZycEe.s:260    .rodata._ZTSN8UnitTest15AssertExceptionE:0000000000000000 _ZTSN8UnitTest15AssertExceptionE
                           .group:0000000000000000 _ZNSt9exceptionC5Ev

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
_ZTVSt9exception
strcpy
_ZNSt9exceptionD2Ev
_ZdlPv
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTISt9exception
