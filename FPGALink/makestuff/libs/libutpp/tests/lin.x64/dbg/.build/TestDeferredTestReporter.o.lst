   1              		.file	"TestDeferredTestReporter.cpp"
   2              		.text
   3              	.Ltext0:
   4              		.file 0 "/home/pong/FPGALink/makestuff/libs/libutpp/tests" "TestDeferredTestReporter.cpp"
   5              		.section	.rodata
   6              	.LC0:
   7 0000 44656661 		.string	"DefaultSuite"
   7      756C7453 
   7      75697465 
   7      00
   8              		.section	.text._ZN13UnitTestSuite12GetSuiteNameEv,"axG",@progbits,_ZN13UnitTestSuite12GetSuiteName
   9              		.weak	_ZN13UnitTestSuite12GetSuiteNameEv
  11              	_ZN13UnitTestSuite12GetSuiteNameEv:
  12              	.LFB0:
  13              		.file 1 "../TestSuite.h"
   1:../TestSuite.h **** #ifndef UNITTEST_TESTSUITE_H
   2:../TestSuite.h **** #define UNITTEST_TESTSUITE_H
   3:../TestSuite.h **** 
   4:../TestSuite.h **** namespace UnitTestSuite {
   5:../TestSuite.h **** 
   6:../TestSuite.h ****     inline char const* GetSuiteName ()
   7:../TestSuite.h ****     {
  14              		.loc 1 7 5
  15              		.cfi_startproc
  16 0000 F30F1EFA 		endbr64
  17 0004 55       		pushq	%rbp
  18              		.cfi_def_cfa_offset 16
  19              		.cfi_offset 6, -16
  20 0005 4889E5   		movq	%rsp, %rbp
  21              		.cfi_def_cfa_register 6
   8:../TestSuite.h ****         return "DefaultSuite";
  22              		.loc 1 8 16
  23 0008 488D0500 		leaq	.LC0(%rip), %rax
  23      000000
   9:../TestSuite.h ****     }
  24              		.loc 1 9 5
  25 000f 5D       		popq	%rbp
  26              		.cfi_def_cfa 7, 8
  27 0010 C3       		ret
  28              		.cfi_endproc
  29              	.LFE0:
  31              		.section	.text._ZN8UnitTest15MemoryOutStreamC1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamC1Ev
  32              		.align 2
  33              		.weak	_ZN8UnitTest15MemoryOutStreamC1Ev
  35              	_ZN8UnitTest15MemoryOutStreamC1Ev:
  36              	.LFB1129:
  37              		.file 2 "../MemoryOutStream.h"
   1:../MemoryOutStream.h **** #ifndef UNITTEST_MEMORYOUTSTREAM_H
   2:../MemoryOutStream.h **** #define UNITTEST_MEMORYOUTSTREAM_H
   3:../MemoryOutStream.h **** 
   4:../MemoryOutStream.h **** #include "Config.h"
   5:../MemoryOutStream.h **** 
   6:../MemoryOutStream.h **** #ifndef UNITTEST_USE_CUSTOM_STREAMS
   7:../MemoryOutStream.h **** 
   8:../MemoryOutStream.h **** #include <sstream>
   9:../MemoryOutStream.h **** 
  10:../MemoryOutStream.h **** namespace UnitTest
  11:../MemoryOutStream.h **** {
  12:../MemoryOutStream.h **** 
  13:../MemoryOutStream.h **** class MemoryOutStream : public std::ostringstream
  14:../MemoryOutStream.h **** {
  15:../MemoryOutStream.h **** public:
  16:../MemoryOutStream.h ****     MemoryOutStream() {}
  38              		.loc 2 16 5
  39              		.cfi_startproc
  40              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  41              		.cfi_lsda 0x1b,.LLSDA1129
  42 0000 F30F1EFA 		endbr64
  43 0004 55       		pushq	%rbp
  44              		.cfi_def_cfa_offset 16
  45              		.cfi_offset 6, -16
  46 0005 4889E5   		movq	%rsp, %rbp
  47              		.cfi_def_cfa_register 6
  48 0008 53       		pushq	%rbx
  49 0009 4883EC18 		subq	$24, %rsp
  50              		.cfi_offset 3, -24
  51 000d 48897DE8 		movq	%rdi, -24(%rbp)
  52              	.LBB2:
  53              		.loc 2 16 23
  54 0011 488B45E8 		movq	-24(%rbp), %rax
  55 0015 48059000 		addq	$144, %rax
  55      0000
  56 001b 4889C7   		movq	%rax, %rdi
  57              	.LEHB0:
  58 001e E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEEC2Ev@PLT
  58      00
  59              	.LEHE0:
  60 0023 488B45E8 		movq	-24(%rbp), %rax
  61 0027 488D1500 		leaq	8+_ZTTN8UnitTest15MemoryOutStreamE(%rip), %rdx
  61      000000
  62 002e 4889D6   		movq	%rdx, %rsi
  63 0031 4889C7   		movq	%rax, %rdi
  64              	.LEHB1:
  65 0034 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC2Ev@PLT
  65      00
  66              	.LEHE1:
  67              		.loc 2 16 23 is_stmt 0 discriminator 2
  68 0039 488D1500 		leaq	24+_ZTVN8UnitTest15MemoryOutStreamE(%rip), %rdx
  68      000000
  69 0040 488B45E8 		movq	-24(%rbp), %rax
  70 0044 488910   		movq	%rdx, (%rax)
  71 0047 488B45E8 		movq	-24(%rbp), %rax
  72 004b 48059000 		addq	$144, %rax
  72      0000
  73 0051 488D1500 		leaq	64+_ZTVN8UnitTest15MemoryOutStreamE(%rip), %rdx
  73      000000
  74 0058 488910   		movq	%rdx, (%rax)
  75 005b 488B45E8 		movq	-24(%rbp), %rax
  76 005f 4883C070 		addq	$112, %rax
  77 0063 4889C7   		movq	%rax, %rdi
  78              	.LEHB2:
  79 0066 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@PLT
  79      00
  80              	.LEHE2:
  81              	.LBE2:
  82              		.loc 2 16 24 is_stmt 1
  83 006b EB43     		jmp	.L8
  84              	.L7:
  85 006d F30F1EFA 		endbr64
  86              	.LBB3:
  87 0071 4889C3   		movq	%rax, %rbx
  88 0074 488B45E8 		movq	-24(%rbp), %rax
  89 0078 488D1500 		leaq	8+_ZTTN8UnitTest15MemoryOutStreamE(%rip), %rdx
  89      000000
  90 007f 4889D6   		movq	%rdx, %rsi
  91 0082 4889C7   		movq	%rax, %rdi
  92 0085 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev@PLT
  92      00
  93 008a EB07     		jmp	.L5
  94              	.L6:
  95 008c F30F1EFA 		endbr64
  96 0090 4889C3   		movq	%rax, %rbx
  97              	.L5:
  98              		.loc 2 16 24 is_stmt 0 discriminator 1
  99 0093 488B45E8 		movq	-24(%rbp), %rax
 100 0097 48059000 		addq	$144, %rax
 100      0000
 101 009d 4889C7   		movq	%rax, %rdi
 102 00a0 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev@PLT
 102      00
 103 00a5 4889D8   		movq	%rbx, %rax
 104 00a8 4889C7   		movq	%rax, %rdi
 105              	.LEHB3:
 106 00ab E8000000 		call	_Unwind_Resume@PLT
 106      00
 107              	.LEHE3:
 108              	.L8:
 109              	.LBE3:
 110              		.loc 2 16 24
 111 00b0 488B5DF8 		movq	-8(%rbp), %rbx
 112 00b4 C9       		leave
 113              		.cfi_def_cfa 7, 8
 114 00b5 C3       		ret
 115              		.cfi_endproc
 116              	.LFE1129:
 117              		.globl	__gxx_personality_v0
 118              		.section	.gcc_except_table._ZN8UnitTest15MemoryOutStreamC1Ev,"aG",@progbits,_ZN8UnitTest15MemoryOu
 119              	.LLSDA1129:
 120 0000 FF       		.byte	0xff
 121 0001 FF       		.byte	0xff
 122 0002 01       		.byte	0x1
 123 0003 12       		.uleb128 .LLSDACSE1129-.LLSDACSB1129
 124              	.LLSDACSB1129:
 125 0004 1E       		.uleb128 .LEHB0-.LFB1129
 126 0005 05       		.uleb128 .LEHE0-.LEHB0
 127 0006 00       		.uleb128 0
 128 0007 00       		.uleb128 0
 129 0008 34       		.uleb128 .LEHB1-.LFB1129
 130 0009 05       		.uleb128 .LEHE1-.LEHB1
 131 000a 8C01     		.uleb128 .L6-.LFB1129
 132 000c 00       		.uleb128 0
 133 000d 66       		.uleb128 .LEHB2-.LFB1129
 134 000e 05       		.uleb128 .LEHE2-.LEHB2
 135 000f 6D       		.uleb128 .L7-.LFB1129
 136 0010 00       		.uleb128 0
 137 0011 AB01     		.uleb128 .LEHB3-.LFB1129
 138 0013 05       		.uleb128 .LEHE3-.LEHB3
 139 0014 00       		.uleb128 0
 140 0015 00       		.uleb128 0
 141              	.LLSDACSE1129:
 142              		.section	.text._ZN8UnitTest15MemoryOutStreamC1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamC1Ev
 144              		.text
 145              		.align 2
 147              	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporter13ReportSummaryEiiif:
 148              	.LFB1405:
 149              		.file 3 "TestDeferredTestReporter.cpp"
   1:TestDeferredTestReporter.cpp **** #include "../UnitTest++.h"
   2:TestDeferredTestReporter.cpp **** #include "../DeferredTestReporter.h"
   3:TestDeferredTestReporter.cpp **** #include "../Config.h"
   4:TestDeferredTestReporter.cpp **** #include <cstring>
   5:TestDeferredTestReporter.cpp **** 
   6:TestDeferredTestReporter.cpp **** namespace UnitTest
   7:TestDeferredTestReporter.cpp **** {
   8:TestDeferredTestReporter.cpp **** 
   9:TestDeferredTestReporter.cpp **** namespace 
  10:TestDeferredTestReporter.cpp **** {
  11:TestDeferredTestReporter.cpp **** 
  12:TestDeferredTestReporter.cpp **** #ifdef UNITTEST_USE_CUSTOM_STREAMS
  13:TestDeferredTestReporter.cpp **** 	MemoryOutStream& operator <<(MemoryOutStream& lhs, const std::string& rhs)
  14:TestDeferredTestReporter.cpp **** 	{
  15:TestDeferredTestReporter.cpp **** 		lhs << rhs.c_str();
  16:TestDeferredTestReporter.cpp **** 		return lhs;
  17:TestDeferredTestReporter.cpp **** 	}
  18:TestDeferredTestReporter.cpp **** #endif
  19:TestDeferredTestReporter.cpp **** 
  20:TestDeferredTestReporter.cpp **** struct MockDeferredTestReporter : public DeferredTestReporter
  21:TestDeferredTestReporter.cpp **** {
  22:TestDeferredTestReporter.cpp ****     virtual void ReportSummary(int, int, int, float) 
 150              		.loc 3 22 18 is_stmt 1
 151              		.cfi_startproc
 152 0000 F30F1EFA 		endbr64
 153 0004 55       		pushq	%rbp
 154              		.cfi_def_cfa_offset 16
 155              		.cfi_offset 6, -16
 156 0005 4889E5   		movq	%rsp, %rbp
 157              		.cfi_def_cfa_register 6
 158 0008 48897DF8 		movq	%rdi, -8(%rbp)
 159 000c 8975F4   		movl	%esi, -12(%rbp)
 160 000f 8955F0   		movl	%edx, -16(%rbp)
 161 0012 894DEC   		movl	%ecx, -20(%rbp)
 162 0015 F30F1145 		movss	%xmm0, -24(%rbp)
 162      E8
  23:TestDeferredTestReporter.cpp ****     {
  24:TestDeferredTestReporter.cpp ****     }
 163              		.loc 3 24 5
 164 001a 90       		nop
 165 001b 5D       		popq	%rbp
 166              		.cfi_def_cfa 7, 8
 167 001c C3       		ret
 168              		.cfi_endproc
 169              	.LFE1405:
 171              		.section	.text._ZN8UnitTest12TestReporterC2Ev,"axG",@progbits,_ZN8UnitTest12TestReporterC5Ev,comda
 172              		.align 2
 173              		.weak	_ZN8UnitTest12TestReporterC2Ev
 175              	_ZN8UnitTest12TestReporterC2Ev:
 176              	.LFB1410:
 177              		.file 4 "../TestReporter.h"
   1:../TestReporter.h **** #ifndef UNITTEST_TESTREPORTER_H
   2:../TestReporter.h **** #define UNITTEST_TESTREPORTER_H
   3:../TestReporter.h **** 
   4:../TestReporter.h **** namespace UnitTest {
   5:../TestReporter.h **** 
   6:../TestReporter.h **** class TestDetails;
   7:../TestReporter.h **** 
   8:../TestReporter.h **** class TestReporter
 178              		.loc 4 8 7
 179              		.cfi_startproc
 180 0000 F30F1EFA 		endbr64
 181 0004 55       		pushq	%rbp
 182              		.cfi_def_cfa_offset 16
 183              		.cfi_offset 6, -16
 184 0005 4889E5   		movq	%rsp, %rbp
 185              		.cfi_def_cfa_register 6
 186 0008 48897DF8 		movq	%rdi, -8(%rbp)
 187              	.LBB4:
 188              		.loc 4 8 7
 189 000c 488D1500 		leaq	16+_ZTVN8UnitTest12TestReporterE(%rip), %rdx
 189      000000
 190 0013 488B45F8 		movq	-8(%rbp), %rax
 191 0017 488910   		movq	%rdx, (%rax)
 192              	.LBE4:
 193 001a 90       		nop
 194 001b 5D       		popq	%rbp
 195              		.cfi_def_cfa 7, 8
 196 001c C3       		ret
 197              		.cfi_endproc
 198              	.LFE1410:
 200              		.weak	_ZN8UnitTest12TestReporterC1Ev
 201              		.set	_ZN8UnitTest12TestReporterC1Ev,_ZN8UnitTest12TestReporterC2Ev
 202              		.section	.text._ZN8UnitTest20DeferredTestReporterC2Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 203              		.align 2
 204              		.weak	_ZN8UnitTest20DeferredTestReporterC2Ev
 206              	_ZN8UnitTest20DeferredTestReporterC2Ev:
 207              	.LFB1412:
 208              		.file 5 "../DeferredTestReporter.h"
   1:../DeferredTestReporter.h **** #ifndef UNITTEST_DEFERREDTESTREPORTER_H
   2:../DeferredTestReporter.h **** #define UNITTEST_DEFERREDTESTREPORTER_H
   3:../DeferredTestReporter.h **** 
   4:../DeferredTestReporter.h **** #include "TestReporter.h"
   5:../DeferredTestReporter.h **** #include "DeferredTestResult.h"
   6:../DeferredTestReporter.h **** 
   7:../DeferredTestReporter.h **** #include <vector>
   8:../DeferredTestReporter.h **** 
   9:../DeferredTestReporter.h **** namespace UnitTest
  10:../DeferredTestReporter.h **** {
  11:../DeferredTestReporter.h **** 
  12:../DeferredTestReporter.h **** class DeferredTestReporter : public TestReporter
 209              		.loc 5 12 7
 210              		.cfi_startproc
 211              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 212              		.cfi_lsda 0x1b,.LLSDA1412
 213 0000 F30F1EFA 		endbr64
 214 0004 55       		pushq	%rbp
 215              		.cfi_def_cfa_offset 16
 216              		.cfi_offset 6, -16
 217 0005 4889E5   		movq	%rsp, %rbp
 218              		.cfi_def_cfa_register 6
 219 0008 53       		pushq	%rbx
 220 0009 4883EC18 		subq	$24, %rsp
 221              		.cfi_offset 3, -24
 222 000d 48897DE8 		movq	%rdi, -24(%rbp)
 223              	.LBB5:
 224              		.loc 5 12 7
 225 0011 488B45E8 		movq	-24(%rbp), %rax
 226 0015 4889C7   		movq	%rax, %rdi
 227 0018 E8000000 		call	_ZN8UnitTest12TestReporterC2Ev
 227      00
 228 001d 488D1500 		leaq	16+_ZTVN8UnitTest20DeferredTestReporterE(%rip), %rdx
 228      000000
 229 0024 488B45E8 		movq	-24(%rbp), %rax
 230 0028 488910   		movq	%rdx, (%rax)
 231 002b 488B45E8 		movq	-24(%rbp), %rax
 232 002f 4883C008 		addq	$8, %rax
 233 0033 4889C7   		movq	%rax, %rdi
 234              	.LEHB4:
 235 0036 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev
 235      00
 236              	.LEHE4:
 237              	.LBE5:
 238 003b EB1E     		jmp	.L14
 239              	.L13:
 240 003d F30F1EFA 		endbr64
 241              	.LBB6:
 242 0041 4889C3   		movq	%rax, %rbx
 243 0044 488B45E8 		movq	-24(%rbp), %rax
 244 0048 4889C7   		movq	%rax, %rdi
 245 004b E8000000 		call	_ZN8UnitTest12TestReporterD2Ev@PLT
 245      00
 246 0050 4889D8   		movq	%rbx, %rax
 247 0053 4889C7   		movq	%rax, %rdi
 248              	.LEHB5:
 249 0056 E8000000 		call	_Unwind_Resume@PLT
 249      00
 250              	.LEHE5:
 251              	.L14:
 252              	.LBE6:
 253 005b 488B5DF8 		movq	-8(%rbp), %rbx
 254 005f C9       		leave
 255              		.cfi_def_cfa 7, 8
 256 0060 C3       		ret
 257              		.cfi_endproc
 258              	.LFE1412:
 259              		.section	.gcc_except_table._ZN8UnitTest20DeferredTestReporterC2Ev,"aG",@progbits,_ZN8UnitTest20Def
 260              	.LLSDA1412:
 261 0000 FF       		.byte	0xff
 262 0001 FF       		.byte	0xff
 263 0002 01       		.byte	0x1
 264 0003 08       		.uleb128 .LLSDACSE1412-.LLSDACSB1412
 265              	.LLSDACSB1412:
 266 0004 36       		.uleb128 .LEHB4-.LFB1412
 267 0005 05       		.uleb128 .LEHE4-.LEHB4
 268 0006 3D       		.uleb128 .L13-.LFB1412
 269 0007 00       		.uleb128 0
 270 0008 56       		.uleb128 .LEHB5-.LFB1412
 271 0009 05       		.uleb128 .LEHE5-.LEHB5
 272 000a 00       		.uleb128 0
 273 000b 00       		.uleb128 0
 274              	.LLSDACSE1412:
 275              		.section	.text._ZN8UnitTest20DeferredTestReporterC2Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 277              		.weak	_ZN8UnitTest20DeferredTestReporterC1Ev
 278              		.set	_ZN8UnitTest20DeferredTestReporterC1Ev,_ZN8UnitTest20DeferredTestReporterC2Ev
 279              		.section	.text._ZN8UnitTest20DeferredTestReporterD2Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 280              		.align 2
 281              		.weak	_ZN8UnitTest20DeferredTestReporterD2Ev
 283              	_ZN8UnitTest20DeferredTestReporterD2Ev:
 284              	.LFB1415:
 285              		.loc 5 12 7
 286              		.cfi_startproc
 287              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 288              		.cfi_lsda 0x1b,.LLSDA1415
 289 0000 F30F1EFA 		endbr64
 290 0004 55       		pushq	%rbp
 291              		.cfi_def_cfa_offset 16
 292              		.cfi_offset 6, -16
 293 0005 4889E5   		movq	%rsp, %rbp
 294              		.cfi_def_cfa_register 6
 295 0008 53       		pushq	%rbx
 296 0009 4883EC18 		subq	$24, %rsp
 297              		.cfi_offset 3, -24
 298 000d 48897DE8 		movq	%rdi, -24(%rbp)
 299              	.LBB7:
 300              		.loc 5 12 7
 301 0011 488D1500 		leaq	16+_ZTVN8UnitTest20DeferredTestReporterE(%rip), %rdx
 301      000000
 302 0018 488B45E8 		movq	-24(%rbp), %rax
 303 001c 488910   		movq	%rdx, (%rax)
 304 001f 488B45E8 		movq	-24(%rbp), %rax
 305 0023 4883C008 		addq	$8, %rax
 306 0027 4889C7   		movq	%rax, %rdi
 307              	.LEHB6:
 308 002a E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
 308      00
 309              	.LEHE6:
 310              		.loc 5 12 7 is_stmt 0 discriminator 2
 311 002f 488B45E8 		movq	-24(%rbp), %rax
 312 0033 4889C7   		movq	%rax, %rdi
 313              	.LEHB7:
 314 0036 E8000000 		call	_ZN8UnitTest12TestReporterD2Ev@PLT
 314      00
 315              	.LEHE7:
 316              	.LBE7:
 317 003b EB1E     		jmp	.L18
 318              	.L17:
 319 003d F30F1EFA 		endbr64
 320              	.LBB8:
 321              		.loc 5 12 7
 322 0041 4889C3   		movq	%rax, %rbx
 323 0044 488B45E8 		movq	-24(%rbp), %rax
 324 0048 4889C7   		movq	%rax, %rdi
 325 004b E8000000 		call	_ZN8UnitTest12TestReporterD2Ev@PLT
 325      00
 326 0050 4889D8   		movq	%rbx, %rax
 327 0053 4889C7   		movq	%rax, %rdi
 328              	.LEHB8:
 329 0056 E8000000 		call	_Unwind_Resume@PLT
 329      00
 330              	.LEHE8:
 331              	.L18:
 332              	.LBE8:
 333 005b 488B5DF8 		movq	-8(%rbp), %rbx
 334 005f C9       		leave
 335              		.cfi_def_cfa 7, 8
 336 0060 C3       		ret
 337              		.cfi_endproc
 338              	.LFE1415:
 339              		.section	.gcc_except_table._ZN8UnitTest20DeferredTestReporterD2Ev,"aG",@progbits,_ZN8UnitTest20Def
 340              	.LLSDA1415:
 341 0000 FF       		.byte	0xff
 342 0001 FF       		.byte	0xff
 343 0002 01       		.byte	0x1
 344 0003 0C       		.uleb128 .LLSDACSE1415-.LLSDACSB1415
 345              	.LLSDACSB1415:
 346 0004 2A       		.uleb128 .LEHB6-.LFB1415
 347 0005 05       		.uleb128 .LEHE6-.LEHB6
 348 0006 3D       		.uleb128 .L17-.LFB1415
 349 0007 00       		.uleb128 0
 350 0008 36       		.uleb128 .LEHB7-.LFB1415
 351 0009 05       		.uleb128 .LEHE7-.LEHB7
 352 000a 00       		.uleb128 0
 353 000b 00       		.uleb128 0
 354 000c 56       		.uleb128 .LEHB8-.LFB1415
 355 000d 05       		.uleb128 .LEHE8-.LEHB8
 356 000e 00       		.uleb128 0
 357 000f 00       		.uleb128 0
 358              	.LLSDACSE1415:
 359              		.section	.text._ZN8UnitTest20DeferredTestReporterD2Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 361              		.weak	_ZN8UnitTest20DeferredTestReporterD1Ev
 362              		.set	_ZN8UnitTest20DeferredTestReporterD1Ev,_ZN8UnitTest20DeferredTestReporterD2Ev
 363              		.section	.text._ZN8UnitTest20DeferredTestReporterD0Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 364              		.align 2
 365              		.weak	_ZN8UnitTest20DeferredTestReporterD0Ev
 367              	_ZN8UnitTest20DeferredTestReporterD0Ev:
 368              	.LFB1417:
 369              		.loc 5 12 7 is_stmt 1
 370              		.cfi_startproc
 371              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 372              		.cfi_lsda 0x1b,.LLSDA1417
 373 0000 F30F1EFA 		endbr64
 374 0004 55       		pushq	%rbp
 375              		.cfi_def_cfa_offset 16
 376              		.cfi_offset 6, -16
 377 0005 4889E5   		movq	%rsp, %rbp
 378              		.cfi_def_cfa_register 6
 379 0008 53       		pushq	%rbx
 380 0009 4883EC18 		subq	$24, %rsp
 381              		.cfi_offset 3, -24
 382 000d 48897DE8 		movq	%rdi, -24(%rbp)
 383              		.loc 5 12 7
 384 0011 488B45E8 		movq	-24(%rbp), %rax
 385 0015 4889C7   		movq	%rax, %rdi
 386              	.LEHB9:
 387 0018 E8000000 		call	_ZN8UnitTest20DeferredTestReporterD1Ev
 387      00
 388              	.LEHE9:
 389              		.loc 5 12 7 is_stmt 0 discriminator 2
 390 001d 488B45E8 		movq	-24(%rbp), %rax
 391 0021 4889C7   		movq	%rax, %rdi
 392 0024 E8000000 		call	_ZdlPv@PLT
 392      00
 393 0029 EB1E     		jmp	.L22
 394              	.L21:
 395 002b F30F1EFA 		endbr64
 396              		.loc 5 12 7
 397 002f 4889C3   		movq	%rax, %rbx
 398 0032 488B45E8 		movq	-24(%rbp), %rax
 399 0036 4889C7   		movq	%rax, %rdi
 400 0039 E8000000 		call	_ZdlPv@PLT
 400      00
 401 003e 4889D8   		movq	%rbx, %rax
 402 0041 4889C7   		movq	%rax, %rdi
 403              	.LEHB10:
 404 0044 E8000000 		call	_Unwind_Resume@PLT
 404      00
 405              	.LEHE10:
 406              	.L22:
 407 0049 488B5DF8 		movq	-8(%rbp), %rbx
 408 004d C9       		leave
 409              		.cfi_def_cfa 7, 8
 410 004e C3       		ret
 411              		.cfi_endproc
 412              	.LFE1417:
 413              		.section	.gcc_except_table._ZN8UnitTest20DeferredTestReporterD0Ev,"aG",@progbits,_ZN8UnitTest20Def
 414              	.LLSDA1417:
 415 0000 FF       		.byte	0xff
 416 0001 FF       		.byte	0xff
 417 0002 01       		.byte	0x1
 418 0003 08       		.uleb128 .LLSDACSE1417-.LLSDACSB1417
 419              	.LLSDACSB1417:
 420 0004 18       		.uleb128 .LEHB9-.LFB1417
 421 0005 05       		.uleb128 .LEHE9-.LEHB9
 422 0006 2B       		.uleb128 .L21-.LFB1417
 423 0007 00       		.uleb128 0
 424 0008 44       		.uleb128 .LEHB10-.LFB1417
 425 0009 05       		.uleb128 .LEHE10-.LEHB10
 426 000a 00       		.uleb128 0
 427 000b 00       		.uleb128 0
 428              	.LLSDACSE1417:
 429              		.section	.text._ZN8UnitTest20DeferredTestReporterD0Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 431              		.text
 432 001d 90       		.align 2
 434              	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterC2Ev:
 435              	.LFB1418:
  20:TestDeferredTestReporter.cpp **** {
 436              		.loc 3 20 8 is_stmt 1
 437              		.cfi_startproc
 438 001e 55       		pushq	%rbp
 439              		.cfi_def_cfa_offset 16
 440              		.cfi_offset 6, -16
 441 001f 4889E5   		movq	%rsp, %rbp
 442              		.cfi_def_cfa_register 6
 443 0022 4883EC10 		subq	$16, %rsp
 444 0026 48897DF8 		movq	%rdi, -8(%rbp)
 445              	.LBB9:
  20:TestDeferredTestReporter.cpp **** {
 446              		.loc 3 20 8
 447 002a 488B45F8 		movq	-8(%rbp), %rax
 448 002e 4889C7   		movq	%rax, %rdi
 449 0031 E8000000 		call	_ZN8UnitTest20DeferredTestReporterC2Ev
 449      00
 450 0036 488D1500 		leaq	16+_ZTVN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE(%rip), %rdx
 450      000000
 451 003d 488B45F8 		movq	-8(%rbp), %rax
 452 0041 488910   		movq	%rdx, (%rax)
 453              	.LBE9:
 454 0044 90       		nop
 455 0045 C9       		leave
 456              		.cfi_def_cfa 7, 8
 457 0046 C3       		ret
 458              		.cfi_endproc
 459              	.LFE1418:
 461              		.set	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterC1Ev,_ZN8UnitTest12_GLOBAL__N_124MockDefe
 462              		.section	.rodata
 463              	.LC1:
 464 000d 556E6971 		.string	"UniqueTestName"
 464      75655465 
 464      73744E61 
 464      6D6500
 465              	.LC2:
 466 001c 556E6971 		.string	"UniqueTestSuite"
 466      75655465 
 466      73745375 
 466      69746500 
 467              	.LC3:
 468 002c 66696C65 		.string	"filename.h"
 468      6E616D65 
 468      2E6800
 469              		.text
 470 0047 90       		.align 2
 472              	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev:
 473              	.LFB1420:
  25:TestDeferredTestReporter.cpp **** };
  26:TestDeferredTestReporter.cpp **** 
  27:TestDeferredTestReporter.cpp **** struct DeferredTestReporterFixture
  28:TestDeferredTestReporter.cpp **** {
  29:TestDeferredTestReporter.cpp ****     DeferredTestReporterFixture()
 474              		.loc 3 29 5
 475              		.cfi_startproc
 476              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 477              		.cfi_lsda 0x1b,.LLSDA1420
 478 0048 55       		pushq	%rbp
 479              		.cfi_def_cfa_offset 16
 480              		.cfi_offset 6, -16
 481 0049 4889E5   		movq	%rsp, %rbp
 482              		.cfi_def_cfa_register 6
 483 004c 4156     		pushq	%r14
 484 004e 4155     		pushq	%r13
 485 0050 4154     		pushq	%r12
 486 0052 53       		pushq	%rbx
 487 0053 4883EC20 		subq	$32, %rsp
 488              		.cfi_offset 14, -24
 489              		.cfi_offset 13, -32
 490              		.cfi_offset 12, -40
 491              		.cfi_offset 3, -48
 492 0057 48897DC8 		movq	%rdi, -56(%rbp)
 493              		.loc 3 29 5
 494 005b 64488B04 		movq	%fs:40, %rax
 494      25280000 
 494      00
 495 0064 488945D8 		movq	%rax, -40(%rbp)
 496 0068 31C0     		xorl	%eax, %eax
 497              	.LBB10:
  30:TestDeferredTestReporter.cpp ****         : testName("UniqueTestName")
  31:TestDeferredTestReporter.cpp ****         , testSuite("UniqueTestSuite")
  32:TestDeferredTestReporter.cpp ****         , fileName("filename.h")
  33:TestDeferredTestReporter.cpp ****         , lineNumber(12)
  34:TestDeferredTestReporter.cpp ****         , details(testName.c_str(), testSuite.c_str(), fileName.c_str(), lineNumber)
 498              		.loc 3 34 84
 499 006a 488B45C8 		movq	-56(%rbp), %rax
 500 006e 4889C7   		movq	%rax, %rdi
 501              	.LEHB11:
 502 0071 E8A8FFFF 		call	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterC1Ev
 502      FF
 503              	.LEHE11:
  30:TestDeferredTestReporter.cpp ****         : testName("UniqueTestName")
 504              		.loc 3 30 11
 505 0076 488B45C8 		movq	-56(%rbp), %rax
 506 007a 488D5820 		leaq	32(%rax), %rbx
 507 007e 488D45D7 		leaq	-41(%rbp), %rax
 508 0082 4889C7   		movq	%rax, %rdi
 509 0085 E8000000 		call	_ZNSaIcEC1Ev@PLT
 509      00
 510 008a 488D45D7 		leaq	-41(%rbp), %rax
 511 008e 4889C2   		movq	%rax, %rdx
 512 0091 488D0500 		leaq	.LC1(%rip), %rax
 512      000000
 513 0098 4889C6   		movq	%rax, %rsi
 514 009b 4889DF   		movq	%rbx, %rdi
 515              	.LEHB12:
 516 009e E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_@PLT
 516      00
 517              	.LEHE12:
  30:TestDeferredTestReporter.cpp ****         : testName("UniqueTestName")
 518              		.loc 3 30 11 is_stmt 0 discriminator 2
 519 00a3 488D45D7 		leaq	-41(%rbp), %rax
 520 00a7 4889C7   		movq	%rax, %rdi
 521 00aa E8000000 		call	_ZNSaIcED1Ev@PLT
 521      00
  31:TestDeferredTestReporter.cpp ****         , fileName("filename.h")
 522              		.loc 3 31 11 is_stmt 1 discriminator 2
 523 00af 488B45C8 		movq	-56(%rbp), %rax
 524 00b3 488D5840 		leaq	64(%rax), %rbx
 525 00b7 488D45D7 		leaq	-41(%rbp), %rax
 526 00bb 4889C7   		movq	%rax, %rdi
 527 00be E8000000 		call	_ZNSaIcEC1Ev@PLT
 527      00
 528 00c3 488D45D7 		leaq	-41(%rbp), %rax
 529 00c7 4889C2   		movq	%rax, %rdx
 530 00ca 488D0500 		leaq	.LC2(%rip), %rax
 530      000000
 531 00d1 4889C6   		movq	%rax, %rsi
 532 00d4 4889DF   		movq	%rbx, %rdi
 533              	.LEHB13:
 534 00d7 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_@PLT
 534      00
 535              	.LEHE13:
 536 00dc 488D45D7 		leaq	-41(%rbp), %rax
 537 00e0 4889C7   		movq	%rax, %rdi
 538 00e3 E8000000 		call	_ZNSaIcED1Ev@PLT
 538      00
  32:TestDeferredTestReporter.cpp ****         , lineNumber(12)
 539              		.loc 3 32 11 discriminator 2
 540 00e8 488B45C8 		movq	-56(%rbp), %rax
 541 00ec 488D5860 		leaq	96(%rax), %rbx
 542 00f0 488D45D7 		leaq	-41(%rbp), %rax
 543 00f4 4889C7   		movq	%rax, %rdi
 544 00f7 E8000000 		call	_ZNSaIcEC1Ev@PLT
 544      00
 545 00fc 488D45D7 		leaq	-41(%rbp), %rax
 546 0100 4889C2   		movq	%rax, %rdx
 547 0103 488D0500 		leaq	.LC3(%rip), %rax
 547      000000
 548 010a 4889C6   		movq	%rax, %rsi
 549 010d 4889DF   		movq	%rbx, %rdi
 550              	.LEHB14:
 551 0110 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_@PLT
 551      00
 552              	.LEHE14:
 553 0115 488D45D7 		leaq	-41(%rbp), %rax
 554 0119 4889C7   		movq	%rax, %rdi
 555 011c E8000000 		call	_ZNSaIcED1Ev@PLT
 555      00
  33:TestDeferredTestReporter.cpp ****         , details(testName.c_str(), testSuite.c_str(), fileName.c_str(), lineNumber)
 556              		.loc 3 33 11 discriminator 2
 557 0121 488B45C8 		movq	-56(%rbp), %rax
 558 0125 C7808000 		movl	$12, 128(%rax)
 558      00000C00 
 558      0000
 559              		.loc 3 34 11 discriminator 2
 560 012f 488B45C8 		movq	-56(%rbp), %rax
 561 0133 488D9888 		leaq	136(%rax), %rbx
 561      000000
 562              		.loc 3 34 74 discriminator 2
 563 013a 488B45C8 		movq	-56(%rbp), %rax
 564 013e 448BB080 		movl	128(%rax), %r14d
 564      000000
 565              		.loc 3 34 11 discriminator 2
 566 0145 488B45C8 		movq	-56(%rbp), %rax
 567 0149 4883C060 		addq	$96, %rax
 568 014d 4889C7   		movq	%rax, %rdi
 569              	.LEHB15:
 570 0150 E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@PLT
 570      00
 571 0155 4989C5   		movq	%rax, %r13
 572 0158 488B45C8 		movq	-56(%rbp), %rax
 573 015c 4883C040 		addq	$64, %rax
 574 0160 4889C7   		movq	%rax, %rdi
 575 0163 E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@PLT
 575      00
 576              		.loc 3 34 11 is_stmt 0 discriminator 1
 577 0168 4989C4   		movq	%rax, %r12
 578 016b 488B45C8 		movq	-56(%rbp), %rax
 579 016f 4883C020 		addq	$32, %rax
 580 0173 4889C7   		movq	%rax, %rdi
 581 0176 E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@PLT
 581      00
 582              		.loc 3 34 11 discriminator 2
 583 017b 4589F0   		movl	%r14d, %r8d
 584 017e 4C89E9   		movq	%r13, %rcx
 585 0181 4C89E2   		movq	%r12, %rdx
 586 0184 4889C6   		movq	%rax, %rsi
 587 0187 4889DF   		movq	%rbx, %rdi
 588 018a E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 588      00
 589              	.LEHE15:
 590              	.LBE10:
  35:TestDeferredTestReporter.cpp ****     {
  36:TestDeferredTestReporter.cpp ****     }
 591              		.loc 3 36 5 is_stmt 1
 592 018f E98D0000 		jmp	.L37
 592      00
 593              	.L33:
 594 0194 F30F1EFA 		endbr64
 595              	.LBB11:
  30:TestDeferredTestReporter.cpp ****         , testSuite("UniqueTestSuite")
 596              		.loc 3 30 11
 597 0198 4889C3   		movq	%rax, %rbx
 598 019b 488D45D7 		leaq	-41(%rbp), %rax
 599 019f 4889C7   		movq	%rax, %rdi
 600 01a2 E8000000 		call	_ZNSaIcED1Ev@PLT
 600      00
 601 01a7 EB61     		jmp	.L26
 602              	.L34:
 603 01a9 F30F1EFA 		endbr64
  31:TestDeferredTestReporter.cpp ****         , fileName("filename.h")
 604              		.loc 3 31 11
 605 01ad 4889C3   		movq	%rax, %rbx
 606 01b0 488D45D7 		leaq	-41(%rbp), %rax
 607 01b4 4889C7   		movq	%rax, %rdi
 608 01b7 E8000000 		call	_ZNSaIcED1Ev@PLT
 608      00
 609 01bc EB3C     		jmp	.L28
 610              	.L35:
 611 01be F30F1EFA 		endbr64
  32:TestDeferredTestReporter.cpp ****         , lineNumber(12)
 612              		.loc 3 32 11
 613 01c2 4889C3   		movq	%rax, %rbx
 614 01c5 488D45D7 		leaq	-41(%rbp), %rax
 615 01c9 4889C7   		movq	%rax, %rdi
 616 01cc E8000000 		call	_ZNSaIcED1Ev@PLT
 616      00
 617 01d1 EB17     		jmp	.L30
 618              	.L36:
 619 01d3 F30F1EFA 		endbr64
 620 01d7 4889C3   		movq	%rax, %rbx
 621 01da 488B45C8 		movq	-56(%rbp), %rax
 622 01de 4883C060 		addq	$96, %rax
 623              		.loc 3 36 5
 624 01e2 4889C7   		movq	%rax, %rdi
 625 01e5 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 625      00
 626              	.L30:
  31:TestDeferredTestReporter.cpp ****         , fileName("filename.h")
 627              		.loc 3 31 11
 628 01ea 488B45C8 		movq	-56(%rbp), %rax
 629 01ee 4883C040 		addq	$64, %rax
 630              		.loc 3 36 5
 631 01f2 4889C7   		movq	%rax, %rdi
 632 01f5 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 632      00
 633              	.L28:
  30:TestDeferredTestReporter.cpp ****         , testSuite("UniqueTestSuite")
 634              		.loc 3 30 11
 635 01fa 488B45C8 		movq	-56(%rbp), %rax
 636 01fe 4883C020 		addq	$32, %rax
 637              		.loc 3 36 5
 638 0202 4889C7   		movq	%rax, %rdi
 639 0205 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 639      00
 640              	.L26:
 641 020a 488B45C8 		movq	-56(%rbp), %rax
 642 020e 4889C7   		movq	%rax, %rdi
 643 0211 E8303700 		call	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD1Ev
 643      00
 644 0216 4889D8   		movq	%rbx, %rax
 645 0219 4889C7   		movq	%rax, %rdi
 646              	.LEHB16:
 647 021c E8000000 		call	_Unwind_Resume@PLT
 647      00
 648              	.LEHE16:
 649              	.L37:
 650              	.LBE11:
 651 0221 488B45D8 		movq	-40(%rbp), %rax
 652 0225 64482B04 		subq	%fs:40, %rax
 652      25280000 
 652      00
 653 022e 7405     		je	.L32
 654 0230 E8000000 		call	__stack_chk_fail@PLT
 654      00
 655              	.L32:
 656 0235 4883C420 		addq	$32, %rsp
 657 0239 5B       		popq	%rbx
 658 023a 415C     		popq	%r12
 659 023c 415D     		popq	%r13
 660 023e 415E     		popq	%r14
 661 0240 5D       		popq	%rbp
 662              		.cfi_def_cfa 7, 8
 663 0241 C3       		ret
 664              		.cfi_endproc
 665              	.LFE1420:
 666              		.section	.gcc_except_table,"a",@progbits
 667              	.LLSDA1420:
 668 0000 FF       		.byte	0xff
 669 0001 FF       		.byte	0xff
 670 0002 01       		.byte	0x1
 671 0003 20       		.uleb128 .LLSDACSE1420-.LLSDACSB1420
 672              	.LLSDACSB1420:
 673 0004 29       		.uleb128 .LEHB11-.LFB1420
 674 0005 05       		.uleb128 .LEHE11-.LEHB11
 675 0006 00       		.uleb128 0
 676 0007 00       		.uleb128 0
 677 0008 56       		.uleb128 .LEHB12-.LFB1420
 678 0009 05       		.uleb128 .LEHE12-.LEHB12
 679 000a CC02     		.uleb128 .L33-.LFB1420
 680 000c 00       		.uleb128 0
 681 000d 8F01     		.uleb128 .LEHB13-.LFB1420
 682 000f 05       		.uleb128 .LEHE13-.LEHB13
 683 0010 E102     		.uleb128 .L34-.LFB1420
 684 0012 00       		.uleb128 0
 685 0013 C801     		.uleb128 .LEHB14-.LFB1420
 686 0015 05       		.uleb128 .LEHE14-.LEHB14
 687 0016 F602     		.uleb128 .L35-.LFB1420
 688 0018 00       		.uleb128 0
 689 0019 8802     		.uleb128 .LEHB15-.LFB1420
 690 001b 3F       		.uleb128 .LEHE15-.LEHB15
 691 001c 8B03     		.uleb128 .L36-.LFB1420
 692 001e 00       		.uleb128 0
 693 001f D403     		.uleb128 .LEHB16-.LFB1420
 694 0021 05       		.uleb128 .LEHE16-.LEHB16
 695 0022 00       		.uleb128 0
 696 0023 00       		.uleb128 0
 697              	.LLSDACSE1420:
 698              		.text
 700              		.align 2
 702              	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev:
 703              	.LFB1424:
  27:TestDeferredTestReporter.cpp **** {
 704              		.loc 3 27 8
 705              		.cfi_startproc
 706              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 707              		.cfi_lsda 0x1b,.LLSDA1424
 708 0242 55       		pushq	%rbp
 709              		.cfi_def_cfa_offset 16
 710              		.cfi_offset 6, -16
 711 0243 4889E5   		movq	%rsp, %rbp
 712              		.cfi_def_cfa_register 6
 713 0246 53       		pushq	%rbx
 714 0247 4883EC18 		subq	$24, %rsp
 715              		.cfi_offset 3, -24
 716 024b 48897DE8 		movq	%rdi, -24(%rbp)
 717              	.LBB12:
  27:TestDeferredTestReporter.cpp **** {
 718              		.loc 3 27 8
 719 024f 488B45E8 		movq	-24(%rbp), %rax
 720 0253 4883C060 		addq	$96, %rax
 721 0257 4889C7   		movq	%rax, %rdi
 722              	.LEHB17:
 723 025a E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 723      00
 724              	.LEHE17:
  27:TestDeferredTestReporter.cpp **** {
 725              		.loc 3 27 8 is_stmt 0 discriminator 2
 726 025f 488B45E8 		movq	-24(%rbp), %rax
 727 0263 4883C040 		addq	$64, %rax
 728 0267 4889C7   		movq	%rax, %rdi
 729              	.LEHB18:
 730 026a E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 730      00
 731              	.LEHE18:
  27:TestDeferredTestReporter.cpp **** {
 732              		.loc 3 27 8 discriminator 4
 733 026f 488B45E8 		movq	-24(%rbp), %rax
 734 0273 4883C020 		addq	$32, %rax
 735 0277 4889C7   		movq	%rax, %rdi
 736              	.LEHB19:
 737 027a E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 737      00
 738              	.LEHE19:
  27:TestDeferredTestReporter.cpp **** {
 739              		.loc 3 27 8 discriminator 6
 740 027f 488B45E8 		movq	-24(%rbp), %rax
 741 0283 4889C7   		movq	%rax, %rdi
 742              	.LEHB20:
 743 0286 E8BB3600 		call	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD1Ev
 743      00
 744              	.LEHE20:
 745              	.LBE12:
 746 028b EB50     		jmp	.L45
 747              	.L42:
 748 028d F30F1EFA 		endbr64
 749              	.LBB13:
  27:TestDeferredTestReporter.cpp **** {
 750              		.loc 3 27 8
 751 0291 4889C3   		movq	%rax, %rbx
 752 0294 488B45E8 		movq	-24(%rbp), %rax
 753 0298 4883C040 		addq	$64, %rax
 754 029c 4889C7   		movq	%rax, %rdi
 755 029f E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 755      00
 756 02a4 EB07     		jmp	.L40
 757              	.L43:
 758 02a6 F30F1EFA 		endbr64
 759 02aa 4889C3   		movq	%rax, %rbx
 760              	.L40:
  27:TestDeferredTestReporter.cpp **** {
 761              		.loc 3 27 8 discriminator 3
 762 02ad 488B45E8 		movq	-24(%rbp), %rax
 763 02b1 4883C020 		addq	$32, %rax
 764 02b5 4889C7   		movq	%rax, %rdi
 765 02b8 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 765      00
 766 02bd EB07     		jmp	.L41
 767              	.L44:
 768 02bf F30F1EFA 		endbr64
  27:TestDeferredTestReporter.cpp **** {
 769              		.loc 3 27 8
 770 02c3 4889C3   		movq	%rax, %rbx
 771              	.L41:
  27:TestDeferredTestReporter.cpp **** {
 772              		.loc 3 27 8 discriminator 5
 773 02c6 488B45E8 		movq	-24(%rbp), %rax
 774 02ca 4889C7   		movq	%rax, %rdi
 775 02cd E8743600 		call	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD1Ev
 775      00
 776 02d2 4889D8   		movq	%rbx, %rax
 777 02d5 4889C7   		movq	%rax, %rdi
 778              	.LEHB21:
 779 02d8 E8000000 		call	_Unwind_Resume@PLT
 779      00
 780              	.LEHE21:
 781              	.L45:
 782              	.LBE13:
  27:TestDeferredTestReporter.cpp **** {
 783              		.loc 3 27 8
 784 02dd 488B5DF8 		movq	-8(%rbp), %rbx
 785 02e1 C9       		leave
 786              		.cfi_def_cfa 7, 8
 787 02e2 C3       		ret
 788              		.cfi_endproc
 789              	.LFE1424:
 790              		.section	.gcc_except_table
 791              	.LLSDA1424:
 792 0024 FF       		.byte	0xff
 793 0025 FF       		.byte	0xff
 794 0026 01       		.byte	0x1
 795 0027 15       		.uleb128 .LLSDACSE1424-.LLSDACSB1424
 796              	.LLSDACSB1424:
 797 0028 18       		.uleb128 .LEHB17-.LFB1424
 798 0029 05       		.uleb128 .LEHE17-.LEHB17
 799 002a 4B       		.uleb128 .L42-.LFB1424
 800 002b 00       		.uleb128 0
 801 002c 28       		.uleb128 .LEHB18-.LFB1424
 802 002d 05       		.uleb128 .LEHE18-.LEHB18
 803 002e 64       		.uleb128 .L43-.LFB1424
 804 002f 00       		.uleb128 0
 805 0030 38       		.uleb128 .LEHB19-.LFB1424
 806 0031 05       		.uleb128 .LEHE19-.LEHB19
 807 0032 7D       		.uleb128 .L44-.LFB1424
 808 0033 00       		.uleb128 0
 809 0034 44       		.uleb128 .LEHB20-.LFB1424
 810 0035 05       		.uleb128 .LEHE20-.LEHB20
 811 0036 00       		.uleb128 0
 812 0037 00       		.uleb128 0
 813 0038 9601     		.uleb128 .LEHB21-.LFB1424
 814 003a 05       		.uleb128 .LEHE21-.LEHB21
 815 003b 00       		.uleb128 0
 816 003c 00       		.uleb128 0
 817              	.LLSDACSE1424:
 818              		.text
 820 02e3 90       		.align 2
 822              	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelper
 823              	.LFB1426:
  37:TestDeferredTestReporter.cpp **** 
  38:TestDeferredTestReporter.cpp ****     MockDeferredTestReporter reporter;
  39:TestDeferredTestReporter.cpp ****     std::string const testName;
  40:TestDeferredTestReporter.cpp ****     std::string const testSuite;
  41:TestDeferredTestReporter.cpp ****     std::string const fileName;
  42:TestDeferredTestReporter.cpp ****     int const lineNumber;
  43:TestDeferredTestReporter.cpp ****     TestDetails const details;
  44:TestDeferredTestReporter.cpp **** };
  45:TestDeferredTestReporter.cpp **** 
  46:TestDeferredTestReporter.cpp **** TEST_FIXTURE(DeferredTestReporterFixture, ReportTestStartCreatesANewDeferredTest)
 824              		.loc 3 46 1 is_stmt 1
 825              		.cfi_startproc
 826 02e4 55       		pushq	%rbp
 827              		.cfi_def_cfa_offset 16
 828              		.cfi_offset 6, -16
 829 02e5 4889E5   		movq	%rsp, %rbp
 830              		.cfi_def_cfa_register 6
 831 02e8 4883EC10 		subq	$16, %rsp
 832 02ec 48897DF8 		movq	%rdi, -8(%rbp)
 833 02f0 488975F0 		movq	%rsi, -16(%rbp)
 834              	.LBB14:
 835              		.loc 3 46 1
 836 02f4 488B45F8 		movq	-8(%rbp), %rax
 837 02f8 4889C7   		movq	%rax, %rdi
 838 02fb E848FDFF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
 838      FF
 839 0300 488B45F8 		movq	-8(%rbp), %rax
 840 0304 488B55F0 		movq	-16(%rbp), %rdx
 841 0308 488990A8 		movq	%rdx, 168(%rax)
 841      000000
 842              	.LBE14:
 843 030f 90       		nop
 844 0310 C9       		leave
 845              		.cfi_def_cfa 7, 8
 846 0311 C3       		ret
 847              		.cfi_endproc
 848              	.LFE1426:
 850              		.set	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 851              		.section	.rodata
 852              	.LC4:
 853 0037 54657374 		.string	"TestDeferredTestReporter.cpp"
 853      44656665 
 853      72726564 
 853      54657374 
 853      5265706F 
 854 0054 00000000 		.align 8
 855              	.LC5:
 856 0058 5265706F 		.string	"ReportTestStartCreatesANewDeferredTest"
 856      72745465 
 856      73745374 
 856      61727443 
 856      72656174 
 857              		.text
 858              		.align 2
 860              	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestC2
 861              	.LFB1429:
 862              		.loc 3 46 1
 863              		.cfi_startproc
 864 0312 55       		pushq	%rbp
 865              		.cfi_def_cfa_offset 16
 866              		.cfi_offset 6, -16
 867 0313 4889E5   		movq	%rsp, %rbp
 868              		.cfi_def_cfa_register 6
 869 0316 53       		pushq	%rbx
 870 0317 4883EC18 		subq	$24, %rsp
 871              		.cfi_offset 3, -24
 872 031b 48897DE8 		movq	%rdi, -24(%rbp)
 873              	.LBB15:
 874              		.loc 3 46 1
 875 031f 488B5DE8 		movq	-24(%rbp), %rbx
 876 0323 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 876      00
 877 0328 4889C2   		movq	%rax, %rdx
 878 032b 41B82E00 		movl	$46, %r8d
 878      0000
 879 0331 488D0500 		leaq	.LC4(%rip), %rax
 879      000000
 880 0338 4889C1   		movq	%rax, %rcx
 881 033b 488D0500 		leaq	.LC5(%rip), %rax
 881      000000
 882 0342 4889C6   		movq	%rax, %rsi
 883 0345 4889DF   		movq	%rbx, %rdi
 884 0348 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 884      00
 885 034d 488D1500 		leaq	16+_ZTVN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDef
 885      000000
 886 0354 488B45E8 		movq	-24(%rbp), %rax
 887 0358 488910   		movq	%rdx, (%rax)
 888              	.LBE15:
 889 035b 90       		nop
 890 035c 488B5DF8 		movq	-8(%rbp), %rbx
 891 0360 C9       		leave
 892              		.cfi_def_cfa 7, 8
 893 0361 C3       		ret
 894              		.cfi_endproc
 895              	.LFE1429:
 897              		.set	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferred
 898              		.local	_ZN8UnitTest12_GLOBAL__N_177testDeferredTestReporterFixtureReportTestStartCreatesANewDeferr
 899              		.comm	_ZN8UnitTest12_GLOBAL__N_177testDeferredTestReporterFixtureReportTestStartCreatesANewDeferre
 900              		.local	_ZN8UnitTest12_GLOBAL__N_170adderDeferredTestReporterFixtureReportTestStartCreatesANewDefer
 901              		.comm	_ZN8UnitTest12_GLOBAL__N_170adderDeferredTestReporterFixtureReportTestStartCreatesANewDeferr
 902              		.align 2
 904              	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelper
 905              	.LFB1433:
 906              		.loc 3 46 1
 907              		.cfi_startproc
 908 0362 55       		pushq	%rbp
 909              		.cfi_def_cfa_offset 16
 910              		.cfi_offset 6, -16
 911 0363 4889E5   		movq	%rsp, %rbp
 912              		.cfi_def_cfa_register 6
 913 0366 4883EC10 		subq	$16, %rsp
 914 036a 48897DF8 		movq	%rdi, -8(%rbp)
 915              	.LBB16:
 916              		.loc 3 46 1
 917 036e 488B45F8 		movq	-8(%rbp), %rax
 918 0372 4889C7   		movq	%rax, %rdi
 919 0375 E8C8FEFF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
 919      FF
 920              	.LBE16:
 921 037a 90       		nop
 922 037b C9       		leave
 923              		.cfi_def_cfa 7, 8
 924 037c C3       		ret
 925              		.cfi_endproc
 926              	.LFE1433:
 928              		.set	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 929              		.section	.rodata
 930              	.LC6:
 931 007f 556E6861 		.string	"Unhandled exception: "
 931      6E646C65 
 931      64206578 
 931      63657074 
 931      696F6E3A 
 932 0095 000000   		.align 8
 933              	.LC7:
 934 0098 556E6861 		.string	"Unhandled exception while destroying fixture DeferredTestReporterFixture"
 934      6E646C65 
 934      64206578 
 934      63657074 
 934      696F6E20 
 935 00e1 00000000 		.align 8
 935      000000
 936              	.LC8:
 937 00e8 556E6861 		.string	"Unhandled exception while constructing fixture DeferredTestReporterFixture"
 937      6E646C65 
 937      64206578 
 937      63657074 
 937      696F6E20 
 938              		.text
 939 037d 90       		.align 2
 941              	_ZNK8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest7
 942              	.LFB1431:
 943              		.loc 3 46 1
 944              		.cfi_startproc
 945              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 946              		.cfi_lsda 0x1b,.LLSDA1431
 947 037e F30F1EFA 		endbr64
 948 0382 55       		pushq	%rbp
 949              		.cfi_def_cfa_offset 16
 950              		.cfi_offset 6, -16
 951 0383 4889E5   		movq	%rsp, %rbp
 952              		.cfi_def_cfa_register 6
 953 0386 4155     		pushq	%r13
 954 0388 4154     		pushq	%r12
 955 038a 53       		pushq	%rbx
 956 038b 4881ECF8 		subq	$504, %rsp
 956      010000
 957              		.cfi_offset 13, -24
 958              		.cfi_offset 12, -32
 959              		.cfi_offset 3, -40
 960 0392 4889BDF8 		movq	%rdi, -520(%rbp)
 960      FDFFFF
 961              		.loc 3 46 1
 962 0399 64488B04 		movq	%fs:40, %rax
 962      25280000 
 962      00
 963 03a2 488945D8 		movq	%rax, -40(%rbp)
 964 03a6 31C0     		xorl	%eax, %eax
 965 03a8 C6850FFE 		movb	$0, -497(%rbp)
 965      FFFF00
 966              	.LBB17:
 967 03af 488B85F8 		movq	-520(%rbp), %rax
 967      FDFFFF
 968 03b6 488D5008 		leaq	8(%rax), %rdx
 969 03ba 488D8540 		leaq	-448(%rbp), %rax
 969      FEFFFF
 970 03c1 4889D6   		movq	%rdx, %rsi
 971 03c4 4889C7   		movq	%rax, %rdi
 972              	.LEHB22:
 973 03c7 E818FFFF 		call	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 973      FF
 974              	.LEHE22:
 975              		.loc 3 46 1 is_stmt 0 discriminator 1
 976 03cc C6850FFE 		movb	$1, -497(%rbp)
 976      FFFF01
 977 03d3 488B85F8 		movq	-520(%rbp), %rax
 977      FDFFFF
 978 03da 488D5008 		leaq	8(%rax), %rdx
 979 03de 488D8540 		leaq	-448(%rbp), %rax
 979      FEFFFF
 980 03e5 4889D6   		movq	%rdx, %rsi
 981 03e8 4889C7   		movq	%rax, %rdi
 982              	.LEHB23:
 983 03eb E8C72000 		call	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreate
 983      00
 984              	.LEHE23:
 985              		.loc 3 46 1 discriminator 3
 986 03f0 488D8540 		leaq	-448(%rbp), %rax
 986      FEFFFF
 987 03f7 4889C7   		movq	%rax, %rdi
 988              	.LEHB24:
 989 03fa E863FFFF 		call	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 989      FF
 990              	.LEHE24:
 991              	.LBE17:
 992              		.loc 3 46 1
 993 03ff E9840200 		jmp	.L49
 993      00
 994              	.L64:
 995 0404 F30F1EFA 		endbr64
 996              	.LBB18:
 997 0408 4989C4   		movq	%rax, %r12
 998 040b 4889D3   		movq	%rdx, %rbx
 999 040e 488D8540 		leaq	-448(%rbp), %rax
 999      FEFFFF
 1000 0415 4889C7   		movq	%rax, %rdi
 1001 0418 E845FFFF 		call	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 1001      FF
 1002 041d 4C89E0   		movq	%r12, %rax
 1003 0420 4889DA   		movq	%rbx, %rdx
 1004 0423 EB04     		jmp	.L51
 1005              	.L63:
 1006 0425 F30F1EFA 		endbr64
 1007              	.L51:
 1008              	.LBE18:
 1009 0429 4883FA01 		cmpq	$1, %rdx
 1010 042d 740F     		je	.L52
 1011 042f 4883FA02 		cmpq	$2, %rdx
 1012 0433 0F84A700 		je	.L53
 1012      0000
 1013 0439 E94D0100 		jmp	.L69
 1013      00
 1014              	.L52:
 1015              	.LBB19:
 1016              		.loc 3 46 1 discriminator 4
 1017 043e 4889C7   		movq	%rax, %rdi
 1018 0441 E8000000 		call	__cxa_begin_catch@PLT
 1018      00
 1019 0446 48898518 		movq	%rax, -488(%rbp)
 1019      FEFFFF
 1020              	.LEHB25:
 1021 044d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1021      00
 1022 0452 488B18   		movq	(%rax), %rbx
 1023 0455 488B8518 		movq	-488(%rbp), %rax
 1023      FEFFFF
 1024 045c 488B00   		movq	(%rax), %rax
 1025 045f 4883C010 		addq	$16, %rax
 1026 0463 488B10   		movq	(%rax), %rdx
 1027 0466 488B8518 		movq	-488(%rbp), %rax
 1027      FEFFFF
 1028 046d 4889C7   		movq	%rax, %rdi
 1029 0470 FFD2     		call	*%rdx
 1030              	.LVL0:
 1031 0472 4989C4   		movq	%rax, %r12
 1032 0475 488B8518 		movq	-488(%rbp), %rax
 1032      FEFFFF
 1033 047c 4889C7   		movq	%rax, %rdi
 1034 047f E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 1034      00
 1035              		.loc 3 46 1 discriminator 8
 1036 0484 4189C5   		movl	%eax, %r13d
 1037 0487 488B8518 		movq	-488(%rbp), %rax
 1037      FEFFFF
 1038 048e 4889C7   		movq	%rax, %rdi
 1039 0491 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 1039      00
 1040              		.loc 3 46 1 discriminator 10
 1041 0496 4889C1   		movq	%rax, %rcx
 1042 0499 488B85F8 		movq	-520(%rbp), %rax
 1042      FDFFFF
 1043 04a0 488B5008 		movq	8(%rax), %rdx
 1044 04a4 488B85F8 		movq	-520(%rbp), %rax
 1044      FDFFFF
 1045 04ab 488B7010 		movq	16(%rax), %rsi
 1046 04af 488D8520 		leaq	-480(%rbp), %rax
 1046      FEFFFF
 1047 04b6 4589E8   		movl	%r13d, %r8d
 1048 04b9 4889C7   		movq	%rax, %rdi
 1049 04bc E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 1049      00
 1050              		.loc 3 46 1 discriminator 14
 1051 04c1 488D8520 		leaq	-480(%rbp), %rax
 1051      FEFFFF
 1052 04c8 4C89E2   		movq	%r12, %rdx
 1053 04cb 4889C6   		movq	%rax, %rsi
 1054 04ce 4889DF   		movq	%rbx, %rdi
 1055 04d1 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1055      00
 1056              	.LEHE25:
 1057              		.loc 3 46 1 discriminator 16
 1058 04d6 E8000000 		call	__cxa_end_catch@PLT
 1058      00
 1059              	.LBE19:
 1060 04db E9A80100 		jmp	.L49
 1060      00
 1061              	.L53:
 1062              	.LBB20:
 1063              		.loc 3 46 1 discriminator 5
 1064 04e0 4889C7   		movq	%rax, %rdi
 1065 04e3 E8000000 		call	__cxa_begin_catch@PLT
 1065      00
 1066 04e8 48898510 		movq	%rax, -496(%rbp)
 1066      FEFFFF
 1067              	.LBB21:
 1068 04ef 488D8540 		leaq	-448(%rbp), %rax
 1068      FEFFFF
 1069 04f6 4889C7   		movq	%rax, %rdi
 1070              	.LEHB26:
 1071 04f9 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 1071      00
 1072              	.LEHE26:
 1073              		.loc 3 46 1 discriminator 18
 1074 04fe 488D8540 		leaq	-448(%rbp), %rax
 1074      FEFFFF
 1075 0505 488D1500 		leaq	.LC6(%rip), %rdx
 1075      000000
 1076 050c 4889D6   		movq	%rdx, %rsi
 1077 050f 4889C7   		movq	%rax, %rdi
 1078              	.LEHB27:
 1079 0512 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 1079      00
 1080 0517 4889C3   		movq	%rax, %rbx
 1081 051a 488B8510 		movq	-496(%rbp), %rax
 1081      FEFFFF
 1082 0521 488B00   		movq	(%rax), %rax
 1083 0524 4883C010 		addq	$16, %rax
 1084 0528 488B10   		movq	(%rax), %rdx
 1085 052b 488B8510 		movq	-496(%rbp), %rax
 1085      FEFFFF
 1086 0532 4889C7   		movq	%rax, %rdi
 1087 0535 FFD2     		call	*%rdx
 1088              	.LVL1:
 1089 0537 4889C6   		movq	%rax, %rsi
 1090 053a 4889DF   		movq	%rbx, %rdi
 1091 053d E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 1091      00
 1092              		.loc 3 46 1 discriminator 22
 1093 0542 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1093      00
 1094 0547 488B18   		movq	(%rax), %rbx
 1095 054a 488D8540 		leaq	-448(%rbp), %rax
 1095      FEFFFF
 1096 0551 4889C7   		movq	%rax, %rdi
 1097 0554 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 1097      00
 1098              		.loc 3 46 1 discriminator 24
 1099 0559 4889C2   		movq	%rax, %rdx
 1100 055c 488B85F8 		movq	-520(%rbp), %rax
 1100      FDFFFF
 1101 0563 4883C008 		addq	$8, %rax
 1102 0567 4889C6   		movq	%rax, %rsi
 1103 056a 4889DF   		movq	%rbx, %rdi
 1104 056d E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1104      00
 1105              	.LEHE27:
 1106              		.loc 3 46 1 discriminator 28
 1107 0572 488D8540 		leaq	-448(%rbp), %rax
 1107      FEFFFF
 1108 0579 4889C7   		movq	%rax, %rdi
 1109              	.LEHB28:
 1110 057c E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 1110      00
 1111              	.LEHE28:
 1112              	.LBE21:
 1113              		.loc 3 46 1 discriminator 29
 1114 0581 E8000000 		call	__cxa_end_catch@PLT
 1114      00
 1115              	.LBE20:
 1116 0586 E9FD0000 		jmp	.L49
 1116      00
 1117              	.L69:
 1118              		.loc 3 46 1 discriminator 6
 1119 058b 4889C7   		movq	%rax, %rdi
 1120 058e E8000000 		call	__cxa_begin_catch@PLT
 1120      00
 1121 0593 80BD0FFE 		cmpb	$0, -497(%rbp)
 1121      FFFF00
 1122 059a 7445     		je	.L56
 1123              	.LEHB29:
 1124              		.loc 3 46 1 discriminator 31
 1125 059c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1125      00
 1126 05a1 488B18   		movq	(%rax), %rbx
 1127 05a4 488B85F8 		movq	-520(%rbp), %rax
 1127      FDFFFF
 1128 05ab 488D4808 		leaq	8(%rax), %rcx
 1129 05af 488D8520 		leaq	-480(%rbp), %rax
 1129      FEFFFF
 1130 05b6 BA2E0000 		movl	$46, %edx
 1130      00
 1131 05bb 4889CE   		movq	%rcx, %rsi
 1132 05be 4889C7   		movq	%rax, %rdi
 1133 05c1 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1133      00
 1134              		.loc 3 46 1 discriminator 36
 1135 05c6 488D8520 		leaq	-480(%rbp), %rax
 1135      FEFFFF
 1136 05cd 488D1500 		leaq	.LC7(%rip), %rdx
 1136      000000
 1137 05d4 4889C6   		movq	%rax, %rsi
 1138 05d7 4889DF   		movq	%rbx, %rdi
 1139 05da E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1139      00
 1140 05df EB43     		jmp	.L57
 1141              	.L56:
 1142              		.loc 3 46 1 discriminator 32
 1143 05e1 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1143      00
 1144 05e6 488B18   		movq	(%rax), %rbx
 1145 05e9 488B85F8 		movq	-520(%rbp), %rax
 1145      FDFFFF
 1146 05f0 488D4808 		leaq	8(%rax), %rcx
 1147 05f4 488D8520 		leaq	-480(%rbp), %rax
 1147      FEFFFF
 1148 05fb BA2E0000 		movl	$46, %edx
 1148      00
 1149 0600 4889CE   		movq	%rcx, %rsi
 1150 0603 4889C7   		movq	%rax, %rdi
 1151 0606 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1151      00
 1152              		.loc 3 46 1 discriminator 43
 1153 060b 488D8520 		leaq	-480(%rbp), %rax
 1153      FEFFFF
 1154 0612 488D1500 		leaq	.LC8(%rip), %rdx
 1154      000000
 1155 0619 4889C6   		movq	%rax, %rsi
 1156 061c 4889DF   		movq	%rbx, %rdi
 1157 061f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1157      00
 1158              	.LEHE29:
 1159              	.L57:
 1160              	.LEHB30:
 1161              		.loc 3 46 1 discriminator 46
 1162 0624 E8000000 		call	__cxa_end_catch@PLT
 1162      00
 1163 0629 EB5D     		jmp	.L49
 1164              	.L65:
 1165 062b F30F1EFA 		endbr64
 1166              	.LBB23:
 1167              		.loc 3 46 1
 1168 062f 4889C3   		movq	%rax, %rbx
 1169 0632 E8000000 		call	__cxa_end_catch@PLT
 1169      00
 1170 0637 4889D8   		movq	%rbx, %rax
 1171 063a 4889C7   		movq	%rax, %rdi
 1172 063d E8000000 		call	_Unwind_Resume@PLT
 1172      00
 1173              	.LEHE30:
 1174              	.L67:
 1175 0642 F30F1EFA 		endbr64
 1176              	.LBE23:
 1177              	.LBB24:
 1178              	.LBB22:
 1179 0646 4889C3   		movq	%rax, %rbx
 1180 0649 488D8540 		leaq	-448(%rbp), %rax
 1180      FEFFFF
 1181 0650 4889C7   		movq	%rax, %rdi
 1182 0653 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 1182      00
 1183 0658 EB07     		jmp	.L60
 1184              	.L66:
 1185 065a F30F1EFA 		endbr64
 1186              	.LBE22:
 1187 065e 4889C3   		movq	%rax, %rbx
 1188              	.L60:
 1189 0661 E8000000 		call	__cxa_end_catch@PLT
 1189      00
 1190 0666 4889D8   		movq	%rbx, %rax
 1191 0669 4889C7   		movq	%rax, %rdi
 1192              	.LEHB31:
 1193 066c E8000000 		call	_Unwind_Resume@PLT
 1193      00
 1194              	.LEHE31:
 1195              	.L68:
 1196 0671 F30F1EFA 		endbr64
 1197              	.LBE24:
 1198 0675 4889C3   		movq	%rax, %rbx
 1199 0678 E8000000 		call	__cxa_end_catch@PLT
 1199      00
 1200 067d 4889D8   		movq	%rbx, %rax
 1201 0680 4889C7   		movq	%rax, %rdi
 1202              	.LEHB32:
 1203 0683 E8000000 		call	_Unwind_Resume@PLT
 1203      00
 1204              	.LEHE32:
 1205              	.L49:
 1206 0688 488B45D8 		movq	-40(%rbp), %rax
 1207 068c 64482B04 		subq	%fs:40, %rax
 1207      25280000 
 1207      00
 1208 0695 7405     		je	.L62
 1209 0697 E8000000 		call	__stack_chk_fail@PLT
 1209      00
 1210              	.L62:
 1211 069c 4881C4F8 		addq	$504, %rsp
 1211      010000
 1212 06a3 5B       		popq	%rbx
 1213 06a4 415C     		popq	%r12
 1214 06a6 415D     		popq	%r13
 1215 06a8 5D       		popq	%rbp
 1216              		.cfi_def_cfa 7, 8
 1217 06a9 C3       		ret
 1218              		.cfi_endproc
 1219              	.LFE1431:
 1220              		.section	.gcc_except_table
 1221 003d 000000   		.align 4
 1222              	.LLSDA1431:
 1223 0040 FF       		.byte	0xff
 1224 0041 9B       		.byte	0x9b
 1225 0042 55       		.uleb128 .LLSDATT1431-.LLSDATTD1431
 1226              	.LLSDATTD1431:
 1227 0043 01       		.byte	0x1
 1228 0044 3E       		.uleb128 .LLSDACSE1431-.LLSDACSB1431
 1229              	.LLSDACSB1431:
 1230 0045 49       		.uleb128 .LEHB22-.LFB1431
 1231 0046 05       		.uleb128 .LEHE22-.LEHB22
 1232 0047 A701     		.uleb128 .L63-.LFB1431
 1233 0049 05       		.uleb128 0x5
 1234 004a 6D       		.uleb128 .LEHB23-.LFB1431
 1235 004b 05       		.uleb128 .LEHE23-.LEHB23
 1236 004c 8601     		.uleb128 .L64-.LFB1431
 1237 004e 07       		.uleb128 0x7
 1238 004f 7C       		.uleb128 .LEHB24-.LFB1431
 1239 0050 05       		.uleb128 .LEHE24-.LEHB24
 1240 0051 A701     		.uleb128 .L63-.LFB1431
 1241 0053 05       		.uleb128 0x5
 1242 0054 CF01     		.uleb128 .LEHB25-.LFB1431
 1243 0056 8901     		.uleb128 .LEHE25-.LEHB25
 1244 0058 AD05     		.uleb128 .L65-.LFB1431
 1245 005a 00       		.uleb128 0
 1246 005b FB02     		.uleb128 .LEHB26-.LFB1431
 1247 005d 05       		.uleb128 .LEHE26-.LEHB26
 1248 005e DC05     		.uleb128 .L66-.LFB1431
 1249 0060 00       		.uleb128 0
 1250 0061 9403     		.uleb128 .LEHB27-.LFB1431
 1251 0063 60       		.uleb128 .LEHE27-.LEHB27
 1252 0064 C405     		.uleb128 .L67-.LFB1431
 1253 0066 00       		.uleb128 0
 1254 0067 FE03     		.uleb128 .LEHB28-.LFB1431
 1255 0069 05       		.uleb128 .LEHE28-.LEHB28
 1256 006a DC05     		.uleb128 .L66-.LFB1431
 1257 006c 00       		.uleb128 0
 1258 006d 9E04     		.uleb128 .LEHB29-.LFB1431
 1259 006f 8801     		.uleb128 .LEHE29-.LEHB29
 1260 0071 F305     		.uleb128 .L68-.LFB1431
 1261 0073 00       		.uleb128 0
 1262 0074 A605     		.uleb128 .LEHB30-.LFB1431
 1263 0076 1E       		.uleb128 .LEHE30-.LEHB30
 1264 0077 00       		.uleb128 0
 1265 0078 00       		.uleb128 0
 1266 0079 EE05     		.uleb128 .LEHB31-.LFB1431
 1267 007b 05       		.uleb128 .LEHE31-.LEHB31
 1268 007c 00       		.uleb128 0
 1269 007d 00       		.uleb128 0
 1270 007e 8506     		.uleb128 .LEHB32-.LFB1431
 1271 0080 05       		.uleb128 .LEHE32-.LEHB32
 1272 0081 00       		.uleb128 0
 1273 0082 00       		.uleb128 0
 1274              	.LLSDACSE1431:
 1275 0083 03       		.byte	0x3
 1276 0084 00       		.byte	0
 1277 0085 02       		.byte	0x2
 1278 0086 7D       		.byte	0x7d
 1279 0087 01       		.byte	0x1
 1280 0088 7D       		.byte	0x7d
 1281 0089 00       		.byte	0
 1282 008a 7D       		.byte	0x7d
 1283 008b 00       		.align 4
 1284 008c 00000000 		.long	0
 1285              	
 1286 0090 00000000 		.long	DW.ref._ZTISt9exception-.
 1287 0094 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 1288              	.LLSDATT1431:
 1289              		.text
 1291              		.section	.rodata
 1292 0133 00000000 		.align 8
 1292      00
 1293              	.LC9:
 1294 0138 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(1, (int)reporter.GetResults().size())"
 1294      6E646C65 
 1294      64206578 
 1294      63657074 
 1294      696F6E20 
 1295              		.text
 1296              		.align 2
 1298              	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelper
 1299              	.LFB1435:
  47:TestDeferredTestReporter.cpp **** {
 1300              		.loc 3 47 1 is_stmt 1
 1301              		.cfi_startproc
 1302              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1303              		.cfi_lsda 0x1b,.LLSDA1435
 1304 06aa F30F1EFA 		endbr64
 1305 06ae 55       		pushq	%rbp
 1306              		.cfi_def_cfa_offset 16
 1307              		.cfi_offset 6, -16
 1308 06af 4889E5   		movq	%rsp, %rbp
 1309              		.cfi_def_cfa_register 6
 1310 06b2 53       		pushq	%rbx
 1311 06b3 4883EC58 		subq	$88, %rsp
 1312              		.cfi_offset 3, -24
 1313 06b7 48897DA8 		movq	%rdi, -88(%rbp)
 1314              		.loc 3 47 1
 1315 06bb 64488B04 		movq	%fs:40, %rax
 1315      25280000 
 1315      00
 1316 06c4 488945E8 		movq	%rax, -24(%rbp)
 1317 06c8 31C0     		xorl	%eax, %eax
  48:TestDeferredTestReporter.cpp ****     reporter.ReportTestStart(details);
 1318              		.loc 3 48 29
 1319 06ca 488B45A8 		movq	-88(%rbp), %rax
 1320              		.loc 3 48 30
 1321 06ce 488B55A8 		movq	-88(%rbp), %rdx
 1322 06d2 4881C288 		addq	$136, %rdx
 1322      000000
 1323              		.loc 3 48 29
 1324 06d9 4889D6   		movq	%rdx, %rsi
 1325 06dc 4889C7   		movq	%rax, %rdi
 1326              	.LEHB33:
 1327 06df E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE@PLT
 1327      00
 1328              	.LEHE33:
 1329              	.LEHB34:
  49:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(1, (int)reporter.GetResults().size());
 1330              		.loc 3 49 5
 1331 06e4 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 1331      00
 1332 06e9 488B08   		movq	(%rax), %rcx
 1333 06ec 488D45C0 		leaq	-64(%rbp), %rax
 1334 06f0 BA310000 		movl	$49, %edx
 1334      00
 1335 06f5 4889CE   		movq	%rcx, %rsi
 1336 06f8 4889C7   		movq	%rax, %rdi
 1337 06fb E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1337      00
 1338              		.loc 3 49 5 is_stmt 0 discriminator 4
 1339 0700 488B45A8 		movq	-88(%rbp), %rax
 1340 0704 4889C7   		movq	%rax, %rdi
 1341 0707 E8000000 		call	_ZN8UnitTest20DeferredTestReporter10GetResultsEv@PLT
 1341      00
 1342 070c 4889C7   		movq	%rax, %rdi
 1343 070f E8000000 		call	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv
 1343      00
 1344 0714 8945BC   		movl	%eax, -68(%rbp)
 1345 0717 C745B801 		movl	$1, -72(%rbp)
 1345      000000
 1346 071e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1346      00
 1347              		.loc 3 49 5 discriminator 6
 1348 0723 488B00   		movq	(%rax), %rax
 1349 0726 488D4DC0 		leaq	-64(%rbp), %rcx
 1350 072a 488D55BC 		leaq	-68(%rbp), %rdx
 1351 072e 488D75B8 		leaq	-72(%rbp), %rsi
 1352 0732 4889C7   		movq	%rax, %rdi
 1353 0735 E8000000 		call	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 1353      00
 1354              	.LEHE34:
  50:TestDeferredTestReporter.cpp **** }
 1355              		.loc 3 50 1 is_stmt 1
 1356 073a EB64     		jmp	.L70
 1357              	.L75:
 1358 073c F30F1EFA 		endbr64
  49:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(1, (int)reporter.GetResults().size());
 1359              		.loc 3 49 5
 1360 0740 4889C7   		movq	%rax, %rdi
 1361 0743 E8000000 		call	__cxa_begin_catch@PLT
 1361      00
 1362              	.LEHB35:
 1363 0748 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1363      00
  49:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(1, (int)reporter.GetResults().size());
 1364              		.loc 3 49 5 is_stmt 0 discriminator 3
 1365 074d 488B18   		movq	(%rax), %rbx
 1366 0750 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 1366      00
  49:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(1, (int)reporter.GetResults().size());
 1367              		.loc 3 49 5 discriminator 13
 1368 0755 488B08   		movq	(%rax), %rcx
 1369 0758 488D45C0 		leaq	-64(%rbp), %rax
 1370 075c BA310000 		movl	$49, %edx
 1370      00
 1371 0761 4889CE   		movq	%rcx, %rsi
 1372 0764 4889C7   		movq	%rax, %rdi
 1373 0767 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1373      00
  49:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(1, (int)reporter.GetResults().size());
 1374              		.loc 3 49 5 discriminator 17
 1375 076c 488D45C0 		leaq	-64(%rbp), %rax
 1376 0770 488D1500 		leaq	.LC9(%rip), %rdx
 1376      000000
 1377 0777 4889C6   		movq	%rax, %rsi
 1378 077a 4889DF   		movq	%rbx, %rdi
 1379 077d E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1379      00
 1380              	.LEHE35:
 1381              	.LEHB36:
  49:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(1, (int)reporter.GetResults().size());
 1382              		.loc 3 49 5 discriminator 19
 1383 0782 E8000000 		call	__cxa_end_catch@PLT
 1383      00
 1384              	.LEHE36:
 1385              		.loc 3 50 1 is_stmt 1 discriminator 19
 1386 0787 EB17     		jmp	.L70
 1387              	.L76:
 1388 0789 F30F1EFA 		endbr64
  49:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(1, (int)reporter.GetResults().size());
 1389              		.loc 3 49 5
 1390 078d 4889C3   		movq	%rax, %rbx
 1391 0790 E8000000 		call	__cxa_end_catch@PLT
 1391      00
 1392 0795 4889D8   		movq	%rbx, %rax
 1393 0798 4889C7   		movq	%rax, %rdi
 1394              	.LEHB37:
 1395 079b E8000000 		call	_Unwind_Resume@PLT
 1395      00
 1396              	.LEHE37:
 1397              	.L70:
 1398              		.loc 3 50 1
 1399 07a0 488B45E8 		movq	-24(%rbp), %rax
 1400 07a4 64482B04 		subq	%fs:40, %rax
 1400      25280000 
 1400      00
 1401 07ad 7405     		je	.L74
 1402 07af E8000000 		call	__stack_chk_fail@PLT
 1402      00
 1403              	.L74:
 1404 07b4 488B5DF8 		movq	-8(%rbp), %rbx
 1405 07b8 C9       		leave
 1406              		.cfi_def_cfa 7, 8
 1407 07b9 C3       		ret
 1408              		.cfi_endproc
 1409              	.LFE1435:
 1410              		.section	.gcc_except_table
 1411              		.align 4
 1412              	.LLSDA1435:
 1413 0098 FF       		.byte	0xff
 1414 0099 9B       		.byte	0x9b
 1415 009a 21       		.uleb128 .LLSDATT1435-.LLSDATTD1435
 1416              	.LLSDATTD1435:
 1417 009b 01       		.byte	0x1
 1418 009c 19       		.uleb128 .LLSDACSE1435-.LLSDACSB1435
 1419              	.LLSDACSB1435:
 1420 009d 35       		.uleb128 .LEHB33-.LFB1435
 1421 009e 05       		.uleb128 .LEHE33-.LEHB33
 1422 009f 00       		.uleb128 0
 1423 00a0 00       		.uleb128 0
 1424 00a1 3A       		.uleb128 .LEHB34-.LFB1435
 1425 00a2 56       		.uleb128 .LEHE34-.LEHB34
 1426 00a3 9201     		.uleb128 .L75-.LFB1435
 1427 00a5 01       		.uleb128 0x1
 1428 00a6 9E01     		.uleb128 .LEHB35-.LFB1435
 1429 00a8 3A       		.uleb128 .LEHE35-.LEHB35
 1430 00a9 DF01     		.uleb128 .L76-.LFB1435
 1431 00ab 00       		.uleb128 0
 1432 00ac D801     		.uleb128 .LEHB36-.LFB1435
 1433 00ae 05       		.uleb128 .LEHE36-.LEHB36
 1434 00af 00       		.uleb128 0
 1435 00b0 00       		.uleb128 0
 1436 00b1 F101     		.uleb128 .LEHB37-.LFB1435
 1437 00b3 05       		.uleb128 .LEHE37-.LEHB37
 1438 00b4 00       		.uleb128 0
 1439 00b5 00       		.uleb128 0
 1440              	.LLSDACSE1435:
 1441 00b6 01       		.byte	0x1
 1442 00b7 00       		.byte	0
 1443              		.align 4
 1444 00b8 00000000 		.long	0
 1445              	
 1446              	.LLSDATT1435:
 1447              		.text
 1449              		.align 2
 1451              	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelpe
 1452              	.LFB1437:
  51:TestDeferredTestReporter.cpp **** 
  52:TestDeferredTestReporter.cpp **** TEST_FIXTURE(DeferredTestReporterFixture, ReportTestStartCapturesTestNameAndSuite)
 1453              		.loc 3 52 1
 1454              		.cfi_startproc
 1455 07ba 55       		pushq	%rbp
 1456              		.cfi_def_cfa_offset 16
 1457              		.cfi_offset 6, -16
 1458 07bb 4889E5   		movq	%rsp, %rbp
 1459              		.cfi_def_cfa_register 6
 1460 07be 4883EC10 		subq	$16, %rsp
 1461 07c2 48897DF8 		movq	%rdi, -8(%rbp)
 1462 07c6 488975F0 		movq	%rsi, -16(%rbp)
 1463              	.LBB25:
 1464              		.loc 3 52 1
 1465 07ca 488B45F8 		movq	-8(%rbp), %rax
 1466 07ce 4889C7   		movq	%rax, %rdi
 1467 07d1 E872F8FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
 1467      FF
 1468 07d6 488B45F8 		movq	-8(%rbp), %rax
 1469 07da 488B55F0 		movq	-16(%rbp), %rdx
 1470 07de 488990A8 		movq	%rdx, 168(%rax)
 1470      000000
 1471              	.LBE25:
 1472 07e5 90       		nop
 1473 07e6 C9       		leave
 1474              		.cfi_def_cfa 7, 8
 1475 07e7 C3       		ret
 1476              		.cfi_endproc
 1477              	.LFE1437:
 1479              		.set	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 1480              		.section	.rodata
 1481 0181 00000000 		.align 8
 1481      000000
 1482              	.LC10:
 1483 0188 5265706F 		.string	"ReportTestStartCapturesTestNameAndSuite"
 1483      72745465 
 1483      73745374 
 1483      61727443 
 1483      61707475 
 1484              		.text
 1485              		.align 2
 1487              	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteC
 1488              	.LFB1440:
 1489              		.loc 3 52 1
 1490              		.cfi_startproc
 1491 07e8 55       		pushq	%rbp
 1492              		.cfi_def_cfa_offset 16
 1493              		.cfi_offset 6, -16
 1494 07e9 4889E5   		movq	%rsp, %rbp
 1495              		.cfi_def_cfa_register 6
 1496 07ec 53       		pushq	%rbx
 1497 07ed 4883EC18 		subq	$24, %rsp
 1498              		.cfi_offset 3, -24
 1499 07f1 48897DE8 		movq	%rdi, -24(%rbp)
 1500              	.LBB26:
 1501              		.loc 3 52 1
 1502 07f5 488B5DE8 		movq	-24(%rbp), %rbx
 1503 07f9 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 1503      00
 1504 07fe 4889C2   		movq	%rax, %rdx
 1505 0801 41B83400 		movl	$52, %r8d
 1505      0000
 1506 0807 488D0500 		leaq	.LC4(%rip), %rax
 1506      000000
 1507 080e 4889C1   		movq	%rax, %rcx
 1508 0811 488D0500 		leaq	.LC10(%rip), %rax
 1508      000000
 1509 0818 4889C6   		movq	%rax, %rsi
 1510 081b 4889DF   		movq	%rbx, %rdi
 1511 081e E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 1511      00
 1512 0823 488D1500 		leaq	16+_ZTVN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNa
 1512      000000
 1513 082a 488B45E8 		movq	-24(%rbp), %rax
 1514 082e 488910   		movq	%rdx, (%rax)
 1515              	.LBE26:
 1516 0831 90       		nop
 1517 0832 488B5DF8 		movq	-8(%rbp), %rbx
 1518 0836 C9       		leave
 1519              		.cfi_def_cfa 7, 8
 1520 0837 C3       		ret
 1521              		.cfi_endproc
 1522              	.LFE1440:
 1524              		.set	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAnd
 1525              		.local	_ZN8UnitTest12_GLOBAL__N_178testDeferredTestReporterFixtureReportTestStartCapturesTestNameA
 1526              		.comm	_ZN8UnitTest12_GLOBAL__N_178testDeferredTestReporterFixtureReportTestStartCapturesTestNameAn
 1527              		.local	_ZN8UnitTest12_GLOBAL__N_171adderDeferredTestReporterFixtureReportTestStartCapturesTestName
 1528              		.comm	_ZN8UnitTest12_GLOBAL__N_171adderDeferredTestReporterFixtureReportTestStartCapturesTestNameA
 1529              		.align 2
 1531              	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelpe
 1532              	.LFB1444:
 1533              		.loc 3 52 1
 1534              		.cfi_startproc
 1535 0838 55       		pushq	%rbp
 1536              		.cfi_def_cfa_offset 16
 1537              		.cfi_offset 6, -16
 1538 0839 4889E5   		movq	%rsp, %rbp
 1539              		.cfi_def_cfa_register 6
 1540 083c 4883EC10 		subq	$16, %rsp
 1541 0840 48897DF8 		movq	%rdi, -8(%rbp)
 1542              	.LBB27:
 1543              		.loc 3 52 1
 1544 0844 488B45F8 		movq	-8(%rbp), %rax
 1545 0848 4889C7   		movq	%rax, %rdi
 1546 084b E8F2F9FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
 1546      FF
 1547              	.LBE27:
 1548 0850 90       		nop
 1549 0851 C9       		leave
 1550              		.cfi_def_cfa 7, 8
 1551 0852 C3       		ret
 1552              		.cfi_endproc
 1553              	.LFE1444:
 1555              		.set	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 1556 0853 90       		.align 2
 1558              	_ZNK8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuite
 1559              	.LFB1442:
 1560              		.loc 3 52 1
 1561              		.cfi_startproc
 1562              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1563              		.cfi_lsda 0x1b,.LLSDA1442
 1564 0854 F30F1EFA 		endbr64
 1565 0858 55       		pushq	%rbp
 1566              		.cfi_def_cfa_offset 16
 1567              		.cfi_offset 6, -16
 1568 0859 4889E5   		movq	%rsp, %rbp
 1569              		.cfi_def_cfa_register 6
 1570 085c 4155     		pushq	%r13
 1571 085e 4154     		pushq	%r12
 1572 0860 53       		pushq	%rbx
 1573 0861 4881ECF8 		subq	$504, %rsp
 1573      010000
 1574              		.cfi_offset 13, -24
 1575              		.cfi_offset 12, -32
 1576              		.cfi_offset 3, -40
 1577 0868 4889BDF8 		movq	%rdi, -520(%rbp)
 1577      FDFFFF
 1578              		.loc 3 52 1
 1579 086f 64488B04 		movq	%fs:40, %rax
 1579      25280000 
 1579      00
 1580 0878 488945D8 		movq	%rax, -40(%rbp)
 1581 087c 31C0     		xorl	%eax, %eax
 1582 087e C6850FFE 		movb	$0, -497(%rbp)
 1582      FFFF00
 1583              	.LBB28:
 1584 0885 488B85F8 		movq	-520(%rbp), %rax
 1584      FDFFFF
 1585 088c 488D5008 		leaq	8(%rax), %rdx
 1586 0890 488D8540 		leaq	-448(%rbp), %rax
 1586      FEFFFF
 1587 0897 4889D6   		movq	%rdx, %rsi
 1588 089a 4889C7   		movq	%rax, %rdi
 1589              	.LEHB38:
 1590 089d E818FFFF 		call	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 1590      FF
 1591              	.LEHE38:
 1592              		.loc 3 52 1 is_stmt 0 discriminator 1
 1593 08a2 C6850FFE 		movb	$1, -497(%rbp)
 1593      FFFF01
 1594 08a9 488B85F8 		movq	-520(%rbp), %rax
 1594      FDFFFF
 1595 08b0 488D5008 		leaq	8(%rax), %rdx
 1596 08b4 488D8540 		leaq	-448(%rbp), %rax
 1596      FEFFFF
 1597 08bb 4889D6   		movq	%rdx, %rsi
 1598 08be 4889C7   		movq	%rax, %rdi
 1599              	.LEHB39:
 1600 08c1 E8E01E00 		call	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCaptur
 1600      00
 1601              	.LEHE39:
 1602              		.loc 3 52 1 discriminator 3
 1603 08c6 488D8540 		leaq	-448(%rbp), %rax
 1603      FEFFFF
 1604 08cd 4889C7   		movq	%rax, %rdi
 1605              	.LEHB40:
 1606 08d0 E863FFFF 		call	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 1606      FF
 1607              	.LEHE40:
 1608              	.LBE28:
 1609              		.loc 3 52 1
 1610 08d5 E9840200 		jmp	.L80
 1610      00
 1611              	.L95:
 1612 08da F30F1EFA 		endbr64
 1613              	.LBB29:
 1614 08de 4989C4   		movq	%rax, %r12
 1615 08e1 4889D3   		movq	%rdx, %rbx
 1616 08e4 488D8540 		leaq	-448(%rbp), %rax
 1616      FEFFFF
 1617 08eb 4889C7   		movq	%rax, %rdi
 1618 08ee E845FFFF 		call	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 1618      FF
 1619 08f3 4C89E0   		movq	%r12, %rax
 1620 08f6 4889DA   		movq	%rbx, %rdx
 1621 08f9 EB04     		jmp	.L82
 1622              	.L94:
 1623 08fb F30F1EFA 		endbr64
 1624              	.L82:
 1625              	.LBE29:
 1626 08ff 4883FA01 		cmpq	$1, %rdx
 1627 0903 740F     		je	.L83
 1628 0905 4883FA02 		cmpq	$2, %rdx
 1629 0909 0F84A700 		je	.L84
 1629      0000
 1630 090f E94D0100 		jmp	.L100
 1630      00
 1631              	.L83:
 1632              	.LBB30:
 1633              		.loc 3 52 1 discriminator 4
 1634 0914 4889C7   		movq	%rax, %rdi
 1635 0917 E8000000 		call	__cxa_begin_catch@PLT
 1635      00
 1636 091c 48898518 		movq	%rax, -488(%rbp)
 1636      FEFFFF
 1637              	.LEHB41:
 1638 0923 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1638      00
 1639 0928 488B18   		movq	(%rax), %rbx
 1640 092b 488B8518 		movq	-488(%rbp), %rax
 1640      FEFFFF
 1641 0932 488B00   		movq	(%rax), %rax
 1642 0935 4883C010 		addq	$16, %rax
 1643 0939 488B10   		movq	(%rax), %rdx
 1644 093c 488B8518 		movq	-488(%rbp), %rax
 1644      FEFFFF
 1645 0943 4889C7   		movq	%rax, %rdi
 1646 0946 FFD2     		call	*%rdx
 1647              	.LVL2:
 1648 0948 4989C4   		movq	%rax, %r12
 1649 094b 488B8518 		movq	-488(%rbp), %rax
 1649      FEFFFF
 1650 0952 4889C7   		movq	%rax, %rdi
 1651 0955 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 1651      00
 1652              		.loc 3 52 1 discriminator 8
 1653 095a 4189C5   		movl	%eax, %r13d
 1654 095d 488B8518 		movq	-488(%rbp), %rax
 1654      FEFFFF
 1655 0964 4889C7   		movq	%rax, %rdi
 1656 0967 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 1656      00
 1657              		.loc 3 52 1 discriminator 10
 1658 096c 4889C1   		movq	%rax, %rcx
 1659 096f 488B85F8 		movq	-520(%rbp), %rax
 1659      FDFFFF
 1660 0976 488B5008 		movq	8(%rax), %rdx
 1661 097a 488B85F8 		movq	-520(%rbp), %rax
 1661      FDFFFF
 1662 0981 488B7010 		movq	16(%rax), %rsi
 1663 0985 488D8520 		leaq	-480(%rbp), %rax
 1663      FEFFFF
 1664 098c 4589E8   		movl	%r13d, %r8d
 1665 098f 4889C7   		movq	%rax, %rdi
 1666 0992 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 1666      00
 1667              		.loc 3 52 1 discriminator 14
 1668 0997 488D8520 		leaq	-480(%rbp), %rax
 1668      FEFFFF
 1669 099e 4C89E2   		movq	%r12, %rdx
 1670 09a1 4889C6   		movq	%rax, %rsi
 1671 09a4 4889DF   		movq	%rbx, %rdi
 1672 09a7 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1672      00
 1673              	.LEHE41:
 1674              		.loc 3 52 1 discriminator 16
 1675 09ac E8000000 		call	__cxa_end_catch@PLT
 1675      00
 1676              	.LBE30:
 1677 09b1 E9A80100 		jmp	.L80
 1677      00
 1678              	.L84:
 1679              	.LBB31:
 1680              		.loc 3 52 1 discriminator 5
 1681 09b6 4889C7   		movq	%rax, %rdi
 1682 09b9 E8000000 		call	__cxa_begin_catch@PLT
 1682      00
 1683 09be 48898510 		movq	%rax, -496(%rbp)
 1683      FEFFFF
 1684              	.LBB32:
 1685 09c5 488D8540 		leaq	-448(%rbp), %rax
 1685      FEFFFF
 1686 09cc 4889C7   		movq	%rax, %rdi
 1687              	.LEHB42:
 1688 09cf E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 1688      00
 1689              	.LEHE42:
 1690              		.loc 3 52 1 discriminator 18
 1691 09d4 488D8540 		leaq	-448(%rbp), %rax
 1691      FEFFFF
 1692 09db 488D1500 		leaq	.LC6(%rip), %rdx
 1692      000000
 1693 09e2 4889D6   		movq	%rdx, %rsi
 1694 09e5 4889C7   		movq	%rax, %rdi
 1695              	.LEHB43:
 1696 09e8 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 1696      00
 1697 09ed 4889C3   		movq	%rax, %rbx
 1698 09f0 488B8510 		movq	-496(%rbp), %rax
 1698      FEFFFF
 1699 09f7 488B00   		movq	(%rax), %rax
 1700 09fa 4883C010 		addq	$16, %rax
 1701 09fe 488B10   		movq	(%rax), %rdx
 1702 0a01 488B8510 		movq	-496(%rbp), %rax
 1702      FEFFFF
 1703 0a08 4889C7   		movq	%rax, %rdi
 1704 0a0b FFD2     		call	*%rdx
 1705              	.LVL3:
 1706 0a0d 4889C6   		movq	%rax, %rsi
 1707 0a10 4889DF   		movq	%rbx, %rdi
 1708 0a13 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 1708      00
 1709              		.loc 3 52 1 discriminator 22
 1710 0a18 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1710      00
 1711 0a1d 488B18   		movq	(%rax), %rbx
 1712 0a20 488D8540 		leaq	-448(%rbp), %rax
 1712      FEFFFF
 1713 0a27 4889C7   		movq	%rax, %rdi
 1714 0a2a E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 1714      00
 1715              		.loc 3 52 1 discriminator 24
 1716 0a2f 4889C2   		movq	%rax, %rdx
 1717 0a32 488B85F8 		movq	-520(%rbp), %rax
 1717      FDFFFF
 1718 0a39 4883C008 		addq	$8, %rax
 1719 0a3d 4889C6   		movq	%rax, %rsi
 1720 0a40 4889DF   		movq	%rbx, %rdi
 1721 0a43 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1721      00
 1722              	.LEHE43:
 1723              		.loc 3 52 1 discriminator 28
 1724 0a48 488D8540 		leaq	-448(%rbp), %rax
 1724      FEFFFF
 1725 0a4f 4889C7   		movq	%rax, %rdi
 1726              	.LEHB44:
 1727 0a52 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 1727      00
 1728              	.LEHE44:
 1729              	.LBE32:
 1730              		.loc 3 52 1 discriminator 29
 1731 0a57 E8000000 		call	__cxa_end_catch@PLT
 1731      00
 1732              	.LBE31:
 1733 0a5c E9FD0000 		jmp	.L80
 1733      00
 1734              	.L100:
 1735              		.loc 3 52 1 discriminator 6
 1736 0a61 4889C7   		movq	%rax, %rdi
 1737 0a64 E8000000 		call	__cxa_begin_catch@PLT
 1737      00
 1738 0a69 80BD0FFE 		cmpb	$0, -497(%rbp)
 1738      FFFF00
 1739 0a70 7445     		je	.L87
 1740              	.LEHB45:
 1741              		.loc 3 52 1 discriminator 31
 1742 0a72 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1742      00
 1743 0a77 488B18   		movq	(%rax), %rbx
 1744 0a7a 488B85F8 		movq	-520(%rbp), %rax
 1744      FDFFFF
 1745 0a81 488D4808 		leaq	8(%rax), %rcx
 1746 0a85 488D8520 		leaq	-480(%rbp), %rax
 1746      FEFFFF
 1747 0a8c BA340000 		movl	$52, %edx
 1747      00
 1748 0a91 4889CE   		movq	%rcx, %rsi
 1749 0a94 4889C7   		movq	%rax, %rdi
 1750 0a97 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1750      00
 1751              		.loc 3 52 1 discriminator 36
 1752 0a9c 488D8520 		leaq	-480(%rbp), %rax
 1752      FEFFFF
 1753 0aa3 488D1500 		leaq	.LC7(%rip), %rdx
 1753      000000
 1754 0aaa 4889C6   		movq	%rax, %rsi
 1755 0aad 4889DF   		movq	%rbx, %rdi
 1756 0ab0 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1756      00
 1757 0ab5 EB43     		jmp	.L88
 1758              	.L87:
 1759              		.loc 3 52 1 discriminator 32
 1760 0ab7 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1760      00
 1761 0abc 488B18   		movq	(%rax), %rbx
 1762 0abf 488B85F8 		movq	-520(%rbp), %rax
 1762      FDFFFF
 1763 0ac6 488D4808 		leaq	8(%rax), %rcx
 1764 0aca 488D8520 		leaq	-480(%rbp), %rax
 1764      FEFFFF
 1765 0ad1 BA340000 		movl	$52, %edx
 1765      00
 1766 0ad6 4889CE   		movq	%rcx, %rsi
 1767 0ad9 4889C7   		movq	%rax, %rdi
 1768 0adc E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1768      00
 1769              		.loc 3 52 1 discriminator 43
 1770 0ae1 488D8520 		leaq	-480(%rbp), %rax
 1770      FEFFFF
 1771 0ae8 488D1500 		leaq	.LC8(%rip), %rdx
 1771      000000
 1772 0aef 4889C6   		movq	%rax, %rsi
 1773 0af2 4889DF   		movq	%rbx, %rdi
 1774 0af5 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1774      00
 1775              	.LEHE45:
 1776              	.L88:
 1777              	.LEHB46:
 1778              		.loc 3 52 1 discriminator 46
 1779 0afa E8000000 		call	__cxa_end_catch@PLT
 1779      00
 1780 0aff EB5D     		jmp	.L80
 1781              	.L96:
 1782 0b01 F30F1EFA 		endbr64
 1783              	.LBB34:
 1784              		.loc 3 52 1
 1785 0b05 4889C3   		movq	%rax, %rbx
 1786 0b08 E8000000 		call	__cxa_end_catch@PLT
 1786      00
 1787 0b0d 4889D8   		movq	%rbx, %rax
 1788 0b10 4889C7   		movq	%rax, %rdi
 1789 0b13 E8000000 		call	_Unwind_Resume@PLT
 1789      00
 1790              	.LEHE46:
 1791              	.L98:
 1792 0b18 F30F1EFA 		endbr64
 1793              	.LBE34:
 1794              	.LBB35:
 1795              	.LBB33:
 1796 0b1c 4889C3   		movq	%rax, %rbx
 1797 0b1f 488D8540 		leaq	-448(%rbp), %rax
 1797      FEFFFF
 1798 0b26 4889C7   		movq	%rax, %rdi
 1799 0b29 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 1799      00
 1800 0b2e EB07     		jmp	.L91
 1801              	.L97:
 1802 0b30 F30F1EFA 		endbr64
 1803              	.LBE33:
 1804 0b34 4889C3   		movq	%rax, %rbx
 1805              	.L91:
 1806 0b37 E8000000 		call	__cxa_end_catch@PLT
 1806      00
 1807 0b3c 4889D8   		movq	%rbx, %rax
 1808 0b3f 4889C7   		movq	%rax, %rdi
 1809              	.LEHB47:
 1810 0b42 E8000000 		call	_Unwind_Resume@PLT
 1810      00
 1811              	.LEHE47:
 1812              	.L99:
 1813 0b47 F30F1EFA 		endbr64
 1814              	.LBE35:
 1815 0b4b 4889C3   		movq	%rax, %rbx
 1816 0b4e E8000000 		call	__cxa_end_catch@PLT
 1816      00
 1817 0b53 4889D8   		movq	%rbx, %rax
 1818 0b56 4889C7   		movq	%rax, %rdi
 1819              	.LEHB48:
 1820 0b59 E8000000 		call	_Unwind_Resume@PLT
 1820      00
 1821              	.LEHE48:
 1822              	.L80:
 1823 0b5e 488B45D8 		movq	-40(%rbp), %rax
 1824 0b62 64482B04 		subq	%fs:40, %rax
 1824      25280000 
 1824      00
 1825 0b6b 7405     		je	.L93
 1826 0b6d E8000000 		call	__stack_chk_fail@PLT
 1826      00
 1827              	.L93:
 1828 0b72 4881C4F8 		addq	$504, %rsp
 1828      010000
 1829 0b79 5B       		popq	%rbx
 1830 0b7a 415C     		popq	%r12
 1831 0b7c 415D     		popq	%r13
 1832 0b7e 5D       		popq	%rbp
 1833              		.cfi_def_cfa 7, 8
 1834 0b7f C3       		ret
 1835              		.cfi_endproc
 1836              	.LFE1442:
 1837              		.section	.gcc_except_table
 1838              		.align 4
 1839              	.LLSDA1442:
 1840 00bc FF       		.byte	0xff
 1841 00bd 9B       		.byte	0x9b
 1842 00be 55       		.uleb128 .LLSDATT1442-.LLSDATTD1442
 1843              	.LLSDATTD1442:
 1844 00bf 01       		.byte	0x1
 1845 00c0 3E       		.uleb128 .LLSDACSE1442-.LLSDACSB1442
 1846              	.LLSDACSB1442:
 1847 00c1 49       		.uleb128 .LEHB38-.LFB1442
 1848 00c2 05       		.uleb128 .LEHE38-.LEHB38
 1849 00c3 A701     		.uleb128 .L94-.LFB1442
 1850 00c5 05       		.uleb128 0x5
 1851 00c6 6D       		.uleb128 .LEHB39-.LFB1442
 1852 00c7 05       		.uleb128 .LEHE39-.LEHB39
 1853 00c8 8601     		.uleb128 .L95-.LFB1442
 1854 00ca 07       		.uleb128 0x7
 1855 00cb 7C       		.uleb128 .LEHB40-.LFB1442
 1856 00cc 05       		.uleb128 .LEHE40-.LEHB40
 1857 00cd A701     		.uleb128 .L94-.LFB1442
 1858 00cf 05       		.uleb128 0x5
 1859 00d0 CF01     		.uleb128 .LEHB41-.LFB1442
 1860 00d2 8901     		.uleb128 .LEHE41-.LEHB41
 1861 00d4 AD05     		.uleb128 .L96-.LFB1442
 1862 00d6 00       		.uleb128 0
 1863 00d7 FB02     		.uleb128 .LEHB42-.LFB1442
 1864 00d9 05       		.uleb128 .LEHE42-.LEHB42
 1865 00da DC05     		.uleb128 .L97-.LFB1442
 1866 00dc 00       		.uleb128 0
 1867 00dd 9403     		.uleb128 .LEHB43-.LFB1442
 1868 00df 60       		.uleb128 .LEHE43-.LEHB43
 1869 00e0 C405     		.uleb128 .L98-.LFB1442
 1870 00e2 00       		.uleb128 0
 1871 00e3 FE03     		.uleb128 .LEHB44-.LFB1442
 1872 00e5 05       		.uleb128 .LEHE44-.LEHB44
 1873 00e6 DC05     		.uleb128 .L97-.LFB1442
 1874 00e8 00       		.uleb128 0
 1875 00e9 9E04     		.uleb128 .LEHB45-.LFB1442
 1876 00eb 8801     		.uleb128 .LEHE45-.LEHB45
 1877 00ed F305     		.uleb128 .L99-.LFB1442
 1878 00ef 00       		.uleb128 0
 1879 00f0 A605     		.uleb128 .LEHB46-.LFB1442
 1880 00f2 1E       		.uleb128 .LEHE46-.LEHB46
 1881 00f3 00       		.uleb128 0
 1882 00f4 00       		.uleb128 0
 1883 00f5 EE05     		.uleb128 .LEHB47-.LFB1442
 1884 00f7 05       		.uleb128 .LEHE47-.LEHB47
 1885 00f8 00       		.uleb128 0
 1886 00f9 00       		.uleb128 0
 1887 00fa 8506     		.uleb128 .LEHB48-.LFB1442
 1888 00fc 05       		.uleb128 .LEHE48-.LEHB48
 1889 00fd 00       		.uleb128 0
 1890 00fe 00       		.uleb128 0
 1891              	.LLSDACSE1442:
 1892 00ff 03       		.byte	0x3
 1893 0100 00       		.byte	0
 1894 0101 02       		.byte	0x2
 1895 0102 7D       		.byte	0x7d
 1896 0103 01       		.byte	0x1
 1897 0104 7D       		.byte	0x7d
 1898 0105 00       		.byte	0
 1899 0106 7D       		.byte	0x7d
 1900 0107 00       		.align 4
 1901 0108 00000000 		.long	0
 1902              	
 1903 010c 00000000 		.long	DW.ref._ZTISt9exception-.
 1904 0110 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 1905              	.LLSDATT1442:
 1906              		.text
 1908              		.section	.rodata
 1909              		.align 8
 1910              	.LC11:
 1911 01b0 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(testName.c_str(), result.testName)"
 1911      6E646C65 
 1911      64206578 
 1911      63657074 
 1911      696F6E20 
 1912 01f6 0000     		.align 8
 1913              	.LC12:
 1914 01f8 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(testSuite.c_str(), result.suiteName)"
 1914      6E646C65 
 1914      64206578 
 1914      63657074 
 1914      696F6E20 
 1915              		.text
 1916              		.align 2
 1918              	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelpe
 1919              	.LFB1446:
  53:TestDeferredTestReporter.cpp **** {
 1920              		.loc 3 53 1 is_stmt 1
 1921              		.cfi_startproc
 1922              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1923              		.cfi_lsda 0x1b,.LLSDA1446
 1924 0b80 F30F1EFA 		endbr64
 1925 0b84 55       		pushq	%rbp
 1926              		.cfi_def_cfa_offset 16
 1927              		.cfi_offset 6, -16
 1928 0b85 4889E5   		movq	%rsp, %rbp
 1929              		.cfi_def_cfa_register 6
 1930 0b88 53       		pushq	%rbx
 1931 0b89 4883EC58 		subq	$88, %rsp
 1932              		.cfi_offset 3, -24
 1933 0b8d 48897DA8 		movq	%rdi, -88(%rbp)
 1934              		.loc 3 53 1
 1935 0b91 64488B04 		movq	%fs:40, %rax
 1935      25280000 
 1935      00
 1936 0b9a 488945E8 		movq	%rax, -24(%rbp)
 1937 0b9e 31C0     		xorl	%eax, %eax
  54:TestDeferredTestReporter.cpp ****     reporter.ReportTestStart(details);
 1938              		.loc 3 54 29
 1939 0ba0 488B45A8 		movq	-88(%rbp), %rax
 1940              		.loc 3 54 30
 1941 0ba4 488B55A8 		movq	-88(%rbp), %rdx
 1942 0ba8 4881C288 		addq	$136, %rdx
 1942      000000
 1943              		.loc 3 54 29
 1944 0baf 4889D6   		movq	%rdx, %rsi
 1945 0bb2 4889C7   		movq	%rax, %rdi
 1946              	.LEHB49:
 1947 0bb5 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE@PLT
 1947      00
  55:TestDeferredTestReporter.cpp **** 
  56:TestDeferredTestReporter.cpp ****     DeferredTestResult const& result = reporter.GetResults().at(0);
 1948              		.loc 3 56 59
 1949 0bba 488B45A8 		movq	-88(%rbp), %rax
 1950 0bbe 4889C7   		movq	%rax, %rdi
 1951 0bc1 E8000000 		call	_ZN8UnitTest20DeferredTestReporter10GetResultsEv@PLT
 1951      00
 1952              		.loc 3 56 64
 1953 0bc6 BE000000 		movl	$0, %esi
 1953      00
 1954 0bcb 4889C7   		movq	%rax, %rdi
 1955 0bce E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
 1955      00
 1956              	.LEHE49:
 1957 0bd3 488945B8 		movq	%rax, -72(%rbp)
 1958              	.LEHB50:
  57:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testName.c_str(), result.testName);
 1959              		.loc 3 57 5
 1960 0bd7 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 1960      00
 1961 0bdc 488B08   		movq	(%rax), %rcx
 1962 0bdf 488D45C0 		leaq	-64(%rbp), %rax
 1963 0be3 BA390000 		movl	$57, %edx
 1963      00
 1964 0be8 4889CE   		movq	%rcx, %rsi
 1965 0beb 4889C7   		movq	%rax, %rdi
 1966 0bee E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1966      00
 1967              		.loc 3 57 5 is_stmt 0 discriminator 4
 1968 0bf3 488B45B8 		movq	-72(%rbp), %rax
 1969 0bf7 488D5820 		leaq	32(%rax), %rbx
 1970 0bfb 488B45A8 		movq	-88(%rbp), %rax
 1971 0bff 4883C020 		addq	$32, %rax
 1972 0c03 4889C7   		movq	%rax, %rdi
 1973 0c06 E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@PLT
 1973      00
 1974 0c0b 488945B0 		movq	%rax, -80(%rbp)
 1975 0c0f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1975      00
 1976              		.loc 3 57 5 discriminator 6
 1977 0c14 488B00   		movq	(%rax), %rax
 1978 0c17 488D55C0 		leaq	-64(%rbp), %rdx
 1979 0c1b 488D75B0 		leaq	-80(%rbp), %rsi
 1980 0c1f 4889D1   		movq	%rdx, %rcx
 1981 0c22 4889DA   		movq	%rbx, %rdx
 1982 0c25 4889C7   		movq	%rax, %rdi
 1983 0c28 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 1983      00
 1984              	.LEHE50:
 1985              	.L103:
 1986              	.LEHB51:
  58:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testSuite.c_str(), result.suiteName);
 1987              		.loc 3 58 5 is_stmt 1
 1988 0c2d E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 1988      00
 1989 0c32 488B08   		movq	(%rax), %rcx
 1990 0c35 488D45C0 		leaq	-64(%rbp), %rax
 1991 0c39 BA3A0000 		movl	$58, %edx
 1991      00
 1992 0c3e 4889CE   		movq	%rcx, %rsi
 1993 0c41 4889C7   		movq	%rax, %rdi
 1994 0c44 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1994      00
 1995              		.loc 3 58 5 is_stmt 0 discriminator 4
 1996 0c49 488B5DB8 		movq	-72(%rbp), %rbx
 1997 0c4d 488B45A8 		movq	-88(%rbp), %rax
 1998 0c51 4883C040 		addq	$64, %rax
 1999 0c55 4889C7   		movq	%rax, %rdi
 2000 0c58 E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@PLT
 2000      00
 2001 0c5d 488945B0 		movq	%rax, -80(%rbp)
 2002 0c61 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2002      00
 2003              		.loc 3 58 5 discriminator 6
 2004 0c66 488B00   		movq	(%rax), %rax
 2005 0c69 488D55C0 		leaq	-64(%rbp), %rdx
 2006 0c6d 488D75B0 		leaq	-80(%rbp), %rsi
 2007 0c71 4889D1   		movq	%rdx, %rcx
 2008 0c74 4889DA   		movq	%rbx, %rdx
 2009 0c77 4889C7   		movq	%rax, %rdi
 2010 0c7a E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 2010      00
 2011              	.LEHE51:
  59:TestDeferredTestReporter.cpp **** }
 2012              		.loc 3 59 1 is_stmt 1
 2013 0c7f E9CB0000 		jmp	.L101
 2013      00
 2014              	.L109:
 2015 0c84 F30F1EFA 		endbr64
  57:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testName.c_str(), result.testName);
 2016              		.loc 3 57 5
 2017 0c88 4889C7   		movq	%rax, %rdi
 2018 0c8b E8000000 		call	__cxa_begin_catch@PLT
 2018      00
 2019              	.LEHB52:
 2020 0c90 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2020      00
  57:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testName.c_str(), result.testName);
 2021              		.loc 3 57 5 is_stmt 0 discriminator 3
 2022 0c95 488B18   		movq	(%rax), %rbx
 2023 0c98 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 2023      00
  57:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testName.c_str(), result.testName);
 2024              		.loc 3 57 5 discriminator 13
 2025 0c9d 488B08   		movq	(%rax), %rcx
 2026 0ca0 488D45C0 		leaq	-64(%rbp), %rax
 2027 0ca4 BA390000 		movl	$57, %edx
 2027      00
 2028 0ca9 4889CE   		movq	%rcx, %rsi
 2029 0cac 4889C7   		movq	%rax, %rdi
 2030 0caf E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2030      00
  57:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testName.c_str(), result.testName);
 2031              		.loc 3 57 5 discriminator 17
 2032 0cb4 488D45C0 		leaq	-64(%rbp), %rax
 2033 0cb8 488D1500 		leaq	.LC11(%rip), %rdx
 2033      000000
 2034 0cbf 4889C6   		movq	%rax, %rsi
 2035 0cc2 4889DF   		movq	%rbx, %rdi
 2036 0cc5 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2036      00
 2037              	.LEHE52:
 2038              	.LEHB53:
  57:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testName.c_str(), result.testName);
 2039              		.loc 3 57 5 discriminator 19
 2040 0cca E8000000 		call	__cxa_end_catch@PLT
 2040      00
 2041              	.LEHE53:
 2042 0ccf E959FFFF 		jmp	.L103
 2042      FF
 2043              	.L110:
 2044 0cd4 F30F1EFA 		endbr64
  57:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testName.c_str(), result.testName);
 2045              		.loc 3 57 5
 2046 0cd8 4889C3   		movq	%rax, %rbx
 2047 0cdb E8000000 		call	__cxa_end_catch@PLT
 2047      00
 2048 0ce0 4889D8   		movq	%rbx, %rax
 2049 0ce3 4889C7   		movq	%rax, %rdi
 2050              	.LEHB54:
 2051 0ce6 E8000000 		call	_Unwind_Resume@PLT
 2051      00
 2052              	.LEHE54:
 2053              	.L111:
 2054 0ceb F30F1EFA 		endbr64
  58:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testSuite.c_str(), result.suiteName);
 2055              		.loc 3 58 5 is_stmt 1
 2056 0cef 4889C7   		movq	%rax, %rdi
 2057 0cf2 E8000000 		call	__cxa_begin_catch@PLT
 2057      00
 2058              	.LEHB55:
 2059 0cf7 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2059      00
  58:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testSuite.c_str(), result.suiteName);
 2060              		.loc 3 58 5 is_stmt 0 discriminator 3
 2061 0cfc 488B18   		movq	(%rax), %rbx
 2062 0cff E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 2062      00
  58:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testSuite.c_str(), result.suiteName);
 2063              		.loc 3 58 5 discriminator 13
 2064 0d04 488B08   		movq	(%rax), %rcx
 2065 0d07 488D45C0 		leaq	-64(%rbp), %rax
 2066 0d0b BA3A0000 		movl	$58, %edx
 2066      00
 2067 0d10 4889CE   		movq	%rcx, %rsi
 2068 0d13 4889C7   		movq	%rax, %rdi
 2069 0d16 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2069      00
  58:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testSuite.c_str(), result.suiteName);
 2070              		.loc 3 58 5 discriminator 17
 2071 0d1b 488D45C0 		leaq	-64(%rbp), %rax
 2072 0d1f 488D1500 		leaq	.LC12(%rip), %rdx
 2072      000000
 2073 0d26 4889C6   		movq	%rax, %rsi
 2074 0d29 4889DF   		movq	%rbx, %rdi
 2075 0d2c E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2075      00
 2076              	.LEHE55:
 2077              	.LEHB56:
  58:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testSuite.c_str(), result.suiteName);
 2078              		.loc 3 58 5 discriminator 19
 2079 0d31 E8000000 		call	__cxa_end_catch@PLT
 2079      00
 2080              	.LEHE56:
 2081              		.loc 3 59 1 is_stmt 1 discriminator 19
 2082 0d36 EB17     		jmp	.L101
 2083              	.L112:
 2084 0d38 F30F1EFA 		endbr64
  58:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testSuite.c_str(), result.suiteName);
 2085              		.loc 3 58 5
 2086 0d3c 4889C3   		movq	%rax, %rbx
 2087 0d3f E8000000 		call	__cxa_end_catch@PLT
 2087      00
 2088 0d44 4889D8   		movq	%rbx, %rax
 2089 0d47 4889C7   		movq	%rax, %rdi
 2090              	.LEHB57:
 2091 0d4a E8000000 		call	_Unwind_Resume@PLT
 2091      00
 2092              	.LEHE57:
 2093              	.L101:
 2094              		.loc 3 59 1
 2095 0d4f 488B45E8 		movq	-24(%rbp), %rax
 2096 0d53 64482B04 		subq	%fs:40, %rax
 2096      25280000 
 2096      00
 2097 0d5c 7405     		je	.L108
 2098 0d5e E8000000 		call	__stack_chk_fail@PLT
 2098      00
 2099              	.L108:
 2100 0d63 488B5DF8 		movq	-8(%rbp), %rbx
 2101 0d67 C9       		leave
 2102              		.cfi_def_cfa 7, 8
 2103 0d68 C3       		ret
 2104              		.cfi_endproc
 2105              	.LFE1446:
 2106              		.section	.gcc_except_table
 2107              		.align 4
 2108              	.LLSDA1446:
 2109 0114 FF       		.byte	0xff
 2110 0115 9B       		.byte	0x9b
 2111 0116 39       		.uleb128 .LLSDATT1446-.LLSDATTD1446
 2112              	.LLSDATTD1446:
 2113 0117 01       		.byte	0x1
 2114 0118 2F       		.uleb128 .LLSDACSE1446-.LLSDACSB1446
 2115              	.LLSDACSB1446:
 2116 0119 35       		.uleb128 .LEHB49-.LFB1446
 2117 011a 1E       		.uleb128 .LEHE49-.LEHB49
 2118 011b 00       		.uleb128 0
 2119 011c 00       		.uleb128 0
 2120 011d 57       		.uleb128 .LEHB50-.LFB1446
 2121 011e 56       		.uleb128 .LEHE50-.LEHB50
 2122 011f 8402     		.uleb128 .L109-.LFB1446
 2123 0121 01       		.uleb128 0x1
 2124 0122 AD01     		.uleb128 .LEHB51-.LFB1446
 2125 0124 52       		.uleb128 .LEHE51-.LEHB51
 2126 0125 EB02     		.uleb128 .L111-.LFB1446
 2127 0127 01       		.uleb128 0x1
 2128 0128 9002     		.uleb128 .LEHB52-.LFB1446
 2129 012a 3A       		.uleb128 .LEHE52-.LEHB52
 2130 012b D402     		.uleb128 .L110-.LFB1446
 2131 012d 00       		.uleb128 0
 2132 012e CA02     		.uleb128 .LEHB53-.LFB1446
 2133 0130 05       		.uleb128 .LEHE53-.LEHB53
 2134 0131 00       		.uleb128 0
 2135 0132 00       		.uleb128 0
 2136 0133 E602     		.uleb128 .LEHB54-.LFB1446
 2137 0135 05       		.uleb128 .LEHE54-.LEHB54
 2138 0136 00       		.uleb128 0
 2139 0137 00       		.uleb128 0
 2140 0138 F702     		.uleb128 .LEHB55-.LFB1446
 2141 013a 3A       		.uleb128 .LEHE55-.LEHB55
 2142 013b B803     		.uleb128 .L112-.LFB1446
 2143 013d 00       		.uleb128 0
 2144 013e B103     		.uleb128 .LEHB56-.LFB1446
 2145 0140 05       		.uleb128 .LEHE56-.LEHB56
 2146 0141 00       		.uleb128 0
 2147 0142 00       		.uleb128 0
 2148 0143 CA03     		.uleb128 .LEHB57-.LFB1446
 2149 0145 05       		.uleb128 .LEHE57-.LEHB57
 2150 0146 00       		.uleb128 0
 2151 0147 00       		.uleb128 0
 2152              	.LLSDACSE1446:
 2153 0148 01       		.byte	0x1
 2154 0149 00       		.byte	0
 2155 014a 0000     		.align 4
 2156 014c 00000000 		.long	0
 2157              	
 2158              	.LLSDATT1446:
 2159              		.text
 2161 0d69 90       		.align 2
 2163              	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperC2ERKNS_1
 2164              	.LFB1448:
  60:TestDeferredTestReporter.cpp **** 
  61:TestDeferredTestReporter.cpp **** TEST_FIXTURE(DeferredTestReporterFixture, ReportTestEndCapturesTestTime)
 2165              		.loc 3 61 1
 2166              		.cfi_startproc
 2167 0d6a 55       		pushq	%rbp
 2168              		.cfi_def_cfa_offset 16
 2169              		.cfi_offset 6, -16
 2170 0d6b 4889E5   		movq	%rsp, %rbp
 2171              		.cfi_def_cfa_register 6
 2172 0d6e 4883EC10 		subq	$16, %rsp
 2173 0d72 48897DF8 		movq	%rdi, -8(%rbp)
 2174 0d76 488975F0 		movq	%rsi, -16(%rbp)
 2175              	.LBB36:
 2176              		.loc 3 61 1
 2177 0d7a 488B45F8 		movq	-8(%rbp), %rax
 2178 0d7e 4889C7   		movq	%rax, %rdi
 2179 0d81 E8C2F2FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
 2179      FF
 2180 0d86 488B45F8 		movq	-8(%rbp), %rax
 2181 0d8a 488B55F0 		movq	-16(%rbp), %rdx
 2182 0d8e 488990A8 		movq	%rdx, 168(%rax)
 2182      000000
 2183              	.LBE36:
 2184 0d95 90       		nop
 2185 0d96 C9       		leave
 2186              		.cfi_def_cfa 7, 8
 2187 0d97 C3       		ret
 2188              		.cfi_endproc
 2189              	.LFE1448:
 2191              		.set	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperC1E
 2192              		.section	.rodata
 2193              	.LC13:
 2194 0240 5265706F 		.string	"ReportTestEndCapturesTestTime"
 2194      72745465 
 2194      7374456E 
 2194      64436170 
 2194      74757265 
 2195              		.text
 2196              		.align 2
 2198              	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeC2Ev:
 2199              	.LFB1451:
 2200              		.loc 3 61 1
 2201              		.cfi_startproc
 2202 0d98 55       		pushq	%rbp
 2203              		.cfi_def_cfa_offset 16
 2204              		.cfi_offset 6, -16
 2205 0d99 4889E5   		movq	%rsp, %rbp
 2206              		.cfi_def_cfa_register 6
 2207 0d9c 53       		pushq	%rbx
 2208 0d9d 4883EC18 		subq	$24, %rsp
 2209              		.cfi_offset 3, -24
 2210 0da1 48897DE8 		movq	%rdi, -24(%rbp)
 2211              	.LBB37:
 2212              		.loc 3 61 1
 2213 0da5 488B5DE8 		movq	-24(%rbp), %rbx
 2214 0da9 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 2214      00
 2215 0dae 4889C2   		movq	%rax, %rdx
 2216 0db1 41B83D00 		movl	$61, %r8d
 2216      0000
 2217 0db7 488D0500 		leaq	.LC4(%rip), %rax
 2217      000000
 2218 0dbe 4889C1   		movq	%rax, %rcx
 2219 0dc1 488D0500 		leaq	.LC13(%rip), %rax
 2219      000000
 2220 0dc8 4889C6   		movq	%rax, %rsi
 2221 0dcb 4889DF   		movq	%rbx, %rdi
 2222 0dce E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 2222      00
 2223 0dd3 488D1500 		leaq	16+_ZTVN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTime
 2223      000000
 2224 0dda 488B45E8 		movq	-24(%rbp), %rax
 2225 0dde 488910   		movq	%rdx, (%rax)
 2226              	.LBE37:
 2227 0de1 90       		nop
 2228 0de2 488B5DF8 		movq	-8(%rbp), %rbx
 2229 0de6 C9       		leave
 2230              		.cfi_def_cfa 7, 8
 2231 0de7 C3       		ret
 2232              		.cfi_endproc
 2233              	.LFE1451:
 2235              		.set	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeC1Ev,
 2236              		.local	_ZN8UnitTest12_GLOBAL__N_168testDeferredTestReporterFixtureReportTestEndCapturesTestTimeIns
 2237              		.comm	_ZN8UnitTest12_GLOBAL__N_168testDeferredTestReporterFixtureReportTestEndCapturesTestTimeInst
 2238              		.local	_ZN8UnitTest12_GLOBAL__N_161adderDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
 2239              		.comm	_ZN8UnitTest12_GLOBAL__N_161adderDeferredTestReporterFixtureReportTestEndCapturesTestTimeE,1
 2240              		.align 2
 2242              	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperD2Ev:
 2243              	.LFB1455:
 2244              		.loc 3 61 1
 2245              		.cfi_startproc
 2246 0de8 55       		pushq	%rbp
 2247              		.cfi_def_cfa_offset 16
 2248              		.cfi_offset 6, -16
 2249 0de9 4889E5   		movq	%rsp, %rbp
 2250              		.cfi_def_cfa_register 6
 2251 0dec 4883EC10 		subq	$16, %rsp
 2252 0df0 48897DF8 		movq	%rdi, -8(%rbp)
 2253              	.LBB38:
 2254              		.loc 3 61 1
 2255 0df4 488B45F8 		movq	-8(%rbp), %rax
 2256 0df8 4889C7   		movq	%rax, %rdi
 2257 0dfb E842F4FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
 2257      FF
 2258              	.LBE38:
 2259 0e00 90       		nop
 2260 0e01 C9       		leave
 2261              		.cfi_def_cfa 7, 8
 2262 0e02 C3       		ret
 2263              		.cfi_endproc
 2264              	.LFE1455:
 2266              		.set	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperD1E
 2267 0e03 90       		.align 2
 2269              	_ZNK8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTime7RunImplEv
 2270              	.LFB1453:
 2271              		.loc 3 61 1
 2272              		.cfi_startproc
 2273              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 2274              		.cfi_lsda 0x1b,.LLSDA1453
 2275 0e04 F30F1EFA 		endbr64
 2276 0e08 55       		pushq	%rbp
 2277              		.cfi_def_cfa_offset 16
 2278              		.cfi_offset 6, -16
 2279 0e09 4889E5   		movq	%rsp, %rbp
 2280              		.cfi_def_cfa_register 6
 2281 0e0c 4155     		pushq	%r13
 2282 0e0e 4154     		pushq	%r12
 2283 0e10 53       		pushq	%rbx
 2284 0e11 4881ECF8 		subq	$504, %rsp
 2284      010000
 2285              		.cfi_offset 13, -24
 2286              		.cfi_offset 12, -32
 2287              		.cfi_offset 3, -40
 2288 0e18 4889BDF8 		movq	%rdi, -520(%rbp)
 2288      FDFFFF
 2289              		.loc 3 61 1
 2290 0e1f 64488B04 		movq	%fs:40, %rax
 2290      25280000 
 2290      00
 2291 0e28 488945D8 		movq	%rax, -40(%rbp)
 2292 0e2c 31C0     		xorl	%eax, %eax
 2293 0e2e C6850FFE 		movb	$0, -497(%rbp)
 2293      FFFF00
 2294              	.LBB39:
 2295 0e35 488B85F8 		movq	-520(%rbp), %rax
 2295      FDFFFF
 2296 0e3c 488D5008 		leaq	8(%rax), %rdx
 2297 0e40 488D8540 		leaq	-448(%rbp), %rax
 2297      FEFFFF
 2298 0e47 4889D6   		movq	%rdx, %rsi
 2299 0e4a 4889C7   		movq	%rax, %rdi
 2300              	.LEHB58:
 2301 0e4d E818FFFF 		call	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperC1E
 2301      FF
 2302              	.LEHE58:
 2303              		.loc 3 61 1 is_stmt 0 discriminator 1
 2304 0e52 C6850FFE 		movb	$1, -497(%rbp)
 2304      FFFF01
 2305 0e59 488B85F8 		movq	-520(%rbp), %rax
 2305      FDFFFF
 2306 0e60 488D5008 		leaq	8(%rax), %rdx
 2307 0e64 488D8540 		leaq	-448(%rbp), %rax
 2307      FEFFFF
 2308 0e6b 4889D6   		movq	%rdx, %rsi
 2309 0e6e 4889C7   		movq	%rax, %rdi
 2310              	.LEHB59:
 2311 0e71 E81F1C00 		call	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCaptures
 2311      00
 2312              	.LEHE59:
 2313              		.loc 3 61 1 discriminator 3
 2314 0e76 488D8540 		leaq	-448(%rbp), %rax
 2314      FEFFFF
 2315 0e7d 4889C7   		movq	%rax, %rdi
 2316              	.LEHB60:
 2317 0e80 E863FFFF 		call	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperD1E
 2317      FF
 2318              	.LEHE60:
 2319              	.LBE39:
 2320              		.loc 3 61 1
 2321 0e85 E9840200 		jmp	.L116
 2321      00
 2322              	.L131:
 2323 0e8a F30F1EFA 		endbr64
 2324              	.LBB40:
 2325 0e8e 4989C4   		movq	%rax, %r12
 2326 0e91 4889D3   		movq	%rdx, %rbx
 2327 0e94 488D8540 		leaq	-448(%rbp), %rax
 2327      FEFFFF
 2328 0e9b 4889C7   		movq	%rax, %rdi
 2329 0e9e E845FFFF 		call	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperD1E
 2329      FF
 2330 0ea3 4C89E0   		movq	%r12, %rax
 2331 0ea6 4889DA   		movq	%rbx, %rdx
 2332 0ea9 EB04     		jmp	.L118
 2333              	.L130:
 2334 0eab F30F1EFA 		endbr64
 2335              	.L118:
 2336              	.LBE40:
 2337 0eaf 4883FA01 		cmpq	$1, %rdx
 2338 0eb3 740F     		je	.L119
 2339 0eb5 4883FA02 		cmpq	$2, %rdx
 2340 0eb9 0F84A700 		je	.L120
 2340      0000
 2341 0ebf E94D0100 		jmp	.L136
 2341      00
 2342              	.L119:
 2343              	.LBB41:
 2344              		.loc 3 61 1 discriminator 4
 2345 0ec4 4889C7   		movq	%rax, %rdi
 2346 0ec7 E8000000 		call	__cxa_begin_catch@PLT
 2346      00
 2347 0ecc 48898518 		movq	%rax, -488(%rbp)
 2347      FEFFFF
 2348              	.LEHB61:
 2349 0ed3 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2349      00
 2350 0ed8 488B18   		movq	(%rax), %rbx
 2351 0edb 488B8518 		movq	-488(%rbp), %rax
 2351      FEFFFF
 2352 0ee2 488B00   		movq	(%rax), %rax
 2353 0ee5 4883C010 		addq	$16, %rax
 2354 0ee9 488B10   		movq	(%rax), %rdx
 2355 0eec 488B8518 		movq	-488(%rbp), %rax
 2355      FEFFFF
 2356 0ef3 4889C7   		movq	%rax, %rdi
 2357 0ef6 FFD2     		call	*%rdx
 2358              	.LVL4:
 2359 0ef8 4989C4   		movq	%rax, %r12
 2360 0efb 488B8518 		movq	-488(%rbp), %rax
 2360      FEFFFF
 2361 0f02 4889C7   		movq	%rax, %rdi
 2362 0f05 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 2362      00
 2363              		.loc 3 61 1 discriminator 8
 2364 0f0a 4189C5   		movl	%eax, %r13d
 2365 0f0d 488B8518 		movq	-488(%rbp), %rax
 2365      FEFFFF
 2366 0f14 4889C7   		movq	%rax, %rdi
 2367 0f17 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 2367      00
 2368              		.loc 3 61 1 discriminator 10
 2369 0f1c 4889C1   		movq	%rax, %rcx
 2370 0f1f 488B85F8 		movq	-520(%rbp), %rax
 2370      FDFFFF
 2371 0f26 488B5008 		movq	8(%rax), %rdx
 2372 0f2a 488B85F8 		movq	-520(%rbp), %rax
 2372      FDFFFF
 2373 0f31 488B7010 		movq	16(%rax), %rsi
 2374 0f35 488D8520 		leaq	-480(%rbp), %rax
 2374      FEFFFF
 2375 0f3c 4589E8   		movl	%r13d, %r8d
 2376 0f3f 4889C7   		movq	%rax, %rdi
 2377 0f42 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 2377      00
 2378              		.loc 3 61 1 discriminator 14
 2379 0f47 488D8520 		leaq	-480(%rbp), %rax
 2379      FEFFFF
 2380 0f4e 4C89E2   		movq	%r12, %rdx
 2381 0f51 4889C6   		movq	%rax, %rsi
 2382 0f54 4889DF   		movq	%rbx, %rdi
 2383 0f57 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2383      00
 2384              	.LEHE61:
 2385              		.loc 3 61 1 discriminator 16
 2386 0f5c E8000000 		call	__cxa_end_catch@PLT
 2386      00
 2387              	.LBE41:
 2388 0f61 E9A80100 		jmp	.L116
 2388      00
 2389              	.L120:
 2390              	.LBB42:
 2391              		.loc 3 61 1 discriminator 5
 2392 0f66 4889C7   		movq	%rax, %rdi
 2393 0f69 E8000000 		call	__cxa_begin_catch@PLT
 2393      00
 2394 0f6e 48898510 		movq	%rax, -496(%rbp)
 2394      FEFFFF
 2395              	.LBB43:
 2396 0f75 488D8540 		leaq	-448(%rbp), %rax
 2396      FEFFFF
 2397 0f7c 4889C7   		movq	%rax, %rdi
 2398              	.LEHB62:
 2399 0f7f E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 2399      00
 2400              	.LEHE62:
 2401              		.loc 3 61 1 discriminator 18
 2402 0f84 488D8540 		leaq	-448(%rbp), %rax
 2402      FEFFFF
 2403 0f8b 488D1500 		leaq	.LC6(%rip), %rdx
 2403      000000
 2404 0f92 4889D6   		movq	%rdx, %rsi
 2405 0f95 4889C7   		movq	%rax, %rdi
 2406              	.LEHB63:
 2407 0f98 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 2407      00
 2408 0f9d 4889C3   		movq	%rax, %rbx
 2409 0fa0 488B8510 		movq	-496(%rbp), %rax
 2409      FEFFFF
 2410 0fa7 488B00   		movq	(%rax), %rax
 2411 0faa 4883C010 		addq	$16, %rax
 2412 0fae 488B10   		movq	(%rax), %rdx
 2413 0fb1 488B8510 		movq	-496(%rbp), %rax
 2413      FEFFFF
 2414 0fb8 4889C7   		movq	%rax, %rdi
 2415 0fbb FFD2     		call	*%rdx
 2416              	.LVL5:
 2417 0fbd 4889C6   		movq	%rax, %rsi
 2418 0fc0 4889DF   		movq	%rbx, %rdi
 2419 0fc3 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 2419      00
 2420              		.loc 3 61 1 discriminator 22
 2421 0fc8 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2421      00
 2422 0fcd 488B18   		movq	(%rax), %rbx
 2423 0fd0 488D8540 		leaq	-448(%rbp), %rax
 2423      FEFFFF
 2424 0fd7 4889C7   		movq	%rax, %rdi
 2425 0fda E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 2425      00
 2426              		.loc 3 61 1 discriminator 24
 2427 0fdf 4889C2   		movq	%rax, %rdx
 2428 0fe2 488B85F8 		movq	-520(%rbp), %rax
 2428      FDFFFF
 2429 0fe9 4883C008 		addq	$8, %rax
 2430 0fed 4889C6   		movq	%rax, %rsi
 2431 0ff0 4889DF   		movq	%rbx, %rdi
 2432 0ff3 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2432      00
 2433              	.LEHE63:
 2434              		.loc 3 61 1 discriminator 28
 2435 0ff8 488D8540 		leaq	-448(%rbp), %rax
 2435      FEFFFF
 2436 0fff 4889C7   		movq	%rax, %rdi
 2437              	.LEHB64:
 2438 1002 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 2438      00
 2439              	.LEHE64:
 2440              	.LBE43:
 2441              		.loc 3 61 1 discriminator 29
 2442 1007 E8000000 		call	__cxa_end_catch@PLT
 2442      00
 2443              	.LBE42:
 2444 100c E9FD0000 		jmp	.L116
 2444      00
 2445              	.L136:
 2446              		.loc 3 61 1 discriminator 6
 2447 1011 4889C7   		movq	%rax, %rdi
 2448 1014 E8000000 		call	__cxa_begin_catch@PLT
 2448      00
 2449 1019 80BD0FFE 		cmpb	$0, -497(%rbp)
 2449      FFFF00
 2450 1020 7445     		je	.L123
 2451              	.LEHB65:
 2452              		.loc 3 61 1 discriminator 31
 2453 1022 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2453      00
 2454 1027 488B18   		movq	(%rax), %rbx
 2455 102a 488B85F8 		movq	-520(%rbp), %rax
 2455      FDFFFF
 2456 1031 488D4808 		leaq	8(%rax), %rcx
 2457 1035 488D8520 		leaq	-480(%rbp), %rax
 2457      FEFFFF
 2458 103c BA3D0000 		movl	$61, %edx
 2458      00
 2459 1041 4889CE   		movq	%rcx, %rsi
 2460 1044 4889C7   		movq	%rax, %rdi
 2461 1047 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2461      00
 2462              		.loc 3 61 1 discriminator 36
 2463 104c 488D8520 		leaq	-480(%rbp), %rax
 2463      FEFFFF
 2464 1053 488D1500 		leaq	.LC7(%rip), %rdx
 2464      000000
 2465 105a 4889C6   		movq	%rax, %rsi
 2466 105d 4889DF   		movq	%rbx, %rdi
 2467 1060 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2467      00
 2468 1065 EB43     		jmp	.L124
 2469              	.L123:
 2470              		.loc 3 61 1 discriminator 32
 2471 1067 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2471      00
 2472 106c 488B18   		movq	(%rax), %rbx
 2473 106f 488B85F8 		movq	-520(%rbp), %rax
 2473      FDFFFF
 2474 1076 488D4808 		leaq	8(%rax), %rcx
 2475 107a 488D8520 		leaq	-480(%rbp), %rax
 2475      FEFFFF
 2476 1081 BA3D0000 		movl	$61, %edx
 2476      00
 2477 1086 4889CE   		movq	%rcx, %rsi
 2478 1089 4889C7   		movq	%rax, %rdi
 2479 108c E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2479      00
 2480              		.loc 3 61 1 discriminator 43
 2481 1091 488D8520 		leaq	-480(%rbp), %rax
 2481      FEFFFF
 2482 1098 488D1500 		leaq	.LC8(%rip), %rdx
 2482      000000
 2483 109f 4889C6   		movq	%rax, %rsi
 2484 10a2 4889DF   		movq	%rbx, %rdi
 2485 10a5 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2485      00
 2486              	.LEHE65:
 2487              	.L124:
 2488              	.LEHB66:
 2489              		.loc 3 61 1 discriminator 46
 2490 10aa E8000000 		call	__cxa_end_catch@PLT
 2490      00
 2491 10af EB5D     		jmp	.L116
 2492              	.L132:
 2493 10b1 F30F1EFA 		endbr64
 2494              	.LBB45:
 2495              		.loc 3 61 1
 2496 10b5 4889C3   		movq	%rax, %rbx
 2497 10b8 E8000000 		call	__cxa_end_catch@PLT
 2497      00
 2498 10bd 4889D8   		movq	%rbx, %rax
 2499 10c0 4889C7   		movq	%rax, %rdi
 2500 10c3 E8000000 		call	_Unwind_Resume@PLT
 2500      00
 2501              	.LEHE66:
 2502              	.L134:
 2503 10c8 F30F1EFA 		endbr64
 2504              	.LBE45:
 2505              	.LBB46:
 2506              	.LBB44:
 2507 10cc 4889C3   		movq	%rax, %rbx
 2508 10cf 488D8540 		leaq	-448(%rbp), %rax
 2508      FEFFFF
 2509 10d6 4889C7   		movq	%rax, %rdi
 2510 10d9 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 2510      00
 2511 10de EB07     		jmp	.L127
 2512              	.L133:
 2513 10e0 F30F1EFA 		endbr64
 2514              	.LBE44:
 2515 10e4 4889C3   		movq	%rax, %rbx
 2516              	.L127:
 2517 10e7 E8000000 		call	__cxa_end_catch@PLT
 2517      00
 2518 10ec 4889D8   		movq	%rbx, %rax
 2519 10ef 4889C7   		movq	%rax, %rdi
 2520              	.LEHB67:
 2521 10f2 E8000000 		call	_Unwind_Resume@PLT
 2521      00
 2522              	.LEHE67:
 2523              	.L135:
 2524 10f7 F30F1EFA 		endbr64
 2525              	.LBE46:
 2526 10fb 4889C3   		movq	%rax, %rbx
 2527 10fe E8000000 		call	__cxa_end_catch@PLT
 2527      00
 2528 1103 4889D8   		movq	%rbx, %rax
 2529 1106 4889C7   		movq	%rax, %rdi
 2530              	.LEHB68:
 2531 1109 E8000000 		call	_Unwind_Resume@PLT
 2531      00
 2532              	.LEHE68:
 2533              	.L116:
 2534 110e 488B45D8 		movq	-40(%rbp), %rax
 2535 1112 64482B04 		subq	%fs:40, %rax
 2535      25280000 
 2535      00
 2536 111b 7405     		je	.L129
 2537 111d E8000000 		call	__stack_chk_fail@PLT
 2537      00
 2538              	.L129:
 2539 1122 4881C4F8 		addq	$504, %rsp
 2539      010000
 2540 1129 5B       		popq	%rbx
 2541 112a 415C     		popq	%r12
 2542 112c 415D     		popq	%r13
 2543 112e 5D       		popq	%rbp
 2544              		.cfi_def_cfa 7, 8
 2545 112f C3       		ret
 2546              		.cfi_endproc
 2547              	.LFE1453:
 2548              		.section	.gcc_except_table
 2549              		.align 4
 2550              	.LLSDA1453:
 2551 0150 FF       		.byte	0xff
 2552 0151 9B       		.byte	0x9b
 2553 0152 55       		.uleb128 .LLSDATT1453-.LLSDATTD1453
 2554              	.LLSDATTD1453:
 2555 0153 01       		.byte	0x1
 2556 0154 3E       		.uleb128 .LLSDACSE1453-.LLSDACSB1453
 2557              	.LLSDACSB1453:
 2558 0155 49       		.uleb128 .LEHB58-.LFB1453
 2559 0156 05       		.uleb128 .LEHE58-.LEHB58
 2560 0157 A701     		.uleb128 .L130-.LFB1453
 2561 0159 05       		.uleb128 0x5
 2562 015a 6D       		.uleb128 .LEHB59-.LFB1453
 2563 015b 05       		.uleb128 .LEHE59-.LEHB59
 2564 015c 8601     		.uleb128 .L131-.LFB1453
 2565 015e 07       		.uleb128 0x7
 2566 015f 7C       		.uleb128 .LEHB60-.LFB1453
 2567 0160 05       		.uleb128 .LEHE60-.LEHB60
 2568 0161 A701     		.uleb128 .L130-.LFB1453
 2569 0163 05       		.uleb128 0x5
 2570 0164 CF01     		.uleb128 .LEHB61-.LFB1453
 2571 0166 8901     		.uleb128 .LEHE61-.LEHB61
 2572 0168 AD05     		.uleb128 .L132-.LFB1453
 2573 016a 00       		.uleb128 0
 2574 016b FB02     		.uleb128 .LEHB62-.LFB1453
 2575 016d 05       		.uleb128 .LEHE62-.LEHB62
 2576 016e DC05     		.uleb128 .L133-.LFB1453
 2577 0170 00       		.uleb128 0
 2578 0171 9403     		.uleb128 .LEHB63-.LFB1453
 2579 0173 60       		.uleb128 .LEHE63-.LEHB63
 2580 0174 C405     		.uleb128 .L134-.LFB1453
 2581 0176 00       		.uleb128 0
 2582 0177 FE03     		.uleb128 .LEHB64-.LFB1453
 2583 0179 05       		.uleb128 .LEHE64-.LEHB64
 2584 017a DC05     		.uleb128 .L133-.LFB1453
 2585 017c 00       		.uleb128 0
 2586 017d 9E04     		.uleb128 .LEHB65-.LFB1453
 2587 017f 8801     		.uleb128 .LEHE65-.LEHB65
 2588 0181 F305     		.uleb128 .L135-.LFB1453
 2589 0183 00       		.uleb128 0
 2590 0184 A605     		.uleb128 .LEHB66-.LFB1453
 2591 0186 1E       		.uleb128 .LEHE66-.LEHB66
 2592 0187 00       		.uleb128 0
 2593 0188 00       		.uleb128 0
 2594 0189 EE05     		.uleb128 .LEHB67-.LFB1453
 2595 018b 05       		.uleb128 .LEHE67-.LEHB67
 2596 018c 00       		.uleb128 0
 2597 018d 00       		.uleb128 0
 2598 018e 8506     		.uleb128 .LEHB68-.LFB1453
 2599 0190 05       		.uleb128 .LEHE68-.LEHB68
 2600 0191 00       		.uleb128 0
 2601 0192 00       		.uleb128 0
 2602              	.LLSDACSE1453:
 2603 0193 03       		.byte	0x3
 2604 0194 00       		.byte	0
 2605 0195 02       		.byte	0x2
 2606 0196 7D       		.byte	0x7d
 2607 0197 01       		.byte	0x1
 2608 0198 7D       		.byte	0x7d
 2609 0199 00       		.byte	0
 2610 019a 7D       		.byte	0x7d
 2611 019b 00       		.align 4
 2612 019c 00000000 		.long	0
 2613              	
 2614 01a0 00000000 		.long	DW.ref._ZTISt9exception-.
 2615 01a4 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 2616              	.LLSDATT1453:
 2617              		.text
 2619              		.section	.rodata
 2620 025e 0000     		.align 8
 2621              	.LC16:
 2622 0260 556E6861 		.string	"Unhandled exception in CHECK_CLOSE(elapsed, result.timeElapsed)"
 2622      6E646C65 
 2622      64206578 
 2622      63657074 
 2622      696F6E20 
 2623              		.text
 2624              		.align 2
 2626              	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelper7RunImplE
 2627              	.LFB1457:
  62:TestDeferredTestReporter.cpp **** {
 2628              		.loc 3 62 1 is_stmt 1
 2629              		.cfi_startproc
 2630              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 2631              		.cfi_lsda 0x1b,.LLSDA1457
 2632 1130 F30F1EFA 		endbr64
 2633 1134 55       		pushq	%rbp
 2634              		.cfi_def_cfa_offset 16
 2635              		.cfi_offset 6, -16
 2636 1135 4889E5   		movq	%rsp, %rbp
 2637              		.cfi_def_cfa_register 6
 2638 1138 53       		pushq	%rbx
 2639 1139 4883EC58 		subq	$88, %rsp
 2640              		.cfi_offset 3, -24
 2641 113d 48897DA8 		movq	%rdi, -88(%rbp)
 2642              		.loc 3 62 1
 2643 1141 64488B04 		movq	%fs:40, %rax
 2643      25280000 
 2643      00
 2644 114a 488945E8 		movq	%rax, -24(%rbp)
 2645 114e 31C0     		xorl	%eax, %eax
  63:TestDeferredTestReporter.cpp ****     float const elapsed = 123.45f;
 2646              		.loc 3 63 17
 2647 1150 F30F1005 		movss	.LC14(%rip), %xmm0
 2647      00000000 
 2648 1158 F30F1145 		movss	%xmm0, -80(%rbp)
 2648      B0
  64:TestDeferredTestReporter.cpp ****     reporter.ReportTestStart(details);
 2649              		.loc 3 64 29
 2650 115d 488B45A8 		movq	-88(%rbp), %rax
 2651              		.loc 3 64 30
 2652 1161 488B55A8 		movq	-88(%rbp), %rdx
 2653 1165 4881C288 		addq	$136, %rdx
 2653      000000
 2654              		.loc 3 64 29
 2655 116c 4889D6   		movq	%rdx, %rsi
 2656 116f 4889C7   		movq	%rax, %rdi
 2657              	.LEHB69:
 2658 1172 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE@PLT
 2658      00
  65:TestDeferredTestReporter.cpp ****     reporter.ReportTestFinish(details, elapsed);
 2659              		.loc 3 65 30
 2660 1177 488B45A8 		movq	-88(%rbp), %rax
 2661              		.loc 3 65 31
 2662 117b 488B55A8 		movq	-88(%rbp), %rdx
 2663 117f 488D8A88 		leaq	136(%rdx), %rcx
 2663      000000
 2664              		.loc 3 65 30
 2665 1186 8B150000 		movl	.LC14(%rip), %edx
 2665      0000
 2666 118c 660F6EC2 		movd	%edx, %xmm0
 2667 1190 4889CE   		movq	%rcx, %rsi
 2668 1193 4889C7   		movq	%rax, %rdi
 2669 1196 E8000000 		call	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf@PLT
 2669      00
  66:TestDeferredTestReporter.cpp **** 
  67:TestDeferredTestReporter.cpp ****     DeferredTestResult const& result = reporter.GetResults().at(0);
 2670              		.loc 3 67 59
 2671 119b 488B45A8 		movq	-88(%rbp), %rax
 2672 119f 4889C7   		movq	%rax, %rdi
 2673 11a2 E8000000 		call	_ZN8UnitTest20DeferredTestReporter10GetResultsEv@PLT
 2673      00
 2674              		.loc 3 67 64
 2675 11a7 BE000000 		movl	$0, %esi
 2675      00
 2676 11ac 4889C7   		movq	%rax, %rdi
 2677 11af E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
 2677      00
 2678              	.LEHE69:
 2679 11b4 488945B8 		movq	%rax, -72(%rbp)
 2680              	.LEHB70:
  68:TestDeferredTestReporter.cpp ****     CHECK_CLOSE(elapsed, result.timeElapsed, 0.0001f);
 2681              		.loc 3 68 5
 2682 11b8 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 2682      00
 2683 11bd 488B08   		movq	(%rax), %rcx
 2684 11c0 488D45C0 		leaq	-64(%rbp), %rax
 2685 11c4 BA440000 		movl	$68, %edx
 2685      00
 2686 11c9 4889CE   		movq	%rcx, %rsi
 2687 11cc 4889C7   		movq	%rax, %rdi
 2688 11cf E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2688      00
 2689              		.loc 3 68 5 is_stmt 0 discriminator 4
 2690 11d4 F30F1005 		movss	.LC15(%rip), %xmm0
 2690      00000000 
 2691 11dc F30F1145 		movss	%xmm0, -76(%rbp)
 2691      B4
 2692 11e1 488B45B8 		movq	-72(%rbp), %rax
 2693 11e5 488D5878 		leaq	120(%rax), %rbx
 2694 11e9 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2694      00
 2695 11ee 488B00   		movq	(%rax), %rax
 2696 11f1 488D4DC0 		leaq	-64(%rbp), %rcx
 2697 11f5 488D55B4 		leaq	-76(%rbp), %rdx
 2698 11f9 488D75B0 		leaq	-80(%rbp), %rsi
 2699 11fd 4989C8   		movq	%rcx, %r8
 2700 1200 4889D1   		movq	%rdx, %rcx
 2701 1203 4889DA   		movq	%rbx, %rdx
 2702 1206 4889C7   		movq	%rax, %rdi
 2703 1209 E8000000 		call	_ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE
 2703      00
 2704              	.LEHE70:
  69:TestDeferredTestReporter.cpp **** }
 2705              		.loc 3 69 1 is_stmt 1
 2706 120e EB64     		jmp	.L137
 2707              	.L142:
 2708 1210 F30F1EFA 		endbr64
  68:TestDeferredTestReporter.cpp ****     CHECK_CLOSE(elapsed, result.timeElapsed, 0.0001f);
 2709              		.loc 3 68 5
 2710 1214 4889C7   		movq	%rax, %rdi
 2711 1217 E8000000 		call	__cxa_begin_catch@PLT
 2711      00
 2712              	.LEHB71:
 2713 121c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2713      00
  68:TestDeferredTestReporter.cpp ****     CHECK_CLOSE(elapsed, result.timeElapsed, 0.0001f);
 2714              		.loc 3 68 5 is_stmt 0 discriminator 3
 2715 1221 488B18   		movq	(%rax), %rbx
 2716 1224 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 2716      00
  68:TestDeferredTestReporter.cpp ****     CHECK_CLOSE(elapsed, result.timeElapsed, 0.0001f);
 2717              		.loc 3 68 5 discriminator 11
 2718 1229 488B08   		movq	(%rax), %rcx
 2719 122c 488D45C0 		leaq	-64(%rbp), %rax
 2720 1230 BA440000 		movl	$68, %edx
 2720      00
 2721 1235 4889CE   		movq	%rcx, %rsi
 2722 1238 4889C7   		movq	%rax, %rdi
 2723 123b E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2723      00
  68:TestDeferredTestReporter.cpp ****     CHECK_CLOSE(elapsed, result.timeElapsed, 0.0001f);
 2724              		.loc 3 68 5 discriminator 15
 2725 1240 488D45C0 		leaq	-64(%rbp), %rax
 2726 1244 488D1500 		leaq	.LC16(%rip), %rdx
 2726      000000
 2727 124b 4889C6   		movq	%rax, %rsi
 2728 124e 4889DF   		movq	%rbx, %rdi
 2729 1251 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2729      00
 2730              	.LEHE71:
 2731              	.LEHB72:
  68:TestDeferredTestReporter.cpp ****     CHECK_CLOSE(elapsed, result.timeElapsed, 0.0001f);
 2732              		.loc 3 68 5 discriminator 17
 2733 1256 E8000000 		call	__cxa_end_catch@PLT
 2733      00
 2734              	.LEHE72:
 2735              		.loc 3 69 1 is_stmt 1 discriminator 17
 2736 125b EB17     		jmp	.L137
 2737              	.L143:
 2738 125d F30F1EFA 		endbr64
  68:TestDeferredTestReporter.cpp ****     CHECK_CLOSE(elapsed, result.timeElapsed, 0.0001f);
 2739              		.loc 3 68 5
 2740 1261 4889C3   		movq	%rax, %rbx
 2741 1264 E8000000 		call	__cxa_end_catch@PLT
 2741      00
 2742 1269 4889D8   		movq	%rbx, %rax
 2743 126c 4889C7   		movq	%rax, %rdi
 2744              	.LEHB73:
 2745 126f E8000000 		call	_Unwind_Resume@PLT
 2745      00
 2746              	.LEHE73:
 2747              	.L137:
 2748              		.loc 3 69 1
 2749 1274 488B45E8 		movq	-24(%rbp), %rax
 2750 1278 64482B04 		subq	%fs:40, %rax
 2750      25280000 
 2750      00
 2751 1281 7405     		je	.L141
 2752 1283 E8000000 		call	__stack_chk_fail@PLT
 2752      00
 2753              	.L141:
 2754 1288 488B5DF8 		movq	-8(%rbp), %rbx
 2755 128c C9       		leave
 2756              		.cfi_def_cfa 7, 8
 2757 128d C3       		ret
 2758              		.cfi_endproc
 2759              	.LFE1457:
 2760              		.section	.gcc_except_table
 2761              		.align 4
 2762              	.LLSDA1457:
 2763 01a8 FF       		.byte	0xff
 2764 01a9 9B       		.byte	0x9b
 2765 01aa 25       		.uleb128 .LLSDATT1457-.LLSDATTD1457
 2766              	.LLSDATTD1457:
 2767 01ab 01       		.byte	0x1
 2768 01ac 1A       		.uleb128 .LLSDACSE1457-.LLSDACSB1457
 2769              	.LLSDACSB1457:
 2770 01ad 42       		.uleb128 .LEHB69-.LFB1457
 2771 01ae 42       		.uleb128 .LEHE69-.LEHB69
 2772 01af 00       		.uleb128 0
 2773 01b0 00       		.uleb128 0
 2774 01b1 8801     		.uleb128 .LEHB70-.LFB1457
 2775 01b3 56       		.uleb128 .LEHE70-.LEHB70
 2776 01b4 E001     		.uleb128 .L142-.LFB1457
 2777 01b6 01       		.uleb128 0x1
 2778 01b7 EC01     		.uleb128 .LEHB71-.LFB1457
 2779 01b9 3A       		.uleb128 .LEHE71-.LEHB71
 2780 01ba AD02     		.uleb128 .L143-.LFB1457
 2781 01bc 00       		.uleb128 0
 2782 01bd A602     		.uleb128 .LEHB72-.LFB1457
 2783 01bf 05       		.uleb128 .LEHE72-.LEHB72
 2784 01c0 00       		.uleb128 0
 2785 01c1 00       		.uleb128 0
 2786 01c2 BF02     		.uleb128 .LEHB73-.LFB1457
 2787 01c4 05       		.uleb128 .LEHE73-.LEHB73
 2788 01c5 00       		.uleb128 0
 2789 01c6 00       		.uleb128 0
 2790              	.LLSDACSE1457:
 2791 01c7 01       		.byte	0x1
 2792 01c8 00       		.byte	0
 2793 01c9 000000   		.align 4
 2794 01cc 00000000 		.long	0
 2795              	
 2796              	.LLSDATT1457:
 2797              		.text
 2799              		.align 2
 2801              	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperC2ERKN
 2802              	.LFB1459:
  70:TestDeferredTestReporter.cpp **** 
  71:TestDeferredTestReporter.cpp **** TEST_FIXTURE(DeferredTestReporterFixture, ReportFailureSavesFailureDetails)
 2803              		.loc 3 71 1
 2804              		.cfi_startproc
 2805 128e 55       		pushq	%rbp
 2806              		.cfi_def_cfa_offset 16
 2807              		.cfi_offset 6, -16
 2808 128f 4889E5   		movq	%rsp, %rbp
 2809              		.cfi_def_cfa_register 6
 2810 1292 4883EC10 		subq	$16, %rsp
 2811 1296 48897DF8 		movq	%rdi, -8(%rbp)
 2812 129a 488975F0 		movq	%rsi, -16(%rbp)
 2813              	.LBB47:
 2814              		.loc 3 71 1
 2815 129e 488B45F8 		movq	-8(%rbp), %rax
 2816 12a2 4889C7   		movq	%rax, %rdi
 2817 12a5 E89EEDFF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
 2817      FF
 2818 12aa 488B45F8 		movq	-8(%rbp), %rax
 2819 12ae 488B55F0 		movq	-16(%rbp), %rdx
 2820 12b2 488990A8 		movq	%rdx, 168(%rax)
 2820      000000
 2821              	.LBE47:
 2822 12b9 90       		nop
 2823 12ba C9       		leave
 2824              		.cfi_def_cfa 7, 8
 2825 12bb C3       		ret
 2826              		.cfi_endproc
 2827              	.LFE1459:
 2829              		.set	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper
 2830              		.section	.rodata
 2831              		.align 8
 2832              	.LC17:
 2833 02a0 5265706F 		.string	"ReportFailureSavesFailureDetails"
 2833      72744661 
 2833      696C7572 
 2833      65536176 
 2833      65734661 
 2834              		.text
 2835              		.align 2
 2837              	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsC2Ev:
 2838              	.LFB1462:
 2839              		.loc 3 71 1
 2840              		.cfi_startproc
 2841 12bc 55       		pushq	%rbp
 2842              		.cfi_def_cfa_offset 16
 2843              		.cfi_offset 6, -16
 2844 12bd 4889E5   		movq	%rsp, %rbp
 2845              		.cfi_def_cfa_register 6
 2846 12c0 53       		pushq	%rbx
 2847 12c1 4883EC18 		subq	$24, %rsp
 2848              		.cfi_offset 3, -24
 2849 12c5 48897DE8 		movq	%rdi, -24(%rbp)
 2850              	.LBB48:
 2851              		.loc 3 71 1
 2852 12c9 488B5DE8 		movq	-24(%rbp), %rbx
 2853 12cd E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 2853      00
 2854 12d2 4889C2   		movq	%rax, %rdx
 2855 12d5 41B84700 		movl	$71, %r8d
 2855      0000
 2856 12db 488D0500 		leaq	.LC4(%rip), %rax
 2856      000000
 2857 12e2 4889C1   		movq	%rax, %rcx
 2858 12e5 488D0500 		leaq	.LC17(%rip), %rax
 2858      000000
 2859 12ec 4889C6   		movq	%rax, %rsi
 2860 12ef 4889DF   		movq	%rbx, %rdi
 2861 12f2 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 2861      00
 2862 12f7 488D1500 		leaq	16+_ZTVN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDeta
 2862      000000
 2863 12fe 488B45E8 		movq	-24(%rbp), %rax
 2864 1302 488910   		movq	%rdx, (%rax)
 2865              	.LBE48:
 2866 1305 90       		nop
 2867 1306 488B5DF8 		movq	-8(%rbp), %rbx
 2868 130a C9       		leave
 2869              		.cfi_def_cfa 7, 8
 2870 130b C3       		ret
 2871              		.cfi_endproc
 2872              	.LFE1462:
 2874              		.set	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsC1
 2875              		.local	_ZN8UnitTest12_GLOBAL__N_171testDeferredTestReporterFixtureReportFailureSavesFailureDetails
 2876              		.comm	_ZN8UnitTest12_GLOBAL__N_171testDeferredTestReporterFixtureReportFailureSavesFailureDetailsI
 2877              		.local	_ZN8UnitTest12_GLOBAL__N_164adderDeferredTestReporterFixtureReportFailureSavesFailureDetail
 2878              		.comm	_ZN8UnitTest12_GLOBAL__N_164adderDeferredTestReporterFixtureReportFailureSavesFailureDetails
 2879              		.align 2
 2881              	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperD2Ev:
 2882              	.LFB1466:
 2883              		.loc 3 71 1
 2884              		.cfi_startproc
 2885 130c 55       		pushq	%rbp
 2886              		.cfi_def_cfa_offset 16
 2887              		.cfi_offset 6, -16
 2888 130d 4889E5   		movq	%rsp, %rbp
 2889              		.cfi_def_cfa_register 6
 2890 1310 4883EC10 		subq	$16, %rsp
 2891 1314 48897DF8 		movq	%rdi, -8(%rbp)
 2892              	.LBB49:
 2893              		.loc 3 71 1
 2894 1318 488B45F8 		movq	-8(%rbp), %rax
 2895 131c 4889C7   		movq	%rax, %rdi
 2896 131f E81EEFFF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
 2896      FF
 2897              	.LBE49:
 2898 1324 90       		nop
 2899 1325 C9       		leave
 2900              		.cfi_def_cfa 7, 8
 2901 1326 C3       		ret
 2902              		.cfi_endproc
 2903              	.LFE1466:
 2905              		.set	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper
 2906 1327 90       		.align 2
 2908              	_ZNK8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetails7RunImp
 2909              	.LFB1464:
 2910              		.loc 3 71 1
 2911              		.cfi_startproc
 2912              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 2913              		.cfi_lsda 0x1b,.LLSDA1464
 2914 1328 F30F1EFA 		endbr64
 2915 132c 55       		pushq	%rbp
 2916              		.cfi_def_cfa_offset 16
 2917              		.cfi_offset 6, -16
 2918 132d 4889E5   		movq	%rsp, %rbp
 2919              		.cfi_def_cfa_register 6
 2920 1330 4155     		pushq	%r13
 2921 1332 4154     		pushq	%r12
 2922 1334 53       		pushq	%rbx
 2923 1335 4881ECF8 		subq	$504, %rsp
 2923      010000
 2924              		.cfi_offset 13, -24
 2925              		.cfi_offset 12, -32
 2926              		.cfi_offset 3, -40
 2927 133c 4889BDF8 		movq	%rdi, -520(%rbp)
 2927      FDFFFF
 2928              		.loc 3 71 1
 2929 1343 64488B04 		movq	%fs:40, %rax
 2929      25280000 
 2929      00
 2930 134c 488945D8 		movq	%rax, -40(%rbp)
 2931 1350 31C0     		xorl	%eax, %eax
 2932 1352 C6850FFE 		movb	$0, -497(%rbp)
 2932      FFFF00
 2933              	.LBB50:
 2934 1359 488B85F8 		movq	-520(%rbp), %rax
 2934      FDFFFF
 2935 1360 488D5008 		leaq	8(%rax), %rdx
 2936 1364 488D8540 		leaq	-448(%rbp), %rax
 2936      FEFFFF
 2937 136b 4889D6   		movq	%rdx, %rsi
 2938 136e 4889C7   		movq	%rax, %rdi
 2939              	.LEHB74:
 2940 1371 E818FFFF 		call	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper
 2940      FF
 2941              	.LEHE74:
 2942              		.loc 3 71 1 is_stmt 0 discriminator 1
 2943 1376 C6850FFE 		movb	$1, -497(%rbp)
 2943      FFFF01
 2944 137d 488B85F8 		movq	-520(%rbp), %rax
 2944      FDFFFF
 2945 1384 488D5008 		leaq	8(%rax), %rdx
 2946 1388 488D8540 		leaq	-448(%rbp), %rax
 2946      FEFFFF
 2947 138f 4889D6   		movq	%rdx, %rsi
 2948 1392 4889C7   		movq	%rax, %rdi
 2949              	.LEHB75:
 2950 1395 E8EA1900 		call	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFai
 2950      00
 2951              	.LEHE75:
 2952              		.loc 3 71 1 discriminator 3
 2953 139a 488D8540 		leaq	-448(%rbp), %rax
 2953      FEFFFF
 2954 13a1 4889C7   		movq	%rax, %rdi
 2955              	.LEHB76:
 2956 13a4 E863FFFF 		call	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper
 2956      FF
 2957              	.LEHE76:
 2958              	.LBE50:
 2959              		.loc 3 71 1
 2960 13a9 E9840200 		jmp	.L147
 2960      00
 2961              	.L162:
 2962 13ae F30F1EFA 		endbr64
 2963              	.LBB51:
 2964 13b2 4989C4   		movq	%rax, %r12
 2965 13b5 4889D3   		movq	%rdx, %rbx
 2966 13b8 488D8540 		leaq	-448(%rbp), %rax
 2966      FEFFFF
 2967 13bf 4889C7   		movq	%rax, %rdi
 2968 13c2 E845FFFF 		call	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper
 2968      FF
 2969 13c7 4C89E0   		movq	%r12, %rax
 2970 13ca 4889DA   		movq	%rbx, %rdx
 2971 13cd EB04     		jmp	.L149
 2972              	.L161:
 2973 13cf F30F1EFA 		endbr64
 2974              	.L149:
 2975              	.LBE51:
 2976 13d3 4883FA01 		cmpq	$1, %rdx
 2977 13d7 740F     		je	.L150
 2978 13d9 4883FA02 		cmpq	$2, %rdx
 2979 13dd 0F84A700 		je	.L151
 2979      0000
 2980 13e3 E94D0100 		jmp	.L167
 2980      00
 2981              	.L150:
 2982              	.LBB52:
 2983              		.loc 3 71 1 discriminator 4
 2984 13e8 4889C7   		movq	%rax, %rdi
 2985 13eb E8000000 		call	__cxa_begin_catch@PLT
 2985      00
 2986 13f0 48898518 		movq	%rax, -488(%rbp)
 2986      FEFFFF
 2987              	.LEHB77:
 2988 13f7 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2988      00
 2989 13fc 488B18   		movq	(%rax), %rbx
 2990 13ff 488B8518 		movq	-488(%rbp), %rax
 2990      FEFFFF
 2991 1406 488B00   		movq	(%rax), %rax
 2992 1409 4883C010 		addq	$16, %rax
 2993 140d 488B10   		movq	(%rax), %rdx
 2994 1410 488B8518 		movq	-488(%rbp), %rax
 2994      FEFFFF
 2995 1417 4889C7   		movq	%rax, %rdi
 2996 141a FFD2     		call	*%rdx
 2997              	.LVL6:
 2998 141c 4989C4   		movq	%rax, %r12
 2999 141f 488B8518 		movq	-488(%rbp), %rax
 2999      FEFFFF
 3000 1426 4889C7   		movq	%rax, %rdi
 3001 1429 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 3001      00
 3002              		.loc 3 71 1 discriminator 8
 3003 142e 4189C5   		movl	%eax, %r13d
 3004 1431 488B8518 		movq	-488(%rbp), %rax
 3004      FEFFFF
 3005 1438 4889C7   		movq	%rax, %rdi
 3006 143b E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 3006      00
 3007              		.loc 3 71 1 discriminator 10
 3008 1440 4889C1   		movq	%rax, %rcx
 3009 1443 488B85F8 		movq	-520(%rbp), %rax
 3009      FDFFFF
 3010 144a 488B5008 		movq	8(%rax), %rdx
 3011 144e 488B85F8 		movq	-520(%rbp), %rax
 3011      FDFFFF
 3012 1455 488B7010 		movq	16(%rax), %rsi
 3013 1459 488D8520 		leaq	-480(%rbp), %rax
 3013      FEFFFF
 3014 1460 4589E8   		movl	%r13d, %r8d
 3015 1463 4889C7   		movq	%rax, %rdi
 3016 1466 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 3016      00
 3017              		.loc 3 71 1 discriminator 14
 3018 146b 488D8520 		leaq	-480(%rbp), %rax
 3018      FEFFFF
 3019 1472 4C89E2   		movq	%r12, %rdx
 3020 1475 4889C6   		movq	%rax, %rsi
 3021 1478 4889DF   		movq	%rbx, %rdi
 3022 147b E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3022      00
 3023              	.LEHE77:
 3024              		.loc 3 71 1 discriminator 16
 3025 1480 E8000000 		call	__cxa_end_catch@PLT
 3025      00
 3026              	.LBE52:
 3027 1485 E9A80100 		jmp	.L147
 3027      00
 3028              	.L151:
 3029              	.LBB53:
 3030              		.loc 3 71 1 discriminator 5
 3031 148a 4889C7   		movq	%rax, %rdi
 3032 148d E8000000 		call	__cxa_begin_catch@PLT
 3032      00
 3033 1492 48898510 		movq	%rax, -496(%rbp)
 3033      FEFFFF
 3034              	.LBB54:
 3035 1499 488D8540 		leaq	-448(%rbp), %rax
 3035      FEFFFF
 3036 14a0 4889C7   		movq	%rax, %rdi
 3037              	.LEHB78:
 3038 14a3 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 3038      00
 3039              	.LEHE78:
 3040              		.loc 3 71 1 discriminator 18
 3041 14a8 488D8540 		leaq	-448(%rbp), %rax
 3041      FEFFFF
 3042 14af 488D1500 		leaq	.LC6(%rip), %rdx
 3042      000000
 3043 14b6 4889D6   		movq	%rdx, %rsi
 3044 14b9 4889C7   		movq	%rax, %rdi
 3045              	.LEHB79:
 3046 14bc E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 3046      00
 3047 14c1 4889C3   		movq	%rax, %rbx
 3048 14c4 488B8510 		movq	-496(%rbp), %rax
 3048      FEFFFF
 3049 14cb 488B00   		movq	(%rax), %rax
 3050 14ce 4883C010 		addq	$16, %rax
 3051 14d2 488B10   		movq	(%rax), %rdx
 3052 14d5 488B8510 		movq	-496(%rbp), %rax
 3052      FEFFFF
 3053 14dc 4889C7   		movq	%rax, %rdi
 3054 14df FFD2     		call	*%rdx
 3055              	.LVL7:
 3056 14e1 4889C6   		movq	%rax, %rsi
 3057 14e4 4889DF   		movq	%rbx, %rdi
 3058 14e7 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 3058      00
 3059              		.loc 3 71 1 discriminator 22
 3060 14ec E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3060      00
 3061 14f1 488B18   		movq	(%rax), %rbx
 3062 14f4 488D8540 		leaq	-448(%rbp), %rax
 3062      FEFFFF
 3063 14fb 4889C7   		movq	%rax, %rdi
 3064 14fe E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 3064      00
 3065              		.loc 3 71 1 discriminator 24
 3066 1503 4889C2   		movq	%rax, %rdx
 3067 1506 488B85F8 		movq	-520(%rbp), %rax
 3067      FDFFFF
 3068 150d 4883C008 		addq	$8, %rax
 3069 1511 4889C6   		movq	%rax, %rsi
 3070 1514 4889DF   		movq	%rbx, %rdi
 3071 1517 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3071      00
 3072              	.LEHE79:
 3073              		.loc 3 71 1 discriminator 28
 3074 151c 488D8540 		leaq	-448(%rbp), %rax
 3074      FEFFFF
 3075 1523 4889C7   		movq	%rax, %rdi
 3076              	.LEHB80:
 3077 1526 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3077      00
 3078              	.LEHE80:
 3079              	.LBE54:
 3080              		.loc 3 71 1 discriminator 29
 3081 152b E8000000 		call	__cxa_end_catch@PLT
 3081      00
 3082              	.LBE53:
 3083 1530 E9FD0000 		jmp	.L147
 3083      00
 3084              	.L167:
 3085              		.loc 3 71 1 discriminator 6
 3086 1535 4889C7   		movq	%rax, %rdi
 3087 1538 E8000000 		call	__cxa_begin_catch@PLT
 3087      00
 3088 153d 80BD0FFE 		cmpb	$0, -497(%rbp)
 3088      FFFF00
 3089 1544 7445     		je	.L154
 3090              	.LEHB81:
 3091              		.loc 3 71 1 discriminator 31
 3092 1546 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3092      00
 3093 154b 488B18   		movq	(%rax), %rbx
 3094 154e 488B85F8 		movq	-520(%rbp), %rax
 3094      FDFFFF
 3095 1555 488D4808 		leaq	8(%rax), %rcx
 3096 1559 488D8520 		leaq	-480(%rbp), %rax
 3096      FEFFFF
 3097 1560 BA470000 		movl	$71, %edx
 3097      00
 3098 1565 4889CE   		movq	%rcx, %rsi
 3099 1568 4889C7   		movq	%rax, %rdi
 3100 156b E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 3100      00
 3101              		.loc 3 71 1 discriminator 36
 3102 1570 488D8520 		leaq	-480(%rbp), %rax
 3102      FEFFFF
 3103 1577 488D1500 		leaq	.LC7(%rip), %rdx
 3103      000000
 3104 157e 4889C6   		movq	%rax, %rsi
 3105 1581 4889DF   		movq	%rbx, %rdi
 3106 1584 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3106      00
 3107 1589 EB43     		jmp	.L155
 3108              	.L154:
 3109              		.loc 3 71 1 discriminator 32
 3110 158b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3110      00
 3111 1590 488B18   		movq	(%rax), %rbx
 3112 1593 488B85F8 		movq	-520(%rbp), %rax
 3112      FDFFFF
 3113 159a 488D4808 		leaq	8(%rax), %rcx
 3114 159e 488D8520 		leaq	-480(%rbp), %rax
 3114      FEFFFF
 3115 15a5 BA470000 		movl	$71, %edx
 3115      00
 3116 15aa 4889CE   		movq	%rcx, %rsi
 3117 15ad 4889C7   		movq	%rax, %rdi
 3118 15b0 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 3118      00
 3119              		.loc 3 71 1 discriminator 43
 3120 15b5 488D8520 		leaq	-480(%rbp), %rax
 3120      FEFFFF
 3121 15bc 488D1500 		leaq	.LC8(%rip), %rdx
 3121      000000
 3122 15c3 4889C6   		movq	%rax, %rsi
 3123 15c6 4889DF   		movq	%rbx, %rdi
 3124 15c9 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3124      00
 3125              	.LEHE81:
 3126              	.L155:
 3127              	.LEHB82:
 3128              		.loc 3 71 1 discriminator 46
 3129 15ce E8000000 		call	__cxa_end_catch@PLT
 3129      00
 3130 15d3 EB5D     		jmp	.L147
 3131              	.L163:
 3132 15d5 F30F1EFA 		endbr64
 3133              	.LBB56:
 3134              		.loc 3 71 1
 3135 15d9 4889C3   		movq	%rax, %rbx
 3136 15dc E8000000 		call	__cxa_end_catch@PLT
 3136      00
 3137 15e1 4889D8   		movq	%rbx, %rax
 3138 15e4 4889C7   		movq	%rax, %rdi
 3139 15e7 E8000000 		call	_Unwind_Resume@PLT
 3139      00
 3140              	.LEHE82:
 3141              	.L165:
 3142 15ec F30F1EFA 		endbr64
 3143              	.LBE56:
 3144              	.LBB57:
 3145              	.LBB55:
 3146 15f0 4889C3   		movq	%rax, %rbx
 3147 15f3 488D8540 		leaq	-448(%rbp), %rax
 3147      FEFFFF
 3148 15fa 4889C7   		movq	%rax, %rdi
 3149 15fd E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3149      00
 3150 1602 EB07     		jmp	.L158
 3151              	.L164:
 3152 1604 F30F1EFA 		endbr64
 3153              	.LBE55:
 3154 1608 4889C3   		movq	%rax, %rbx
 3155              	.L158:
 3156 160b E8000000 		call	__cxa_end_catch@PLT
 3156      00
 3157 1610 4889D8   		movq	%rbx, %rax
 3158 1613 4889C7   		movq	%rax, %rdi
 3159              	.LEHB83:
 3160 1616 E8000000 		call	_Unwind_Resume@PLT
 3160      00
 3161              	.LEHE83:
 3162              	.L166:
 3163 161b F30F1EFA 		endbr64
 3164              	.LBE57:
 3165 161f 4889C3   		movq	%rax, %rbx
 3166 1622 E8000000 		call	__cxa_end_catch@PLT
 3166      00
 3167 1627 4889D8   		movq	%rbx, %rax
 3168 162a 4889C7   		movq	%rax, %rdi
 3169              	.LEHB84:
 3170 162d E8000000 		call	_Unwind_Resume@PLT
 3170      00
 3171              	.LEHE84:
 3172              	.L147:
 3173 1632 488B45D8 		movq	-40(%rbp), %rax
 3174 1636 64482B04 		subq	%fs:40, %rax
 3174      25280000 
 3174      00
 3175 163f 7405     		je	.L160
 3176 1641 E8000000 		call	__stack_chk_fail@PLT
 3176      00
 3177              	.L160:
 3178 1646 4881C4F8 		addq	$504, %rsp
 3178      010000
 3179 164d 5B       		popq	%rbx
 3180 164e 415C     		popq	%r12
 3181 1650 415D     		popq	%r13
 3182 1652 5D       		popq	%rbp
 3183              		.cfi_def_cfa 7, 8
 3184 1653 C3       		ret
 3185              		.cfi_endproc
 3186              	.LFE1464:
 3187              		.section	.gcc_except_table
 3188              		.align 4
 3189              	.LLSDA1464:
 3190 01d0 FF       		.byte	0xff
 3191 01d1 9B       		.byte	0x9b
 3192 01d2 55       		.uleb128 .LLSDATT1464-.LLSDATTD1464
 3193              	.LLSDATTD1464:
 3194 01d3 01       		.byte	0x1
 3195 01d4 3E       		.uleb128 .LLSDACSE1464-.LLSDACSB1464
 3196              	.LLSDACSB1464:
 3197 01d5 49       		.uleb128 .LEHB74-.LFB1464
 3198 01d6 05       		.uleb128 .LEHE74-.LEHB74
 3199 01d7 A701     		.uleb128 .L161-.LFB1464
 3200 01d9 05       		.uleb128 0x5
 3201 01da 6D       		.uleb128 .LEHB75-.LFB1464
 3202 01db 05       		.uleb128 .LEHE75-.LEHB75
 3203 01dc 8601     		.uleb128 .L162-.LFB1464
 3204 01de 07       		.uleb128 0x7
 3205 01df 7C       		.uleb128 .LEHB76-.LFB1464
 3206 01e0 05       		.uleb128 .LEHE76-.LEHB76
 3207 01e1 A701     		.uleb128 .L161-.LFB1464
 3208 01e3 05       		.uleb128 0x5
 3209 01e4 CF01     		.uleb128 .LEHB77-.LFB1464
 3210 01e6 8901     		.uleb128 .LEHE77-.LEHB77
 3211 01e8 AD05     		.uleb128 .L163-.LFB1464
 3212 01ea 00       		.uleb128 0
 3213 01eb FB02     		.uleb128 .LEHB78-.LFB1464
 3214 01ed 05       		.uleb128 .LEHE78-.LEHB78
 3215 01ee DC05     		.uleb128 .L164-.LFB1464
 3216 01f0 00       		.uleb128 0
 3217 01f1 9403     		.uleb128 .LEHB79-.LFB1464
 3218 01f3 60       		.uleb128 .LEHE79-.LEHB79
 3219 01f4 C405     		.uleb128 .L165-.LFB1464
 3220 01f6 00       		.uleb128 0
 3221 01f7 FE03     		.uleb128 .LEHB80-.LFB1464
 3222 01f9 05       		.uleb128 .LEHE80-.LEHB80
 3223 01fa DC05     		.uleb128 .L164-.LFB1464
 3224 01fc 00       		.uleb128 0
 3225 01fd 9E04     		.uleb128 .LEHB81-.LFB1464
 3226 01ff 8801     		.uleb128 .LEHE81-.LEHB81
 3227 0201 F305     		.uleb128 .L166-.LFB1464
 3228 0203 00       		.uleb128 0
 3229 0204 A605     		.uleb128 .LEHB82-.LFB1464
 3230 0206 1E       		.uleb128 .LEHE82-.LEHB82
 3231 0207 00       		.uleb128 0
 3232 0208 00       		.uleb128 0
 3233 0209 EE05     		.uleb128 .LEHB83-.LFB1464
 3234 020b 05       		.uleb128 .LEHE83-.LEHB83
 3235 020c 00       		.uleb128 0
 3236 020d 00       		.uleb128 0
 3237 020e 8506     		.uleb128 .LEHB84-.LFB1464
 3238 0210 05       		.uleb128 .LEHE84-.LEHB84
 3239 0211 00       		.uleb128 0
 3240 0212 00       		.uleb128 0
 3241              	.LLSDACSE1464:
 3242 0213 03       		.byte	0x3
 3243 0214 00       		.byte	0
 3244 0215 02       		.byte	0x2
 3245 0216 7D       		.byte	0x7d
 3246 0217 01       		.byte	0x1
 3247 0218 7D       		.byte	0x7d
 3248 0219 00       		.byte	0
 3249 021a 7D       		.byte	0x7d
 3250 021b 00       		.align 4
 3251 021c 00000000 		.long	0
 3252              	
 3253 0220 00000000 		.long	DW.ref._ZTISt9exception-.
 3254 0224 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 3255              	.LLSDATT1464:
 3256              		.text
 3258              		.section	.rodata
 3259              	.LC18:
 3260 02c1 6661696C 		.string	"failure"
 3260      75726500 
 3261              	.LC19:
 3262 02c9 72657375 		.string	"result.failed == true"
 3262      6C742E66 
 3262      61696C65 
 3262      64203D3D 
 3262      20747275 
 3263 02df 00       		.align 8
 3264              	.LC20:
 3265 02e0 556E6861 		.string	"Unhandled exception in CHECK(result.failed == true)"
 3265      6E646C65 
 3265      64206578 
 3265      63657074 
 3265      696F6E20 
 3266 0314 00000000 		.align 8
 3267              	.LC21:
 3268 0318 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(fileName.c_str(), result.failureFile)"
 3268      6E646C65 
 3268      64206578 
 3268      63657074 
 3268      696F6E20 
 3269              		.text
 3270              		.align 2
 3272              	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper7RunIm
 3273              	.LFB1468:
  72:TestDeferredTestReporter.cpp **** {
 3274              		.loc 3 72 1 is_stmt 1
 3275              		.cfi_startproc
 3276              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 3277              		.cfi_lsda 0x1b,.LLSDA1468
 3278 1654 F30F1EFA 		endbr64
 3279 1658 55       		pushq	%rbp
 3280              		.cfi_def_cfa_offset 16
 3281              		.cfi_offset 6, -16
 3282 1659 4889E5   		movq	%rsp, %rbp
 3283              		.cfi_def_cfa_register 6
 3284 165c 53       		pushq	%rbx
 3285 165d 4883EC68 		subq	$104, %rsp
 3286              		.cfi_offset 3, -24
 3287 1661 48897D98 		movq	%rdi, -104(%rbp)
 3288              		.loc 3 72 1
 3289 1665 64488B04 		movq	%fs:40, %rax
 3289      25280000 
 3289      00
 3290 166e 488945E8 		movq	%rax, -24(%rbp)
 3291 1672 31C0     		xorl	%eax, %eax
  73:TestDeferredTestReporter.cpp ****     char const* failure = "failure";
 3292              		.loc 3 73 17
 3293 1674 488D0500 		leaq	.LC18(%rip), %rax
 3293      000000
 3294 167b 488945B0 		movq	%rax, -80(%rbp)
  74:TestDeferredTestReporter.cpp **** 
  75:TestDeferredTestReporter.cpp ****     reporter.ReportTestStart(details);
 3295              		.loc 3 75 29
 3296 167f 488B4598 		movq	-104(%rbp), %rax
 3297              		.loc 3 75 30
 3298 1683 488B5598 		movq	-104(%rbp), %rdx
 3299 1687 4881C288 		addq	$136, %rdx
 3299      000000
 3300              		.loc 3 75 29
 3301 168e 4889D6   		movq	%rdx, %rsi
 3302 1691 4889C7   		movq	%rax, %rdi
 3303              	.LEHB85:
 3304 1694 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE@PLT
 3304      00
  76:TestDeferredTestReporter.cpp ****     reporter.ReportFailure(details, failure);
 3305              		.loc 3 76 27
 3306 1699 488B4598 		movq	-104(%rbp), %rax
 3307              		.loc 3 76 28
 3308 169d 488B5598 		movq	-104(%rbp), %rdx
 3309 16a1 488D8A88 		leaq	136(%rdx), %rcx
 3309      000000
 3310              		.loc 3 76 27
 3311 16a8 488B55B0 		movq	-80(%rbp), %rdx
 3312 16ac 4889CE   		movq	%rcx, %rsi
 3313 16af 4889C7   		movq	%rax, %rdi
 3314 16b2 E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc@PLT
 3314      00
  77:TestDeferredTestReporter.cpp **** 
  78:TestDeferredTestReporter.cpp ****     DeferredTestResult const& result = reporter.GetResults().at(0);
 3315              		.loc 3 78 59
 3316 16b7 488B4598 		movq	-104(%rbp), %rax
 3317 16bb 4889C7   		movq	%rax, %rdi
 3318 16be E8000000 		call	_ZN8UnitTest20DeferredTestReporter10GetResultsEv@PLT
 3318      00
 3319              		.loc 3 78 64
 3320 16c3 BE000000 		movl	$0, %esi
 3320      00
 3321 16c8 4889C7   		movq	%rax, %rdi
 3322 16cb E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
 3322      00
 3323              	.LEHE85:
 3324 16d0 488945B8 		movq	%rax, -72(%rbp)
  79:TestDeferredTestReporter.cpp ****     CHECK(result.failed == true);
 3325              		.loc 3 79 5
 3326 16d4 488B45B8 		movq	-72(%rbp), %rax
 3327 16d8 0FB6407C 		movzbl	124(%rax), %eax
 3328 16dc 0FB6C0   		movzbl	%al, %eax
 3329 16df 89C7     		movl	%eax, %edi
 3330 16e1 E8000000 		call	_ZN8UnitTest5CheckIbEEbT_
 3330      00
 3331 16e6 83F001   		xorl	$1, %eax
 3332 16e9 84C0     		testb	%al, %al
 3333 16eb 743A     		je	.L169
 3334              	.LEHB86:
 3335              		.loc 3 79 5 is_stmt 0 discriminator 1
 3336 16ed E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3336      00
 3337 16f2 488B18   		movq	(%rax), %rbx
 3338 16f5 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 3338      00
 3339              		.loc 3 79 5 discriminator 3
 3340 16fa 488B08   		movq	(%rax), %rcx
 3341 16fd 488D45C0 		leaq	-64(%rbp), %rax
 3342 1701 BA4F0000 		movl	$79, %edx
 3342      00
 3343 1706 4889CE   		movq	%rcx, %rsi
 3344 1709 4889C7   		movq	%rax, %rdi
 3345 170c E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 3345      00
 3346              		.loc 3 79 5 discriminator 7
 3347 1711 488D45C0 		leaq	-64(%rbp), %rax
 3348 1715 488D1500 		leaq	.LC19(%rip), %rdx
 3348      000000
 3349 171c 4889C6   		movq	%rax, %rsi
 3350 171f 4889DF   		movq	%rbx, %rdi
 3351 1722 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3351      00
 3352              	.LEHE86:
 3353              	.L169:
 3354              	.LEHB87:
  80:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(fileName.c_str(), result.failureFile);
 3355              		.loc 3 80 5 is_stmt 1
 3356 1727 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 3356      00
 3357 172c 488B08   		movq	(%rax), %rcx
 3358 172f 488D45C0 		leaq	-64(%rbp), %rax
 3359 1733 BA500000 		movl	$80, %edx
 3359      00
 3360 1738 4889CE   		movq	%rcx, %rsi
 3361 173b 4889C7   		movq	%rax, %rdi
 3362 173e E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 3362      00
 3363              		.loc 3 80 5 is_stmt 0 discriminator 4
 3364 1743 488B45B8 		movq	-72(%rbp), %rax
 3365 1747 488D5840 		leaq	64(%rax), %rbx
 3366 174b 488B4598 		movq	-104(%rbp), %rax
 3367 174f 4883C060 		addq	$96, %rax
 3368 1753 4889C7   		movq	%rax, %rdi
 3369 1756 E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@PLT
 3369      00
 3370 175b 488945A8 		movq	%rax, -88(%rbp)
 3371 175f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3371      00
 3372              		.loc 3 80 5 discriminator 6
 3373 1764 488B00   		movq	(%rax), %rax
 3374 1767 488D55C0 		leaq	-64(%rbp), %rdx
 3375 176b 488D75A8 		leaq	-88(%rbp), %rsi
 3376 176f 4889D1   		movq	%rdx, %rcx
 3377 1772 4889DA   		movq	%rbx, %rdx
 3378 1775 4889C7   		movq	%rax, %rdi
 3379 1778 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 3379      00
 3380              	.LEHE87:
  81:TestDeferredTestReporter.cpp **** }
 3381              		.loc 3 81 1 is_stmt 1
 3382 177d E9CB0000 		jmp	.L168
 3382      00
 3383              	.L176:
 3384 1782 F30F1EFA 		endbr64
  79:TestDeferredTestReporter.cpp ****     CHECK(result.failed == true);
 3385              		.loc 3 79 5
 3386 1786 4889C7   		movq	%rax, %rdi
 3387 1789 E8000000 		call	__cxa_begin_catch@PLT
 3387      00
 3388              	.LEHB88:
 3389 178e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3389      00
  79:TestDeferredTestReporter.cpp ****     CHECK(result.failed == true);
 3390              		.loc 3 79 5 is_stmt 0 discriminator 6
 3391 1793 488B18   		movq	(%rax), %rbx
 3392 1796 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 3392      00
  79:TestDeferredTestReporter.cpp ****     CHECK(result.failed == true);
 3393              		.loc 3 79 5 discriminator 12
 3394 179b 488B08   		movq	(%rax), %rcx
 3395 179e 488D45C0 		leaq	-64(%rbp), %rax
 3396 17a2 BA4F0000 		movl	$79, %edx
 3396      00
 3397 17a7 4889CE   		movq	%rcx, %rsi
 3398 17aa 4889C7   		movq	%rax, %rdi
 3399 17ad E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 3399      00
  79:TestDeferredTestReporter.cpp ****     CHECK(result.failed == true);
 3400              		.loc 3 79 5 discriminator 16
 3401 17b2 488D45C0 		leaq	-64(%rbp), %rax
 3402 17b6 488D1500 		leaq	.LC20(%rip), %rdx
 3402      000000
 3403 17bd 4889C6   		movq	%rax, %rsi
 3404 17c0 4889DF   		movq	%rbx, %rdi
 3405 17c3 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3405      00
 3406              	.LEHE88:
 3407              	.LEHB89:
  79:TestDeferredTestReporter.cpp ****     CHECK(result.failed == true);
 3408              		.loc 3 79 5 discriminator 18
 3409 17c8 E8000000 		call	__cxa_end_catch@PLT
 3409      00
 3410              	.LEHE89:
 3411 17cd E955FFFF 		jmp	.L169
 3411      FF
 3412              	.L177:
 3413 17d2 F30F1EFA 		endbr64
  79:TestDeferredTestReporter.cpp ****     CHECK(result.failed == true);
 3414              		.loc 3 79 5
 3415 17d6 4889C3   		movq	%rax, %rbx
 3416 17d9 E8000000 		call	__cxa_end_catch@PLT
 3416      00
 3417 17de 4889D8   		movq	%rbx, %rax
 3418 17e1 4889C7   		movq	%rax, %rdi
 3419              	.LEHB90:
 3420 17e4 E8000000 		call	_Unwind_Resume@PLT
 3420      00
 3421              	.LEHE90:
 3422              	.L178:
 3423 17e9 F30F1EFA 		endbr64
  80:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(fileName.c_str(), result.failureFile);
 3424              		.loc 3 80 5 is_stmt 1
 3425 17ed 4889C7   		movq	%rax, %rdi
 3426 17f0 E8000000 		call	__cxa_begin_catch@PLT
 3426      00
 3427              	.LEHB91:
 3428 17f5 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3428      00
  80:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(fileName.c_str(), result.failureFile);
 3429              		.loc 3 80 5 is_stmt 0 discriminator 3
 3430 17fa 488B18   		movq	(%rax), %rbx
 3431 17fd E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 3431      00
  80:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(fileName.c_str(), result.failureFile);
 3432              		.loc 3 80 5 discriminator 13
 3433 1802 488B08   		movq	(%rax), %rcx
 3434 1805 488D45C0 		leaq	-64(%rbp), %rax
 3435 1809 BA500000 		movl	$80, %edx
 3435      00
 3436 180e 4889CE   		movq	%rcx, %rsi
 3437 1811 4889C7   		movq	%rax, %rdi
 3438 1814 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 3438      00
  80:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(fileName.c_str(), result.failureFile);
 3439              		.loc 3 80 5 discriminator 17
 3440 1819 488D45C0 		leaq	-64(%rbp), %rax
 3441 181d 488D1500 		leaq	.LC21(%rip), %rdx
 3441      000000
 3442 1824 4889C6   		movq	%rax, %rsi
 3443 1827 4889DF   		movq	%rbx, %rdi
 3444 182a E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3444      00
 3445              	.LEHE91:
 3446              	.LEHB92:
  80:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(fileName.c_str(), result.failureFile);
 3447              		.loc 3 80 5 discriminator 19
 3448 182f E8000000 		call	__cxa_end_catch@PLT
 3448      00
 3449              	.LEHE92:
 3450              		.loc 3 81 1 is_stmt 1 discriminator 19
 3451 1834 EB17     		jmp	.L168
 3452              	.L179:
 3453 1836 F30F1EFA 		endbr64
  80:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(fileName.c_str(), result.failureFile);
 3454              		.loc 3 80 5
 3455 183a 4889C3   		movq	%rax, %rbx
 3456 183d E8000000 		call	__cxa_end_catch@PLT
 3456      00
 3457 1842 4889D8   		movq	%rbx, %rax
 3458 1845 4889C7   		movq	%rax, %rdi
 3459              	.LEHB93:
 3460 1848 E8000000 		call	_Unwind_Resume@PLT
 3460      00
 3461              	.LEHE93:
 3462              	.L168:
 3463              		.loc 3 81 1
 3464 184d 488B45E8 		movq	-24(%rbp), %rax
 3465 1851 64482B04 		subq	%fs:40, %rax
 3465      25280000 
 3465      00
 3466 185a 7405     		je	.L175
 3467 185c E8000000 		call	__stack_chk_fail@PLT
 3467      00
 3468              	.L175:
 3469 1861 488B5DF8 		movq	-8(%rbp), %rbx
 3470 1865 C9       		leave
 3471              		.cfi_def_cfa 7, 8
 3472 1866 C3       		ret
 3473              		.cfi_endproc
 3474              	.LFE1468:
 3475              		.section	.gcc_except_table
 3476              		.align 4
 3477              	.LLSDA1468:
 3478 0228 FF       		.byte	0xff
 3479 0229 9B       		.byte	0x9b
 3480 022a 39       		.uleb128 .LLSDATT1468-.LLSDATTD1468
 3481              	.LLSDATTD1468:
 3482 022b 01       		.byte	0x1
 3483 022c 30       		.uleb128 .LLSDACSE1468-.LLSDACSB1468
 3484              	.LLSDACSB1468:
 3485 022d 40       		.uleb128 .LEHB85-.LFB1468
 3486 022e 3C       		.uleb128 .LEHE85-.LEHB85
 3487 022f 00       		.uleb128 0
 3488 0230 00       		.uleb128 0
 3489 0231 9901     		.uleb128 .LEHB86-.LFB1468
 3490 0233 3A       		.uleb128 .LEHE86-.LEHB86
 3491 0234 AE02     		.uleb128 .L176-.LFB1468
 3492 0236 01       		.uleb128 0x1
 3493 0237 D301     		.uleb128 .LEHB87-.LFB1468
 3494 0239 56       		.uleb128 .LEHE87-.LEHB87
 3495 023a 9503     		.uleb128 .L178-.LFB1468
 3496 023c 01       		.uleb128 0x1
 3497 023d BA02     		.uleb128 .LEHB88-.LFB1468
 3498 023f 3A       		.uleb128 .LEHE88-.LEHB88
 3499 0240 FE02     		.uleb128 .L177-.LFB1468
 3500 0242 00       		.uleb128 0
 3501 0243 F402     		.uleb128 .LEHB89-.LFB1468
 3502 0245 05       		.uleb128 .LEHE89-.LEHB89
 3503 0246 00       		.uleb128 0
 3504 0247 00       		.uleb128 0
 3505 0248 9003     		.uleb128 .LEHB90-.LFB1468
 3506 024a 05       		.uleb128 .LEHE90-.LEHB90
 3507 024b 00       		.uleb128 0
 3508 024c 00       		.uleb128 0
 3509 024d A103     		.uleb128 .LEHB91-.LFB1468
 3510 024f 3A       		.uleb128 .LEHE91-.LEHB91
 3511 0250 E203     		.uleb128 .L179-.LFB1468
 3512 0252 00       		.uleb128 0
 3513 0253 DB03     		.uleb128 .LEHB92-.LFB1468
 3514 0255 05       		.uleb128 .LEHE92-.LEHB92
 3515 0256 00       		.uleb128 0
 3516 0257 00       		.uleb128 0
 3517 0258 F403     		.uleb128 .LEHB93-.LFB1468
 3518 025a 05       		.uleb128 .LEHE93-.LEHB93
 3519 025b 00       		.uleb128 0
 3520 025c 00       		.uleb128 0
 3521              	.LLSDACSE1468:
 3522 025d 01       		.byte	0x1
 3523 025e 00       		.byte	0
 3524 025f 00       		.align 4
 3525 0260 00000000 		.long	0
 3526              	
 3527              	.LLSDATT1468:
 3528              		.text
 3530 1867 90       		.align 2
 3532              	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleF
 3533              	.LFB1470:
  82:TestDeferredTestReporter.cpp **** 
  83:TestDeferredTestReporter.cpp **** TEST_FIXTURE(DeferredTestReporterFixture, ReportFailureSavesFailureDetailsForMultipleFailures)
 3534              		.loc 3 83 1
 3535              		.cfi_startproc
 3536 1868 55       		pushq	%rbp
 3537              		.cfi_def_cfa_offset 16
 3538              		.cfi_offset 6, -16
 3539 1869 4889E5   		movq	%rsp, %rbp
 3540              		.cfi_def_cfa_register 6
 3541 186c 4883EC10 		subq	$16, %rsp
 3542 1870 48897DF8 		movq	%rdi, -8(%rbp)
 3543 1874 488975F0 		movq	%rsi, -16(%rbp)
 3544              	.LBB58:
 3545              		.loc 3 83 1
 3546 1878 488B45F8 		movq	-8(%rbp), %rax
 3547 187c 4889C7   		movq	%rax, %rdi
 3548 187f E8C4E7FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
 3548      FF
 3549 1884 488B45F8 		movq	-8(%rbp), %rax
 3550 1888 488B55F0 		movq	-16(%rbp), %rdx
 3551 188c 488990A8 		movq	%rdx, 168(%rax)
 3551      000000
 3552              	.LBE58:
 3553 1893 90       		nop
 3554 1894 C9       		leave
 3555              		.cfi_def_cfa 7, 8
 3556 1895 C3       		ret
 3557              		.cfi_endproc
 3558              	.LFE1470:
 3560              		.set	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 3561              		.section	.rodata
 3562 0361 00000000 		.align 8
 3562      000000
 3563              	.LC22:
 3564 0368 5265706F 		.string	"ReportFailureSavesFailureDetailsForMultipleFailures"
 3564      72744661 
 3564      696C7572 
 3564      65536176 
 3564      65734661 
 3565              		.text
 3566              		.align 2
 3568              	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMulti
 3569              	.LFB1473:
 3570              		.loc 3 83 1
 3571              		.cfi_startproc
 3572 1896 55       		pushq	%rbp
 3573              		.cfi_def_cfa_offset 16
 3574              		.cfi_offset 6, -16
 3575 1897 4889E5   		movq	%rsp, %rbp
 3576              		.cfi_def_cfa_register 6
 3577 189a 53       		pushq	%rbx
 3578 189b 4883EC18 		subq	$24, %rsp
 3579              		.cfi_offset 3, -24
 3580 189f 48897DE8 		movq	%rdi, -24(%rbp)
 3581              	.LBB59:
 3582              		.loc 3 83 1
 3583 18a3 488B5DE8 		movq	-24(%rbp), %rbx
 3584 18a7 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 3584      00
 3585 18ac 4889C2   		movq	%rax, %rdx
 3586 18af 41B85300 		movl	$83, %r8d
 3586      0000
 3587 18b5 488D0500 		leaq	.LC4(%rip), %rax
 3587      000000
 3588 18bc 4889C1   		movq	%rax, %rcx
 3589 18bf 488D0500 		leaq	.LC22(%rip), %rax
 3589      000000
 3590 18c6 4889C6   		movq	%rax, %rsi
 3591 18c9 4889DF   		movq	%rbx, %rdi
 3592 18cc E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 3592      00
 3593 18d1 488D1500 		leaq	16+_ZTVN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDeta
 3593      000000
 3594 18d8 488B45E8 		movq	-24(%rbp), %rax
 3595 18dc 488910   		movq	%rdx, (%rax)
 3596              	.LBE59:
 3597 18df 90       		nop
 3598 18e0 488B5DF8 		movq	-8(%rbp), %rbx
 3599 18e4 C9       		leave
 3600              		.cfi_def_cfa 7, 8
 3601 18e5 C3       		ret
 3602              		.cfi_endproc
 3603              	.LFE1473:
 3605              		.set	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsFo
 3606              		.local	_ZN8UnitTest12_GLOBAL__N_190testDeferredTestReporterFixtureReportFailureSavesFailureDetails
 3607              		.comm	_ZN8UnitTest12_GLOBAL__N_190testDeferredTestReporterFixtureReportFailureSavesFailureDetailsF
 3608              		.local	_ZN8UnitTest12_GLOBAL__N_183adderDeferredTestReporterFixtureReportFailureSavesFailureDetail
 3609              		.comm	_ZN8UnitTest12_GLOBAL__N_183adderDeferredTestReporterFixtureReportFailureSavesFailureDetails
 3610              		.align 2
 3612              	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleF
 3613              	.LFB1477:
 3614              		.loc 3 83 1
 3615              		.cfi_startproc
 3616 18e6 55       		pushq	%rbp
 3617              		.cfi_def_cfa_offset 16
 3618              		.cfi_offset 6, -16
 3619 18e7 4889E5   		movq	%rsp, %rbp
 3620              		.cfi_def_cfa_register 6
 3621 18ea 4883EC10 		subq	$16, %rsp
 3622 18ee 48897DF8 		movq	%rdi, -8(%rbp)
 3623              	.LBB60:
 3624              		.loc 3 83 1
 3625 18f2 488B45F8 		movq	-8(%rbp), %rax
 3626 18f6 4889C7   		movq	%rax, %rdi
 3627 18f9 E844E9FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
 3627      FF
 3628              	.LBE60:
 3629 18fe 90       		nop
 3630 18ff C9       		leave
 3631              		.cfi_def_cfa 7, 8
 3632 1900 C3       		ret
 3633              		.cfi_endproc
 3634              	.LFE1477:
 3636              		.set	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 3637 1901 90       		.align 2
 3639              	_ZNK8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMult
 3640              	.LFB1475:
 3641              		.loc 3 83 1
 3642              		.cfi_startproc
 3643              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 3644              		.cfi_lsda 0x1b,.LLSDA1475
 3645 1902 F30F1EFA 		endbr64
 3646 1906 55       		pushq	%rbp
 3647              		.cfi_def_cfa_offset 16
 3648              		.cfi_offset 6, -16
 3649 1907 4889E5   		movq	%rsp, %rbp
 3650              		.cfi_def_cfa_register 6
 3651 190a 4155     		pushq	%r13
 3652 190c 4154     		pushq	%r12
 3653 190e 53       		pushq	%rbx
 3654 190f 4881ECF8 		subq	$504, %rsp
 3654      010000
 3655              		.cfi_offset 13, -24
 3656              		.cfi_offset 12, -32
 3657              		.cfi_offset 3, -40
 3658 1916 4889BDF8 		movq	%rdi, -520(%rbp)
 3658      FDFFFF
 3659              		.loc 3 83 1
 3660 191d 64488B04 		movq	%fs:40, %rax
 3660      25280000 
 3660      00
 3661 1926 488945D8 		movq	%rax, -40(%rbp)
 3662 192a 31C0     		xorl	%eax, %eax
 3663 192c C6850FFE 		movb	$0, -497(%rbp)
 3663      FFFF00
 3664              	.LBB61:
 3665 1933 488B85F8 		movq	-520(%rbp), %rax
 3665      FDFFFF
 3666 193a 488D5008 		leaq	8(%rax), %rdx
 3667 193e 488D8540 		leaq	-448(%rbp), %rax
 3667      FEFFFF
 3668 1945 4889D6   		movq	%rdx, %rsi
 3669 1948 4889C7   		movq	%rax, %rdi
 3670              	.LEHB94:
 3671 194b E818FFFF 		call	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 3671      FF
 3672              	.LEHE94:
 3673              		.loc 3 83 1 is_stmt 0 discriminator 1
 3674 1950 C6850FFE 		movb	$1, -497(%rbp)
 3674      FFFF01
 3675 1957 488B85F8 		movq	-520(%rbp), %rax
 3675      FDFFFF
 3676 195e 488D5008 		leaq	8(%rax), %rdx
 3677 1962 488D8540 		leaq	-448(%rbp), %rax
 3677      FEFFFF
 3678 1969 4889D6   		movq	%rdx, %rsi
 3679 196c 4889C7   		movq	%rax, %rdi
 3680              	.LEHB95:
 3681 196f E8FF1600 		call	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFai
 3681      00
 3682              	.LEHE95:
 3683              		.loc 3 83 1 discriminator 3
 3684 1974 488D8540 		leaq	-448(%rbp), %rax
 3684      FEFFFF
 3685 197b 4889C7   		movq	%rax, %rdi
 3686              	.LEHB96:
 3687 197e E863FFFF 		call	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 3687      FF
 3688              	.LEHE96:
 3689              	.LBE61:
 3690              		.loc 3 83 1
 3691 1983 E9840200 		jmp	.L183
 3691      00
 3692              	.L198:
 3693 1988 F30F1EFA 		endbr64
 3694              	.LBB62:
 3695 198c 4989C4   		movq	%rax, %r12
 3696 198f 4889D3   		movq	%rdx, %rbx
 3697 1992 488D8540 		leaq	-448(%rbp), %rax
 3697      FEFFFF
 3698 1999 4889C7   		movq	%rax, %rdi
 3699 199c E845FFFF 		call	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 3699      FF
 3700 19a1 4C89E0   		movq	%r12, %rax
 3701 19a4 4889DA   		movq	%rbx, %rdx
 3702 19a7 EB04     		jmp	.L185
 3703              	.L197:
 3704 19a9 F30F1EFA 		endbr64
 3705              	.L185:
 3706              	.LBE62:
 3707 19ad 4883FA01 		cmpq	$1, %rdx
 3708 19b1 740F     		je	.L186
 3709 19b3 4883FA02 		cmpq	$2, %rdx
 3710 19b7 0F84A700 		je	.L187
 3710      0000
 3711 19bd E94D0100 		jmp	.L203
 3711      00
 3712              	.L186:
 3713              	.LBB63:
 3714              		.loc 3 83 1 discriminator 4
 3715 19c2 4889C7   		movq	%rax, %rdi
 3716 19c5 E8000000 		call	__cxa_begin_catch@PLT
 3716      00
 3717 19ca 48898518 		movq	%rax, -488(%rbp)
 3717      FEFFFF
 3718              	.LEHB97:
 3719 19d1 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3719      00
 3720 19d6 488B18   		movq	(%rax), %rbx
 3721 19d9 488B8518 		movq	-488(%rbp), %rax
 3721      FEFFFF
 3722 19e0 488B00   		movq	(%rax), %rax
 3723 19e3 4883C010 		addq	$16, %rax
 3724 19e7 488B10   		movq	(%rax), %rdx
 3725 19ea 488B8518 		movq	-488(%rbp), %rax
 3725      FEFFFF
 3726 19f1 4889C7   		movq	%rax, %rdi
 3727 19f4 FFD2     		call	*%rdx
 3728              	.LVL8:
 3729 19f6 4989C4   		movq	%rax, %r12
 3730 19f9 488B8518 		movq	-488(%rbp), %rax
 3730      FEFFFF
 3731 1a00 4889C7   		movq	%rax, %rdi
 3732 1a03 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 3732      00
 3733              		.loc 3 83 1 discriminator 8
 3734 1a08 4189C5   		movl	%eax, %r13d
 3735 1a0b 488B8518 		movq	-488(%rbp), %rax
 3735      FEFFFF
 3736 1a12 4889C7   		movq	%rax, %rdi
 3737 1a15 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 3737      00
 3738              		.loc 3 83 1 discriminator 10
 3739 1a1a 4889C1   		movq	%rax, %rcx
 3740 1a1d 488B85F8 		movq	-520(%rbp), %rax
 3740      FDFFFF
 3741 1a24 488B5008 		movq	8(%rax), %rdx
 3742 1a28 488B85F8 		movq	-520(%rbp), %rax
 3742      FDFFFF
 3743 1a2f 488B7010 		movq	16(%rax), %rsi
 3744 1a33 488D8520 		leaq	-480(%rbp), %rax
 3744      FEFFFF
 3745 1a3a 4589E8   		movl	%r13d, %r8d
 3746 1a3d 4889C7   		movq	%rax, %rdi
 3747 1a40 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 3747      00
 3748              		.loc 3 83 1 discriminator 14
 3749 1a45 488D8520 		leaq	-480(%rbp), %rax
 3749      FEFFFF
 3750 1a4c 4C89E2   		movq	%r12, %rdx
 3751 1a4f 4889C6   		movq	%rax, %rsi
 3752 1a52 4889DF   		movq	%rbx, %rdi
 3753 1a55 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3753      00
 3754              	.LEHE97:
 3755              		.loc 3 83 1 discriminator 16
 3756 1a5a E8000000 		call	__cxa_end_catch@PLT
 3756      00
 3757              	.LBE63:
 3758 1a5f E9A80100 		jmp	.L183
 3758      00
 3759              	.L187:
 3760              	.LBB64:
 3761              		.loc 3 83 1 discriminator 5
 3762 1a64 4889C7   		movq	%rax, %rdi
 3763 1a67 E8000000 		call	__cxa_begin_catch@PLT
 3763      00
 3764 1a6c 48898510 		movq	%rax, -496(%rbp)
 3764      FEFFFF
 3765              	.LBB65:
 3766 1a73 488D8540 		leaq	-448(%rbp), %rax
 3766      FEFFFF
 3767 1a7a 4889C7   		movq	%rax, %rdi
 3768              	.LEHB98:
 3769 1a7d E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 3769      00
 3770              	.LEHE98:
 3771              		.loc 3 83 1 discriminator 18
 3772 1a82 488D8540 		leaq	-448(%rbp), %rax
 3772      FEFFFF
 3773 1a89 488D1500 		leaq	.LC6(%rip), %rdx
 3773      000000
 3774 1a90 4889D6   		movq	%rdx, %rsi
 3775 1a93 4889C7   		movq	%rax, %rdi
 3776              	.LEHB99:
 3777 1a96 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 3777      00
 3778 1a9b 4889C3   		movq	%rax, %rbx
 3779 1a9e 488B8510 		movq	-496(%rbp), %rax
 3779      FEFFFF
 3780 1aa5 488B00   		movq	(%rax), %rax
 3781 1aa8 4883C010 		addq	$16, %rax
 3782 1aac 488B10   		movq	(%rax), %rdx
 3783 1aaf 488B8510 		movq	-496(%rbp), %rax
 3783      FEFFFF
 3784 1ab6 4889C7   		movq	%rax, %rdi
 3785 1ab9 FFD2     		call	*%rdx
 3786              	.LVL9:
 3787 1abb 4889C6   		movq	%rax, %rsi
 3788 1abe 4889DF   		movq	%rbx, %rdi
 3789 1ac1 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 3789      00
 3790              		.loc 3 83 1 discriminator 22
 3791 1ac6 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3791      00
 3792 1acb 488B18   		movq	(%rax), %rbx
 3793 1ace 488D8540 		leaq	-448(%rbp), %rax
 3793      FEFFFF
 3794 1ad5 4889C7   		movq	%rax, %rdi
 3795 1ad8 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 3795      00
 3796              		.loc 3 83 1 discriminator 24
 3797 1add 4889C2   		movq	%rax, %rdx
 3798 1ae0 488B85F8 		movq	-520(%rbp), %rax
 3798      FDFFFF
 3799 1ae7 4883C008 		addq	$8, %rax
 3800 1aeb 4889C6   		movq	%rax, %rsi
 3801 1aee 4889DF   		movq	%rbx, %rdi
 3802 1af1 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3802      00
 3803              	.LEHE99:
 3804              		.loc 3 83 1 discriminator 28
 3805 1af6 488D8540 		leaq	-448(%rbp), %rax
 3805      FEFFFF
 3806 1afd 4889C7   		movq	%rax, %rdi
 3807              	.LEHB100:
 3808 1b00 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3808      00
 3809              	.LEHE100:
 3810              	.LBE65:
 3811              		.loc 3 83 1 discriminator 29
 3812 1b05 E8000000 		call	__cxa_end_catch@PLT
 3812      00
 3813              	.LBE64:
 3814 1b0a E9FD0000 		jmp	.L183
 3814      00
 3815              	.L203:
 3816              		.loc 3 83 1 discriminator 6
 3817 1b0f 4889C7   		movq	%rax, %rdi
 3818 1b12 E8000000 		call	__cxa_begin_catch@PLT
 3818      00
 3819 1b17 80BD0FFE 		cmpb	$0, -497(%rbp)
 3819      FFFF00
 3820 1b1e 7445     		je	.L190
 3821              	.LEHB101:
 3822              		.loc 3 83 1 discriminator 31
 3823 1b20 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3823      00
 3824 1b25 488B18   		movq	(%rax), %rbx
 3825 1b28 488B85F8 		movq	-520(%rbp), %rax
 3825      FDFFFF
 3826 1b2f 488D4808 		leaq	8(%rax), %rcx
 3827 1b33 488D8520 		leaq	-480(%rbp), %rax
 3827      FEFFFF
 3828 1b3a BA530000 		movl	$83, %edx
 3828      00
 3829 1b3f 4889CE   		movq	%rcx, %rsi
 3830 1b42 4889C7   		movq	%rax, %rdi
 3831 1b45 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 3831      00
 3832              		.loc 3 83 1 discriminator 36
 3833 1b4a 488D8520 		leaq	-480(%rbp), %rax
 3833      FEFFFF
 3834 1b51 488D1500 		leaq	.LC7(%rip), %rdx
 3834      000000
 3835 1b58 4889C6   		movq	%rax, %rsi
 3836 1b5b 4889DF   		movq	%rbx, %rdi
 3837 1b5e E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3837      00
 3838 1b63 EB43     		jmp	.L191
 3839              	.L190:
 3840              		.loc 3 83 1 discriminator 32
 3841 1b65 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3841      00
 3842 1b6a 488B18   		movq	(%rax), %rbx
 3843 1b6d 488B85F8 		movq	-520(%rbp), %rax
 3843      FDFFFF
 3844 1b74 488D4808 		leaq	8(%rax), %rcx
 3845 1b78 488D8520 		leaq	-480(%rbp), %rax
 3845      FEFFFF
 3846 1b7f BA530000 		movl	$83, %edx
 3846      00
 3847 1b84 4889CE   		movq	%rcx, %rsi
 3848 1b87 4889C7   		movq	%rax, %rdi
 3849 1b8a E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 3849      00
 3850              		.loc 3 83 1 discriminator 43
 3851 1b8f 488D8520 		leaq	-480(%rbp), %rax
 3851      FEFFFF
 3852 1b96 488D1500 		leaq	.LC8(%rip), %rdx
 3852      000000
 3853 1b9d 4889C6   		movq	%rax, %rsi
 3854 1ba0 4889DF   		movq	%rbx, %rdi
 3855 1ba3 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3855      00
 3856              	.LEHE101:
 3857              	.L191:
 3858              	.LEHB102:
 3859              		.loc 3 83 1 discriminator 46
 3860 1ba8 E8000000 		call	__cxa_end_catch@PLT
 3860      00
 3861 1bad EB5D     		jmp	.L183
 3862              	.L199:
 3863 1baf F30F1EFA 		endbr64
 3864              	.LBB67:
 3865              		.loc 3 83 1
 3866 1bb3 4889C3   		movq	%rax, %rbx
 3867 1bb6 E8000000 		call	__cxa_end_catch@PLT
 3867      00
 3868 1bbb 4889D8   		movq	%rbx, %rax
 3869 1bbe 4889C7   		movq	%rax, %rdi
 3870 1bc1 E8000000 		call	_Unwind_Resume@PLT
 3870      00
 3871              	.LEHE102:
 3872              	.L201:
 3873 1bc6 F30F1EFA 		endbr64
 3874              	.LBE67:
 3875              	.LBB68:
 3876              	.LBB66:
 3877 1bca 4889C3   		movq	%rax, %rbx
 3878 1bcd 488D8540 		leaq	-448(%rbp), %rax
 3878      FEFFFF
 3879 1bd4 4889C7   		movq	%rax, %rdi
 3880 1bd7 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3880      00
 3881 1bdc EB07     		jmp	.L194
 3882              	.L200:
 3883 1bde F30F1EFA 		endbr64
 3884              	.LBE66:
 3885 1be2 4889C3   		movq	%rax, %rbx
 3886              	.L194:
 3887 1be5 E8000000 		call	__cxa_end_catch@PLT
 3887      00
 3888 1bea 4889D8   		movq	%rbx, %rax
 3889 1bed 4889C7   		movq	%rax, %rdi
 3890              	.LEHB103:
 3891 1bf0 E8000000 		call	_Unwind_Resume@PLT
 3891      00
 3892              	.LEHE103:
 3893              	.L202:
 3894 1bf5 F30F1EFA 		endbr64
 3895              	.LBE68:
 3896 1bf9 4889C3   		movq	%rax, %rbx
 3897 1bfc E8000000 		call	__cxa_end_catch@PLT
 3897      00
 3898 1c01 4889D8   		movq	%rbx, %rax
 3899 1c04 4889C7   		movq	%rax, %rdi
 3900              	.LEHB104:
 3901 1c07 E8000000 		call	_Unwind_Resume@PLT
 3901      00
 3902              	.LEHE104:
 3903              	.L183:
 3904 1c0c 488B45D8 		movq	-40(%rbp), %rax
 3905 1c10 64482B04 		subq	%fs:40, %rax
 3905      25280000 
 3905      00
 3906 1c19 7405     		je	.L196
 3907 1c1b E8000000 		call	__stack_chk_fail@PLT
 3907      00
 3908              	.L196:
 3909 1c20 4881C4F8 		addq	$504, %rsp
 3909      010000
 3910 1c27 5B       		popq	%rbx
 3911 1c28 415C     		popq	%r12
 3912 1c2a 415D     		popq	%r13
 3913 1c2c 5D       		popq	%rbp
 3914              		.cfi_def_cfa 7, 8
 3915 1c2d C3       		ret
 3916              		.cfi_endproc
 3917              	.LFE1475:
 3918              		.section	.gcc_except_table
 3919              		.align 4
 3920              	.LLSDA1475:
 3921 0264 FF       		.byte	0xff
 3922 0265 9B       		.byte	0x9b
 3923 0266 55       		.uleb128 .LLSDATT1475-.LLSDATTD1475
 3924              	.LLSDATTD1475:
 3925 0267 01       		.byte	0x1
 3926 0268 3E       		.uleb128 .LLSDACSE1475-.LLSDACSB1475
 3927              	.LLSDACSB1475:
 3928 0269 49       		.uleb128 .LEHB94-.LFB1475
 3929 026a 05       		.uleb128 .LEHE94-.LEHB94
 3930 026b A701     		.uleb128 .L197-.LFB1475
 3931 026d 05       		.uleb128 0x5
 3932 026e 6D       		.uleb128 .LEHB95-.LFB1475
 3933 026f 05       		.uleb128 .LEHE95-.LEHB95
 3934 0270 8601     		.uleb128 .L198-.LFB1475
 3935 0272 07       		.uleb128 0x7
 3936 0273 7C       		.uleb128 .LEHB96-.LFB1475
 3937 0274 05       		.uleb128 .LEHE96-.LEHB96
 3938 0275 A701     		.uleb128 .L197-.LFB1475
 3939 0277 05       		.uleb128 0x5
 3940 0278 CF01     		.uleb128 .LEHB97-.LFB1475
 3941 027a 8901     		.uleb128 .LEHE97-.LEHB97
 3942 027c AD05     		.uleb128 .L199-.LFB1475
 3943 027e 00       		.uleb128 0
 3944 027f FB02     		.uleb128 .LEHB98-.LFB1475
 3945 0281 05       		.uleb128 .LEHE98-.LEHB98
 3946 0282 DC05     		.uleb128 .L200-.LFB1475
 3947 0284 00       		.uleb128 0
 3948 0285 9403     		.uleb128 .LEHB99-.LFB1475
 3949 0287 60       		.uleb128 .LEHE99-.LEHB99
 3950 0288 C405     		.uleb128 .L201-.LFB1475
 3951 028a 00       		.uleb128 0
 3952 028b FE03     		.uleb128 .LEHB100-.LFB1475
 3953 028d 05       		.uleb128 .LEHE100-.LEHB100
 3954 028e DC05     		.uleb128 .L200-.LFB1475
 3955 0290 00       		.uleb128 0
 3956 0291 9E04     		.uleb128 .LEHB101-.LFB1475
 3957 0293 8801     		.uleb128 .LEHE101-.LEHB101
 3958 0295 F305     		.uleb128 .L202-.LFB1475
 3959 0297 00       		.uleb128 0
 3960 0298 A605     		.uleb128 .LEHB102-.LFB1475
 3961 029a 1E       		.uleb128 .LEHE102-.LEHB102
 3962 029b 00       		.uleb128 0
 3963 029c 00       		.uleb128 0
 3964 029d EE05     		.uleb128 .LEHB103-.LFB1475
 3965 029f 05       		.uleb128 .LEHE103-.LEHB103
 3966 02a0 00       		.uleb128 0
 3967 02a1 00       		.uleb128 0
 3968 02a2 8506     		.uleb128 .LEHB104-.LFB1475
 3969 02a4 05       		.uleb128 .LEHE104-.LEHB104
 3970 02a5 00       		.uleb128 0
 3971 02a6 00       		.uleb128 0
 3972              	.LLSDACSE1475:
 3973 02a7 03       		.byte	0x3
 3974 02a8 00       		.byte	0
 3975 02a9 02       		.byte	0x2
 3976 02aa 7D       		.byte	0x7d
 3977 02ab 01       		.byte	0x1
 3978 02ac 7D       		.byte	0x7d
 3979 02ad 00       		.byte	0
 3980 02ae 7D       		.byte	0x7d
 3981 02af 00       		.align 4
 3982 02b0 00000000 		.long	0
 3983              	
 3984 02b4 00000000 		.long	DW.ref._ZTISt9exception-.
 3985 02b8 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 3986              	.LLSDATT1475:
 3987              		.text
 3989              		.section	.rodata
 3990              	.LC23:
 3991 039c 6661696C 		.string	"failure 1"
 3991      75726520 
 3991      3100
 3992              	.LC24:
 3993 03a6 6661696C 		.string	"failure 2"
 3993      75726520 
 3993      3200
 3994              		.align 8
 3995              	.LC25:
 3996 03b0 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(2, (int)result.failures.size())"
 3996      6E646C65 
 3996      64206578 
 3996      63657074 
 3996      696F6E20 
 3997 03f3 00000000 		.align 8
 3997      00
 3998              	.LC26:
 3999 03f8 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(failure1, result.failures[0].second)"
 3999      6E646C65 
 3999      64206578 
 3999      63657074 
 3999      696F6E20 
 4000              		.align 8
 4001              	.LC27:
 4002 0440 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(failure2, result.failures[1].second)"
 4002      6E646C65 
 4002      64206578 
 4002      63657074 
 4002      696F6E20 
 4003              		.text
 4004              		.align 2
 4006              	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleF
 4007              	.LFB1479:
  84:TestDeferredTestReporter.cpp **** {
 4008              		.loc 3 84 1 is_stmt 1
 4009              		.cfi_startproc
 4010              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 4011              		.cfi_lsda 0x1b,.LLSDA1479
 4012 1c2e F30F1EFA 		endbr64
 4013 1c32 55       		pushq	%rbp
 4014              		.cfi_def_cfa_offset 16
 4015              		.cfi_offset 6, -16
 4016 1c33 4889E5   		movq	%rsp, %rbp
 4017              		.cfi_def_cfa_register 6
 4018 1c36 53       		pushq	%rbx
 4019 1c37 4883EC68 		subq	$104, %rsp
 4020              		.cfi_offset 3, -24
 4021 1c3b 48897D98 		movq	%rdi, -104(%rbp)
 4022              		.loc 3 84 1
 4023 1c3f 64488B04 		movq	%fs:40, %rax
 4023      25280000 
 4023      00
 4024 1c48 488945E8 		movq	%rax, -24(%rbp)
 4025 1c4c 31C0     		xorl	%eax, %eax
  85:TestDeferredTestReporter.cpp ****     char const* failure1 = "failure 1";
 4026              		.loc 3 85 17
 4027 1c4e 488D0500 		leaq	.LC23(%rip), %rax
 4027      000000
 4028 1c55 488945A8 		movq	%rax, -88(%rbp)
  86:TestDeferredTestReporter.cpp ****     char const* failure2 = "failure 2";
 4029              		.loc 3 86 17
 4030 1c59 488D0500 		leaq	.LC24(%rip), %rax
 4030      000000
 4031 1c60 488945B0 		movq	%rax, -80(%rbp)
  87:TestDeferredTestReporter.cpp **** 
  88:TestDeferredTestReporter.cpp ****     reporter.ReportTestStart(details);
 4032              		.loc 3 88 29
 4033 1c64 488B4598 		movq	-104(%rbp), %rax
 4034              		.loc 3 88 30
 4035 1c68 488B5598 		movq	-104(%rbp), %rdx
 4036 1c6c 4881C288 		addq	$136, %rdx
 4036      000000
 4037              		.loc 3 88 29
 4038 1c73 4889D6   		movq	%rdx, %rsi
 4039 1c76 4889C7   		movq	%rax, %rdi
 4040              	.LEHB105:
 4041 1c79 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE@PLT
 4041      00
  89:TestDeferredTestReporter.cpp ****     reporter.ReportFailure(details, failure1);
 4042              		.loc 3 89 27
 4043 1c7e 488B4598 		movq	-104(%rbp), %rax
 4044 1c82 488B55A8 		movq	-88(%rbp), %rdx
 4045              		.loc 3 89 28
 4046 1c86 488B4D98 		movq	-104(%rbp), %rcx
 4047 1c8a 4881C188 		addq	$136, %rcx
 4047      000000
 4048              		.loc 3 89 27
 4049 1c91 4889CE   		movq	%rcx, %rsi
 4050 1c94 4889C7   		movq	%rax, %rdi
 4051 1c97 E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc@PLT
 4051      00
  90:TestDeferredTestReporter.cpp ****     reporter.ReportFailure(details, failure2);
 4052              		.loc 3 90 27
 4053 1c9c 488B4598 		movq	-104(%rbp), %rax
 4054 1ca0 488B55B0 		movq	-80(%rbp), %rdx
 4055              		.loc 3 90 28
 4056 1ca4 488B4D98 		movq	-104(%rbp), %rcx
 4057 1ca8 4881C188 		addq	$136, %rcx
 4057      000000
 4058              		.loc 3 90 27
 4059 1caf 4889CE   		movq	%rcx, %rsi
 4060 1cb2 4889C7   		movq	%rax, %rdi
 4061 1cb5 E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc@PLT
 4061      00
  91:TestDeferredTestReporter.cpp **** 
  92:TestDeferredTestReporter.cpp ****     DeferredTestResult const& result = reporter.GetResults().at(0);
 4062              		.loc 3 92 59
 4063 1cba 488B4598 		movq	-104(%rbp), %rax
 4064 1cbe 4889C7   		movq	%rax, %rdi
 4065 1cc1 E8000000 		call	_ZN8UnitTest20DeferredTestReporter10GetResultsEv@PLT
 4065      00
 4066              		.loc 3 92 64
 4067 1cc6 BE000000 		movl	$0, %esi
 4067      00
 4068 1ccb 4889C7   		movq	%rax, %rdi
 4069 1cce E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
 4069      00
 4070              	.LEHE105:
 4071 1cd3 488945B8 		movq	%rax, -72(%rbp)
 4072              	.LEHB106:
  93:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(2, (int)result.failures.size());
 4073              		.loc 3 93 5
 4074 1cd7 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 4074      00
 4075 1cdc 488B08   		movq	(%rax), %rcx
 4076 1cdf 488D45C0 		leaq	-64(%rbp), %rax
 4077 1ce3 BA5D0000 		movl	$93, %edx
 4077      00
 4078 1ce8 4889CE   		movq	%rcx, %rsi
 4079 1ceb 4889C7   		movq	%rax, %rdi
 4080 1cee E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4080      00
 4081              		.loc 3 93 5 is_stmt 0 discriminator 4
 4082 1cf3 488B45B8 		movq	-72(%rbp), %rax
 4083 1cf7 4883C060 		addq	$96, %rax
 4084 1cfb 4889C7   		movq	%rax, %rdi
 4085 1cfe E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv
 4085      00
 4086 1d03 8945A4   		movl	%eax, -92(%rbp)
 4087 1d06 C745A002 		movl	$2, -96(%rbp)
 4087      000000
 4088 1d0d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4088      00
 4089 1d12 488B00   		movq	(%rax), %rax
 4090 1d15 488D4DC0 		leaq	-64(%rbp), %rcx
 4091 1d19 488D55A4 		leaq	-92(%rbp), %rdx
 4092 1d1d 488D75A0 		leaq	-96(%rbp), %rsi
 4093 1d21 4889C7   		movq	%rax, %rdi
 4094 1d24 E8000000 		call	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 4094      00
 4095              	.LEHE106:
 4096              	.L206:
 4097              	.LEHB107:
  94:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure1, result.failures[0].second);
 4098              		.loc 3 94 5 is_stmt 1
 4099 1d29 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 4099      00
 4100 1d2e 488B08   		movq	(%rax), %rcx
 4101 1d31 488D45C0 		leaq	-64(%rbp), %rax
 4102 1d35 BA5E0000 		movl	$94, %edx
 4102      00
 4103 1d3a 4889CE   		movq	%rcx, %rsi
 4104 1d3d 4889C7   		movq	%rax, %rdi
 4105 1d40 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4105      00
 4106              		.loc 3 94 5 is_stmt 0 discriminator 4
 4107 1d45 488B45B8 		movq	-72(%rbp), %rax
 4108 1d49 4883C060 		addq	$96, %rax
 4109 1d4d BE000000 		movl	$0, %esi
 4109      00
 4110 1d52 4889C7   		movq	%rax, %rdi
 4111 1d55 E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEixEm
 4111      00
 4112 1d5a 488D5808 		leaq	8(%rax), %rbx
 4113 1d5e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4113      00
 4114 1d63 488B00   		movq	(%rax), %rax
 4115 1d66 488D55C0 		leaq	-64(%rbp), %rdx
 4116 1d6a 488D75A8 		leaq	-88(%rbp), %rsi
 4117 1d6e 4889D1   		movq	%rdx, %rcx
 4118 1d71 4889DA   		movq	%rbx, %rdx
 4119 1d74 4889C7   		movq	%rax, %rdi
 4120 1d77 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 4120      00
 4121              	.LEHE107:
 4122              	.L209:
 4123              	.LEHB108:
  95:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure2, result.failures[1].second);
 4124              		.loc 3 95 5 is_stmt 1
 4125 1d7c E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 4125      00
 4126 1d81 488B08   		movq	(%rax), %rcx
 4127 1d84 488D45C0 		leaq	-64(%rbp), %rax
 4128 1d88 BA5F0000 		movl	$95, %edx
 4128      00
 4129 1d8d 4889CE   		movq	%rcx, %rsi
 4130 1d90 4889C7   		movq	%rax, %rdi
 4131 1d93 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4131      00
 4132              		.loc 3 95 5 is_stmt 0 discriminator 4
 4133 1d98 488B45B8 		movq	-72(%rbp), %rax
 4134 1d9c 4883C060 		addq	$96, %rax
 4135 1da0 BE010000 		movl	$1, %esi
 4135      00
 4136 1da5 4889C7   		movq	%rax, %rdi
 4137 1da8 E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEixEm
 4137      00
 4138 1dad 488D5808 		leaq	8(%rax), %rbx
 4139 1db1 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4139      00
 4140 1db6 488B00   		movq	(%rax), %rax
 4141 1db9 488D55C0 		leaq	-64(%rbp), %rdx
 4142 1dbd 488D75B0 		leaq	-80(%rbp), %rsi
 4143 1dc1 4889D1   		movq	%rdx, %rcx
 4144 1dc4 4889DA   		movq	%rbx, %rdx
 4145 1dc7 4889C7   		movq	%rax, %rdi
 4146 1dca E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 4146      00
 4147              	.LEHE108:
  96:TestDeferredTestReporter.cpp **** }
 4148              		.loc 3 96 1 is_stmt 1
 4149 1dcf E9320100 		jmp	.L204
 4149      00
 4150              	.L215:
 4151 1dd4 F30F1EFA 		endbr64
  93:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure1, result.failures[0].second);
 4152              		.loc 3 93 5
 4153 1dd8 4889C7   		movq	%rax, %rdi
 4154 1ddb E8000000 		call	__cxa_begin_catch@PLT
 4154      00
 4155              	.LEHB109:
 4156 1de0 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4156      00
  93:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure1, result.failures[0].second);
 4157              		.loc 3 93 5 is_stmt 0 discriminator 3
 4158 1de5 488B18   		movq	(%rax), %rbx
 4159 1de8 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 4159      00
  93:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure1, result.failures[0].second);
 4160              		.loc 3 93 5 discriminator 11
 4161 1ded 488B08   		movq	(%rax), %rcx
 4162 1df0 488D45C0 		leaq	-64(%rbp), %rax
 4163 1df4 BA5D0000 		movl	$93, %edx
 4163      00
 4164 1df9 4889CE   		movq	%rcx, %rsi
 4165 1dfc 4889C7   		movq	%rax, %rdi
 4166 1dff E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4166      00
  93:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure1, result.failures[0].second);
 4167              		.loc 3 93 5 discriminator 15
 4168 1e04 488D45C0 		leaq	-64(%rbp), %rax
 4169 1e08 488D1500 		leaq	.LC25(%rip), %rdx
 4169      000000
 4170 1e0f 4889C6   		movq	%rax, %rsi
 4171 1e12 4889DF   		movq	%rbx, %rdi
 4172 1e15 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4172      00
 4173              	.LEHE109:
 4174              	.LEHB110:
  93:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure1, result.failures[0].second);
 4175              		.loc 3 93 5 discriminator 17
 4176 1e1a E8000000 		call	__cxa_end_catch@PLT
 4176      00
 4177              	.LEHE110:
 4178 1e1f E905FFFF 		jmp	.L206
 4178      FF
 4179              	.L216:
 4180 1e24 F30F1EFA 		endbr64
  93:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure1, result.failures[0].second);
 4181              		.loc 3 93 5
 4182 1e28 4889C3   		movq	%rax, %rbx
 4183 1e2b E8000000 		call	__cxa_end_catch@PLT
 4183      00
 4184 1e30 4889D8   		movq	%rbx, %rax
 4185 1e33 4889C7   		movq	%rax, %rdi
 4186              	.LEHB111:
 4187 1e36 E8000000 		call	_Unwind_Resume@PLT
 4187      00
 4188              	.LEHE111:
 4189              	.L217:
 4190 1e3b F30F1EFA 		endbr64
  94:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure2, result.failures[1].second);
 4191              		.loc 3 94 5 is_stmt 1
 4192 1e3f 4889C7   		movq	%rax, %rdi
 4193 1e42 E8000000 		call	__cxa_begin_catch@PLT
 4193      00
 4194              	.LEHB112:
 4195 1e47 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4195      00
  94:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure2, result.failures[1].second);
 4196              		.loc 3 94 5 is_stmt 0 discriminator 3
 4197 1e4c 488B18   		movq	(%rax), %rbx
 4198 1e4f E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 4198      00
  94:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure2, result.failures[1].second);
 4199              		.loc 3 94 5 discriminator 11
 4200 1e54 488B08   		movq	(%rax), %rcx
 4201 1e57 488D45C0 		leaq	-64(%rbp), %rax
 4202 1e5b BA5E0000 		movl	$94, %edx
 4202      00
 4203 1e60 4889CE   		movq	%rcx, %rsi
 4204 1e63 4889C7   		movq	%rax, %rdi
 4205 1e66 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4205      00
  94:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure2, result.failures[1].second);
 4206              		.loc 3 94 5 discriminator 15
 4207 1e6b 488D45C0 		leaq	-64(%rbp), %rax
 4208 1e6f 488D1500 		leaq	.LC26(%rip), %rdx
 4208      000000
 4209 1e76 4889C6   		movq	%rax, %rsi
 4210 1e79 4889DF   		movq	%rbx, %rdi
 4211 1e7c E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4211      00
 4212              	.LEHE112:
 4213              	.LEHB113:
  94:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure2, result.failures[1].second);
 4214              		.loc 3 94 5 discriminator 17
 4215 1e81 E8000000 		call	__cxa_end_catch@PLT
 4215      00
 4216              	.LEHE113:
 4217 1e86 E9F1FEFF 		jmp	.L209
 4217      FF
 4218              	.L218:
 4219 1e8b F30F1EFA 		endbr64
  94:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure2, result.failures[1].second);
 4220              		.loc 3 94 5
 4221 1e8f 4889C3   		movq	%rax, %rbx
 4222 1e92 E8000000 		call	__cxa_end_catch@PLT
 4222      00
 4223 1e97 4889D8   		movq	%rbx, %rax
 4224 1e9a 4889C7   		movq	%rax, %rdi
 4225              	.LEHB114:
 4226 1e9d E8000000 		call	_Unwind_Resume@PLT
 4226      00
 4227              	.LEHE114:
 4228              	.L219:
 4229 1ea2 F30F1EFA 		endbr64
  95:TestDeferredTestReporter.cpp **** }
 4230              		.loc 3 95 5 is_stmt 1
 4231 1ea6 4889C7   		movq	%rax, %rdi
 4232 1ea9 E8000000 		call	__cxa_begin_catch@PLT
 4232      00
 4233              	.LEHB115:
 4234 1eae E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4234      00
  95:TestDeferredTestReporter.cpp **** }
 4235              		.loc 3 95 5 is_stmt 0 discriminator 3
 4236 1eb3 488B18   		movq	(%rax), %rbx
 4237 1eb6 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 4237      00
  95:TestDeferredTestReporter.cpp **** }
 4238              		.loc 3 95 5 discriminator 11
 4239 1ebb 488B08   		movq	(%rax), %rcx
 4240 1ebe 488D45C0 		leaq	-64(%rbp), %rax
 4241 1ec2 BA5F0000 		movl	$95, %edx
 4241      00
 4242 1ec7 4889CE   		movq	%rcx, %rsi
 4243 1eca 4889C7   		movq	%rax, %rdi
 4244 1ecd E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4244      00
  95:TestDeferredTestReporter.cpp **** }
 4245              		.loc 3 95 5 discriminator 15
 4246 1ed2 488D45C0 		leaq	-64(%rbp), %rax
 4247 1ed6 488D1500 		leaq	.LC27(%rip), %rdx
 4247      000000
 4248 1edd 4889C6   		movq	%rax, %rsi
 4249 1ee0 4889DF   		movq	%rbx, %rdi
 4250 1ee3 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4250      00
 4251              	.LEHE115:
 4252              	.LEHB116:
  95:TestDeferredTestReporter.cpp **** }
 4253              		.loc 3 95 5 discriminator 17
 4254 1ee8 E8000000 		call	__cxa_end_catch@PLT
 4254      00
 4255              	.LEHE116:
 4256              		.loc 3 96 1 is_stmt 1 discriminator 17
 4257 1eed EB17     		jmp	.L204
 4258              	.L220:
 4259 1eef F30F1EFA 		endbr64
  95:TestDeferredTestReporter.cpp **** }
 4260              		.loc 3 95 5
 4261 1ef3 4889C3   		movq	%rax, %rbx
 4262 1ef6 E8000000 		call	__cxa_end_catch@PLT
 4262      00
 4263 1efb 4889D8   		movq	%rbx, %rax
 4264 1efe 4889C7   		movq	%rax, %rdi
 4265              	.LEHB117:
 4266 1f01 E8000000 		call	_Unwind_Resume@PLT
 4266      00
 4267              	.LEHE117:
 4268              	.L204:
 4269              		.loc 3 96 1
 4270 1f06 488B45E8 		movq	-24(%rbp), %rax
 4271 1f0a 64482B04 		subq	%fs:40, %rax
 4271      25280000 
 4271      00
 4272 1f13 7405     		je	.L214
 4273 1f15 E8000000 		call	__stack_chk_fail@PLT
 4273      00
 4274              	.L214:
 4275 1f1a 488B5DF8 		movq	-8(%rbp), %rbx
 4276 1f1e C9       		leave
 4277              		.cfi_def_cfa 7, 8
 4278 1f1f C3       		ret
 4279              		.cfi_endproc
 4280              	.LFE1479:
 4281              		.section	.gcc_except_table
 4282              		.align 4
 4283              	.LLSDA1479:
 4284 02bc FF       		.byte	0xff
 4285 02bd 9B       		.byte	0x9b
 4286 02be 51       		.uleb128 .LLSDATT1479-.LLSDATTD1479
 4287              	.LLSDATTD1479:
 4288 02bf 01       		.byte	0x1
 4289 02c0 46       		.uleb128 .LLSDACSE1479-.LLSDACSB1479
 4290              	.LLSDACSB1479:
 4291 02c1 4B       		.uleb128 .LEHB105-.LFB1479
 4292 02c2 5A       		.uleb128 .LEHE105-.LEHB105
 4293 02c3 00       		.uleb128 0
 4294 02c4 00       		.uleb128 0
 4295 02c5 A901     		.uleb128 .LEHB106-.LFB1479
 4296 02c7 52       		.uleb128 .LEHE106-.LEHB106
 4297 02c8 A603     		.uleb128 .L215-.LFB1479
 4298 02ca 01       		.uleb128 0x1
 4299 02cb FB01     		.uleb128 .LEHB107-.LFB1479
 4300 02cd 53       		.uleb128 .LEHE107-.LEHB107
 4301 02ce 8D04     		.uleb128 .L217-.LFB1479
 4302 02d0 01       		.uleb128 0x1
 4303 02d1 CE02     		.uleb128 .LEHB108-.LFB1479
 4304 02d3 53       		.uleb128 .LEHE108-.LEHB108
 4305 02d4 F404     		.uleb128 .L219-.LFB1479
 4306 02d6 01       		.uleb128 0x1
 4307 02d7 B203     		.uleb128 .LEHB109-.LFB1479
 4308 02d9 3A       		.uleb128 .LEHE109-.LEHB109
 4309 02da F603     		.uleb128 .L216-.LFB1479
 4310 02dc 00       		.uleb128 0
 4311 02dd EC03     		.uleb128 .LEHB110-.LFB1479
 4312 02df 05       		.uleb128 .LEHE110-.LEHB110
 4313 02e0 00       		.uleb128 0
 4314 02e1 00       		.uleb128 0
 4315 02e2 8804     		.uleb128 .LEHB111-.LFB1479
 4316 02e4 05       		.uleb128 .LEHE111-.LEHB111
 4317 02e5 00       		.uleb128 0
 4318 02e6 00       		.uleb128 0
 4319 02e7 9904     		.uleb128 .LEHB112-.LFB1479
 4320 02e9 3A       		.uleb128 .LEHE112-.LEHB112
 4321 02ea DD04     		.uleb128 .L218-.LFB1479
 4322 02ec 00       		.uleb128 0
 4323 02ed D304     		.uleb128 .LEHB113-.LFB1479
 4324 02ef 05       		.uleb128 .LEHE113-.LEHB113
 4325 02f0 00       		.uleb128 0
 4326 02f1 00       		.uleb128 0
 4327 02f2 EF04     		.uleb128 .LEHB114-.LFB1479
 4328 02f4 05       		.uleb128 .LEHE114-.LEHB114
 4329 02f5 00       		.uleb128 0
 4330 02f6 00       		.uleb128 0
 4331 02f7 8005     		.uleb128 .LEHB115-.LFB1479
 4332 02f9 3A       		.uleb128 .LEHE115-.LEHB115
 4333 02fa C105     		.uleb128 .L220-.LFB1479
 4334 02fc 00       		.uleb128 0
 4335 02fd BA05     		.uleb128 .LEHB116-.LFB1479
 4336 02ff 05       		.uleb128 .LEHE116-.LEHB116
 4337 0300 00       		.uleb128 0
 4338 0301 00       		.uleb128 0
 4339 0302 D305     		.uleb128 .LEHB117-.LFB1479
 4340 0304 05       		.uleb128 .LEHE117-.LEHB117
 4341 0305 00       		.uleb128 0
 4342 0306 00       		.uleb128 0
 4343              	.LLSDACSE1479:
 4344 0307 01       		.byte	0x1
 4345 0308 00       		.byte	0
 4346 0309 000000   		.align 4
 4347 030c 00000000 		.long	0
 4348              	
 4349              	.LLSDATT1479:
 4350              		.text
 4352              		.align 2
 4354              	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessag
 4355              	.LFB1481:
  97:TestDeferredTestReporter.cpp **** 
  98:TestDeferredTestReporter.cpp **** TEST_FIXTURE(DeferredTestReporterFixture, DeferredTestReporterTakesCopyOfFailureMessage)
 4356              		.loc 3 98 1
 4357              		.cfi_startproc
 4358 1f20 55       		pushq	%rbp
 4359              		.cfi_def_cfa_offset 16
 4360              		.cfi_offset 6, -16
 4361 1f21 4889E5   		movq	%rsp, %rbp
 4362              		.cfi_def_cfa_register 6
 4363 1f24 4883EC10 		subq	$16, %rsp
 4364 1f28 48897DF8 		movq	%rdi, -8(%rbp)
 4365 1f2c 488975F0 		movq	%rsi, -16(%rbp)
 4366              	.LBB69:
 4367              		.loc 3 98 1
 4368 1f30 488B45F8 		movq	-8(%rbp), %rax
 4369 1f34 4889C7   		movq	%rax, %rdi
 4370 1f37 E80CE1FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
 4370      FF
 4371 1f3c 488B45F8 		movq	-8(%rbp), %rax
 4372 1f40 488B55F0 		movq	-16(%rbp), %rdx
 4373 1f44 488990A8 		movq	%rdx, 168(%rax)
 4373      000000
 4374              	.LBE69:
 4375 1f4b 90       		nop
 4376 1f4c C9       		leave
 4377              		.cfi_def_cfa 7, 8
 4378 1f4d C3       		ret
 4379              		.cfi_endproc
 4380              	.LFE1481:
 4382              		.set	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 4383              		.section	.rodata
 4384              		.align 8
 4385              	.LC28:
 4386 0488 44656665 		.string	"DeferredTestReporterTakesCopyOfFailureMessage"
 4386      72726564 
 4386      54657374 
 4386      5265706F 
 4386      72746572 
 4387              		.text
 4388              		.align 2
 4390              	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMe
 4391              	.LFB1484:
 4392              		.loc 3 98 1
 4393              		.cfi_startproc
 4394 1f4e 55       		pushq	%rbp
 4395              		.cfi_def_cfa_offset 16
 4396              		.cfi_offset 6, -16
 4397 1f4f 4889E5   		movq	%rsp, %rbp
 4398              		.cfi_def_cfa_register 6
 4399 1f52 53       		pushq	%rbx
 4400 1f53 4883EC18 		subq	$24, %rsp
 4401              		.cfi_offset 3, -24
 4402 1f57 48897DE8 		movq	%rdi, -24(%rbp)
 4403              	.LBB70:
 4404              		.loc 3 98 1
 4405 1f5b 488B5DE8 		movq	-24(%rbp), %rbx
 4406 1f5f E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 4406      00
 4407 1f64 4889C2   		movq	%rax, %rdx
 4408 1f67 41B86200 		movl	$98, %r8d
 4408      0000
 4409 1f6d 488D0500 		leaq	.LC4(%rip), %rax
 4409      000000
 4410 1f74 4889C1   		movq	%rax, %rcx
 4411 1f77 488D0500 		leaq	.LC28(%rip), %rax
 4411      000000
 4412 1f7e 4889C6   		movq	%rax, %rsi
 4413 1f81 4889DF   		movq	%rbx, %rdi
 4414 1f84 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 4414      00
 4415 1f89 488D1500 		leaq	16+_ZTVN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopy
 4415      000000
 4416 1f90 488B45E8 		movq	-24(%rbp), %rax
 4417 1f94 488910   		movq	%rdx, (%rax)
 4418              	.LBE70:
 4419 1f97 90       		nop
 4420 1f98 488B5DF8 		movq	-8(%rbp), %rbx
 4421 1f9c C9       		leave
 4422              		.cfi_def_cfa 7, 8
 4423 1f9d C3       		ret
 4424              		.cfi_endproc
 4425              	.LFE1484:
 4427              		.set	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFai
 4428              		.local	_ZN8UnitTest12_GLOBAL__N_184testDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfF
 4429              		.comm	_ZN8UnitTest12_GLOBAL__N_184testDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFa
 4430              		.local	_ZN8UnitTest12_GLOBAL__N_177adderDeferredTestReporterFixtureDeferredTestReporterTakesCopyOf
 4431              		.comm	_ZN8UnitTest12_GLOBAL__N_177adderDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfF
 4432              		.align 2
 4434              	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessag
 4435              	.LFB1488:
 4436              		.loc 3 98 1
 4437              		.cfi_startproc
 4438 1f9e 55       		pushq	%rbp
 4439              		.cfi_def_cfa_offset 16
 4440              		.cfi_offset 6, -16
 4441 1f9f 4889E5   		movq	%rsp, %rbp
 4442              		.cfi_def_cfa_register 6
 4443 1fa2 4883EC10 		subq	$16, %rsp
 4444 1fa6 48897DF8 		movq	%rdi, -8(%rbp)
 4445              	.LBB71:
 4446              		.loc 3 98 1
 4447 1faa 488B45F8 		movq	-8(%rbp), %rax
 4448 1fae 4889C7   		movq	%rax, %rdi
 4449 1fb1 E88CE2FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
 4449      FF
 4450              	.LBE71:
 4451 1fb6 90       		nop
 4452 1fb7 C9       		leave
 4453              		.cfi_def_cfa 7, 8
 4454 1fb8 C3       		ret
 4455              		.cfi_endproc
 4456              	.LFE1488:
 4458              		.set	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 4459 1fb9 90       		.align 2
 4461              	_ZNK8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureM
 4462              	.LFB1486:
 4463              		.loc 3 98 1
 4464              		.cfi_startproc
 4465              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 4466              		.cfi_lsda 0x1b,.LLSDA1486
 4467 1fba F30F1EFA 		endbr64
 4468 1fbe 55       		pushq	%rbp
 4469              		.cfi_def_cfa_offset 16
 4470              		.cfi_offset 6, -16
 4471 1fbf 4889E5   		movq	%rsp, %rbp
 4472              		.cfi_def_cfa_register 6
 4473 1fc2 4155     		pushq	%r13
 4474 1fc4 4154     		pushq	%r12
 4475 1fc6 53       		pushq	%rbx
 4476 1fc7 4881ECF8 		subq	$504, %rsp
 4476      010000
 4477              		.cfi_offset 13, -24
 4478              		.cfi_offset 12, -32
 4479              		.cfi_offset 3, -40
 4480 1fce 4889BDF8 		movq	%rdi, -520(%rbp)
 4480      FDFFFF
 4481              		.loc 3 98 1
 4482 1fd5 64488B04 		movq	%fs:40, %rax
 4482      25280000 
 4482      00
 4483 1fde 488945D8 		movq	%rax, -40(%rbp)
 4484 1fe2 31C0     		xorl	%eax, %eax
 4485 1fe4 C6850FFE 		movb	$0, -497(%rbp)
 4485      FFFF00
 4486              	.LBB72:
 4487 1feb 488B85F8 		movq	-520(%rbp), %rax
 4487      FDFFFF
 4488 1ff2 488D5008 		leaq	8(%rax), %rdx
 4489 1ff6 488D8540 		leaq	-448(%rbp), %rax
 4489      FEFFFF
 4490 1ffd 4889D6   		movq	%rdx, %rsi
 4491 2000 4889C7   		movq	%rax, %rdi
 4492              	.LEHB118:
 4493 2003 E818FFFF 		call	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 4493      FF
 4494              	.LEHE118:
 4495              		.loc 3 98 1 is_stmt 0 discriminator 1
 4496 2008 C6850FFE 		movb	$1, -497(%rbp)
 4496      FFFF01
 4497 200f 488B85F8 		movq	-520(%rbp), %rax
 4497      FDFFFF
 4498 2016 488D5008 		leaq	8(%rax), %rdx
 4499 201a 488D8540 		leaq	-448(%rbp), %rax
 4499      FEFFFF
 4500 2021 4889D6   		movq	%rdx, %rsi
 4501 2024 4889C7   		movq	%rax, %rdi
 4502              	.LEHB119:
 4503 2027 E8361300 		call	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterT
 4503      00
 4504              	.LEHE119:
 4505              		.loc 3 98 1 discriminator 3
 4506 202c 488D8540 		leaq	-448(%rbp), %rax
 4506      FEFFFF
 4507 2033 4889C7   		movq	%rax, %rdi
 4508              	.LEHB120:
 4509 2036 E863FFFF 		call	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 4509      FF
 4510              	.LEHE120:
 4511              	.LBE72:
 4512              		.loc 3 98 1
 4513 203b E9840200 		jmp	.L224
 4513      00
 4514              	.L239:
 4515 2040 F30F1EFA 		endbr64
 4516              	.LBB73:
 4517 2044 4989C4   		movq	%rax, %r12
 4518 2047 4889D3   		movq	%rdx, %rbx
 4519 204a 488D8540 		leaq	-448(%rbp), %rax
 4519      FEFFFF
 4520 2051 4889C7   		movq	%rax, %rdi
 4521 2054 E845FFFF 		call	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 4521      FF
 4522 2059 4C89E0   		movq	%r12, %rax
 4523 205c 4889DA   		movq	%rbx, %rdx
 4524 205f EB04     		jmp	.L226
 4525              	.L238:
 4526 2061 F30F1EFA 		endbr64
 4527              	.L226:
 4528              	.LBE73:
 4529 2065 4883FA01 		cmpq	$1, %rdx
 4530 2069 740F     		je	.L227
 4531 206b 4883FA02 		cmpq	$2, %rdx
 4532 206f 0F84A700 		je	.L228
 4532      0000
 4533 2075 E94D0100 		jmp	.L244
 4533      00
 4534              	.L227:
 4535              	.LBB74:
 4536              		.loc 3 98 1 discriminator 4
 4537 207a 4889C7   		movq	%rax, %rdi
 4538 207d E8000000 		call	__cxa_begin_catch@PLT
 4538      00
 4539 2082 48898518 		movq	%rax, -488(%rbp)
 4539      FEFFFF
 4540              	.LEHB121:
 4541 2089 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4541      00
 4542 208e 488B18   		movq	(%rax), %rbx
 4543 2091 488B8518 		movq	-488(%rbp), %rax
 4543      FEFFFF
 4544 2098 488B00   		movq	(%rax), %rax
 4545 209b 4883C010 		addq	$16, %rax
 4546 209f 488B10   		movq	(%rax), %rdx
 4547 20a2 488B8518 		movq	-488(%rbp), %rax
 4547      FEFFFF
 4548 20a9 4889C7   		movq	%rax, %rdi
 4549 20ac FFD2     		call	*%rdx
 4550              	.LVL10:
 4551 20ae 4989C4   		movq	%rax, %r12
 4552 20b1 488B8518 		movq	-488(%rbp), %rax
 4552      FEFFFF
 4553 20b8 4889C7   		movq	%rax, %rdi
 4554 20bb E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 4554      00
 4555              		.loc 3 98 1 discriminator 8
 4556 20c0 4189C5   		movl	%eax, %r13d
 4557 20c3 488B8518 		movq	-488(%rbp), %rax
 4557      FEFFFF
 4558 20ca 4889C7   		movq	%rax, %rdi
 4559 20cd E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 4559      00
 4560              		.loc 3 98 1 discriminator 10
 4561 20d2 4889C1   		movq	%rax, %rcx
 4562 20d5 488B85F8 		movq	-520(%rbp), %rax
 4562      FDFFFF
 4563 20dc 488B5008 		movq	8(%rax), %rdx
 4564 20e0 488B85F8 		movq	-520(%rbp), %rax
 4564      FDFFFF
 4565 20e7 488B7010 		movq	16(%rax), %rsi
 4566 20eb 488D8520 		leaq	-480(%rbp), %rax
 4566      FEFFFF
 4567 20f2 4589E8   		movl	%r13d, %r8d
 4568 20f5 4889C7   		movq	%rax, %rdi
 4569 20f8 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 4569      00
 4570              		.loc 3 98 1 discriminator 14
 4571 20fd 488D8520 		leaq	-480(%rbp), %rax
 4571      FEFFFF
 4572 2104 4C89E2   		movq	%r12, %rdx
 4573 2107 4889C6   		movq	%rax, %rsi
 4574 210a 4889DF   		movq	%rbx, %rdi
 4575 210d E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4575      00
 4576              	.LEHE121:
 4577              		.loc 3 98 1 discriminator 16
 4578 2112 E8000000 		call	__cxa_end_catch@PLT
 4578      00
 4579              	.LBE74:
 4580 2117 E9A80100 		jmp	.L224
 4580      00
 4581              	.L228:
 4582              	.LBB75:
 4583              		.loc 3 98 1 discriminator 5
 4584 211c 4889C7   		movq	%rax, %rdi
 4585 211f E8000000 		call	__cxa_begin_catch@PLT
 4585      00
 4586 2124 48898510 		movq	%rax, -496(%rbp)
 4586      FEFFFF
 4587              	.LBB76:
 4588 212b 488D8540 		leaq	-448(%rbp), %rax
 4588      FEFFFF
 4589 2132 4889C7   		movq	%rax, %rdi
 4590              	.LEHB122:
 4591 2135 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 4591      00
 4592              	.LEHE122:
 4593              		.loc 3 98 1 discriminator 18
 4594 213a 488D8540 		leaq	-448(%rbp), %rax
 4594      FEFFFF
 4595 2141 488D1500 		leaq	.LC6(%rip), %rdx
 4595      000000
 4596 2148 4889D6   		movq	%rdx, %rsi
 4597 214b 4889C7   		movq	%rax, %rdi
 4598              	.LEHB123:
 4599 214e E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 4599      00
 4600 2153 4889C3   		movq	%rax, %rbx
 4601 2156 488B8510 		movq	-496(%rbp), %rax
 4601      FEFFFF
 4602 215d 488B00   		movq	(%rax), %rax
 4603 2160 4883C010 		addq	$16, %rax
 4604 2164 488B10   		movq	(%rax), %rdx
 4605 2167 488B8510 		movq	-496(%rbp), %rax
 4605      FEFFFF
 4606 216e 4889C7   		movq	%rax, %rdi
 4607 2171 FFD2     		call	*%rdx
 4608              	.LVL11:
 4609 2173 4889C6   		movq	%rax, %rsi
 4610 2176 4889DF   		movq	%rbx, %rdi
 4611 2179 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 4611      00
 4612              		.loc 3 98 1 discriminator 22
 4613 217e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4613      00
 4614 2183 488B18   		movq	(%rax), %rbx
 4615 2186 488D8540 		leaq	-448(%rbp), %rax
 4615      FEFFFF
 4616 218d 4889C7   		movq	%rax, %rdi
 4617 2190 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 4617      00
 4618              		.loc 3 98 1 discriminator 24
 4619 2195 4889C2   		movq	%rax, %rdx
 4620 2198 488B85F8 		movq	-520(%rbp), %rax
 4620      FDFFFF
 4621 219f 4883C008 		addq	$8, %rax
 4622 21a3 4889C6   		movq	%rax, %rsi
 4623 21a6 4889DF   		movq	%rbx, %rdi
 4624 21a9 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4624      00
 4625              	.LEHE123:
 4626              		.loc 3 98 1 discriminator 28
 4627 21ae 488D8540 		leaq	-448(%rbp), %rax
 4627      FEFFFF
 4628 21b5 4889C7   		movq	%rax, %rdi
 4629              	.LEHB124:
 4630 21b8 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4630      00
 4631              	.LEHE124:
 4632              	.LBE76:
 4633              		.loc 3 98 1 discriminator 29
 4634 21bd E8000000 		call	__cxa_end_catch@PLT
 4634      00
 4635              	.LBE75:
 4636 21c2 E9FD0000 		jmp	.L224
 4636      00
 4637              	.L244:
 4638              		.loc 3 98 1 discriminator 6
 4639 21c7 4889C7   		movq	%rax, %rdi
 4640 21ca E8000000 		call	__cxa_begin_catch@PLT
 4640      00
 4641 21cf 80BD0FFE 		cmpb	$0, -497(%rbp)
 4641      FFFF00
 4642 21d6 7445     		je	.L231
 4643              	.LEHB125:
 4644              		.loc 3 98 1 discriminator 31
 4645 21d8 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4645      00
 4646 21dd 488B18   		movq	(%rax), %rbx
 4647 21e0 488B85F8 		movq	-520(%rbp), %rax
 4647      FDFFFF
 4648 21e7 488D4808 		leaq	8(%rax), %rcx
 4649 21eb 488D8520 		leaq	-480(%rbp), %rax
 4649      FEFFFF
 4650 21f2 BA620000 		movl	$98, %edx
 4650      00
 4651 21f7 4889CE   		movq	%rcx, %rsi
 4652 21fa 4889C7   		movq	%rax, %rdi
 4653 21fd E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4653      00
 4654              		.loc 3 98 1 discriminator 36
 4655 2202 488D8520 		leaq	-480(%rbp), %rax
 4655      FEFFFF
 4656 2209 488D1500 		leaq	.LC7(%rip), %rdx
 4656      000000
 4657 2210 4889C6   		movq	%rax, %rsi
 4658 2213 4889DF   		movq	%rbx, %rdi
 4659 2216 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4659      00
 4660 221b EB43     		jmp	.L232
 4661              	.L231:
 4662              		.loc 3 98 1 discriminator 32
 4663 221d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4663      00
 4664 2222 488B18   		movq	(%rax), %rbx
 4665 2225 488B85F8 		movq	-520(%rbp), %rax
 4665      FDFFFF
 4666 222c 488D4808 		leaq	8(%rax), %rcx
 4667 2230 488D8520 		leaq	-480(%rbp), %rax
 4667      FEFFFF
 4668 2237 BA620000 		movl	$98, %edx
 4668      00
 4669 223c 4889CE   		movq	%rcx, %rsi
 4670 223f 4889C7   		movq	%rax, %rdi
 4671 2242 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4671      00
 4672              		.loc 3 98 1 discriminator 43
 4673 2247 488D8520 		leaq	-480(%rbp), %rax
 4673      FEFFFF
 4674 224e 488D1500 		leaq	.LC8(%rip), %rdx
 4674      000000
 4675 2255 4889C6   		movq	%rax, %rsi
 4676 2258 4889DF   		movq	%rbx, %rdi
 4677 225b E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4677      00
 4678              	.LEHE125:
 4679              	.L232:
 4680              	.LEHB126:
 4681              		.loc 3 98 1 discriminator 46
 4682 2260 E8000000 		call	__cxa_end_catch@PLT
 4682      00
 4683 2265 EB5D     		jmp	.L224
 4684              	.L240:
 4685 2267 F30F1EFA 		endbr64
 4686              	.LBB78:
 4687              		.loc 3 98 1
 4688 226b 4889C3   		movq	%rax, %rbx
 4689 226e E8000000 		call	__cxa_end_catch@PLT
 4689      00
 4690 2273 4889D8   		movq	%rbx, %rax
 4691 2276 4889C7   		movq	%rax, %rdi
 4692 2279 E8000000 		call	_Unwind_Resume@PLT
 4692      00
 4693              	.LEHE126:
 4694              	.L242:
 4695 227e F30F1EFA 		endbr64
 4696              	.LBE78:
 4697              	.LBB79:
 4698              	.LBB77:
 4699 2282 4889C3   		movq	%rax, %rbx
 4700 2285 488D8540 		leaq	-448(%rbp), %rax
 4700      FEFFFF
 4701 228c 4889C7   		movq	%rax, %rdi
 4702 228f E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4702      00
 4703 2294 EB07     		jmp	.L235
 4704              	.L241:
 4705 2296 F30F1EFA 		endbr64
 4706              	.LBE77:
 4707 229a 4889C3   		movq	%rax, %rbx
 4708              	.L235:
 4709 229d E8000000 		call	__cxa_end_catch@PLT
 4709      00
 4710 22a2 4889D8   		movq	%rbx, %rax
 4711 22a5 4889C7   		movq	%rax, %rdi
 4712              	.LEHB127:
 4713 22a8 E8000000 		call	_Unwind_Resume@PLT
 4713      00
 4714              	.LEHE127:
 4715              	.L243:
 4716 22ad F30F1EFA 		endbr64
 4717              	.LBE79:
 4718 22b1 4889C3   		movq	%rax, %rbx
 4719 22b4 E8000000 		call	__cxa_end_catch@PLT
 4719      00
 4720 22b9 4889D8   		movq	%rbx, %rax
 4721 22bc 4889C7   		movq	%rax, %rdi
 4722              	.LEHB128:
 4723 22bf E8000000 		call	_Unwind_Resume@PLT
 4723      00
 4724              	.LEHE128:
 4725              	.L224:
 4726 22c4 488B45D8 		movq	-40(%rbp), %rax
 4727 22c8 64482B04 		subq	%fs:40, %rax
 4727      25280000 
 4727      00
 4728 22d1 7405     		je	.L237
 4729 22d3 E8000000 		call	__stack_chk_fail@PLT
 4729      00
 4730              	.L237:
 4731 22d8 4881C4F8 		addq	$504, %rsp
 4731      010000
 4732 22df 5B       		popq	%rbx
 4733 22e0 415C     		popq	%r12
 4734 22e2 415D     		popq	%r13
 4735 22e4 5D       		popq	%rbp
 4736              		.cfi_def_cfa 7, 8
 4737 22e5 C3       		ret
 4738              		.cfi_endproc
 4739              	.LFE1486:
 4740              		.section	.gcc_except_table
 4741              		.align 4
 4742              	.LLSDA1486:
 4743 0310 FF       		.byte	0xff
 4744 0311 9B       		.byte	0x9b
 4745 0312 55       		.uleb128 .LLSDATT1486-.LLSDATTD1486
 4746              	.LLSDATTD1486:
 4747 0313 01       		.byte	0x1
 4748 0314 3E       		.uleb128 .LLSDACSE1486-.LLSDACSB1486
 4749              	.LLSDACSB1486:
 4750 0315 49       		.uleb128 .LEHB118-.LFB1486
 4751 0316 05       		.uleb128 .LEHE118-.LEHB118
 4752 0317 A701     		.uleb128 .L238-.LFB1486
 4753 0319 05       		.uleb128 0x5
 4754 031a 6D       		.uleb128 .LEHB119-.LFB1486
 4755 031b 05       		.uleb128 .LEHE119-.LEHB119
 4756 031c 8601     		.uleb128 .L239-.LFB1486
 4757 031e 07       		.uleb128 0x7
 4758 031f 7C       		.uleb128 .LEHB120-.LFB1486
 4759 0320 05       		.uleb128 .LEHE120-.LEHB120
 4760 0321 A701     		.uleb128 .L238-.LFB1486
 4761 0323 05       		.uleb128 0x5
 4762 0324 CF01     		.uleb128 .LEHB121-.LFB1486
 4763 0326 8901     		.uleb128 .LEHE121-.LEHB121
 4764 0328 AD05     		.uleb128 .L240-.LFB1486
 4765 032a 00       		.uleb128 0
 4766 032b FB02     		.uleb128 .LEHB122-.LFB1486
 4767 032d 05       		.uleb128 .LEHE122-.LEHB122
 4768 032e DC05     		.uleb128 .L241-.LFB1486
 4769 0330 00       		.uleb128 0
 4770 0331 9403     		.uleb128 .LEHB123-.LFB1486
 4771 0333 60       		.uleb128 .LEHE123-.LEHB123
 4772 0334 C405     		.uleb128 .L242-.LFB1486
 4773 0336 00       		.uleb128 0
 4774 0337 FE03     		.uleb128 .LEHB124-.LFB1486
 4775 0339 05       		.uleb128 .LEHE124-.LEHB124
 4776 033a DC05     		.uleb128 .L241-.LFB1486
 4777 033c 00       		.uleb128 0
 4778 033d 9E04     		.uleb128 .LEHB125-.LFB1486
 4779 033f 8801     		.uleb128 .LEHE125-.LEHB125
 4780 0341 F305     		.uleb128 .L243-.LFB1486
 4781 0343 00       		.uleb128 0
 4782 0344 A605     		.uleb128 .LEHB126-.LFB1486
 4783 0346 1E       		.uleb128 .LEHE126-.LEHB126
 4784 0347 00       		.uleb128 0
 4785 0348 00       		.uleb128 0
 4786 0349 EE05     		.uleb128 .LEHB127-.LFB1486
 4787 034b 05       		.uleb128 .LEHE127-.LEHB127
 4788 034c 00       		.uleb128 0
 4789 034d 00       		.uleb128 0
 4790 034e 8506     		.uleb128 .LEHB128-.LFB1486
 4791 0350 05       		.uleb128 .LEHE128-.LEHB128
 4792 0351 00       		.uleb128 0
 4793 0352 00       		.uleb128 0
 4794              	.LLSDACSE1486:
 4795 0353 03       		.byte	0x3
 4796 0354 00       		.byte	0
 4797 0355 02       		.byte	0x2
 4798 0356 7D       		.byte	0x7d
 4799 0357 01       		.byte	0x1
 4800 0358 7D       		.byte	0x7d
 4801 0359 00       		.byte	0
 4802 035a 7D       		.byte	0x7d
 4803 035b 00       		.align 4
 4804 035c 00000000 		.long	0
 4805              	
 4806 0360 00000000 		.long	DW.ref._ZTISt9exception-.
 4807 0364 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 4808              	.LLSDATT1486:
 4809              		.text
 4811              		.section	.rodata
 4812              	.LC29:
 4813 04b6 5265616C 		.string	"Real failure message"
 4813      20666169 
 4813      6C757265 
 4813      206D6573 
 4813      73616765 
 4814              	.LC30:
 4815 04cb 426F6775 		.string	"Bogus failure message"
 4815      73206661 
 4815      696C7572 
 4815      65206D65 
 4815      73736167 
 4816 04e1 00000000 		.align 8
 4816      000000
 4817              	.LC31:
 4818 04e8 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(goodStr, failure.second)"
 4818      6E646C65 
 4818      64206578 
 4818      63657074 
 4818      696F6E20 
 4819              		.text
 4820              		.align 2
 4822              	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessag
 4823              	.LFB1490:
  99:TestDeferredTestReporter.cpp **** {
 4824              		.loc 3 99 1 is_stmt 1
 4825              		.cfi_startproc
 4826              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 4827              		.cfi_lsda 0x1b,.LLSDA1490
 4828 22e6 F30F1EFA 		endbr64
 4829 22ea 55       		pushq	%rbp
 4830              		.cfi_def_cfa_offset 16
 4831              		.cfi_offset 6, -16
 4832 22eb 4889E5   		movq	%rsp, %rbp
 4833              		.cfi_def_cfa_register 6
 4834 22ee 53       		pushq	%rbx
 4835 22ef 4881ECE8 		subq	$232, %rsp
 4835      000000
 4836              		.cfi_offset 3, -24
 4837 22f6 4889BD18 		movq	%rdi, -232(%rbp)
 4837      FFFFFF
 4838              		.loc 3 99 1
 4839 22fd 64488B04 		movq	%fs:40, %rax
 4839      25280000 
 4839      00
 4840 2306 488945E8 		movq	%rax, -24(%rbp)
 4841 230a 31C0     		xorl	%eax, %eax
 100:TestDeferredTestReporter.cpp ****     reporter.ReportTestStart(details);
 4842              		.loc 3 100 29
 4843 230c 488B8518 		movq	-232(%rbp), %rax
 4843      FFFFFF
 4844              		.loc 3 100 30
 4845 2313 488B9518 		movq	-232(%rbp), %rdx
 4845      FFFFFF
 4846 231a 4881C288 		addq	$136, %rdx
 4846      000000
 4847              		.loc 3 100 29
 4848 2321 4889D6   		movq	%rdx, %rsi
 4849 2324 4889C7   		movq	%rax, %rdi
 4850              	.LEHB129:
 4851 2327 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE@PLT
 4851      00
 101:TestDeferredTestReporter.cpp **** 
 102:TestDeferredTestReporter.cpp ****     char failureMessage[128];
 103:TestDeferredTestReporter.cpp ****     char const* goodStr = "Real failure message";
 4852              		.loc 3 103 17
 4853 232c 488D0500 		leaq	.LC29(%rip), %rax
 4853      000000
 4854 2333 48898520 		movq	%rax, -224(%rbp)
 4854      FFFFFF
 104:TestDeferredTestReporter.cpp ****     char const* badStr = "Bogus failure message";
 4855              		.loc 3 104 17
 4856 233a 488D0500 		leaq	.LC30(%rip), %rax
 4856      000000
 4857 2341 48898528 		movq	%rax, -216(%rbp)
 4857      FFFFFF
 105:TestDeferredTestReporter.cpp ****     
 106:TestDeferredTestReporter.cpp **** 	using namespace std;
 107:TestDeferredTestReporter.cpp **** 
 108:TestDeferredTestReporter.cpp ****     strcpy(failureMessage, goodStr);
 4858              		.loc 3 108 11
 4859 2348 488B9520 		movq	-224(%rbp), %rdx
 4859      FFFFFF
 4860 234f 488D8560 		leaq	-160(%rbp), %rax
 4860      FFFFFF
 4861 2356 4889D6   		movq	%rdx, %rsi
 4862 2359 4889C7   		movq	%rax, %rdi
 4863 235c E8000000 		call	strcpy@PLT
 4863      00
 109:TestDeferredTestReporter.cpp ****     reporter.ReportFailure(details, failureMessage);
 4864              		.loc 3 109 27
 4865 2361 488B8518 		movq	-232(%rbp), %rax
 4865      FFFFFF
 4866              		.loc 3 109 28
 4867 2368 488B9518 		movq	-232(%rbp), %rdx
 4867      FFFFFF
 4868 236f 488D8A88 		leaq	136(%rdx), %rcx
 4868      000000
 4869              		.loc 3 109 27
 4870 2376 488D9560 		leaq	-160(%rbp), %rdx
 4870      FFFFFF
 4871 237d 4889CE   		movq	%rcx, %rsi
 4872 2380 4889C7   		movq	%rax, %rdi
 4873 2383 E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc@PLT
 4873      00
 110:TestDeferredTestReporter.cpp ****     strcpy(failureMessage, badStr);
 4874              		.loc 3 110 11
 4875 2388 488B9528 		movq	-216(%rbp), %rdx
 4875      FFFFFF
 4876 238f 488D8560 		leaq	-160(%rbp), %rax
 4876      FFFFFF
 4877 2396 4889D6   		movq	%rdx, %rsi
 4878 2399 4889C7   		movq	%rax, %rdi
 4879 239c E8000000 		call	strcpy@PLT
 4879      00
 111:TestDeferredTestReporter.cpp **** 
 112:TestDeferredTestReporter.cpp ****     DeferredTestResult const& result = reporter.GetResults().at(0);
 4880              		.loc 3 112 59
 4881 23a1 488B8518 		movq	-232(%rbp), %rax
 4881      FFFFFF
 4882 23a8 4889C7   		movq	%rax, %rdi
 4883 23ab E8000000 		call	_ZN8UnitTest20DeferredTestReporter10GetResultsEv@PLT
 4883      00
 4884              		.loc 3 112 64
 4885 23b0 BE000000 		movl	$0, %esi
 4885      00
 4886 23b5 4889C7   		movq	%rax, %rdi
 4887 23b8 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
 4887      00
 4888 23bd 48898530 		movq	%rax, -208(%rbp)
 4888      FFFFFF
 113:TestDeferredTestReporter.cpp ****     DeferredTestResult::Failure const& failure = result.failures.at(0);
 4889              		.loc 3 113 68
 4890 23c4 488B8530 		movq	-208(%rbp), %rax
 4890      FFFFFF
 4891 23cb 4883C060 		addq	$96, %rax
 4892 23cf BE000000 		movl	$0, %esi
 4892      00
 4893 23d4 4889C7   		movq	%rax, %rdi
 4894 23d7 E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE2atEm
 4894      00
 4895              	.LEHE129:
 4896 23dc 48898538 		movq	%rax, -200(%rbp)
 4896      FFFFFF
 4897              	.LEHB130:
 114:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(goodStr, failure.second);
 4898              		.loc 3 114 5
 4899 23e3 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 4899      00
 4900 23e8 488B08   		movq	(%rax), %rcx
 4901 23eb 488D8540 		leaq	-192(%rbp), %rax
 4901      FFFFFF
 4902 23f2 BA720000 		movl	$114, %edx
 4902      00
 4903 23f7 4889CE   		movq	%rcx, %rsi
 4904 23fa 4889C7   		movq	%rax, %rdi
 4905 23fd E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4905      00
 4906              		.loc 3 114 5 is_stmt 0 discriminator 4
 4907 2402 488B8538 		movq	-200(%rbp), %rax
 4907      FFFFFF
 4908 2409 488D5808 		leaq	8(%rax), %rbx
 4909 240d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4909      00
 4910 2412 488B00   		movq	(%rax), %rax
 4911 2415 488D9540 		leaq	-192(%rbp), %rdx
 4911      FFFFFF
 4912 241c 488DB520 		leaq	-224(%rbp), %rsi
 4912      FFFFFF
 4913 2423 4889D1   		movq	%rdx, %rcx
 4914 2426 4889DA   		movq	%rbx, %rdx
 4915 2429 4889C7   		movq	%rax, %rdi
 4916 242c E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 4916      00
 4917              	.LEHE130:
 115:TestDeferredTestReporter.cpp **** }
 4918              		.loc 3 115 1 is_stmt 1
 4919 2431 EB6A     		jmp	.L245
 4920              	.L250:
 4921 2433 F30F1EFA 		endbr64
 114:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(goodStr, failure.second);
 4922              		.loc 3 114 5
 4923 2437 4889C7   		movq	%rax, %rdi
 4924 243a E8000000 		call	__cxa_begin_catch@PLT
 4924      00
 4925              	.LEHB131:
 4926 243f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4926      00
 114:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(goodStr, failure.second);
 4927              		.loc 3 114 5 is_stmt 0 discriminator 3
 4928 2444 488B18   		movq	(%rax), %rbx
 4929 2447 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 4929      00
 114:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(goodStr, failure.second);
 4930              		.loc 3 114 5 discriminator 11
 4931 244c 488B08   		movq	(%rax), %rcx
 4932 244f 488D8540 		leaq	-192(%rbp), %rax
 4932      FFFFFF
 4933 2456 BA720000 		movl	$114, %edx
 4933      00
 4934 245b 4889CE   		movq	%rcx, %rsi
 4935 245e 4889C7   		movq	%rax, %rdi
 4936 2461 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4936      00
 114:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(goodStr, failure.second);
 4937              		.loc 3 114 5 discriminator 15
 4938 2466 488D8540 		leaq	-192(%rbp), %rax
 4938      FFFFFF
 4939 246d 488D1500 		leaq	.LC31(%rip), %rdx
 4939      000000
 4940 2474 4889C6   		movq	%rax, %rsi
 4941 2477 4889DF   		movq	%rbx, %rdi
 4942 247a E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4942      00
 4943              	.LEHE131:
 4944              	.LEHB132:
 114:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(goodStr, failure.second);
 4945              		.loc 3 114 5 discriminator 17
 4946 247f E8000000 		call	__cxa_end_catch@PLT
 4946      00
 4947              	.LEHE132:
 4948              		.loc 3 115 1 is_stmt 1 discriminator 17
 4949 2484 EB17     		jmp	.L245
 4950              	.L251:
 4951 2486 F30F1EFA 		endbr64
 114:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(goodStr, failure.second);
 4952              		.loc 3 114 5
 4953 248a 4889C3   		movq	%rax, %rbx
 4954 248d E8000000 		call	__cxa_end_catch@PLT
 4954      00
 4955 2492 4889D8   		movq	%rbx, %rax
 4956 2495 4889C7   		movq	%rax, %rdi
 4957              	.LEHB133:
 4958 2498 E8000000 		call	_Unwind_Resume@PLT
 4958      00
 4959              	.LEHE133:
 4960              	.L245:
 4961              		.loc 3 115 1
 4962 249d 488B45E8 		movq	-24(%rbp), %rax
 4963 24a1 64482B04 		subq	%fs:40, %rax
 4963      25280000 
 4963      00
 4964 24aa 7405     		je	.L249
 4965 24ac E8000000 		call	__stack_chk_fail@PLT
 4965      00
 4966              	.L249:
 4967 24b1 488B5DF8 		movq	-8(%rbp), %rbx
 4968 24b5 C9       		leave
 4969              		.cfi_def_cfa 7, 8
 4970 24b6 C3       		ret
 4971              		.cfi_endproc
 4972              	.LFE1490:
 4973              		.section	.gcc_except_table
 4974              		.align 4
 4975              	.LLSDA1490:
 4976 0368 FF       		.byte	0xff
 4977 0369 9B       		.byte	0x9b
 4978 036a 25       		.uleb128 .LLSDATT1490-.LLSDATTD1490
 4979              	.LLSDATTD1490:
 4980 036b 01       		.byte	0x1
 4981 036c 1B       		.uleb128 .LLSDACSE1490-.LLSDACSB1490
 4982              	.LLSDACSB1490:
 4983 036d 41       		.uleb128 .LEHB129-.LFB1490
 4984 036e B501     		.uleb128 .LEHE129-.LEHB129
 4985 0370 00       		.uleb128 0
 4986 0371 00       		.uleb128 0
 4987 0372 FD01     		.uleb128 .LEHB130-.LFB1490
 4988 0374 4E       		.uleb128 .LEHE130-.LEHB130
 4989 0375 CD02     		.uleb128 .L250-.LFB1490
 4990 0377 01       		.uleb128 0x1
 4991 0378 D902     		.uleb128 .LEHB131-.LFB1490
 4992 037a 40       		.uleb128 .LEHE131-.LEHB131
 4993 037b A003     		.uleb128 .L251-.LFB1490
 4994 037d 00       		.uleb128 0
 4995 037e 9903     		.uleb128 .LEHB132-.LFB1490
 4996 0380 05       		.uleb128 .LEHE132-.LEHB132
 4997 0381 00       		.uleb128 0
 4998 0382 00       		.uleb128 0
 4999 0383 B203     		.uleb128 .LEHB133-.LFB1490
 5000 0385 05       		.uleb128 .LEHE133-.LEHB133
 5001 0386 00       		.uleb128 0
 5002 0387 00       		.uleb128 0
 5003              	.LLSDACSE1490:
 5004 0388 01       		.byte	0x1
 5005 0389 00       		.byte	0
 5006 038a 0000     		.align 4
 5007 038c 00000000 		.long	0
 5008              	
 5009              	.LLSDATT1490:
 5010              		.text
 5012              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev,"axG",@progbits,_ZNSt6vect
 5013              		.align 2
 5014              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev
 5016              	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev:
 5017              	.LFB1520:
 5018              		.file 6 "/usr/include/c++/11/bits/stl_vector.h"
   1:/usr/include/c++/11/bits/stl_vector.h **** // Vector implementation -*- C++ -*-
   2:/usr/include/c++/11/bits/stl_vector.h **** 
   3:/usr/include/c++/11/bits/stl_vector.h **** // Copyright (C) 2001-2021 Free Software Foundation, Inc.
   4:/usr/include/c++/11/bits/stl_vector.h **** //
   5:/usr/include/c++/11/bits/stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/11/bits/stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/11/bits/stl_vector.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/11/bits/stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/11/bits/stl_vector.h **** // any later version.
  10:/usr/include/c++/11/bits/stl_vector.h **** 
  11:/usr/include/c++/11/bits/stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/11/bits/stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/11/bits/stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/11/bits/stl_vector.h **** // GNU General Public License for more details.
  15:/usr/include/c++/11/bits/stl_vector.h **** 
  16:/usr/include/c++/11/bits/stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/11/bits/stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/11/bits/stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/11/bits/stl_vector.h **** 
  20:/usr/include/c++/11/bits/stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/11/bits/stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/11/bits/stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/11/bits/stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/11/bits/stl_vector.h **** 
  25:/usr/include/c++/11/bits/stl_vector.h **** /*
  26:/usr/include/c++/11/bits/stl_vector.h ****  *
  27:/usr/include/c++/11/bits/stl_vector.h ****  * Copyright (c) 1994
  28:/usr/include/c++/11/bits/stl_vector.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/11/bits/stl_vector.h ****  *
  30:/usr/include/c++/11/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/11/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/11/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/11/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/11/bits/stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/11/bits/stl_vector.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/11/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/11/bits/stl_vector.h ****  *
  38:/usr/include/c++/11/bits/stl_vector.h ****  *
  39:/usr/include/c++/11/bits/stl_vector.h ****  * Copyright (c) 1996
  40:/usr/include/c++/11/bits/stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/11/bits/stl_vector.h ****  *
  42:/usr/include/c++/11/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/11/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/11/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/11/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/11/bits/stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/11/bits/stl_vector.h ****  * representations about the suitability of this  software for any
  48:/usr/include/c++/11/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/11/bits/stl_vector.h ****  */
  50:/usr/include/c++/11/bits/stl_vector.h **** 
  51:/usr/include/c++/11/bits/stl_vector.h **** /** @file bits/stl_vector.h
  52:/usr/include/c++/11/bits/stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/11/bits/stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:/usr/include/c++/11/bits/stl_vector.h ****  */
  55:/usr/include/c++/11/bits/stl_vector.h **** 
  56:/usr/include/c++/11/bits/stl_vector.h **** #ifndef _STL_VECTOR_H
  57:/usr/include/c++/11/bits/stl_vector.h **** #define _STL_VECTOR_H 1
  58:/usr/include/c++/11/bits/stl_vector.h **** 
  59:/usr/include/c++/11/bits/stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:/usr/include/c++/11/bits/stl_vector.h **** #include <bits/functexcept.h>
  61:/usr/include/c++/11/bits/stl_vector.h **** #include <bits/concept_check.h>
  62:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
  63:/usr/include/c++/11/bits/stl_vector.h **** #include <initializer_list>
  64:/usr/include/c++/11/bits/stl_vector.h **** #endif
  65:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus > 201703L
  66:/usr/include/c++/11/bits/stl_vector.h **** # include <compare>
  67:/usr/include/c++/11/bits/stl_vector.h **** #endif
  68:/usr/include/c++/11/bits/stl_vector.h **** 
  69:/usr/include/c++/11/bits/stl_vector.h **** #include <debug/assertions.h>
  70:/usr/include/c++/11/bits/stl_vector.h **** 
  71:/usr/include/c++/11/bits/stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
  72:/usr/include/c++/11/bits/stl_vector.h **** extern "C" void
  73:/usr/include/c++/11/bits/stl_vector.h **** __sanitizer_annotate_contiguous_container(const void*, const void*,
  74:/usr/include/c++/11/bits/stl_vector.h **** 					  const void*, const void*);
  75:/usr/include/c++/11/bits/stl_vector.h **** #endif
  76:/usr/include/c++/11/bits/stl_vector.h **** 
  77:/usr/include/c++/11/bits/stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  78:/usr/include/c++/11/bits/stl_vector.h **** {
  79:/usr/include/c++/11/bits/stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  80:/usr/include/c++/11/bits/stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  81:/usr/include/c++/11/bits/stl_vector.h **** 
  82:/usr/include/c++/11/bits/stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  83:/usr/include/c++/11/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc>
  84:/usr/include/c++/11/bits/stl_vector.h ****     struct _Vector_base
  85:/usr/include/c++/11/bits/stl_vector.h ****     {
  86:/usr/include/c++/11/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  87:/usr/include/c++/11/bits/stl_vector.h **** 	rebind<_Tp>::other _Tp_alloc_type;
  88:/usr/include/c++/11/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  89:/usr/include/c++/11/bits/stl_vector.h ****        	pointer;
  90:/usr/include/c++/11/bits/stl_vector.h **** 
  91:/usr/include/c++/11/bits/stl_vector.h ****       struct _Vector_impl_data
  92:/usr/include/c++/11/bits/stl_vector.h ****       {
  93:/usr/include/c++/11/bits/stl_vector.h **** 	pointer _M_start;
  94:/usr/include/c++/11/bits/stl_vector.h **** 	pointer _M_finish;
  95:/usr/include/c++/11/bits/stl_vector.h **** 	pointer _M_end_of_storage;
  96:/usr/include/c++/11/bits/stl_vector.h **** 
  97:/usr/include/c++/11/bits/stl_vector.h **** 	_Vector_impl_data() _GLIBCXX_NOEXCEPT
  98:/usr/include/c++/11/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
  99:/usr/include/c++/11/bits/stl_vector.h **** 	{ }
 100:/usr/include/c++/11/bits/stl_vector.h **** 
 101:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
 102:/usr/include/c++/11/bits/stl_vector.h **** 	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
 103:/usr/include/c++/11/bits/stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 104:/usr/include/c++/11/bits/stl_vector.h **** 	  _M_end_of_storage(__x._M_end_of_storage)
 105:/usr/include/c++/11/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 106:/usr/include/c++/11/bits/stl_vector.h **** #endif
 107:/usr/include/c++/11/bits/stl_vector.h **** 
 108:/usr/include/c++/11/bits/stl_vector.h **** 	void
 109:/usr/include/c++/11/bits/stl_vector.h **** 	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
 110:/usr/include/c++/11/bits/stl_vector.h **** 	{
 111:/usr/include/c++/11/bits/stl_vector.h **** 	  _M_start = __x._M_start;
 112:/usr/include/c++/11/bits/stl_vector.h **** 	  _M_finish = __x._M_finish;
 113:/usr/include/c++/11/bits/stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 114:/usr/include/c++/11/bits/stl_vector.h **** 	}
 115:/usr/include/c++/11/bits/stl_vector.h **** 
 116:/usr/include/c++/11/bits/stl_vector.h **** 	void
 117:/usr/include/c++/11/bits/stl_vector.h **** 	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
 118:/usr/include/c++/11/bits/stl_vector.h **** 	{
 119:/usr/include/c++/11/bits/stl_vector.h **** 	  // Do not use std::swap(_M_start, __x._M_start), etc as it loses
 120:/usr/include/c++/11/bits/stl_vector.h **** 	  // information used by TBAA.
 121:/usr/include/c++/11/bits/stl_vector.h **** 	  _Vector_impl_data __tmp;
 122:/usr/include/c++/11/bits/stl_vector.h **** 	  __tmp._M_copy_data(*this);
 123:/usr/include/c++/11/bits/stl_vector.h **** 	  _M_copy_data(__x);
 124:/usr/include/c++/11/bits/stl_vector.h **** 	  __x._M_copy_data(__tmp);
 125:/usr/include/c++/11/bits/stl_vector.h **** 	}
 126:/usr/include/c++/11/bits/stl_vector.h ****       };
 127:/usr/include/c++/11/bits/stl_vector.h **** 
 128:/usr/include/c++/11/bits/stl_vector.h ****       struct _Vector_impl
 129:/usr/include/c++/11/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 130:/usr/include/c++/11/bits/stl_vector.h ****       {
 131:/usr/include/c++/11/bits/stl_vector.h **** 	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 132:/usr/include/c++/11/bits/stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 133:/usr/include/c++/11/bits/stl_vector.h **** 	: _Tp_alloc_type()
 134:/usr/include/c++/11/bits/stl_vector.h **** 	{ }
 135:/usr/include/c++/11/bits/stl_vector.h **** 
 136:/usr/include/c++/11/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 137:/usr/include/c++/11/bits/stl_vector.h **** 	: _Tp_alloc_type(__a)
 138:/usr/include/c++/11/bits/stl_vector.h **** 	{ }
 139:/usr/include/c++/11/bits/stl_vector.h **** 
 140:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
 141:/usr/include/c++/11/bits/stl_vector.h **** 	// Not defaulted, to enforce noexcept(true) even when
 142:/usr/include/c++/11/bits/stl_vector.h **** 	// !is_nothrow_move_constructible<_Tp_alloc_type>.
 143:/usr/include/c++/11/bits/stl_vector.h **** 	_Vector_impl(_Vector_impl&& __x) noexcept
 144:/usr/include/c++/11/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 145:/usr/include/c++/11/bits/stl_vector.h **** 	{ }
 146:/usr/include/c++/11/bits/stl_vector.h **** 
 147:/usr/include/c++/11/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
 148:/usr/include/c++/11/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__a))
 149:/usr/include/c++/11/bits/stl_vector.h **** 	{ }
 150:/usr/include/c++/11/bits/stl_vector.h **** 
 151:/usr/include/c++/11/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a, _Vector_impl&& __rv) noexcept
 152:/usr/include/c++/11/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)), _Vector_impl_data(std::move(__rv))
 153:/usr/include/c++/11/bits/stl_vector.h **** 	{ }
 154:/usr/include/c++/11/bits/stl_vector.h **** #endif
 155:/usr/include/c++/11/bits/stl_vector.h **** 
 156:/usr/include/c++/11/bits/stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 157:/usr/include/c++/11/bits/stl_vector.h **** 	template<typename = _Tp_alloc_type>
 158:/usr/include/c++/11/bits/stl_vector.h **** 	  struct _Asan
 159:/usr/include/c++/11/bits/stl_vector.h **** 	  {
 160:/usr/include/c++/11/bits/stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 161:/usr/include/c++/11/bits/stl_vector.h **** 	      ::size_type size_type;
 162:/usr/include/c++/11/bits/stl_vector.h **** 
 163:/usr/include/c++/11/bits/stl_vector.h **** 	    static void _S_shrink(_Vector_impl&, size_type) { }
 164:/usr/include/c++/11/bits/stl_vector.h **** 	    static void _S_on_dealloc(_Vector_impl&) { }
 165:/usr/include/c++/11/bits/stl_vector.h **** 
 166:/usr/include/c++/11/bits/stl_vector.h **** 	    typedef _Vector_impl& _Reinit;
 167:/usr/include/c++/11/bits/stl_vector.h **** 
 168:/usr/include/c++/11/bits/stl_vector.h **** 	    struct _Grow
 169:/usr/include/c++/11/bits/stl_vector.h **** 	    {
 170:/usr/include/c++/11/bits/stl_vector.h **** 	      _Grow(_Vector_impl&, size_type) { }
 171:/usr/include/c++/11/bits/stl_vector.h **** 	      void _M_grew(size_type) { }
 172:/usr/include/c++/11/bits/stl_vector.h **** 	    };
 173:/usr/include/c++/11/bits/stl_vector.h **** 	  };
 174:/usr/include/c++/11/bits/stl_vector.h **** 
 175:/usr/include/c++/11/bits/stl_vector.h **** 	// Enable ASan annotations for memory obtained from std::allocator.
 176:/usr/include/c++/11/bits/stl_vector.h **** 	template<typename _Up>
 177:/usr/include/c++/11/bits/stl_vector.h **** 	  struct _Asan<allocator<_Up> >
 178:/usr/include/c++/11/bits/stl_vector.h **** 	  {
 179:/usr/include/c++/11/bits/stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 180:/usr/include/c++/11/bits/stl_vector.h **** 	      ::size_type size_type;
 181:/usr/include/c++/11/bits/stl_vector.h **** 
 182:/usr/include/c++/11/bits/stl_vector.h **** 	    // Adjust ASan annotation for [_M_start, _M_end_of_storage) to
 183:/usr/include/c++/11/bits/stl_vector.h **** 	    // mark end of valid region as __curr instead of __prev.
 184:/usr/include/c++/11/bits/stl_vector.h **** 	    static void
 185:/usr/include/c++/11/bits/stl_vector.h **** 	    _S_adjust(_Vector_impl& __impl, pointer __prev, pointer __curr)
 186:/usr/include/c++/11/bits/stl_vector.h **** 	    {
 187:/usr/include/c++/11/bits/stl_vector.h **** 	      __sanitizer_annotate_contiguous_container(__impl._M_start,
 188:/usr/include/c++/11/bits/stl_vector.h **** 		  __impl._M_end_of_storage, __prev, __curr);
 189:/usr/include/c++/11/bits/stl_vector.h **** 	    }
 190:/usr/include/c++/11/bits/stl_vector.h **** 
 191:/usr/include/c++/11/bits/stl_vector.h **** 	    static void
 192:/usr/include/c++/11/bits/stl_vector.h **** 	    _S_grow(_Vector_impl& __impl, size_type __n)
 193:/usr/include/c++/11/bits/stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish, __impl._M_finish + __n); }
 194:/usr/include/c++/11/bits/stl_vector.h **** 
 195:/usr/include/c++/11/bits/stl_vector.h **** 	    static void
 196:/usr/include/c++/11/bits/stl_vector.h **** 	    _S_shrink(_Vector_impl& __impl, size_type __n)
 197:/usr/include/c++/11/bits/stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish + __n, __impl._M_finish); }
 198:/usr/include/c++/11/bits/stl_vector.h **** 
 199:/usr/include/c++/11/bits/stl_vector.h **** 	    static void
 200:/usr/include/c++/11/bits/stl_vector.h **** 	    _S_on_dealloc(_Vector_impl& __impl)
 201:/usr/include/c++/11/bits/stl_vector.h **** 	    {
 202:/usr/include/c++/11/bits/stl_vector.h **** 	      if (__impl._M_start)
 203:/usr/include/c++/11/bits/stl_vector.h **** 		_S_adjust(__impl, __impl._M_finish, __impl._M_end_of_storage);
 204:/usr/include/c++/11/bits/stl_vector.h **** 	    }
 205:/usr/include/c++/11/bits/stl_vector.h **** 
 206:/usr/include/c++/11/bits/stl_vector.h **** 	    // Used on reallocation to tell ASan unused capacity is invalid.
 207:/usr/include/c++/11/bits/stl_vector.h **** 	    struct _Reinit
 208:/usr/include/c++/11/bits/stl_vector.h **** 	    {
 209:/usr/include/c++/11/bits/stl_vector.h **** 	      explicit _Reinit(_Vector_impl& __impl) : _M_impl(__impl)
 210:/usr/include/c++/11/bits/stl_vector.h **** 	      {
 211:/usr/include/c++/11/bits/stl_vector.h **** 		// Mark unused capacity as valid again before deallocating it.
 212:/usr/include/c++/11/bits/stl_vector.h **** 		_S_on_dealloc(_M_impl);
 213:/usr/include/c++/11/bits/stl_vector.h **** 	      }
 214:/usr/include/c++/11/bits/stl_vector.h **** 
 215:/usr/include/c++/11/bits/stl_vector.h **** 	      ~_Reinit()
 216:/usr/include/c++/11/bits/stl_vector.h **** 	      {
 217:/usr/include/c++/11/bits/stl_vector.h **** 		// Mark unused capacity as invalid after reallocation.
 218:/usr/include/c++/11/bits/stl_vector.h **** 		if (_M_impl._M_start)
 219:/usr/include/c++/11/bits/stl_vector.h **** 		  _S_adjust(_M_impl, _M_impl._M_end_of_storage,
 220:/usr/include/c++/11/bits/stl_vector.h **** 			    _M_impl._M_finish);
 221:/usr/include/c++/11/bits/stl_vector.h **** 	      }
 222:/usr/include/c++/11/bits/stl_vector.h **** 
 223:/usr/include/c++/11/bits/stl_vector.h **** 	      _Vector_impl& _M_impl;
 224:/usr/include/c++/11/bits/stl_vector.h **** 
 225:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
 226:/usr/include/c++/11/bits/stl_vector.h **** 	      _Reinit(const _Reinit&) = delete;
 227:/usr/include/c++/11/bits/stl_vector.h **** 	      _Reinit& operator=(const _Reinit&) = delete;
 228:/usr/include/c++/11/bits/stl_vector.h **** #endif
 229:/usr/include/c++/11/bits/stl_vector.h **** 	    };
 230:/usr/include/c++/11/bits/stl_vector.h **** 
 231:/usr/include/c++/11/bits/stl_vector.h **** 	    // Tell ASan when unused capacity is initialized to be valid.
 232:/usr/include/c++/11/bits/stl_vector.h **** 	    struct _Grow
 233:/usr/include/c++/11/bits/stl_vector.h **** 	    {
 234:/usr/include/c++/11/bits/stl_vector.h **** 	      _Grow(_Vector_impl& __impl, size_type __n)
 235:/usr/include/c++/11/bits/stl_vector.h **** 	      : _M_impl(__impl), _M_n(__n)
 236:/usr/include/c++/11/bits/stl_vector.h **** 	      { _S_grow(_M_impl, __n); }
 237:/usr/include/c++/11/bits/stl_vector.h **** 
 238:/usr/include/c++/11/bits/stl_vector.h **** 	      ~_Grow() { if (_M_n) _S_shrink(_M_impl, _M_n); }
 239:/usr/include/c++/11/bits/stl_vector.h **** 
 240:/usr/include/c++/11/bits/stl_vector.h **** 	      void _M_grew(size_type __n) { _M_n -= __n; }
 241:/usr/include/c++/11/bits/stl_vector.h **** 
 242:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
 243:/usr/include/c++/11/bits/stl_vector.h **** 	      _Grow(const _Grow&) = delete;
 244:/usr/include/c++/11/bits/stl_vector.h **** 	      _Grow& operator=(const _Grow&) = delete;
 245:/usr/include/c++/11/bits/stl_vector.h **** #endif
 246:/usr/include/c++/11/bits/stl_vector.h **** 	    private:
 247:/usr/include/c++/11/bits/stl_vector.h **** 	      _Vector_impl& _M_impl;
 248:/usr/include/c++/11/bits/stl_vector.h **** 	      size_type _M_n;
 249:/usr/include/c++/11/bits/stl_vector.h **** 	    };
 250:/usr/include/c++/11/bits/stl_vector.h **** 	  };
 251:/usr/include/c++/11/bits/stl_vector.h **** 
 252:/usr/include/c++/11/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT \
 253:/usr/include/c++/11/bits/stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Reinit const \
 254:/usr/include/c++/11/bits/stl_vector.h **** 	__attribute__((__unused__)) __reinit_guard(this->_M_impl)
 255:/usr/include/c++/11/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n) \
 256:/usr/include/c++/11/bits/stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Grow \
 257:/usr/include/c++/11/bits/stl_vector.h **** 	__attribute__((__unused__)) __grow_guard(this->_M_impl, (n))
 258:/usr/include/c++/11/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n) __grow_guard._M_grew(n)
 259:/usr/include/c++/11/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n) \
 260:/usr/include/c++/11/bits/stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_shrink(this->_M_impl, n)
 261:/usr/include/c++/11/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC \
 262:/usr/include/c++/11/bits/stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_on_dealloc(this->_M_impl)
 263:/usr/include/c++/11/bits/stl_vector.h **** #else // ! (_GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR)
 264:/usr/include/c++/11/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT
 265:/usr/include/c++/11/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n)
 266:/usr/include/c++/11/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n)
 267:/usr/include/c++/11/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n)
 268:/usr/include/c++/11/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC
 269:/usr/include/c++/11/bits/stl_vector.h **** #endif // _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 270:/usr/include/c++/11/bits/stl_vector.h ****       };
 271:/usr/include/c++/11/bits/stl_vector.h **** 
 272:/usr/include/c++/11/bits/stl_vector.h ****     public:
 273:/usr/include/c++/11/bits/stl_vector.h ****       typedef _Alloc allocator_type;
 274:/usr/include/c++/11/bits/stl_vector.h **** 
 275:/usr/include/c++/11/bits/stl_vector.h ****       _Tp_alloc_type&
 276:/usr/include/c++/11/bits/stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 277:/usr/include/c++/11/bits/stl_vector.h ****       { return this->_M_impl; }
 278:/usr/include/c++/11/bits/stl_vector.h **** 
 279:/usr/include/c++/11/bits/stl_vector.h ****       const _Tp_alloc_type&
 280:/usr/include/c++/11/bits/stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 281:/usr/include/c++/11/bits/stl_vector.h ****       { return this->_M_impl; }
 282:/usr/include/c++/11/bits/stl_vector.h **** 
 283:/usr/include/c++/11/bits/stl_vector.h ****       allocator_type
 284:/usr/include/c++/11/bits/stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 285:/usr/include/c++/11/bits/stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 286:/usr/include/c++/11/bits/stl_vector.h **** 
 287:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
 288:/usr/include/c++/11/bits/stl_vector.h ****       _Vector_base() = default;
 289:/usr/include/c++/11/bits/stl_vector.h **** #else
 290:/usr/include/c++/11/bits/stl_vector.h ****       _Vector_base() { }
 291:/usr/include/c++/11/bits/stl_vector.h **** #endif
 292:/usr/include/c++/11/bits/stl_vector.h **** 
 293:/usr/include/c++/11/bits/stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 294:/usr/include/c++/11/bits/stl_vector.h ****       : _M_impl(__a) { }
 295:/usr/include/c++/11/bits/stl_vector.h **** 
 296:/usr/include/c++/11/bits/stl_vector.h ****       // Kept for ABI compatibility.
 297:/usr/include/c++/11/bits/stl_vector.h **** #if !_GLIBCXX_INLINE_VERSION
 298:/usr/include/c++/11/bits/stl_vector.h ****       _Vector_base(size_t __n)
 299:/usr/include/c++/11/bits/stl_vector.h ****       : _M_impl()
 300:/usr/include/c++/11/bits/stl_vector.h ****       { _M_create_storage(__n); }
 301:/usr/include/c++/11/bits/stl_vector.h **** #endif
 302:/usr/include/c++/11/bits/stl_vector.h **** 
 303:/usr/include/c++/11/bits/stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 304:/usr/include/c++/11/bits/stl_vector.h ****       : _M_impl(__a)
 305:/usr/include/c++/11/bits/stl_vector.h ****       { _M_create_storage(__n); }
 306:/usr/include/c++/11/bits/stl_vector.h **** 
 307:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
 308:/usr/include/c++/11/bits/stl_vector.h ****       _Vector_base(_Vector_base&&) = default;
 309:/usr/include/c++/11/bits/stl_vector.h **** 
 310:/usr/include/c++/11/bits/stl_vector.h ****       // Kept for ABI compatibility.
 311:/usr/include/c++/11/bits/stl_vector.h **** # if !_GLIBCXX_INLINE_VERSION
 312:/usr/include/c++/11/bits/stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 313:/usr/include/c++/11/bits/stl_vector.h ****       : _M_impl(std::move(__a)) { }
 314:/usr/include/c++/11/bits/stl_vector.h **** 
 315:/usr/include/c++/11/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 316:/usr/include/c++/11/bits/stl_vector.h ****       : _M_impl(__a)
 317:/usr/include/c++/11/bits/stl_vector.h ****       {
 318:/usr/include/c++/11/bits/stl_vector.h **** 	if (__x.get_allocator() == __a)
 319:/usr/include/c++/11/bits/stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 320:/usr/include/c++/11/bits/stl_vector.h **** 	else
 321:/usr/include/c++/11/bits/stl_vector.h **** 	  {
 322:/usr/include/c++/11/bits/stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 323:/usr/include/c++/11/bits/stl_vector.h **** 	    _M_create_storage(__n);
 324:/usr/include/c++/11/bits/stl_vector.h **** 	  }
 325:/usr/include/c++/11/bits/stl_vector.h ****       }
 326:/usr/include/c++/11/bits/stl_vector.h **** # endif
 327:/usr/include/c++/11/bits/stl_vector.h **** 
 328:/usr/include/c++/11/bits/stl_vector.h ****       _Vector_base(const allocator_type& __a, _Vector_base&& __x)
 329:/usr/include/c++/11/bits/stl_vector.h ****       : _M_impl(_Tp_alloc_type(__a), std::move(__x._M_impl))
 330:/usr/include/c++/11/bits/stl_vector.h ****       { }
 331:/usr/include/c++/11/bits/stl_vector.h **** #endif
 332:/usr/include/c++/11/bits/stl_vector.h **** 
 333:/usr/include/c++/11/bits/stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 334:/usr/include/c++/11/bits/stl_vector.h ****       {
 335:/usr/include/c++/11/bits/stl_vector.h **** 	_M_deallocate(_M_impl._M_start,
 336:/usr/include/c++/11/bits/stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 337:/usr/include/c++/11/bits/stl_vector.h ****       }
 338:/usr/include/c++/11/bits/stl_vector.h **** 
 339:/usr/include/c++/11/bits/stl_vector.h ****     public:
 340:/usr/include/c++/11/bits/stl_vector.h ****       _Vector_impl _M_impl;
 341:/usr/include/c++/11/bits/stl_vector.h **** 
 342:/usr/include/c++/11/bits/stl_vector.h ****       pointer
 343:/usr/include/c++/11/bits/stl_vector.h ****       _M_allocate(size_t __n)
 344:/usr/include/c++/11/bits/stl_vector.h ****       {
 345:/usr/include/c++/11/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 346:/usr/include/c++/11/bits/stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 347:/usr/include/c++/11/bits/stl_vector.h ****       }
 348:/usr/include/c++/11/bits/stl_vector.h **** 
 349:/usr/include/c++/11/bits/stl_vector.h ****       void
 350:/usr/include/c++/11/bits/stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 351:/usr/include/c++/11/bits/stl_vector.h ****       {
 352:/usr/include/c++/11/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 353:/usr/include/c++/11/bits/stl_vector.h **** 	if (__p)
 354:/usr/include/c++/11/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 355:/usr/include/c++/11/bits/stl_vector.h ****       }
 356:/usr/include/c++/11/bits/stl_vector.h **** 
 357:/usr/include/c++/11/bits/stl_vector.h ****     protected:
 358:/usr/include/c++/11/bits/stl_vector.h ****       void
 359:/usr/include/c++/11/bits/stl_vector.h ****       _M_create_storage(size_t __n)
 360:/usr/include/c++/11/bits/stl_vector.h ****       {
 361:/usr/include/c++/11/bits/stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 362:/usr/include/c++/11/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 363:/usr/include/c++/11/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 364:/usr/include/c++/11/bits/stl_vector.h ****       }
 365:/usr/include/c++/11/bits/stl_vector.h ****     };
 366:/usr/include/c++/11/bits/stl_vector.h **** 
 367:/usr/include/c++/11/bits/stl_vector.h ****   /**
 368:/usr/include/c++/11/bits/stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 369:/usr/include/c++/11/bits/stl_vector.h ****    *  individual elements in any order.
 370:/usr/include/c++/11/bits/stl_vector.h ****    *
 371:/usr/include/c++/11/bits/stl_vector.h ****    *  @ingroup sequences
 372:/usr/include/c++/11/bits/stl_vector.h ****    *
 373:/usr/include/c++/11/bits/stl_vector.h ****    *  @tparam _Tp  Type of element.
 374:/usr/include/c++/11/bits/stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 375:/usr/include/c++/11/bits/stl_vector.h ****    *
 376:/usr/include/c++/11/bits/stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 377:/usr/include/c++/11/bits/stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 378:/usr/include/c++/11/bits/stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 379:/usr/include/c++/11/bits/stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 380:/usr/include/c++/11/bits/stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 381:/usr/include/c++/11/bits/stl_vector.h ****    *
 382:/usr/include/c++/11/bits/stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 383:/usr/include/c++/11/bits/stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 384:/usr/include/c++/11/bits/stl_vector.h ****    *  elements in any order and saves the user from worrying about
 385:/usr/include/c++/11/bits/stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 386:/usr/include/c++/11/bits/stl_vector.h ****    *  also provided as with C-style arrays.
 387:/usr/include/c++/11/bits/stl_vector.h ****   */
 388:/usr/include/c++/11/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 389:/usr/include/c++/11/bits/stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 390:/usr/include/c++/11/bits/stl_vector.h ****     {
 391:/usr/include/c++/11/bits/stl_vector.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 392:/usr/include/c++/11/bits/stl_vector.h ****       // Concept requirements.
 393:/usr/include/c++/11/bits/stl_vector.h ****       typedef typename _Alloc::value_type		_Alloc_value_type;
 394:/usr/include/c++/11/bits/stl_vector.h **** # if __cplusplus < 201103L
 395:/usr/include/c++/11/bits/stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 396:/usr/include/c++/11/bits/stl_vector.h **** # endif
 397:/usr/include/c++/11/bits/stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 398:/usr/include/c++/11/bits/stl_vector.h **** #endif
 399:/usr/include/c++/11/bits/stl_vector.h **** 
 400:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
 401:/usr/include/c++/11/bits/stl_vector.h ****       static_assert(is_same<typename remove_cv<_Tp>::type, _Tp>::value,
 402:/usr/include/c++/11/bits/stl_vector.h **** 	  "std::vector must have a non-const, non-volatile value_type");
 403:/usr/include/c++/11/bits/stl_vector.h **** # if __cplusplus > 201703L || defined __STRICT_ANSI__
 404:/usr/include/c++/11/bits/stl_vector.h ****       static_assert(is_same<typename _Alloc::value_type, _Tp>::value,
 405:/usr/include/c++/11/bits/stl_vector.h **** 	  "std::vector must have the same value_type as its allocator");
 406:/usr/include/c++/11/bits/stl_vector.h **** # endif
 407:/usr/include/c++/11/bits/stl_vector.h **** #endif
 408:/usr/include/c++/11/bits/stl_vector.h **** 
 409:/usr/include/c++/11/bits/stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			_Base;
 410:/usr/include/c++/11/bits/stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		_Tp_alloc_type;
 411:/usr/include/c++/11/bits/stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	_Alloc_traits;
 412:/usr/include/c++/11/bits/stl_vector.h **** 
 413:/usr/include/c++/11/bits/stl_vector.h ****     public:
 414:/usr/include/c++/11/bits/stl_vector.h ****       typedef _Tp					value_type;
 415:/usr/include/c++/11/bits/stl_vector.h ****       typedef typename _Base::pointer			pointer;
 416:/usr/include/c++/11/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
 417:/usr/include/c++/11/bits/stl_vector.h ****       typedef typename _Alloc_traits::reference		reference;
 418:/usr/include/c++/11/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
 419:/usr/include/c++/11/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 420:/usr/include/c++/11/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 421:/usr/include/c++/11/bits/stl_vector.h ****       const_iterator;
 422:/usr/include/c++/11/bits/stl_vector.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 423:/usr/include/c++/11/bits/stl_vector.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 424:/usr/include/c++/11/bits/stl_vector.h ****       typedef size_t					size_type;
 425:/usr/include/c++/11/bits/stl_vector.h ****       typedef ptrdiff_t					difference_type;
 426:/usr/include/c++/11/bits/stl_vector.h ****       typedef _Alloc					allocator_type;
 427:/usr/include/c++/11/bits/stl_vector.h **** 
 428:/usr/include/c++/11/bits/stl_vector.h ****     private:
 429:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
 430:/usr/include/c++/11/bits/stl_vector.h ****       static constexpr bool
 431:/usr/include/c++/11/bits/stl_vector.h ****       _S_nothrow_relocate(true_type)
 432:/usr/include/c++/11/bits/stl_vector.h ****       {
 433:/usr/include/c++/11/bits/stl_vector.h **** 	return noexcept(std::__relocate_a(std::declval<pointer>(),
 434:/usr/include/c++/11/bits/stl_vector.h **** 					  std::declval<pointer>(),
 435:/usr/include/c++/11/bits/stl_vector.h **** 					  std::declval<pointer>(),
 436:/usr/include/c++/11/bits/stl_vector.h **** 					  std::declval<_Tp_alloc_type&>()));
 437:/usr/include/c++/11/bits/stl_vector.h ****       }
 438:/usr/include/c++/11/bits/stl_vector.h **** 
 439:/usr/include/c++/11/bits/stl_vector.h ****       static constexpr bool
 440:/usr/include/c++/11/bits/stl_vector.h ****       _S_nothrow_relocate(false_type)
 441:/usr/include/c++/11/bits/stl_vector.h ****       { return false; }
 442:/usr/include/c++/11/bits/stl_vector.h **** 
 443:/usr/include/c++/11/bits/stl_vector.h ****       static constexpr bool
 444:/usr/include/c++/11/bits/stl_vector.h ****       _S_use_relocate()
 445:/usr/include/c++/11/bits/stl_vector.h ****       {
 446:/usr/include/c++/11/bits/stl_vector.h **** 	// Instantiating std::__relocate_a might cause an error outside the
 447:/usr/include/c++/11/bits/stl_vector.h **** 	// immediate context (in __relocate_object_a's noexcept-specifier),
 448:/usr/include/c++/11/bits/stl_vector.h **** 	// so only do it if we know the type can be move-inserted into *this.
 449:/usr/include/c++/11/bits/stl_vector.h **** 	return _S_nothrow_relocate(__is_move_insertable<_Tp_alloc_type>{});
 450:/usr/include/c++/11/bits/stl_vector.h ****       }
 451:/usr/include/c++/11/bits/stl_vector.h **** 
 452:/usr/include/c++/11/bits/stl_vector.h ****       static pointer
 453:/usr/include/c++/11/bits/stl_vector.h ****       _S_do_relocate(pointer __first, pointer __last, pointer __result,
 454:/usr/include/c++/11/bits/stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 455:/usr/include/c++/11/bits/stl_vector.h ****       {
 456:/usr/include/c++/11/bits/stl_vector.h **** 	return std::__relocate_a(__first, __last, __result, __alloc);
 457:/usr/include/c++/11/bits/stl_vector.h ****       }
 458:/usr/include/c++/11/bits/stl_vector.h **** 
 459:/usr/include/c++/11/bits/stl_vector.h ****       static pointer
 460:/usr/include/c++/11/bits/stl_vector.h ****       _S_do_relocate(pointer, pointer, pointer __result,
 461:/usr/include/c++/11/bits/stl_vector.h **** 		     _Tp_alloc_type&, false_type) noexcept
 462:/usr/include/c++/11/bits/stl_vector.h ****       { return __result; }
 463:/usr/include/c++/11/bits/stl_vector.h **** 
 464:/usr/include/c++/11/bits/stl_vector.h ****       static pointer
 465:/usr/include/c++/11/bits/stl_vector.h ****       _S_relocate(pointer __first, pointer __last, pointer __result,
 466:/usr/include/c++/11/bits/stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 467:/usr/include/c++/11/bits/stl_vector.h ****       {
 468:/usr/include/c++/11/bits/stl_vector.h **** 	using __do_it = __bool_constant<_S_use_relocate()>;
 469:/usr/include/c++/11/bits/stl_vector.h **** 	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 470:/usr/include/c++/11/bits/stl_vector.h ****       }
 471:/usr/include/c++/11/bits/stl_vector.h **** #endif // C++11
 472:/usr/include/c++/11/bits/stl_vector.h **** 
 473:/usr/include/c++/11/bits/stl_vector.h ****     protected:
 474:/usr/include/c++/11/bits/stl_vector.h ****       using _Base::_M_allocate;
 475:/usr/include/c++/11/bits/stl_vector.h ****       using _Base::_M_deallocate;
 476:/usr/include/c++/11/bits/stl_vector.h ****       using _Base::_M_impl;
 477:/usr/include/c++/11/bits/stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 478:/usr/include/c++/11/bits/stl_vector.h **** 
 479:/usr/include/c++/11/bits/stl_vector.h ****     public:
 480:/usr/include/c++/11/bits/stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 481:/usr/include/c++/11/bits/stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 482:/usr/include/c++/11/bits/stl_vector.h **** 
 483:/usr/include/c++/11/bits/stl_vector.h ****       /**
 484:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 485:/usr/include/c++/11/bits/stl_vector.h ****        */
 486:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
 487:/usr/include/c++/11/bits/stl_vector.h ****       vector() = default;
 488:/usr/include/c++/11/bits/stl_vector.h **** #else
 489:/usr/include/c++/11/bits/stl_vector.h ****       vector() { }
 5019              		.loc 6 489 7
 5020              		.cfi_startproc
 5021 0000 F30F1EFA 		endbr64
 5022 0004 55       		pushq	%rbp
 5023              		.cfi_def_cfa_offset 16
 5024              		.cfi_offset 6, -16
 5025 0005 4889E5   		movq	%rsp, %rbp
 5026              		.cfi_def_cfa_register 6
 5027 0008 4883EC10 		subq	$16, %rsp
 5028 000c 48897DF8 		movq	%rdi, -8(%rbp)
 5029              	.LBB80:
 5030              		.loc 6 489 16
 5031 0010 488B45F8 		movq	-8(%rbp), %rax
 5032 0014 4889C7   		movq	%rax, %rdi
 5033 0017 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev
 5033      00
 5034              	.LBE80:
 5035              		.loc 6 489 18
 5036 001c 90       		nop
 5037 001d C9       		leave
 5038              		.cfi_def_cfa 7, 8
 5039 001e C3       		ret
 5040              		.cfi_endproc
 5041              	.LFE1520:
 5043              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev
 5044              		.set	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev,_ZNSt6vectorIN8UnitTest18DeferredTes
 5045              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vect
 5046              		.align 2
 5047              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 5049              	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:
 5050              	.LFB1523:
 490:/usr/include/c++/11/bits/stl_vector.h **** #endif
 491:/usr/include/c++/11/bits/stl_vector.h **** 
 492:/usr/include/c++/11/bits/stl_vector.h ****       /**
 493:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 494:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __a  An allocator object.
 495:/usr/include/c++/11/bits/stl_vector.h ****        */
 496:/usr/include/c++/11/bits/stl_vector.h ****       explicit
 497:/usr/include/c++/11/bits/stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 498:/usr/include/c++/11/bits/stl_vector.h ****       : _Base(__a) { }
 499:/usr/include/c++/11/bits/stl_vector.h **** 
 500:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
 501:/usr/include/c++/11/bits/stl_vector.h ****       /**
 502:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 503:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 504:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __a  An allocator.
 505:/usr/include/c++/11/bits/stl_vector.h ****        *
 506:/usr/include/c++/11/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 507:/usr/include/c++/11/bits/stl_vector.h ****        *  constructed elements.
 508:/usr/include/c++/11/bits/stl_vector.h ****        */
 509:/usr/include/c++/11/bits/stl_vector.h ****       explicit
 510:/usr/include/c++/11/bits/stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 511:/usr/include/c++/11/bits/stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 512:/usr/include/c++/11/bits/stl_vector.h ****       { _M_default_initialize(__n); }
 513:/usr/include/c++/11/bits/stl_vector.h **** 
 514:/usr/include/c++/11/bits/stl_vector.h ****       /**
 515:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 516:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 517:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 518:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __a  An allocator.
 519:/usr/include/c++/11/bits/stl_vector.h ****        *
 520:/usr/include/c++/11/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 521:/usr/include/c++/11/bits/stl_vector.h ****        */
 522:/usr/include/c++/11/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value,
 523:/usr/include/c++/11/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 524:/usr/include/c++/11/bits/stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 525:/usr/include/c++/11/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 526:/usr/include/c++/11/bits/stl_vector.h **** #else
 527:/usr/include/c++/11/bits/stl_vector.h ****       /**
 528:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 529:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 530:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 531:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __a  An allocator.
 532:/usr/include/c++/11/bits/stl_vector.h ****        *
 533:/usr/include/c++/11/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 534:/usr/include/c++/11/bits/stl_vector.h ****        */
 535:/usr/include/c++/11/bits/stl_vector.h ****       explicit
 536:/usr/include/c++/11/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 537:/usr/include/c++/11/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 538:/usr/include/c++/11/bits/stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 539:/usr/include/c++/11/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 540:/usr/include/c++/11/bits/stl_vector.h **** #endif
 541:/usr/include/c++/11/bits/stl_vector.h **** 
 542:/usr/include/c++/11/bits/stl_vector.h ****       /**
 543:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  %Vector copy constructor.
 544:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 545:/usr/include/c++/11/bits/stl_vector.h ****        *
 546:/usr/include/c++/11/bits/stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 547:/usr/include/c++/11/bits/stl_vector.h ****        *  @a __x  will not be copied
 548:/usr/include/c++/11/bits/stl_vector.h ****        *  (i.e. capacity() == size() in the new %vector).
 549:/usr/include/c++/11/bits/stl_vector.h ****        *
 550:/usr/include/c++/11/bits/stl_vector.h ****        *  The newly-created %vector uses a copy of the allocator object used
 551:/usr/include/c++/11/bits/stl_vector.h ****        *  by @a __x (unless the allocator traits dictate a different object).
 552:/usr/include/c++/11/bits/stl_vector.h ****        */
 553:/usr/include/c++/11/bits/stl_vector.h ****       vector(const vector& __x)
 554:/usr/include/c++/11/bits/stl_vector.h ****       : _Base(__x.size(),
 555:/usr/include/c++/11/bits/stl_vector.h **** 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 556:/usr/include/c++/11/bits/stl_vector.h ****       {
 557:/usr/include/c++/11/bits/stl_vector.h **** 	this->_M_impl._M_finish =
 558:/usr/include/c++/11/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 559:/usr/include/c++/11/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 560:/usr/include/c++/11/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 561:/usr/include/c++/11/bits/stl_vector.h ****       }
 562:/usr/include/c++/11/bits/stl_vector.h **** 
 563:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
 564:/usr/include/c++/11/bits/stl_vector.h ****       /**
 565:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  %Vector move constructor.
 566:/usr/include/c++/11/bits/stl_vector.h ****        *
 567:/usr/include/c++/11/bits/stl_vector.h ****        *  The newly-created %vector contains the exact contents of the
 568:/usr/include/c++/11/bits/stl_vector.h ****        *  moved instance.
 569:/usr/include/c++/11/bits/stl_vector.h ****        *  The contents of the moved instance are a valid, but unspecified
 570:/usr/include/c++/11/bits/stl_vector.h ****        *  %vector.
 571:/usr/include/c++/11/bits/stl_vector.h ****        */
 572:/usr/include/c++/11/bits/stl_vector.h ****       vector(vector&&) noexcept = default;
 573:/usr/include/c++/11/bits/stl_vector.h **** 
 574:/usr/include/c++/11/bits/stl_vector.h ****       /// Copy constructor with alternative allocator
 575:/usr/include/c++/11/bits/stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 576:/usr/include/c++/11/bits/stl_vector.h ****       : _Base(__x.size(), __a)
 577:/usr/include/c++/11/bits/stl_vector.h ****       {
 578:/usr/include/c++/11/bits/stl_vector.h **** 	this->_M_impl._M_finish =
 579:/usr/include/c++/11/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 580:/usr/include/c++/11/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 581:/usr/include/c++/11/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 582:/usr/include/c++/11/bits/stl_vector.h ****       }
 583:/usr/include/c++/11/bits/stl_vector.h **** 
 584:/usr/include/c++/11/bits/stl_vector.h ****     private:
 585:/usr/include/c++/11/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, true_type) noexcept
 586:/usr/include/c++/11/bits/stl_vector.h ****       : _Base(__m, std::move(__rv))
 587:/usr/include/c++/11/bits/stl_vector.h ****       { }
 588:/usr/include/c++/11/bits/stl_vector.h **** 
 589:/usr/include/c++/11/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, false_type)
 590:/usr/include/c++/11/bits/stl_vector.h ****       : _Base(__m)
 591:/usr/include/c++/11/bits/stl_vector.h ****       {
 592:/usr/include/c++/11/bits/stl_vector.h **** 	if (__rv.get_allocator() == __m)
 593:/usr/include/c++/11/bits/stl_vector.h **** 	  this->_M_impl._M_swap_data(__rv._M_impl);
 594:/usr/include/c++/11/bits/stl_vector.h **** 	else if (!__rv.empty())
 595:/usr/include/c++/11/bits/stl_vector.h **** 	  {
 596:/usr/include/c++/11/bits/stl_vector.h **** 	    this->_M_create_storage(__rv.size());
 597:/usr/include/c++/11/bits/stl_vector.h **** 	    this->_M_impl._M_finish =
 598:/usr/include/c++/11/bits/stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 599:/usr/include/c++/11/bits/stl_vector.h **** 					  this->_M_impl._M_start,
 600:/usr/include/c++/11/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
 601:/usr/include/c++/11/bits/stl_vector.h **** 	    __rv.clear();
 602:/usr/include/c++/11/bits/stl_vector.h **** 	  }
 603:/usr/include/c++/11/bits/stl_vector.h ****       }
 604:/usr/include/c++/11/bits/stl_vector.h **** 
 605:/usr/include/c++/11/bits/stl_vector.h ****     public:
 606:/usr/include/c++/11/bits/stl_vector.h ****       /// Move constructor with alternative allocator
 607:/usr/include/c++/11/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 608:/usr/include/c++/11/bits/stl_vector.h ****       noexcept( noexcept(
 609:/usr/include/c++/11/bits/stl_vector.h **** 	vector(std::declval<vector&&>(), std::declval<const allocator_type&>(),
 610:/usr/include/c++/11/bits/stl_vector.h **** 	       std::declval<typename _Alloc_traits::is_always_equal>())) )
 611:/usr/include/c++/11/bits/stl_vector.h ****       : vector(std::move(__rv), __m, typename _Alloc_traits::is_always_equal{})
 612:/usr/include/c++/11/bits/stl_vector.h ****       { }
 613:/usr/include/c++/11/bits/stl_vector.h **** 
 614:/usr/include/c++/11/bits/stl_vector.h ****       /**
 615:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 616:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 617:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __a  An allocator.
 618:/usr/include/c++/11/bits/stl_vector.h ****        *
 619:/usr/include/c++/11/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 620:/usr/include/c++/11/bits/stl_vector.h ****        *  initializer_list @a __l.
 621:/usr/include/c++/11/bits/stl_vector.h ****        *
 622:/usr/include/c++/11/bits/stl_vector.h ****        *  This will call the element type's copy constructor N times
 623:/usr/include/c++/11/bits/stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 624:/usr/include/c++/11/bits/stl_vector.h ****        */
 625:/usr/include/c++/11/bits/stl_vector.h ****       vector(initializer_list<value_type> __l,
 626:/usr/include/c++/11/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 627:/usr/include/c++/11/bits/stl_vector.h ****       : _Base(__a)
 628:/usr/include/c++/11/bits/stl_vector.h ****       {
 629:/usr/include/c++/11/bits/stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 630:/usr/include/c++/11/bits/stl_vector.h **** 			    random_access_iterator_tag());
 631:/usr/include/c++/11/bits/stl_vector.h ****       }
 632:/usr/include/c++/11/bits/stl_vector.h **** #endif
 633:/usr/include/c++/11/bits/stl_vector.h **** 
 634:/usr/include/c++/11/bits/stl_vector.h ****       /**
 635:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  Builds a %vector from a range.
 636:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 637:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __last  An input iterator.
 638:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __a  An allocator.
 639:/usr/include/c++/11/bits/stl_vector.h ****        *
 640:/usr/include/c++/11/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 641:/usr/include/c++/11/bits/stl_vector.h ****        *  [first,last).
 642:/usr/include/c++/11/bits/stl_vector.h ****        *
 643:/usr/include/c++/11/bits/stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 644:/usr/include/c++/11/bits/stl_vector.h ****        *  random-access, then this will call the elements' copy
 645:/usr/include/c++/11/bits/stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 646:/usr/include/c++/11/bits/stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 647:/usr/include/c++/11/bits/stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 648:/usr/include/c++/11/bits/stl_vector.h ****        *  constructor, and logN memory reallocations.
 649:/usr/include/c++/11/bits/stl_vector.h ****        */
 650:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
 651:/usr/include/c++/11/bits/stl_vector.h ****       template<typename _InputIterator,
 652:/usr/include/c++/11/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 653:/usr/include/c++/11/bits/stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 654:/usr/include/c++/11/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 655:/usr/include/c++/11/bits/stl_vector.h **** 	: _Base(__a)
 656:/usr/include/c++/11/bits/stl_vector.h **** 	{
 657:/usr/include/c++/11/bits/stl_vector.h **** 	  _M_range_initialize(__first, __last,
 658:/usr/include/c++/11/bits/stl_vector.h **** 			      std::__iterator_category(__first));
 659:/usr/include/c++/11/bits/stl_vector.h **** 	}
 660:/usr/include/c++/11/bits/stl_vector.h **** #else
 661:/usr/include/c++/11/bits/stl_vector.h ****       template<typename _InputIterator>
 662:/usr/include/c++/11/bits/stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 663:/usr/include/c++/11/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 664:/usr/include/c++/11/bits/stl_vector.h **** 	: _Base(__a)
 665:/usr/include/c++/11/bits/stl_vector.h **** 	{
 666:/usr/include/c++/11/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 667:/usr/include/c++/11/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 668:/usr/include/c++/11/bits/stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 669:/usr/include/c++/11/bits/stl_vector.h **** 	}
 670:/usr/include/c++/11/bits/stl_vector.h **** #endif
 671:/usr/include/c++/11/bits/stl_vector.h **** 
 672:/usr/include/c++/11/bits/stl_vector.h ****       /**
 673:/usr/include/c++/11/bits/stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 674:/usr/include/c++/11/bits/stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 675:/usr/include/c++/11/bits/stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 676:/usr/include/c++/11/bits/stl_vector.h ****        *  responsibility.
 677:/usr/include/c++/11/bits/stl_vector.h ****        */
 678:/usr/include/c++/11/bits/stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 5051              		.loc 6 678 7
 5052              		.cfi_startproc
 5053              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 5054              		.cfi_lsda 0x1b,.LLSDA1523
 5055 0000 F30F1EFA 		endbr64
 5056 0004 55       		pushq	%rbp
 5057              		.cfi_def_cfa_offset 16
 5058              		.cfi_offset 6, -16
 5059 0005 4889E5   		movq	%rsp, %rbp
 5060              		.cfi_def_cfa_register 6
 5061 0008 53       		pushq	%rbx
 5062 0009 4883EC18 		subq	$24, %rsp
 5063              		.cfi_offset 3, -24
 5064 000d 48897DE8 		movq	%rdi, -24(%rbp)
 5065              	.LBB81:
 679:/usr/include/c++/11/bits/stl_vector.h ****       {
 680:/usr/include/c++/11/bits/stl_vector.h **** 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 681:/usr/include/c++/11/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 5066              		.loc 6 681 28
 5067 0011 488B45E8 		movq	-24(%rbp), %rax
 5068 0015 4889C7   		movq	%rax, %rdi
 5069 0018 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
 5069      00
 5070 001d 4889C2   		movq	%rax, %rdx
 680:/usr/include/c++/11/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 5071              		.loc 6 680 15
 5072 0020 488B45E8 		movq	-24(%rbp), %rax
 5073 0024 488B4808 		movq	8(%rax), %rcx
 5074 0028 488B45E8 		movq	-24(%rbp), %rax
 5075 002c 488B00   		movq	(%rax), %rax
 5076 002f 4889CE   		movq	%rcx, %rsi
 5077 0032 4889C7   		movq	%rax, %rdi
 5078              	.LEHB134:
 5079 0035 E8000000 		call	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E
 5079      00
 5080              	.LEHE134:
 682:/usr/include/c++/11/bits/stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
 683:/usr/include/c++/11/bits/stl_vector.h ****       }
 5081              		.loc 6 683 7
 5082 003a 488B45E8 		movq	-24(%rbp), %rax
 5083 003e 4889C7   		movq	%rax, %rdi
 5084              	.LEHB135:
 5085 0041 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 5085      00
 5086              	.LEHE135:
 5087              	.LBE81:
 5088 0046 EB1E     		jmp	.L256
 5089              	.L255:
 5090 0048 F30F1EFA 		endbr64
 5091              	.LBB82:
 5092 004c 4889C3   		movq	%rax, %rbx
 5093 004f 488B45E8 		movq	-24(%rbp), %rax
 5094 0053 4889C7   		movq	%rax, %rdi
 5095 0056 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 5095      00
 5096 005b 4889D8   		movq	%rbx, %rax
 5097 005e 4889C7   		movq	%rax, %rdi
 5098              	.LEHB136:
 5099 0061 E8000000 		call	_Unwind_Resume@PLT
 5099      00
 5100              	.LEHE136:
 5101              	.L256:
 5102              	.LBE82:
 5103 0066 488B5DF8 		movq	-8(%rbp), %rbx
 5104 006a C9       		leave
 5105              		.cfi_def_cfa 7, 8
 5106 006b C3       		ret
 5107              		.cfi_endproc
 5108              	.LFE1523:
 5109              		.section	.gcc_except_table
 5110              	.LLSDA1523:
 5111 0390 FF       		.byte	0xff
 5112 0391 FF       		.byte	0xff
 5113 0392 01       		.byte	0x1
 5114 0393 0C       		.uleb128 .LLSDACSE1523-.LLSDACSB1523
 5115              	.LLSDACSB1523:
 5116 0394 35       		.uleb128 .LEHB134-.LFB1523
 5117 0395 05       		.uleb128 .LEHE134-.LEHB134
 5118 0396 48       		.uleb128 .L255-.LFB1523
 5119 0397 00       		.uleb128 0
 5120 0398 41       		.uleb128 .LEHB135-.LFB1523
 5121 0399 05       		.uleb128 .LEHE135-.LEHB135
 5122 039a 00       		.uleb128 0
 5123 039b 00       		.uleb128 0
 5124 039c 61       		.uleb128 .LEHB136-.LFB1523
 5125 039d 05       		.uleb128 .LEHE136-.LEHB136
 5126 039e 00       		.uleb128 0
 5127 039f 00       		.uleb128 0
 5128              	.LLSDACSE1523:
 5129              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vect
 5131              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
 5132              		.set	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev,_ZNSt6vectorIN8UnitTest18DeferredTes
 5133              		.section	.rodata
 5134              	.LC32:
 5135 0524 556E6861 		.string	"Unhandled system exception"
 5135      6E646C65 
 5135      64207379 
 5135      7374656D 
 5135      20657863 
 5136              	.LC33:
 5137 053f 556E6861 		.string	"Unhandled exception: Crash!"
 5137      6E646C65 
 5137      64206578 
 5137      63657074 
 5137      696F6E3A 
 5138              		.text
 5140              	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewD
 5141              	.LFB1534:
 5142              		.file 7 "../ExecuteTest.h"
   1:../ExecuteTest.h **** #ifndef UNITTEST_EXECUTE_TEST_H
   2:../ExecuteTest.h **** #define UNITTEST_EXECUTE_TEST_H
   3:../ExecuteTest.h **** 
   4:../ExecuteTest.h **** #include "TestDetails.h"
   5:../ExecuteTest.h **** #include "MemoryOutStream.h"
   6:../ExecuteTest.h **** #include "AssertException.h"
   7:../ExecuteTest.h **** #include "CurrentTest.h"
   8:../ExecuteTest.h **** 
   9:../ExecuteTest.h **** #ifdef UNITTEST_POSIX
  10:../ExecuteTest.h **** 	#include "PosixUtils/SignalTranslator.h"
  11:../ExecuteTest.h **** #endif
  12:../ExecuteTest.h **** 
  13:../ExecuteTest.h **** namespace UnitTest {
  14:../ExecuteTest.h **** 
  15:../ExecuteTest.h **** template< typename T >
  16:../ExecuteTest.h **** void ExecuteTest(T& testObject, TestDetails const& details)
 5143              		.loc 7 16 6
 5144              		.cfi_startproc
 5145              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 5146              		.cfi_lsda 0x1b,.LLSDA1534
 5147 24b7 F30F1EFA 		endbr64
 5148 24bb 55       		pushq	%rbp
 5149              		.cfi_def_cfa_offset 16
 5150              		.cfi_offset 6, -16
 5151 24bc 4889E5   		movq	%rsp, %rbp
 5152              		.cfi_def_cfa_register 6
 5153 24bf 4155     		pushq	%r13
 5154 24c1 4154     		pushq	%r12
 5155 24c3 53       		pushq	%rbx
 5156 24c4 4881EC58 		subq	$1624, %rsp
 5156      060000
 5157              		.cfi_offset 13, -24
 5158              		.cfi_offset 12, -32
 5159              		.cfi_offset 3, -40
 5160 24cb 4889BD98 		movq	%rdi, -1640(%rbp)
 5160      F9FFFF
 5161 24d2 4889B590 		movq	%rsi, -1648(%rbp)
 5161      F9FFFF
 5162              		.loc 7 16 6
 5163 24d9 64488B04 		movq	%fs:40, %rax
 5163      25280000 
 5163      00
 5164 24e2 488945D8 		movq	%rax, -40(%rbp)
 5165 24e6 31C0     		xorl	%eax, %eax
 5166              	.LEHB137:
  17:../ExecuteTest.h **** {
  18:../ExecuteTest.h **** 	CurrentTest::Details() = &details;
 5167              		.loc 7 18 22
 5168 24e8 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 5168      00
 5169              	.LEHE137:
 5170              		.loc 7 18 25
 5171 24ed 488B9590 		movq	-1648(%rbp), %rdx
 5171      F9FFFF
 5172 24f4 488910   		movq	%rdx, (%rax)
 5173              	.LBB83:
  19:../ExecuteTest.h **** 
  20:../ExecuteTest.h **** 	try
  21:../ExecuteTest.h **** 	{
  22:../ExecuteTest.h **** #ifdef UNITTEST_POSIX
  23:../ExecuteTest.h **** 		UNITTEST_THROW_SIGNALS
 5174              		.loc 7 23 3
 5175 24f7 488D8570 		leaq	-1168(%rbp), %rax
 5175      FBFFFF
 5176 24fe 4889C7   		movq	%rax, %rdi
 5177              	.LEHB138:
 5178 2501 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev@PLT
 5178      00
 5179              	.LEHE138:
 5180              		.loc 7 23 3 is_stmt 0 discriminator 1
 5181 2506 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 5181      000000
 5182 250d BE010000 		movl	$1, %esi
 5182      00
 5183 2512 4889C7   		movq	%rax, %rdi
 5184 2515 E8000000 		call	__sigsetjmp@PLT
 5184      00
 5185 251a F30F1EFA 		endbr64
 5186 251e 85C0     		testl	%eax, %eax
 5187 2520 0F95C0   		setne	%al
 5188 2523 84C0     		testb	%al, %al
 5189 2525 742B     		je	.L259
 5190              		.loc 7 23 3 discriminator 4
 5191 2527 BF080000 		movl	$8, %edi
 5191      00
 5192 252c E8000000 		call	__cxa_allocate_exception@PLT
 5192      00
 5193 2531 488D1500 		leaq	.LC32(%rip), %rdx
 5193      000000
 5194 2538 488910   		movq	%rdx, (%rax)
 5195 253b BA000000 		movl	$0, %edx
 5195      00
 5196 2540 488D0D00 		leaq	_ZTIPKc(%rip), %rcx
 5196      000000
 5197 2547 4889CE   		movq	%rcx, %rsi
 5198 254a 4889C7   		movq	%rax, %rdi
 5199              	.LEHB139:
 5200 254d E8000000 		call	__cxa_throw@PLT
 5200      00
 5201              	.L259:
  24:../ExecuteTest.h **** #endif
  25:../ExecuteTest.h **** 		testObject.RunImpl();
 5202              		.loc 7 25 21 is_stmt 1
 5203 2552 488B8598 		movq	-1640(%rbp), %rax
 5203      F9FFFF
 5204 2559 4889C7   		movq	%rax, %rdi
 5205 255c E849E1FF 		call	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 5205      FF
 5206              	.LEHE139:
  26:../ExecuteTest.h **** 	}
 5207              		.loc 7 26 2
 5208 2561 488D8570 		leaq	-1168(%rbp), %rax
 5208      FBFFFF
 5209 2568 4889C7   		movq	%rax, %rdi
 5210              	.LEHB140:
 5211 256b E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 5211      00
 5212              	.LEHE140:
 5213              	.LBE83:
  27:../ExecuteTest.h **** 	catch (AssertException const& e)
  28:../ExecuteTest.h **** 	{
  29:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(
  30:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
  31:../ExecuteTest.h **** 	}
  32:../ExecuteTest.h **** 	catch (std::exception const& e)
  33:../ExecuteTest.h **** 	{
  34:../ExecuteTest.h **** 		MemoryOutStream stream;
  35:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
  36:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
  37:../ExecuteTest.h **** 	}
  38:../ExecuteTest.h **** 	catch (...)
  39:../ExecuteTest.h **** 	{
  40:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, "Unhandled exception: Crash!");
  41:../ExecuteTest.h **** 	}
  42:../ExecuteTest.h **** }
 5214              		.loc 7 42 1
 5215 2570 E90F0200 		jmp	.L257
 5215      00
 5216              	.L272:
 5217 2575 F30F1EFA 		endbr64
 5218              	.LBB84:
  26:../ExecuteTest.h **** 	}
 5219              		.loc 7 26 2
 5220 2579 4989C4   		movq	%rax, %r12
 5221 257c 4889D3   		movq	%rdx, %rbx
 5222 257f 488D8570 		leaq	-1168(%rbp), %rax
 5222      FBFFFF
 5223 2586 4889C7   		movq	%rax, %rdi
 5224 2589 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 5224      00
 5225 258e 4C89E0   		movq	%r12, %rax
 5226 2591 4889DA   		movq	%rbx, %rdx
 5227 2594 EB04     		jmp	.L261
 5228              	.L271:
 5229 2596 F30F1EFA 		endbr64
 5230              	.L261:
 5231              	.LBE84:
  27:../ExecuteTest.h **** 	catch (AssertException const& e)
 5232              		.loc 7 27 2
 5233 259a 4883FA01 		cmpq	$1, %rdx
 5234 259e 740F     		je	.L262
 5235 25a0 4883FA02 		cmpq	$2, %rdx
 5236 25a4 0F84A600 		je	.L263
 5236      0000
 5237 25aa E9480100 		jmp	.L277
 5237      00
 5238              	.L262:
 5239              	.LBB85:
  27:../ExecuteTest.h **** 	catch (AssertException const& e)
 5240              		.loc 7 27 2 is_stmt 0 discriminator 1
 5241 25af 4889C7   		movq	%rax, %rdi
 5242 25b2 E8000000 		call	__cxa_begin_catch@PLT
 5242      00
  27:../ExecuteTest.h **** 	catch (AssertException const& e)
 5243              		.loc 7 27 32 is_stmt 1 discriminator 1
 5244 25b7 488985A8 		movq	%rax, -1624(%rbp)
 5244      F9FFFF
 5245              	.LEHB141:
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5246              		.loc 7 29 23 discriminator 1
 5247 25be E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5247      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5248              		.loc 7 29 40 discriminator 2
 5249 25c3 488B18   		movq	(%rax), %rbx
  30:../ExecuteTest.h **** 	}
 5250              		.loc 7 30 90 discriminator 2
 5251 25c6 488B85A8 		movq	-1624(%rbp), %rax
 5251      F9FFFF
 5252 25cd 488B00   		movq	(%rax), %rax
 5253 25d0 4883C010 		addq	$16, %rax
 5254 25d4 488B10   		movq	(%rax), %rdx
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5255              		.loc 7 29 40 discriminator 2
 5256 25d7 488B85A8 		movq	-1624(%rbp), %rax
 5256      F9FFFF
 5257 25de 4889C7   		movq	%rax, %rdi
 5258 25e1 FFD2     		call	*%rdx
 5259              	.LVL12:
 5260 25e3 4989C4   		movq	%rax, %r12
  30:../ExecuteTest.h **** 	}
 5261              		.loc 7 30 4 discriminator 2
 5262 25e6 488B85A8 		movq	-1624(%rbp), %rax
 5262      F9FFFF
 5263 25ed 4889C7   		movq	%rax, %rdi
 5264 25f0 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 5264      00
 5265 25f5 4189C5   		movl	%eax, %r13d
 5266 25f8 488B85A8 		movq	-1624(%rbp), %rax
 5266      F9FFFF
 5267 25ff 4889C7   		movq	%rax, %rdi
 5268 2602 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 5268      00
  30:../ExecuteTest.h **** 	}
 5269              		.loc 7 30 4 is_stmt 0 discriminator 1
 5270 2607 4889C1   		movq	%rax, %rcx
  30:../ExecuteTest.h **** 	}
 5271              		.loc 7 30 42 is_stmt 1 discriminator 1
 5272 260a 488B8590 		movq	-1648(%rbp), %rax
 5272      F9FFFF
 5273 2611 488B10   		movq	(%rax), %rdx
  30:../ExecuteTest.h **** 	}
 5274              		.loc 7 30 24 discriminator 1
 5275 2614 488B8590 		movq	-1648(%rbp), %rax
 5275      F9FFFF
 5276 261b 488B7008 		movq	8(%rax), %rsi
  30:../ExecuteTest.h **** 	}
 5277              		.loc 7 30 4 discriminator 1
 5278 261f 488D85B0 		leaq	-1616(%rbp), %rax
 5278      F9FFFF
 5279 2626 4589E8   		movl	%r13d, %r8d
 5280 2629 4889C7   		movq	%rax, %rdi
 5281 262c E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 5281      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5282              		.loc 7 29 40
 5283 2631 488D85B0 		leaq	-1616(%rbp), %rax
 5283      F9FFFF
 5284 2638 4C89E2   		movq	%r12, %rdx
 5285 263b 4889C6   		movq	%rax, %rsi
 5286 263e 4889DF   		movq	%rbx, %rdi
 5287 2641 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5287      00
 5288              	.LEHE141:
  27:../ExecuteTest.h **** 	catch (AssertException const& e)
 5289              		.loc 7 27 2
 5290 2646 E8000000 		call	__cxa_end_catch@PLT
 5290      00
 5291              	.LBE85:
 5292              		.loc 7 42 1
 5293 264b E9340100 		jmp	.L257
 5293      00
 5294              	.L263:
 5295              	.LBB86:
  32:../ExecuteTest.h **** 	{
 5296              		.loc 7 32 2
 5297 2650 4889C7   		movq	%rax, %rdi
 5298 2653 E8000000 		call	__cxa_begin_catch@PLT
 5298      00
  32:../ExecuteTest.h **** 	{
 5299              		.loc 7 32 31
 5300 2658 488985A0 		movq	%rax, -1632(%rbp)
 5300      F9FFFF
 5301              	.LBB87:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 5302              		.loc 7 34 19
 5303 265f 488D85D0 		leaq	-1584(%rbp), %rax
 5303      F9FFFF
 5304 2666 4889C7   		movq	%rax, %rdi
 5305              	.LEHB142:
 5306 2669 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5306      00
 5307              	.LEHE142:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 5308              		.loc 7 35 37
 5309 266e 488D85D0 		leaq	-1584(%rbp), %rax
 5309      F9FFFF
 5310 2675 488D1500 		leaq	.LC6(%rip), %rdx
 5310      000000
 5311 267c 4889D6   		movq	%rdx, %rsi
 5312 267f 4889C7   		movq	%rax, %rdi
 5313              	.LEHB143:
 5314 2682 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5314      00
 5315 2687 4889C3   		movq	%rax, %rbx
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 5316              		.loc 7 35 46
 5317 268a 488B85A0 		movq	-1632(%rbp), %rax
 5317      F9FFFF
 5318 2691 488B00   		movq	(%rax), %rax
 5319 2694 4883C010 		addq	$16, %rax
 5320 2698 488B10   		movq	(%rax), %rdx
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 5321              		.loc 7 35 37
 5322 269b 488B85A0 		movq	-1632(%rbp), %rax
 5322      F9FFFF
 5323 26a2 4889C7   		movq	%rax, %rdi
 5324 26a5 FFD2     		call	*%rdx
 5325              	.LVL13:
 5326 26a7 4889C6   		movq	%rax, %rsi
 5327 26aa 4889DF   		movq	%rbx, %rdi
 5328 26ad E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5328      00
  36:../ExecuteTest.h **** 	}
 5329              		.loc 7 36 23
 5330 26b2 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5330      00
  36:../ExecuteTest.h **** 	}
 5331              		.loc 7 36 40
 5332 26b7 488B18   		movq	(%rax), %rbx
 5333 26ba 488D85D0 		leaq	-1584(%rbp), %rax
 5333      F9FFFF
 5334 26c1 4889C7   		movq	%rax, %rdi
 5335 26c4 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 5335      00
  36:../ExecuteTest.h **** 	}
 5336              		.loc 7 36 40 is_stmt 0 discriminator 1
 5337 26c9 4889C2   		movq	%rax, %rdx
 5338 26cc 488B8590 		movq	-1648(%rbp), %rax
 5338      F9FFFF
 5339 26d3 4889C6   		movq	%rax, %rsi
 5340 26d6 4889DF   		movq	%rbx, %rdi
 5341 26d9 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5341      00
 5342              	.LEHE143:
  37:../ExecuteTest.h **** 	catch (...)
 5343              		.loc 7 37 2 is_stmt 1
 5344 26de 488D85D0 		leaq	-1584(%rbp), %rax
 5344      F9FFFF
 5345 26e5 4889C7   		movq	%rax, %rdi
 5346              	.LEHB144:
 5347 26e8 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5347      00
 5348              	.LEHE144:
 5349              	.LBE87:
  32:../ExecuteTest.h **** 	{
 5350              		.loc 7 32 2
 5351 26ed E8000000 		call	__cxa_end_catch@PLT
 5351      00
 5352              	.LBE86:
 5353              		.loc 7 42 1
 5354 26f2 E98D0000 		jmp	.L257
 5354      00
 5355              	.L277:
  38:../ExecuteTest.h **** 	{
 5356              		.loc 7 38 2
 5357 26f7 4889C7   		movq	%rax, %rdi
 5358 26fa E8000000 		call	__cxa_begin_catch@PLT
 5358      00
 5359              	.LEHB145:
  40:../ExecuteTest.h **** 	}
 5360              		.loc 7 40 23
 5361 26ff E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5361      00
  40:../ExecuteTest.h **** 	}
 5362              		.loc 7 40 40
 5363 2704 488B00   		movq	(%rax), %rax
 5364 2707 488B8D90 		movq	-1648(%rbp), %rcx
 5364      F9FFFF
 5365 270e 488D1500 		leaq	.LC33(%rip), %rdx
 5365      000000
 5366 2715 4889CE   		movq	%rcx, %rsi
 5367 2718 4889C7   		movq	%rax, %rdi
 5368 271b E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5368      00
 5369              	.LEHE145:
 5370              	.LEHB146:
  38:../ExecuteTest.h **** 	{
 5371              		.loc 7 38 2
 5372 2720 E8000000 		call	__cxa_end_catch@PLT
 5372      00
 5373              		.loc 7 42 1
 5374 2725 EB5D     		jmp	.L257
 5375              	.L273:
 5376 2727 F30F1EFA 		endbr64
 5377              	.LBB89:
  27:../ExecuteTest.h **** 	{
 5378              		.loc 7 27 2
 5379 272b 4889C3   		movq	%rax, %rbx
 5380 272e E8000000 		call	__cxa_end_catch@PLT
 5380      00
 5381 2733 4889D8   		movq	%rbx, %rax
 5382 2736 4889C7   		movq	%rax, %rdi
 5383 2739 E8000000 		call	_Unwind_Resume@PLT
 5383      00
 5384              	.LEHE146:
 5385              	.L275:
 5386 273e F30F1EFA 		endbr64
 5387              	.LBE89:
 5388              	.LBB90:
 5389              	.LBB88:
  37:../ExecuteTest.h **** 	catch (...)
 5390              		.loc 7 37 2
 5391 2742 4889C3   		movq	%rax, %rbx
 5392 2745 488D85D0 		leaq	-1584(%rbp), %rax
 5392      F9FFFF
 5393 274c 4889C7   		movq	%rax, %rdi
 5394 274f E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5394      00
 5395 2754 EB07     		jmp	.L268
 5396              	.L274:
 5397 2756 F30F1EFA 		endbr64
 5398              	.LBE88:
  32:../ExecuteTest.h **** 	{
 5399              		.loc 7 32 2
 5400 275a 4889C3   		movq	%rax, %rbx
 5401              	.L268:
 5402 275d E8000000 		call	__cxa_end_catch@PLT
 5402      00
 5403 2762 4889D8   		movq	%rbx, %rax
 5404 2765 4889C7   		movq	%rax, %rdi
 5405              	.LEHB147:
 5406 2768 E8000000 		call	_Unwind_Resume@PLT
 5406      00
 5407              	.LEHE147:
 5408              	.L276:
 5409 276d F30F1EFA 		endbr64
 5410              	.LBE90:
  38:../ExecuteTest.h **** 	{
 5411              		.loc 7 38 2
 5412 2771 4889C3   		movq	%rax, %rbx
 5413 2774 E8000000 		call	__cxa_end_catch@PLT
 5413      00
 5414 2779 4889D8   		movq	%rbx, %rax
 5415 277c 4889C7   		movq	%rax, %rdi
 5416              	.LEHB148:
 5417 277f E8000000 		call	_Unwind_Resume@PLT
 5417      00
 5418              	.LEHE148:
 5419              	.L257:
 5420              		.loc 7 42 1
 5421 2784 488B45D8 		movq	-40(%rbp), %rax
 5422 2788 64482B04 		subq	%fs:40, %rax
 5422      25280000 
 5422      00
 5423 2791 7405     		je	.L270
 5424 2793 E8000000 		call	__stack_chk_fail@PLT
 5424      00
 5425              	.L270:
 5426 2798 4881C458 		addq	$1624, %rsp
 5426      060000
 5427 279f 5B       		popq	%rbx
 5428 27a0 415C     		popq	%r12
 5429 27a2 415D     		popq	%r13
 5430 27a4 5D       		popq	%rbp
 5431              		.cfi_def_cfa 7, 8
 5432 27a5 C3       		ret
 5433              		.cfi_endproc
 5434              	.LFE1534:
 5435              		.section	.gcc_except_table
 5436              		.align 4
 5437              	.LLSDA1534:
 5438 03a0 FF       		.byte	0xff
 5439 03a1 9B       		.byte	0x9b
 5440 03a2 59       		.uleb128 .LLSDATT1534-.LLSDATTD1534
 5441              	.LLSDATTD1534:
 5442 03a3 01       		.byte	0x1
 5443 03a4 43       		.uleb128 .LLSDACSE1534-.LLSDACSB1534
 5444              	.LLSDACSB1534:
 5445 03a5 31       		.uleb128 .LEHB137-.LFB1534
 5446 03a6 05       		.uleb128 .LEHE137-.LEHB137
 5447 03a7 00       		.uleb128 0
 5448 03a8 00       		.uleb128 0
 5449 03a9 4A       		.uleb128 .LEHB138-.LFB1534
 5450 03aa 05       		.uleb128 .LEHE138-.LEHB138
 5451 03ab DF01     		.uleb128 .L271-.LFB1534
 5452 03ad 05       		.uleb128 0x5
 5453 03ae 9601     		.uleb128 .LEHB139-.LFB1534
 5454 03b0 14       		.uleb128 .LEHE139-.LEHB139
 5455 03b1 BE01     		.uleb128 .L272-.LFB1534
 5456 03b3 07       		.uleb128 0x7
 5457 03b4 B401     		.uleb128 .LEHB140-.LFB1534
 5458 03b6 05       		.uleb128 .LEHE140-.LEHB140
 5459 03b7 DF01     		.uleb128 .L271-.LFB1534
 5460 03b9 05       		.uleb128 0x5
 5461 03ba 8702     		.uleb128 .LEHB141-.LFB1534
 5462 03bc 8801     		.uleb128 .LEHE141-.LEHB141
 5463 03be F004     		.uleb128 .L273-.LFB1534
 5464 03c0 00       		.uleb128 0
 5465 03c1 B203     		.uleb128 .LEHB142-.LFB1534
 5466 03c3 05       		.uleb128 .LEHE142-.LEHB142
 5467 03c4 9F05     		.uleb128 .L274-.LFB1534
 5468 03c6 00       		.uleb128 0
 5469 03c7 CB03     		.uleb128 .LEHB143-.LFB1534
 5470 03c9 5C       		.uleb128 .LEHE143-.LEHB143
 5471 03ca 8705     		.uleb128 .L275-.LFB1534
 5472 03cc 00       		.uleb128 0
 5473 03cd B104     		.uleb128 .LEHB144-.LFB1534
 5474 03cf 05       		.uleb128 .LEHE144-.LEHB144
 5475 03d0 9F05     		.uleb128 .L274-.LFB1534
 5476 03d2 00       		.uleb128 0
 5477 03d3 C804     		.uleb128 .LEHB145-.LFB1534
 5478 03d5 21       		.uleb128 .LEHE145-.LEHB145
 5479 03d6 B605     		.uleb128 .L276-.LFB1534
 5480 03d8 00       		.uleb128 0
 5481 03d9 E904     		.uleb128 .LEHB146-.LFB1534
 5482 03db 1E       		.uleb128 .LEHE146-.LEHB146
 5483 03dc 00       		.uleb128 0
 5484 03dd 00       		.uleb128 0
 5485 03de B105     		.uleb128 .LEHB147-.LFB1534
 5486 03e0 05       		.uleb128 .LEHE147-.LEHB147
 5487 03e1 00       		.uleb128 0
 5488 03e2 00       		.uleb128 0
 5489 03e3 C805     		.uleb128 .LEHB148-.LFB1534
 5490 03e5 05       		.uleb128 .LEHE148-.LEHB148
 5491 03e6 00       		.uleb128 0
 5492 03e7 00       		.uleb128 0
 5493              	.LLSDACSE1534:
 5494 03e8 03       		.byte	0x3
 5495 03e9 00       		.byte	0
 5496 03ea 02       		.byte	0x2
 5497 03eb 7D       		.byte	0x7d
 5498 03ec 01       		.byte	0x1
 5499 03ed 7D       		.byte	0x7d
 5500 03ee 00       		.byte	0
 5501 03ef 7D       		.byte	0x7d
 5502              		.align 4
 5503 03f0 00000000 		.long	0
 5504              	
 5505 03f4 00000000 		.long	DW.ref._ZTISt9exception-.
 5506 03f8 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 5507              	.LLSDATT1534:
 5508              		.text
 5510              		.section	.text._ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv,"axG",@progbits,_ZNKSt
 5511              		.align 2
 5512              		.weak	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv
 5514              	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv:
 5515              	.LFB1536:
 684:/usr/include/c++/11/bits/stl_vector.h **** 
 685:/usr/include/c++/11/bits/stl_vector.h ****       /**
 686:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  %Vector assignment operator.
 687:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 688:/usr/include/c++/11/bits/stl_vector.h ****        *
 689:/usr/include/c++/11/bits/stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 690:/usr/include/c++/11/bits/stl_vector.h ****        *  @a __x will not be copied.
 691:/usr/include/c++/11/bits/stl_vector.h ****        *
 692:/usr/include/c++/11/bits/stl_vector.h ****        *  Whether the allocator is copied depends on the allocator traits.
 693:/usr/include/c++/11/bits/stl_vector.h ****        */
 694:/usr/include/c++/11/bits/stl_vector.h ****       vector&
 695:/usr/include/c++/11/bits/stl_vector.h ****       operator=(const vector& __x);
 696:/usr/include/c++/11/bits/stl_vector.h **** 
 697:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
 698:/usr/include/c++/11/bits/stl_vector.h ****       /**
 699:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  %Vector move assignment operator.
 700:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 701:/usr/include/c++/11/bits/stl_vector.h ****        *
 702:/usr/include/c++/11/bits/stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 703:/usr/include/c++/11/bits/stl_vector.h ****        *  if the allocators permit it).
 704:/usr/include/c++/11/bits/stl_vector.h ****        *  Afterwards @a __x is a valid, but unspecified %vector.
 705:/usr/include/c++/11/bits/stl_vector.h ****        *
 706:/usr/include/c++/11/bits/stl_vector.h ****        *  Whether the allocator is moved depends on the allocator traits.
 707:/usr/include/c++/11/bits/stl_vector.h ****        */
 708:/usr/include/c++/11/bits/stl_vector.h ****       vector&
 709:/usr/include/c++/11/bits/stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 710:/usr/include/c++/11/bits/stl_vector.h ****       {
 711:/usr/include/c++/11/bits/stl_vector.h **** 	constexpr bool __move_storage =
 712:/usr/include/c++/11/bits/stl_vector.h **** 	  _Alloc_traits::_S_propagate_on_move_assign()
 713:/usr/include/c++/11/bits/stl_vector.h **** 	  || _Alloc_traits::_S_always_equal();
 714:/usr/include/c++/11/bits/stl_vector.h **** 	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 715:/usr/include/c++/11/bits/stl_vector.h **** 	return *this;
 716:/usr/include/c++/11/bits/stl_vector.h ****       }
 717:/usr/include/c++/11/bits/stl_vector.h **** 
 718:/usr/include/c++/11/bits/stl_vector.h ****       /**
 719:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  %Vector list assignment operator.
 720:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 721:/usr/include/c++/11/bits/stl_vector.h ****        *
 722:/usr/include/c++/11/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 723:/usr/include/c++/11/bits/stl_vector.h ****        *  initializer list @a __l.
 724:/usr/include/c++/11/bits/stl_vector.h ****        *
 725:/usr/include/c++/11/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 726:/usr/include/c++/11/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 727:/usr/include/c++/11/bits/stl_vector.h ****        *  of elements assigned.
 728:/usr/include/c++/11/bits/stl_vector.h ****        */
 729:/usr/include/c++/11/bits/stl_vector.h ****       vector&
 730:/usr/include/c++/11/bits/stl_vector.h ****       operator=(initializer_list<value_type> __l)
 731:/usr/include/c++/11/bits/stl_vector.h ****       {
 732:/usr/include/c++/11/bits/stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 733:/usr/include/c++/11/bits/stl_vector.h **** 			    random_access_iterator_tag());
 734:/usr/include/c++/11/bits/stl_vector.h **** 	return *this;
 735:/usr/include/c++/11/bits/stl_vector.h ****       }
 736:/usr/include/c++/11/bits/stl_vector.h **** #endif
 737:/usr/include/c++/11/bits/stl_vector.h **** 
 738:/usr/include/c++/11/bits/stl_vector.h ****       /**
 739:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 740:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 741:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __val  Value to be assigned.
 742:/usr/include/c++/11/bits/stl_vector.h ****        *
 743:/usr/include/c++/11/bits/stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 744:/usr/include/c++/11/bits/stl_vector.h ****        *  value.  Note that the assignment completely changes the
 745:/usr/include/c++/11/bits/stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 746:/usr/include/c++/11/bits/stl_vector.h ****        *  the number of elements assigned.
 747:/usr/include/c++/11/bits/stl_vector.h ****        */
 748:/usr/include/c++/11/bits/stl_vector.h ****       void
 749:/usr/include/c++/11/bits/stl_vector.h ****       assign(size_type __n, const value_type& __val)
 750:/usr/include/c++/11/bits/stl_vector.h ****       { _M_fill_assign(__n, __val); }
 751:/usr/include/c++/11/bits/stl_vector.h **** 
 752:/usr/include/c++/11/bits/stl_vector.h ****       /**
 753:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 754:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 755:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __last   An input iterator.
 756:/usr/include/c++/11/bits/stl_vector.h ****        *
 757:/usr/include/c++/11/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 758:/usr/include/c++/11/bits/stl_vector.h ****        *  range [__first,__last).
 759:/usr/include/c++/11/bits/stl_vector.h ****        *
 760:/usr/include/c++/11/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 761:/usr/include/c++/11/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 762:/usr/include/c++/11/bits/stl_vector.h ****        *  of elements assigned.
 763:/usr/include/c++/11/bits/stl_vector.h ****        */
 764:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
 765:/usr/include/c++/11/bits/stl_vector.h ****       template<typename _InputIterator,
 766:/usr/include/c++/11/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 767:/usr/include/c++/11/bits/stl_vector.h **** 	void
 768:/usr/include/c++/11/bits/stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 769:/usr/include/c++/11/bits/stl_vector.h **** 	{ _M_assign_dispatch(__first, __last, __false_type()); }
 770:/usr/include/c++/11/bits/stl_vector.h **** #else
 771:/usr/include/c++/11/bits/stl_vector.h ****       template<typename _InputIterator>
 772:/usr/include/c++/11/bits/stl_vector.h **** 	void
 773:/usr/include/c++/11/bits/stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 774:/usr/include/c++/11/bits/stl_vector.h **** 	{
 775:/usr/include/c++/11/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 776:/usr/include/c++/11/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 777:/usr/include/c++/11/bits/stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 778:/usr/include/c++/11/bits/stl_vector.h **** 	}
 779:/usr/include/c++/11/bits/stl_vector.h **** #endif
 780:/usr/include/c++/11/bits/stl_vector.h **** 
 781:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
 782:/usr/include/c++/11/bits/stl_vector.h ****       /**
 783:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 784:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 785:/usr/include/c++/11/bits/stl_vector.h ****        *
 786:/usr/include/c++/11/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 787:/usr/include/c++/11/bits/stl_vector.h ****        *  initializer list @a __l.
 788:/usr/include/c++/11/bits/stl_vector.h ****        *
 789:/usr/include/c++/11/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 790:/usr/include/c++/11/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 791:/usr/include/c++/11/bits/stl_vector.h ****        *  of elements assigned.
 792:/usr/include/c++/11/bits/stl_vector.h ****        */
 793:/usr/include/c++/11/bits/stl_vector.h ****       void
 794:/usr/include/c++/11/bits/stl_vector.h ****       assign(initializer_list<value_type> __l)
 795:/usr/include/c++/11/bits/stl_vector.h ****       {
 796:/usr/include/c++/11/bits/stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 797:/usr/include/c++/11/bits/stl_vector.h **** 			    random_access_iterator_tag());
 798:/usr/include/c++/11/bits/stl_vector.h ****       }
 799:/usr/include/c++/11/bits/stl_vector.h **** #endif
 800:/usr/include/c++/11/bits/stl_vector.h **** 
 801:/usr/include/c++/11/bits/stl_vector.h ****       /// Get a copy of the memory allocation object.
 802:/usr/include/c++/11/bits/stl_vector.h ****       using _Base::get_allocator;
 803:/usr/include/c++/11/bits/stl_vector.h **** 
 804:/usr/include/c++/11/bits/stl_vector.h ****       // iterators
 805:/usr/include/c++/11/bits/stl_vector.h ****       /**
 806:/usr/include/c++/11/bits/stl_vector.h ****        *  Returns a read/write iterator that points to the first
 807:/usr/include/c++/11/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 808:/usr/include/c++/11/bits/stl_vector.h ****        *  element order.
 809:/usr/include/c++/11/bits/stl_vector.h ****        */
 810:/usr/include/c++/11/bits/stl_vector.h ****       iterator
 811:/usr/include/c++/11/bits/stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 812:/usr/include/c++/11/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 813:/usr/include/c++/11/bits/stl_vector.h **** 
 814:/usr/include/c++/11/bits/stl_vector.h ****       /**
 815:/usr/include/c++/11/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 816:/usr/include/c++/11/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 817:/usr/include/c++/11/bits/stl_vector.h ****        *  element order.
 818:/usr/include/c++/11/bits/stl_vector.h ****        */
 819:/usr/include/c++/11/bits/stl_vector.h ****       const_iterator
 820:/usr/include/c++/11/bits/stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 821:/usr/include/c++/11/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 822:/usr/include/c++/11/bits/stl_vector.h **** 
 823:/usr/include/c++/11/bits/stl_vector.h ****       /**
 824:/usr/include/c++/11/bits/stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 825:/usr/include/c++/11/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 826:/usr/include/c++/11/bits/stl_vector.h ****        *  element order.
 827:/usr/include/c++/11/bits/stl_vector.h ****        */
 828:/usr/include/c++/11/bits/stl_vector.h ****       iterator
 829:/usr/include/c++/11/bits/stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 830:/usr/include/c++/11/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 831:/usr/include/c++/11/bits/stl_vector.h **** 
 832:/usr/include/c++/11/bits/stl_vector.h ****       /**
 833:/usr/include/c++/11/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 834:/usr/include/c++/11/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 835:/usr/include/c++/11/bits/stl_vector.h ****        *  ordinary element order.
 836:/usr/include/c++/11/bits/stl_vector.h ****        */
 837:/usr/include/c++/11/bits/stl_vector.h ****       const_iterator
 838:/usr/include/c++/11/bits/stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 839:/usr/include/c++/11/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 840:/usr/include/c++/11/bits/stl_vector.h **** 
 841:/usr/include/c++/11/bits/stl_vector.h ****       /**
 842:/usr/include/c++/11/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 843:/usr/include/c++/11/bits/stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 844:/usr/include/c++/11/bits/stl_vector.h ****        *  element order.
 845:/usr/include/c++/11/bits/stl_vector.h ****        */
 846:/usr/include/c++/11/bits/stl_vector.h ****       reverse_iterator
 847:/usr/include/c++/11/bits/stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 848:/usr/include/c++/11/bits/stl_vector.h ****       { return reverse_iterator(end()); }
 849:/usr/include/c++/11/bits/stl_vector.h **** 
 850:/usr/include/c++/11/bits/stl_vector.h ****       /**
 851:/usr/include/c++/11/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 852:/usr/include/c++/11/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 853:/usr/include/c++/11/bits/stl_vector.h ****        *  reverse element order.
 854:/usr/include/c++/11/bits/stl_vector.h ****        */
 855:/usr/include/c++/11/bits/stl_vector.h ****       const_reverse_iterator
 856:/usr/include/c++/11/bits/stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 857:/usr/include/c++/11/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 858:/usr/include/c++/11/bits/stl_vector.h **** 
 859:/usr/include/c++/11/bits/stl_vector.h ****       /**
 860:/usr/include/c++/11/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 861:/usr/include/c++/11/bits/stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 862:/usr/include/c++/11/bits/stl_vector.h ****        *  in reverse element order.
 863:/usr/include/c++/11/bits/stl_vector.h ****        */
 864:/usr/include/c++/11/bits/stl_vector.h ****       reverse_iterator
 865:/usr/include/c++/11/bits/stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 866:/usr/include/c++/11/bits/stl_vector.h ****       { return reverse_iterator(begin()); }
 867:/usr/include/c++/11/bits/stl_vector.h **** 
 868:/usr/include/c++/11/bits/stl_vector.h ****       /**
 869:/usr/include/c++/11/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 870:/usr/include/c++/11/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 871:/usr/include/c++/11/bits/stl_vector.h ****        *  is done in reverse element order.
 872:/usr/include/c++/11/bits/stl_vector.h ****        */
 873:/usr/include/c++/11/bits/stl_vector.h ****       const_reverse_iterator
 874:/usr/include/c++/11/bits/stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 875:/usr/include/c++/11/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 876:/usr/include/c++/11/bits/stl_vector.h **** 
 877:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
 878:/usr/include/c++/11/bits/stl_vector.h ****       /**
 879:/usr/include/c++/11/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 880:/usr/include/c++/11/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 881:/usr/include/c++/11/bits/stl_vector.h ****        *  element order.
 882:/usr/include/c++/11/bits/stl_vector.h ****        */
 883:/usr/include/c++/11/bits/stl_vector.h ****       const_iterator
 884:/usr/include/c++/11/bits/stl_vector.h ****       cbegin() const noexcept
 885:/usr/include/c++/11/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 886:/usr/include/c++/11/bits/stl_vector.h **** 
 887:/usr/include/c++/11/bits/stl_vector.h ****       /**
 888:/usr/include/c++/11/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 889:/usr/include/c++/11/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 890:/usr/include/c++/11/bits/stl_vector.h ****        *  ordinary element order.
 891:/usr/include/c++/11/bits/stl_vector.h ****        */
 892:/usr/include/c++/11/bits/stl_vector.h ****       const_iterator
 893:/usr/include/c++/11/bits/stl_vector.h ****       cend() const noexcept
 894:/usr/include/c++/11/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 895:/usr/include/c++/11/bits/stl_vector.h **** 
 896:/usr/include/c++/11/bits/stl_vector.h ****       /**
 897:/usr/include/c++/11/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 898:/usr/include/c++/11/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 899:/usr/include/c++/11/bits/stl_vector.h ****        *  reverse element order.
 900:/usr/include/c++/11/bits/stl_vector.h ****        */
 901:/usr/include/c++/11/bits/stl_vector.h ****       const_reverse_iterator
 902:/usr/include/c++/11/bits/stl_vector.h ****       crbegin() const noexcept
 903:/usr/include/c++/11/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 904:/usr/include/c++/11/bits/stl_vector.h **** 
 905:/usr/include/c++/11/bits/stl_vector.h ****       /**
 906:/usr/include/c++/11/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 907:/usr/include/c++/11/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 908:/usr/include/c++/11/bits/stl_vector.h ****        *  is done in reverse element order.
 909:/usr/include/c++/11/bits/stl_vector.h ****        */
 910:/usr/include/c++/11/bits/stl_vector.h ****       const_reverse_iterator
 911:/usr/include/c++/11/bits/stl_vector.h ****       crend() const noexcept
 912:/usr/include/c++/11/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 913:/usr/include/c++/11/bits/stl_vector.h **** #endif
 914:/usr/include/c++/11/bits/stl_vector.h **** 
 915:/usr/include/c++/11/bits/stl_vector.h ****       // [23.2.4.2] capacity
 916:/usr/include/c++/11/bits/stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 917:/usr/include/c++/11/bits/stl_vector.h ****       size_type
 918:/usr/include/c++/11/bits/stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 5516              		.loc 6 918 7
 5517              		.cfi_startproc
 5518 0000 F30F1EFA 		endbr64
 5519 0004 55       		pushq	%rbp
 5520              		.cfi_def_cfa_offset 16
 5521              		.cfi_offset 6, -16
 5522 0005 4889E5   		movq	%rsp, %rbp
 5523              		.cfi_def_cfa_register 6
 5524 0008 48897DF8 		movq	%rdi, -8(%rbp)
 919:/usr/include/c++/11/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 5525              		.loc 6 919 40
 5526 000c 488B45F8 		movq	-8(%rbp), %rax
 5527 0010 488B5008 		movq	8(%rax), %rdx
 5528              		.loc 6 919 66
 5529 0014 488B45F8 		movq	-8(%rbp), %rax
 5530 0018 488B08   		movq	(%rax), %rcx
 5531              		.loc 6 919 50
 5532 001b 4889D0   		movq	%rdx, %rax
 5533 001e 4829C8   		subq	%rcx, %rax
 5534 0021 48C1F807 		sarq	$7, %rax
 5535              		.loc 6 919 77
 5536 0025 5D       		popq	%rbp
 5537              		.cfi_def_cfa 7, 8
 5538 0026 C3       		ret
 5539              		.cfi_endproc
 5540              	.LFE1536:
 5542              		.section	.rodata
 5543              	.LC34:
 5544 055b 45787065 		.string	"Expected "
 5544      63746564 
 5544      2000
 5545              	.LC35:
 5546 0565 20627574 		.string	" but was "
 5546      20776173 
 5546      2000
 5547              		.section	.text._ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"axG",
 5548              		.weak	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 5550              	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:
 5551              	.LFB1537:
 5552              		.file 8 "../Checks.h"
   1:../Checks.h   **** #ifndef UNITTEST_CHECKS_H
   2:../Checks.h   **** #define UNITTEST_CHECKS_H
   3:../Checks.h   **** 
   4:../Checks.h   **** #include "Config.h"
   5:../Checks.h   **** #include "TestResults.h"
   6:../Checks.h   **** #include "MemoryOutStream.h"
   7:../Checks.h   **** 
   8:../Checks.h   **** namespace UnitTest {
   9:../Checks.h   **** 
  10:../Checks.h   **** 
  11:../Checks.h   **** template< typename Value >
  12:../Checks.h   **** bool Check(Value const value)
  13:../Checks.h   **** {
  14:../Checks.h   ****     return !!value; // doing double negative to avoid silly VS warnings
  15:../Checks.h   **** }
  16:../Checks.h   **** 
  17:../Checks.h   **** 
  18:../Checks.h   **** template< typename Expected, typename Actual >
  19:../Checks.h   **** void CheckEqual(TestResults& results, Expected const& expected, Actual const& actual, TestDetails c
 5553              		.loc 8 19 6
 5554              		.cfi_startproc
 5555              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 5556              		.cfi_lsda 0x1b,.LLSDA1537
 5557 0000 F30F1EFA 		endbr64
 5558 0004 55       		pushq	%rbp
 5559              		.cfi_def_cfa_offset 16
 5560              		.cfi_offset 6, -16
 5561 0005 4889E5   		movq	%rsp, %rbp
 5562              		.cfi_def_cfa_register 6
 5563 0008 53       		pushq	%rbx
 5564 0009 4881ECC8 		subq	$456, %rsp
 5564      010000
 5565              		.cfi_offset 3, -24
 5566 0010 4889BD48 		movq	%rdi, -440(%rbp)
 5566      FEFFFF
 5567 0017 4889B540 		movq	%rsi, -448(%rbp)
 5567      FEFFFF
 5568 001e 48899538 		movq	%rdx, -456(%rbp)
 5568      FEFFFF
 5569 0025 48898D30 		movq	%rcx, -464(%rbp)
 5569      FEFFFF
 5570              		.loc 8 19 6
 5571 002c 64488B04 		movq	%fs:40, %rax
 5571      25280000 
 5571      00
 5572 0035 488945E8 		movq	%rax, -24(%rbp)
 5573 0039 31C0     		xorl	%eax, %eax
 5574              	.LBB91:
  20:../Checks.h   **** {
  21:../Checks.h   ****     if (!(expected == actual))
 5575              		.loc 8 21 20
 5576 003b 488B8540 		movq	-448(%rbp), %rax
 5576      FEFFFF
 5577 0042 8B10     		movl	(%rax), %edx
 5578 0044 488B8538 		movq	-456(%rbp), %rax
 5578      FEFFFF
 5579 004b 8B00     		movl	(%rax), %eax
 5580              		.loc 8 21 5
 5581 004d 39C2     		cmpl	%eax, %edx
 5582 004f 0F84C600 		je	.L285
 5582      0000
 5583              	.LBB92:
  22:../Checks.h   ****     {
  23:../Checks.h   ****         UnitTest::MemoryOutStream stream;
 5584              		.loc 8 23 35
 5585 0055 488D8550 		leaq	-432(%rbp), %rax
 5585      FEFFFF
 5586 005c 4889C7   		movq	%rax, %rdi
 5587              	.LEHB149:
 5588 005f E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5588      00
 5589              	.LEHE149:
  24:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 5590              		.loc 8 24 16
 5591 0064 488D8550 		leaq	-432(%rbp), %rax
 5591      FEFFFF
 5592 006b 488D1500 		leaq	.LC34(%rip), %rdx
 5592      000000
 5593 0072 4889D6   		movq	%rdx, %rsi
 5594 0075 4889C7   		movq	%rax, %rdi
 5595              	.LEHB150:
 5596 0078 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5596      00
 5597 007d 4889C2   		movq	%rax, %rdx
 5598              		.loc 8 24 43
 5599 0080 488B8540 		movq	-448(%rbp), %rax
 5599      FEFFFF
 5600 0087 8B00     		movl	(%rax), %eax
 5601 0089 89C6     		movl	%eax, %esi
 5602 008b 4889D7   		movq	%rdx, %rdi
 5603 008e E8000000 		call	_ZNSolsEi@PLT
 5603      00
 5604              		.loc 8 24 43 is_stmt 0 discriminator 1
 5605 0093 4889C2   		movq	%rax, %rdx
 5606 0096 488D0500 		leaq	.LC35(%rip), %rax
 5606      000000
 5607 009d 4889C6   		movq	%rax, %rsi
 5608 00a0 4889D7   		movq	%rdx, %rdi
 5609 00a3 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5609      00
 5610              		.loc 8 24 43 discriminator 2
 5611 00a8 4889C2   		movq	%rax, %rdx
 5612              		.loc 8 24 58 is_stmt 1 discriminator 2
 5613 00ab 488B8538 		movq	-456(%rbp), %rax
 5613      FEFFFF
 5614 00b2 8B00     		movl	(%rax), %eax
 5615 00b4 89C6     		movl	%eax, %esi
 5616 00b6 4889D7   		movq	%rdx, %rdi
 5617 00b9 E8000000 		call	_ZNSolsEi@PLT
 5617      00
  25:../Checks.h   **** 
  26:../Checks.h   ****         results.OnTestFailure(details, stream.GetText());
 5618              		.loc 8 26 30
 5619 00be 488D8550 		leaq	-432(%rbp), %rax
 5619      FEFFFF
 5620 00c5 4889C7   		movq	%rax, %rdi
 5621 00c8 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 5621      00
 5622 00cd 4889C2   		movq	%rax, %rdx
 5623 00d0 488B8D30 		movq	-464(%rbp), %rcx
 5623      FEFFFF
 5624 00d7 488B8548 		movq	-440(%rbp), %rax
 5624      FEFFFF
 5625 00de 4889CE   		movq	%rcx, %rsi
 5626 00e1 4889C7   		movq	%rax, %rdi
 5627 00e4 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5627      00
 5628              	.LEHE150:
  27:../Checks.h   ****     }
 5629              		.loc 8 27 5
 5630 00e9 488D8550 		leaq	-432(%rbp), %rax
 5630      FEFFFF
 5631 00f0 4889C7   		movq	%rax, %rdi
 5632              	.LEHB151:
 5633 00f3 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5633      00
 5634              	.LEHE151:
 5635              	.LBE92:
 5636              	.LBE91:
  28:../Checks.h   **** }
 5637              		.loc 8 28 1
 5638 00f8 EB21     		jmp	.L285
 5639              	.L284:
 5640 00fa F30F1EFA 		endbr64
 5641              	.LBB94:
 5642              	.LBB93:
  27:../Checks.h   ****     }
 5643              		.loc 8 27 5
 5644 00fe 4889C3   		movq	%rax, %rbx
 5645 0101 488D8550 		leaq	-432(%rbp), %rax
 5645      FEFFFF
 5646 0108 4889C7   		movq	%rax, %rdi
 5647 010b E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5647      00
 5648 0110 4889D8   		movq	%rbx, %rax
 5649 0113 4889C7   		movq	%rax, %rdi
 5650              	.LEHB152:
 5651 0116 E8000000 		call	_Unwind_Resume@PLT
 5651      00
 5652              	.LEHE152:
 5653              	.L285:
 5654              	.LBE93:
 5655              	.LBE94:
 5656              		.loc 8 28 1
 5657 011b 90       		nop
 5658 011c 488B45E8 		movq	-24(%rbp), %rax
 5659 0120 64482B04 		subq	%fs:40, %rax
 5659      25280000 
 5659      00
 5660 0129 7405     		je	.L283
 5661 012b E8000000 		call	__stack_chk_fail@PLT
 5661      00
 5662              	.L283:
 5663 0130 488B5DF8 		movq	-8(%rbp), %rbx
 5664 0134 C9       		leave
 5665              		.cfi_def_cfa 7, 8
 5666 0135 C3       		ret
 5667              		.cfi_endproc
 5668              	.LFE1537:
 5669              		.section	.gcc_except_table
 5670              	.LLSDA1537:
 5671 03fc FF       		.byte	0xff
 5672 03fd FF       		.byte	0xff
 5673 03fe 01       		.byte	0x1
 5674 03ff 13       		.uleb128 .LLSDACSE1537-.LLSDACSB1537
 5675              	.LLSDACSB1537:
 5676 0400 5F       		.uleb128 .LEHB149-.LFB1537
 5677 0401 05       		.uleb128 .LEHE149-.LEHB149
 5678 0402 00       		.uleb128 0
 5679 0403 00       		.uleb128 0
 5680 0404 78       		.uleb128 .LEHB150-.LFB1537
 5681 0405 71       		.uleb128 .LEHE150-.LEHB150
 5682 0406 FA01     		.uleb128 .L284-.LFB1537
 5683 0408 00       		.uleb128 0
 5684 0409 F301     		.uleb128 .LEHB151-.LFB1537
 5685 040b 05       		.uleb128 .LEHE151-.LEHB151
 5686 040c 00       		.uleb128 0
 5687 040d 00       		.uleb128 0
 5688 040e 9602     		.uleb128 .LEHB152-.LFB1537
 5689 0410 05       		.uleb128 .LEHE152-.LEHB152
 5690 0411 00       		.uleb128 0
 5691 0412 00       		.uleb128 0
 5692              	.LLSDACSE1537:
 5693              		.section	.text._ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"axG",
 5695              		.text
 5697              	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTest
 5698              	.LFB1538:
  16:../ExecuteTest.h **** {
 5699              		.loc 7 16 6
 5700              		.cfi_startproc
 5701              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 5702              		.cfi_lsda 0x1b,.LLSDA1538
 5703 27a6 F30F1EFA 		endbr64
 5704 27aa 55       		pushq	%rbp
 5705              		.cfi_def_cfa_offset 16
 5706              		.cfi_offset 6, -16
 5707 27ab 4889E5   		movq	%rsp, %rbp
 5708              		.cfi_def_cfa_register 6
 5709 27ae 4155     		pushq	%r13
 5710 27b0 4154     		pushq	%r12
 5711 27b2 53       		pushq	%rbx
 5712 27b3 4881EC58 		subq	$1624, %rsp
 5712      060000
 5713              		.cfi_offset 13, -24
 5714              		.cfi_offset 12, -32
 5715              		.cfi_offset 3, -40
 5716 27ba 4889BD98 		movq	%rdi, -1640(%rbp)
 5716      F9FFFF
 5717 27c1 4889B590 		movq	%rsi, -1648(%rbp)
 5717      F9FFFF
  16:../ExecuteTest.h **** {
 5718              		.loc 7 16 6
 5719 27c8 64488B04 		movq	%fs:40, %rax
 5719      25280000 
 5719      00
 5720 27d1 488945D8 		movq	%rax, -40(%rbp)
 5721 27d5 31C0     		xorl	%eax, %eax
 5722              	.LEHB153:
  18:../ExecuteTest.h **** 
 5723              		.loc 7 18 22
 5724 27d7 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 5724      00
 5725              	.LEHE153:
  18:../ExecuteTest.h **** 
 5726              		.loc 7 18 25
 5727 27dc 488B9590 		movq	-1648(%rbp), %rdx
 5727      F9FFFF
 5728 27e3 488910   		movq	%rdx, (%rax)
 5729              	.LBB95:
  23:../ExecuteTest.h **** #endif
 5730              		.loc 7 23 3
 5731 27e6 488D8570 		leaq	-1168(%rbp), %rax
 5731      FBFFFF
 5732 27ed 4889C7   		movq	%rax, %rdi
 5733              	.LEHB154:
 5734 27f0 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev@PLT
 5734      00
 5735              	.LEHE154:
  23:../ExecuteTest.h **** #endif
 5736              		.loc 7 23 3 is_stmt 0 discriminator 1
 5737 27f5 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 5737      000000
 5738 27fc BE010000 		movl	$1, %esi
 5738      00
 5739 2801 4889C7   		movq	%rax, %rdi
 5740 2804 E8000000 		call	__sigsetjmp@PLT
 5740      00
 5741 2809 F30F1EFA 		endbr64
 5742 280d 85C0     		testl	%eax, %eax
 5743 280f 0F95C0   		setne	%al
 5744 2812 84C0     		testb	%al, %al
 5745 2814 742B     		je	.L288
  23:../ExecuteTest.h **** #endif
 5746              		.loc 7 23 3 discriminator 4
 5747 2816 BF080000 		movl	$8, %edi
 5747      00
 5748 281b E8000000 		call	__cxa_allocate_exception@PLT
 5748      00
 5749 2820 488D1500 		leaq	.LC32(%rip), %rdx
 5749      000000
 5750 2827 488910   		movq	%rdx, (%rax)
 5751 282a BA000000 		movl	$0, %edx
 5751      00
 5752 282f 488D0D00 		leaq	_ZTIPKc(%rip), %rcx
 5752      000000
 5753 2836 4889CE   		movq	%rcx, %rsi
 5754 2839 4889C7   		movq	%rax, %rdi
 5755              	.LEHB155:
 5756 283c E8000000 		call	__cxa_throw@PLT
 5756      00
 5757              	.L288:
  25:../ExecuteTest.h **** 	}
 5758              		.loc 7 25 21 is_stmt 1
 5759 2841 488B8598 		movq	-1640(%rbp), %rax
 5759      F9FFFF
 5760 2848 4889C7   		movq	%rax, %rdi
 5761 284b E830E3FF 		call	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 5761      FF
 5762              	.LEHE155:
  26:../ExecuteTest.h **** 	catch (AssertException const& e)
 5763              		.loc 7 26 2
 5764 2850 488D8570 		leaq	-1168(%rbp), %rax
 5764      FBFFFF
 5765 2857 4889C7   		movq	%rax, %rdi
 5766              	.LEHB156:
 5767 285a E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 5767      00
 5768              	.LEHE156:
 5769              	.LBE95:
 5770              		.loc 7 42 1
 5771 285f E90F0200 		jmp	.L286
 5771      00
 5772              	.L301:
 5773 2864 F30F1EFA 		endbr64
 5774              	.LBB96:
  26:../ExecuteTest.h **** 	catch (AssertException const& e)
 5775              		.loc 7 26 2
 5776 2868 4989C4   		movq	%rax, %r12
 5777 286b 4889D3   		movq	%rdx, %rbx
 5778 286e 488D8570 		leaq	-1168(%rbp), %rax
 5778      FBFFFF
 5779 2875 4889C7   		movq	%rax, %rdi
 5780 2878 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 5780      00
 5781 287d 4C89E0   		movq	%r12, %rax
 5782 2880 4889DA   		movq	%rbx, %rdx
 5783 2883 EB04     		jmp	.L290
 5784              	.L300:
 5785 2885 F30F1EFA 		endbr64
 5786              	.L290:
 5787              	.LBE96:
  27:../ExecuteTest.h **** 	{
 5788              		.loc 7 27 2
 5789 2889 4883FA01 		cmpq	$1, %rdx
 5790 288d 740F     		je	.L291
 5791 288f 4883FA02 		cmpq	$2, %rdx
 5792 2893 0F84A600 		je	.L292
 5792      0000
 5793 2899 E9480100 		jmp	.L306
 5793      00
 5794              	.L291:
 5795              	.LBB97:
  27:../ExecuteTest.h **** 	{
 5796              		.loc 7 27 2 is_stmt 0 discriminator 1
 5797 289e 4889C7   		movq	%rax, %rdi
 5798 28a1 E8000000 		call	__cxa_begin_catch@PLT
 5798      00
  27:../ExecuteTest.h **** 	{
 5799              		.loc 7 27 32 is_stmt 1 discriminator 1
 5800 28a6 488985A8 		movq	%rax, -1624(%rbp)
 5800      F9FFFF
 5801              	.LEHB157:
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5802              		.loc 7 29 23 discriminator 1
 5803 28ad E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5803      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5804              		.loc 7 29 40 discriminator 2
 5805 28b2 488B18   		movq	(%rax), %rbx
  30:../ExecuteTest.h **** 	}
 5806              		.loc 7 30 90 discriminator 2
 5807 28b5 488B85A8 		movq	-1624(%rbp), %rax
 5807      F9FFFF
 5808 28bc 488B00   		movq	(%rax), %rax
 5809 28bf 4883C010 		addq	$16, %rax
 5810 28c3 488B10   		movq	(%rax), %rdx
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5811              		.loc 7 29 40 discriminator 2
 5812 28c6 488B85A8 		movq	-1624(%rbp), %rax
 5812      F9FFFF
 5813 28cd 4889C7   		movq	%rax, %rdi
 5814 28d0 FFD2     		call	*%rdx
 5815              	.LVL14:
 5816 28d2 4989C4   		movq	%rax, %r12
  30:../ExecuteTest.h **** 	}
 5817              		.loc 7 30 4 discriminator 2
 5818 28d5 488B85A8 		movq	-1624(%rbp), %rax
 5818      F9FFFF
 5819 28dc 4889C7   		movq	%rax, %rdi
 5820 28df E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 5820      00
 5821 28e4 4189C5   		movl	%eax, %r13d
 5822 28e7 488B85A8 		movq	-1624(%rbp), %rax
 5822      F9FFFF
 5823 28ee 4889C7   		movq	%rax, %rdi
 5824 28f1 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 5824      00
  30:../ExecuteTest.h **** 	}
 5825              		.loc 7 30 4 is_stmt 0 discriminator 1
 5826 28f6 4889C1   		movq	%rax, %rcx
  30:../ExecuteTest.h **** 	}
 5827              		.loc 7 30 42 is_stmt 1 discriminator 1
 5828 28f9 488B8590 		movq	-1648(%rbp), %rax
 5828      F9FFFF
 5829 2900 488B10   		movq	(%rax), %rdx
  30:../ExecuteTest.h **** 	}
 5830              		.loc 7 30 24 discriminator 1
 5831 2903 488B8590 		movq	-1648(%rbp), %rax
 5831      F9FFFF
 5832 290a 488B7008 		movq	8(%rax), %rsi
  30:../ExecuteTest.h **** 	}
 5833              		.loc 7 30 4 discriminator 1
 5834 290e 488D85B0 		leaq	-1616(%rbp), %rax
 5834      F9FFFF
 5835 2915 4589E8   		movl	%r13d, %r8d
 5836 2918 4889C7   		movq	%rax, %rdi
 5837 291b E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 5837      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5838              		.loc 7 29 40
 5839 2920 488D85B0 		leaq	-1616(%rbp), %rax
 5839      F9FFFF
 5840 2927 4C89E2   		movq	%r12, %rdx
 5841 292a 4889C6   		movq	%rax, %rsi
 5842 292d 4889DF   		movq	%rbx, %rdi
 5843 2930 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5843      00
 5844              	.LEHE157:
  27:../ExecuteTest.h **** 	{
 5845              		.loc 7 27 2
 5846 2935 E8000000 		call	__cxa_end_catch@PLT
 5846      00
 5847              	.LBE97:
 5848              		.loc 7 42 1
 5849 293a E9340100 		jmp	.L286
 5849      00
 5850              	.L292:
 5851              	.LBB98:
  32:../ExecuteTest.h **** 	{
 5852              		.loc 7 32 2
 5853 293f 4889C7   		movq	%rax, %rdi
 5854 2942 E8000000 		call	__cxa_begin_catch@PLT
 5854      00
  32:../ExecuteTest.h **** 	{
 5855              		.loc 7 32 31
 5856 2947 488985A0 		movq	%rax, -1632(%rbp)
 5856      F9FFFF
 5857              	.LBB99:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 5858              		.loc 7 34 19
 5859 294e 488D85D0 		leaq	-1584(%rbp), %rax
 5859      F9FFFF
 5860 2955 4889C7   		movq	%rax, %rdi
 5861              	.LEHB158:
 5862 2958 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5862      00
 5863              	.LEHE158:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 5864              		.loc 7 35 37
 5865 295d 488D85D0 		leaq	-1584(%rbp), %rax
 5865      F9FFFF
 5866 2964 488D1500 		leaq	.LC6(%rip), %rdx
 5866      000000
 5867 296b 4889D6   		movq	%rdx, %rsi
 5868 296e 4889C7   		movq	%rax, %rdi
 5869              	.LEHB159:
 5870 2971 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5870      00
 5871 2976 4889C3   		movq	%rax, %rbx
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 5872              		.loc 7 35 46
 5873 2979 488B85A0 		movq	-1632(%rbp), %rax
 5873      F9FFFF
 5874 2980 488B00   		movq	(%rax), %rax
 5875 2983 4883C010 		addq	$16, %rax
 5876 2987 488B10   		movq	(%rax), %rdx
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 5877              		.loc 7 35 37
 5878 298a 488B85A0 		movq	-1632(%rbp), %rax
 5878      F9FFFF
 5879 2991 4889C7   		movq	%rax, %rdi
 5880 2994 FFD2     		call	*%rdx
 5881              	.LVL15:
 5882 2996 4889C6   		movq	%rax, %rsi
 5883 2999 4889DF   		movq	%rbx, %rdi
 5884 299c E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5884      00
  36:../ExecuteTest.h **** 	}
 5885              		.loc 7 36 23
 5886 29a1 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5886      00
  36:../ExecuteTest.h **** 	}
 5887              		.loc 7 36 40
 5888 29a6 488B18   		movq	(%rax), %rbx
 5889 29a9 488D85D0 		leaq	-1584(%rbp), %rax
 5889      F9FFFF
 5890 29b0 4889C7   		movq	%rax, %rdi
 5891 29b3 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 5891      00
  36:../ExecuteTest.h **** 	}
 5892              		.loc 7 36 40 is_stmt 0 discriminator 1
 5893 29b8 4889C2   		movq	%rax, %rdx
 5894 29bb 488B8590 		movq	-1648(%rbp), %rax
 5894      F9FFFF
 5895 29c2 4889C6   		movq	%rax, %rsi
 5896 29c5 4889DF   		movq	%rbx, %rdi
 5897 29c8 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5897      00
 5898              	.LEHE159:
  37:../ExecuteTest.h **** 	catch (...)
 5899              		.loc 7 37 2 is_stmt 1
 5900 29cd 488D85D0 		leaq	-1584(%rbp), %rax
 5900      F9FFFF
 5901 29d4 4889C7   		movq	%rax, %rdi
 5902              	.LEHB160:
 5903 29d7 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5903      00
 5904              	.LEHE160:
 5905              	.LBE99:
  32:../ExecuteTest.h **** 	{
 5906              		.loc 7 32 2
 5907 29dc E8000000 		call	__cxa_end_catch@PLT
 5907      00
 5908              	.LBE98:
 5909              		.loc 7 42 1
 5910 29e1 E98D0000 		jmp	.L286
 5910      00
 5911              	.L306:
  38:../ExecuteTest.h **** 	{
 5912              		.loc 7 38 2
 5913 29e6 4889C7   		movq	%rax, %rdi
 5914 29e9 E8000000 		call	__cxa_begin_catch@PLT
 5914      00
 5915              	.LEHB161:
  40:../ExecuteTest.h **** 	}
 5916              		.loc 7 40 23
 5917 29ee E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5917      00
  40:../ExecuteTest.h **** 	}
 5918              		.loc 7 40 40
 5919 29f3 488B00   		movq	(%rax), %rax
 5920 29f6 488B8D90 		movq	-1648(%rbp), %rcx
 5920      F9FFFF
 5921 29fd 488D1500 		leaq	.LC33(%rip), %rdx
 5921      000000
 5922 2a04 4889CE   		movq	%rcx, %rsi
 5923 2a07 4889C7   		movq	%rax, %rdi
 5924 2a0a E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5924      00
 5925              	.LEHE161:
 5926              	.LEHB162:
  38:../ExecuteTest.h **** 	{
 5927              		.loc 7 38 2
 5928 2a0f E8000000 		call	__cxa_end_catch@PLT
 5928      00
 5929              		.loc 7 42 1
 5930 2a14 EB5D     		jmp	.L286
 5931              	.L302:
 5932 2a16 F30F1EFA 		endbr64
 5933              	.LBB101:
  27:../ExecuteTest.h **** 	{
 5934              		.loc 7 27 2
 5935 2a1a 4889C3   		movq	%rax, %rbx
 5936 2a1d E8000000 		call	__cxa_end_catch@PLT
 5936      00
 5937 2a22 4889D8   		movq	%rbx, %rax
 5938 2a25 4889C7   		movq	%rax, %rdi
 5939 2a28 E8000000 		call	_Unwind_Resume@PLT
 5939      00
 5940              	.LEHE162:
 5941              	.L304:
 5942 2a2d F30F1EFA 		endbr64
 5943              	.LBE101:
 5944              	.LBB102:
 5945              	.LBB100:
  37:../ExecuteTest.h **** 	catch (...)
 5946              		.loc 7 37 2
 5947 2a31 4889C3   		movq	%rax, %rbx
 5948 2a34 488D85D0 		leaq	-1584(%rbp), %rax
 5948      F9FFFF
 5949 2a3b 4889C7   		movq	%rax, %rdi
 5950 2a3e E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5950      00
 5951 2a43 EB07     		jmp	.L297
 5952              	.L303:
 5953 2a45 F30F1EFA 		endbr64
 5954              	.LBE100:
  32:../ExecuteTest.h **** 	{
 5955              		.loc 7 32 2
 5956 2a49 4889C3   		movq	%rax, %rbx
 5957              	.L297:
 5958 2a4c E8000000 		call	__cxa_end_catch@PLT
 5958      00
 5959 2a51 4889D8   		movq	%rbx, %rax
 5960 2a54 4889C7   		movq	%rax, %rdi
 5961              	.LEHB163:
 5962 2a57 E8000000 		call	_Unwind_Resume@PLT
 5962      00
 5963              	.LEHE163:
 5964              	.L305:
 5965 2a5c F30F1EFA 		endbr64
 5966              	.LBE102:
  38:../ExecuteTest.h **** 	{
 5967              		.loc 7 38 2
 5968 2a60 4889C3   		movq	%rax, %rbx
 5969 2a63 E8000000 		call	__cxa_end_catch@PLT
 5969      00
 5970 2a68 4889D8   		movq	%rbx, %rax
 5971 2a6b 4889C7   		movq	%rax, %rdi
 5972              	.LEHB164:
 5973 2a6e E8000000 		call	_Unwind_Resume@PLT
 5973      00
 5974              	.LEHE164:
 5975              	.L286:
 5976              		.loc 7 42 1
 5977 2a73 488B45D8 		movq	-40(%rbp), %rax
 5978 2a77 64482B04 		subq	%fs:40, %rax
 5978      25280000 
 5978      00
 5979 2a80 7405     		je	.L299
 5980 2a82 E8000000 		call	__stack_chk_fail@PLT
 5980      00
 5981              	.L299:
 5982 2a87 4881C458 		addq	$1624, %rsp
 5982      060000
 5983 2a8e 5B       		popq	%rbx
 5984 2a8f 415C     		popq	%r12
 5985 2a91 415D     		popq	%r13
 5986 2a93 5D       		popq	%rbp
 5987              		.cfi_def_cfa 7, 8
 5988 2a94 C3       		ret
 5989              		.cfi_endproc
 5990              	.LFE1538:
 5991              		.section	.gcc_except_table
 5992 0413 00       		.align 4
 5993              	.LLSDA1538:
 5994 0414 FF       		.byte	0xff
 5995 0415 9B       		.byte	0x9b
 5996 0416 59       		.uleb128 .LLSDATT1538-.LLSDATTD1538
 5997              	.LLSDATTD1538:
 5998 0417 01       		.byte	0x1
 5999 0418 43       		.uleb128 .LLSDACSE1538-.LLSDACSB1538
 6000              	.LLSDACSB1538:
 6001 0419 31       		.uleb128 .LEHB153-.LFB1538
 6002 041a 05       		.uleb128 .LEHE153-.LEHB153
 6003 041b 00       		.uleb128 0
 6004 041c 00       		.uleb128 0
 6005 041d 4A       		.uleb128 .LEHB154-.LFB1538
 6006 041e 05       		.uleb128 .LEHE154-.LEHB154
 6007 041f DF01     		.uleb128 .L300-.LFB1538
 6008 0421 05       		.uleb128 0x5
 6009 0422 9601     		.uleb128 .LEHB155-.LFB1538
 6010 0424 14       		.uleb128 .LEHE155-.LEHB155
 6011 0425 BE01     		.uleb128 .L301-.LFB1538
 6012 0427 07       		.uleb128 0x7
 6013 0428 B401     		.uleb128 .LEHB156-.LFB1538
 6014 042a 05       		.uleb128 .LEHE156-.LEHB156
 6015 042b DF01     		.uleb128 .L300-.LFB1538
 6016 042d 05       		.uleb128 0x5
 6017 042e 8702     		.uleb128 .LEHB157-.LFB1538
 6018 0430 8801     		.uleb128 .LEHE157-.LEHB157
 6019 0432 F004     		.uleb128 .L302-.LFB1538
 6020 0434 00       		.uleb128 0
 6021 0435 B203     		.uleb128 .LEHB158-.LFB1538
 6022 0437 05       		.uleb128 .LEHE158-.LEHB158
 6023 0438 9F05     		.uleb128 .L303-.LFB1538
 6024 043a 00       		.uleb128 0
 6025 043b CB03     		.uleb128 .LEHB159-.LFB1538
 6026 043d 5C       		.uleb128 .LEHE159-.LEHB159
 6027 043e 8705     		.uleb128 .L304-.LFB1538
 6028 0440 00       		.uleb128 0
 6029 0441 B104     		.uleb128 .LEHB160-.LFB1538
 6030 0443 05       		.uleb128 .LEHE160-.LEHB160
 6031 0444 9F05     		.uleb128 .L303-.LFB1538
 6032 0446 00       		.uleb128 0
 6033 0447 C804     		.uleb128 .LEHB161-.LFB1538
 6034 0449 21       		.uleb128 .LEHE161-.LEHB161
 6035 044a B605     		.uleb128 .L305-.LFB1538
 6036 044c 00       		.uleb128 0
 6037 044d E904     		.uleb128 .LEHB162-.LFB1538
 6038 044f 1E       		.uleb128 .LEHE162-.LEHB162
 6039 0450 00       		.uleb128 0
 6040 0451 00       		.uleb128 0
 6041 0452 B105     		.uleb128 .LEHB163-.LFB1538
 6042 0454 05       		.uleb128 .LEHE163-.LEHB163
 6043 0455 00       		.uleb128 0
 6044 0456 00       		.uleb128 0
 6045 0457 C805     		.uleb128 .LEHB164-.LFB1538
 6046 0459 05       		.uleb128 .LEHE164-.LEHB164
 6047 045a 00       		.uleb128 0
 6048 045b 00       		.uleb128 0
 6049              	.LLSDACSE1538:
 6050 045c 03       		.byte	0x3
 6051 045d 00       		.byte	0
 6052 045e 02       		.byte	0x2
 6053 045f 7D       		.byte	0x7d
 6054 0460 01       		.byte	0x1
 6055 0461 7D       		.byte	0x7d
 6056 0462 00       		.byte	0
 6057 0463 7D       		.byte	0x7d
 6058              		.align 4
 6059 0464 00000000 		.long	0
 6060              	
 6061 0468 00000000 		.long	DW.ref._ZTISt9exception-.
 6062 046c 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 6063              	.LLSDATT1538:
 6064              		.text
 6066              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm,"axG",@progbits,_ZNSt6vec
 6067              		.align 2
 6068              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
 6070              	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm:
 6071              	.LFB1539:
 920:/usr/include/c++/11/bits/stl_vector.h **** 
 921:/usr/include/c++/11/bits/stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 922:/usr/include/c++/11/bits/stl_vector.h ****       size_type
 923:/usr/include/c++/11/bits/stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 924:/usr/include/c++/11/bits/stl_vector.h ****       { return _S_max_size(_M_get_Tp_allocator()); }
 925:/usr/include/c++/11/bits/stl_vector.h **** 
 926:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
 927:/usr/include/c++/11/bits/stl_vector.h ****       /**
 928:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 929:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 930:/usr/include/c++/11/bits/stl_vector.h ****        *
 931:/usr/include/c++/11/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 932:/usr/include/c++/11/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 933:/usr/include/c++/11/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 934:/usr/include/c++/11/bits/stl_vector.h ****        *  default constructed elements are appended.
 935:/usr/include/c++/11/bits/stl_vector.h ****        */
 936:/usr/include/c++/11/bits/stl_vector.h ****       void
 937:/usr/include/c++/11/bits/stl_vector.h ****       resize(size_type __new_size)
 938:/usr/include/c++/11/bits/stl_vector.h ****       {
 939:/usr/include/c++/11/bits/stl_vector.h **** 	if (__new_size > size())
 940:/usr/include/c++/11/bits/stl_vector.h **** 	  _M_default_append(__new_size - size());
 941:/usr/include/c++/11/bits/stl_vector.h **** 	else if (__new_size < size())
 942:/usr/include/c++/11/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 943:/usr/include/c++/11/bits/stl_vector.h ****       }
 944:/usr/include/c++/11/bits/stl_vector.h **** 
 945:/usr/include/c++/11/bits/stl_vector.h ****       /**
 946:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 947:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 948:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 949:/usr/include/c++/11/bits/stl_vector.h ****        *
 950:/usr/include/c++/11/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 951:/usr/include/c++/11/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 952:/usr/include/c++/11/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 953:/usr/include/c++/11/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 954:/usr/include/c++/11/bits/stl_vector.h ****        *  given data.
 955:/usr/include/c++/11/bits/stl_vector.h ****        */
 956:/usr/include/c++/11/bits/stl_vector.h ****       void
 957:/usr/include/c++/11/bits/stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 958:/usr/include/c++/11/bits/stl_vector.h ****       {
 959:/usr/include/c++/11/bits/stl_vector.h **** 	if (__new_size > size())
 960:/usr/include/c++/11/bits/stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 961:/usr/include/c++/11/bits/stl_vector.h **** 	else if (__new_size < size())
 962:/usr/include/c++/11/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 963:/usr/include/c++/11/bits/stl_vector.h ****       }
 964:/usr/include/c++/11/bits/stl_vector.h **** #else
 965:/usr/include/c++/11/bits/stl_vector.h ****       /**
 966:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 967:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 968:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 969:/usr/include/c++/11/bits/stl_vector.h ****        *
 970:/usr/include/c++/11/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 971:/usr/include/c++/11/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 972:/usr/include/c++/11/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 973:/usr/include/c++/11/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 974:/usr/include/c++/11/bits/stl_vector.h ****        *  given data.
 975:/usr/include/c++/11/bits/stl_vector.h ****        */
 976:/usr/include/c++/11/bits/stl_vector.h ****       void
 977:/usr/include/c++/11/bits/stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 978:/usr/include/c++/11/bits/stl_vector.h ****       {
 979:/usr/include/c++/11/bits/stl_vector.h **** 	if (__new_size > size())
 980:/usr/include/c++/11/bits/stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 981:/usr/include/c++/11/bits/stl_vector.h **** 	else if (__new_size < size())
 982:/usr/include/c++/11/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 983:/usr/include/c++/11/bits/stl_vector.h ****       }
 984:/usr/include/c++/11/bits/stl_vector.h **** #endif
 985:/usr/include/c++/11/bits/stl_vector.h **** 
 986:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
 987:/usr/include/c++/11/bits/stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 988:/usr/include/c++/11/bits/stl_vector.h ****       void
 989:/usr/include/c++/11/bits/stl_vector.h ****       shrink_to_fit()
 990:/usr/include/c++/11/bits/stl_vector.h ****       { _M_shrink_to_fit(); }
 991:/usr/include/c++/11/bits/stl_vector.h **** #endif
 992:/usr/include/c++/11/bits/stl_vector.h **** 
 993:/usr/include/c++/11/bits/stl_vector.h ****       /**
 994:/usr/include/c++/11/bits/stl_vector.h ****        *  Returns the total number of elements that the %vector can
 995:/usr/include/c++/11/bits/stl_vector.h ****        *  hold before needing to allocate more memory.
 996:/usr/include/c++/11/bits/stl_vector.h ****        */
 997:/usr/include/c++/11/bits/stl_vector.h ****       size_type
 998:/usr/include/c++/11/bits/stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 999:/usr/include/c++/11/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
1000:/usr/include/c++/11/bits/stl_vector.h **** 			 - this->_M_impl._M_start); }
1001:/usr/include/c++/11/bits/stl_vector.h **** 
1002:/usr/include/c++/11/bits/stl_vector.h ****       /**
1003:/usr/include/c++/11/bits/stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
1004:/usr/include/c++/11/bits/stl_vector.h ****        *  equal end().)
1005:/usr/include/c++/11/bits/stl_vector.h ****        */
1006:/usr/include/c++/11/bits/stl_vector.h ****       _GLIBCXX_NODISCARD bool
1007:/usr/include/c++/11/bits/stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
1008:/usr/include/c++/11/bits/stl_vector.h ****       { return begin() == end(); }
1009:/usr/include/c++/11/bits/stl_vector.h **** 
1010:/usr/include/c++/11/bits/stl_vector.h ****       /**
1011:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
1012:/usr/include/c++/11/bits/stl_vector.h ****        *          elements.
1013:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __n  Number of elements required.
1014:/usr/include/c++/11/bits/stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
1015:/usr/include/c++/11/bits/stl_vector.h ****        *
1016:/usr/include/c++/11/bits/stl_vector.h ****        *  This function attempts to reserve enough memory for the
1017:/usr/include/c++/11/bits/stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
1018:/usr/include/c++/11/bits/stl_vector.h ****        *  number requested is more than max_size(), length_error is
1019:/usr/include/c++/11/bits/stl_vector.h ****        *  thrown.
1020:/usr/include/c++/11/bits/stl_vector.h ****        *
1021:/usr/include/c++/11/bits/stl_vector.h ****        *  The advantage of this function is that if optimal code is a
1022:/usr/include/c++/11/bits/stl_vector.h ****        *  necessity and the user can determine the number of elements
1023:/usr/include/c++/11/bits/stl_vector.h ****        *  that will be required, the user can reserve the memory in
1024:/usr/include/c++/11/bits/stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
1025:/usr/include/c++/11/bits/stl_vector.h ****        *  and copying of %vector data.
1026:/usr/include/c++/11/bits/stl_vector.h ****        */
1027:/usr/include/c++/11/bits/stl_vector.h ****       void
1028:/usr/include/c++/11/bits/stl_vector.h ****       reserve(size_type __n);
1029:/usr/include/c++/11/bits/stl_vector.h **** 
1030:/usr/include/c++/11/bits/stl_vector.h ****       // element access
1031:/usr/include/c++/11/bits/stl_vector.h ****       /**
1032:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1033:/usr/include/c++/11/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
1034:/usr/include/c++/11/bits/stl_vector.h ****        *  accessed.
1035:/usr/include/c++/11/bits/stl_vector.h ****        *  @return  Read/write reference to data.
1036:/usr/include/c++/11/bits/stl_vector.h ****        *
1037:/usr/include/c++/11/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1038:/usr/include/c++/11/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
1039:/usr/include/c++/11/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1040:/usr/include/c++/11/bits/stl_vector.h ****        *  see at().)
1041:/usr/include/c++/11/bits/stl_vector.h ****        */
1042:/usr/include/c++/11/bits/stl_vector.h ****       reference
1043:/usr/include/c++/11/bits/stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
1044:/usr/include/c++/11/bits/stl_vector.h ****       {
1045:/usr/include/c++/11/bits/stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1046:/usr/include/c++/11/bits/stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
1047:/usr/include/c++/11/bits/stl_vector.h ****       }
1048:/usr/include/c++/11/bits/stl_vector.h **** 
1049:/usr/include/c++/11/bits/stl_vector.h ****       /**
1050:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1051:/usr/include/c++/11/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
1052:/usr/include/c++/11/bits/stl_vector.h ****        *  accessed.
1053:/usr/include/c++/11/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1054:/usr/include/c++/11/bits/stl_vector.h ****        *
1055:/usr/include/c++/11/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1056:/usr/include/c++/11/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
1057:/usr/include/c++/11/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1058:/usr/include/c++/11/bits/stl_vector.h ****        *  see at().)
1059:/usr/include/c++/11/bits/stl_vector.h ****        */
1060:/usr/include/c++/11/bits/stl_vector.h ****       const_reference
1061:/usr/include/c++/11/bits/stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
1062:/usr/include/c++/11/bits/stl_vector.h ****       {
1063:/usr/include/c++/11/bits/stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1064:/usr/include/c++/11/bits/stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
1065:/usr/include/c++/11/bits/stl_vector.h ****       }
1066:/usr/include/c++/11/bits/stl_vector.h **** 
1067:/usr/include/c++/11/bits/stl_vector.h ****     protected:
1068:/usr/include/c++/11/bits/stl_vector.h ****       /// Safety check used only from at().
1069:/usr/include/c++/11/bits/stl_vector.h ****       void
1070:/usr/include/c++/11/bits/stl_vector.h ****       _M_range_check(size_type __n) const
1071:/usr/include/c++/11/bits/stl_vector.h ****       {
1072:/usr/include/c++/11/bits/stl_vector.h **** 	if (__n >= this->size())
1073:/usr/include/c++/11/bits/stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
1074:/usr/include/c++/11/bits/stl_vector.h **** 				       "(which is %zu) >= this->size() "
1075:/usr/include/c++/11/bits/stl_vector.h **** 				       "(which is %zu)"),
1076:/usr/include/c++/11/bits/stl_vector.h **** 				   __n, this->size());
1077:/usr/include/c++/11/bits/stl_vector.h ****       }
1078:/usr/include/c++/11/bits/stl_vector.h **** 
1079:/usr/include/c++/11/bits/stl_vector.h ****     public:
1080:/usr/include/c++/11/bits/stl_vector.h ****       /**
1081:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1082:/usr/include/c++/11/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
1083:/usr/include/c++/11/bits/stl_vector.h ****        *  accessed.
1084:/usr/include/c++/11/bits/stl_vector.h ****        *  @return  Read/write reference to data.
1085:/usr/include/c++/11/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1086:/usr/include/c++/11/bits/stl_vector.h ****        *
1087:/usr/include/c++/11/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
1088:/usr/include/c++/11/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1089:/usr/include/c++/11/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
1090:/usr/include/c++/11/bits/stl_vector.h ****        */
1091:/usr/include/c++/11/bits/stl_vector.h ****       reference
1092:/usr/include/c++/11/bits/stl_vector.h ****       at(size_type __n)
 6072              		.loc 6 1092 7
 6073              		.cfi_startproc
 6074 0000 F30F1EFA 		endbr64
 6075 0004 55       		pushq	%rbp
 6076              		.cfi_def_cfa_offset 16
 6077              		.cfi_offset 6, -16
 6078 0005 4889E5   		movq	%rsp, %rbp
 6079              		.cfi_def_cfa_register 6
 6080 0008 4883EC10 		subq	$16, %rsp
 6081 000c 48897DF8 		movq	%rdi, -8(%rbp)
 6082 0010 488975F0 		movq	%rsi, -16(%rbp)
1093:/usr/include/c++/11/bits/stl_vector.h ****       {
1094:/usr/include/c++/11/bits/stl_vector.h **** 	_M_range_check(__n);
 6083              		.loc 6 1094 16
 6084 0014 488B55F0 		movq	-16(%rbp), %rdx
 6085 0018 488B45F8 		movq	-8(%rbp), %rax
 6086 001c 4889D6   		movq	%rdx, %rsi
 6087 001f 4889C7   		movq	%rax, %rdi
 6088 0022 E8000000 		call	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE14_M_range_checkEm
 6088      00
1095:/usr/include/c++/11/bits/stl_vector.h **** 	return (*this)[__n];
 6089              		.loc 6 1095 16
 6090 0027 488B55F0 		movq	-16(%rbp), %rdx
 6091 002b 488B45F8 		movq	-8(%rbp), %rax
 6092 002f 4889D6   		movq	%rdx, %rsi
 6093 0032 4889C7   		movq	%rax, %rdi
 6094 0035 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEixEm
 6094      00
1096:/usr/include/c++/11/bits/stl_vector.h ****       }
 6095              		.loc 6 1096 7
 6096 003a C9       		leave
 6097              		.cfi_def_cfa 7, 8
 6098 003b C3       		ret
 6099              		.cfi_endproc
 6100              	.LFE1539:
 6102              		.section	.text._ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEv
 6103              		.weak	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Tes
 6105              	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11TestResult
 6106              	.LFB1540:
  19:../Checks.h   **** {
 6107              		.loc 8 19 6
 6108              		.cfi_startproc
 6109              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 6110              		.cfi_lsda 0x1b,.LLSDA1540
 6111 0000 F30F1EFA 		endbr64
 6112 0004 55       		pushq	%rbp
 6113              		.cfi_def_cfa_offset 16
 6114              		.cfi_offset 6, -16
 6115 0005 4889E5   		movq	%rsp, %rbp
 6116              		.cfi_def_cfa_register 6
 6117 0008 53       		pushq	%rbx
 6118 0009 4881ECC8 		subq	$456, %rsp
 6118      010000
 6119              		.cfi_offset 3, -24
 6120 0010 4889BD48 		movq	%rdi, -440(%rbp)
 6120      FEFFFF
 6121 0017 4889B540 		movq	%rsi, -448(%rbp)
 6121      FEFFFF
 6122 001e 48899538 		movq	%rdx, -456(%rbp)
 6122      FEFFFF
 6123 0025 48898D30 		movq	%rcx, -464(%rbp)
 6123      FEFFFF
  19:../Checks.h   **** {
 6124              		.loc 8 19 6
 6125 002c 64488B04 		movq	%fs:40, %rax
 6125      25280000 
 6125      00
 6126 0035 488945E8 		movq	%rax, -24(%rbp)
 6127 0039 31C0     		xorl	%eax, %eax
 6128              	.LBB103:
  21:../Checks.h   ****     {
 6129              		.loc 8 21 20
 6130 003b 488B8540 		movq	-448(%rbp), %rax
 6130      FEFFFF
 6131 0042 488B00   		movq	(%rax), %rax
 6132 0045 488B9538 		movq	-456(%rbp), %rdx
 6132      FEFFFF
 6133 004c 4889D6   		movq	%rdx, %rsi
 6134 004f 4889C7   		movq	%rax, %rdi
 6135              	.LEHB165:
 6136 0052 E8000000 		call	_ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE
 6136      00
 6137 0057 83F001   		xorl	$1, %eax
  21:../Checks.h   ****     {
 6138              		.loc 8 21 5
 6139 005a 84C0     		testb	%al, %al
 6140 005c 0F84C700 		je	.L314
 6140      0000
 6141              	.LBB104:
  23:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 6142              		.loc 8 23 35
 6143 0062 488D8550 		leaq	-432(%rbp), %rax
 6143      FEFFFF
 6144 0069 4889C7   		movq	%rax, %rdi
 6145 006c E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6145      00
 6146              	.LEHE165:
  24:../Checks.h   **** 
 6147              		.loc 8 24 58
 6148 0071 488D8550 		leaq	-432(%rbp), %rax
 6148      FEFFFF
 6149 0078 488D1500 		leaq	.LC34(%rip), %rdx
 6149      000000
 6150 007f 4889D6   		movq	%rdx, %rsi
 6151 0082 4889C7   		movq	%rax, %rdi
 6152              	.LEHB166:
 6153 0085 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6153      00
 6154 008a 4889C2   		movq	%rax, %rdx
 6155 008d 488B8540 		movq	-448(%rbp), %rax
 6155      FEFFFF
 6156 0094 488B00   		movq	(%rax), %rax
 6157 0097 4889C6   		movq	%rax, %rsi
 6158 009a 4889D7   		movq	%rdx, %rdi
 6159 009d E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6159      00
  24:../Checks.h   **** 
 6160              		.loc 8 24 58 is_stmt 0 discriminator 1
 6161 00a2 4889C2   		movq	%rax, %rdx
 6162 00a5 488D0500 		leaq	.LC35(%rip), %rax
 6162      000000
 6163 00ac 4889C6   		movq	%rax, %rsi
 6164 00af 4889D7   		movq	%rdx, %rdi
 6165 00b2 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6165      00
  24:../Checks.h   **** 
 6166              		.loc 8 24 58 discriminator 2
 6167 00b7 4889C2   		movq	%rax, %rdx
 6168 00ba 488B8538 		movq	-456(%rbp), %rax
 6168      FEFFFF
 6169 00c1 4889C6   		movq	%rax, %rsi
 6170 00c4 4889D7   		movq	%rdx, %rdi
 6171 00c7 E8000000 		call	_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5
 6171      00
  26:../Checks.h   ****     }
 6172              		.loc 8 26 30 is_stmt 1
 6173 00cc 488D8550 		leaq	-432(%rbp), %rax
 6173      FEFFFF
 6174 00d3 4889C7   		movq	%rax, %rdi
 6175 00d6 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 6175      00
 6176 00db 4889C2   		movq	%rax, %rdx
 6177 00de 488B8D30 		movq	-464(%rbp), %rcx
 6177      FEFFFF
 6178 00e5 488B8548 		movq	-440(%rbp), %rax
 6178      FEFFFF
 6179 00ec 4889CE   		movq	%rcx, %rsi
 6180 00ef 4889C7   		movq	%rax, %rdi
 6181 00f2 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6181      00
 6182              	.LEHE166:
  27:../Checks.h   **** }
 6183              		.loc 8 27 5
 6184 00f7 488D8550 		leaq	-432(%rbp), %rax
 6184      FEFFFF
 6185 00fe 4889C7   		movq	%rax, %rdi
 6186              	.LEHB167:
 6187 0101 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6187      00
 6188              	.LEHE167:
 6189              	.LBE104:
 6190              	.LBE103:
 6191              		.loc 8 28 1
 6192 0106 EB21     		jmp	.L314
 6193              	.L313:
 6194 0108 F30F1EFA 		endbr64
 6195              	.LBB106:
 6196              	.LBB105:
  27:../Checks.h   **** }
 6197              		.loc 8 27 5
 6198 010c 4889C3   		movq	%rax, %rbx
 6199 010f 488D8550 		leaq	-432(%rbp), %rax
 6199      FEFFFF
 6200 0116 4889C7   		movq	%rax, %rdi
 6201 0119 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6201      00
 6202 011e 4889D8   		movq	%rbx, %rax
 6203 0121 4889C7   		movq	%rax, %rdi
 6204              	.LEHB168:
 6205 0124 E8000000 		call	_Unwind_Resume@PLT
 6205      00
 6206              	.LEHE168:
 6207              	.L314:
 6208              	.LBE105:
 6209              	.LBE106:
 6210              		.loc 8 28 1
 6211 0129 90       		nop
 6212 012a 488B45E8 		movq	-24(%rbp), %rax
 6213 012e 64482B04 		subq	%fs:40, %rax
 6213      25280000 
 6213      00
 6214 0137 7405     		je	.L312
 6215 0139 E8000000 		call	__stack_chk_fail@PLT
 6215      00
 6216              	.L312:
 6217 013e 488B5DF8 		movq	-8(%rbp), %rbx
 6218 0142 C9       		leave
 6219              		.cfi_def_cfa 7, 8
 6220 0143 C3       		ret
 6221              		.cfi_endproc
 6222              	.LFE1540:
 6223              		.section	.gcc_except_table
 6224              	.LLSDA1540:
 6225 0470 FF       		.byte	0xff
 6226 0471 FF       		.byte	0xff
 6227 0472 01       		.byte	0x1
 6228 0473 14       		.uleb128 .LLSDACSE1540-.LLSDACSB1540
 6229              	.LLSDACSB1540:
 6230 0474 52       		.uleb128 .LEHB165-.LFB1540
 6231 0475 1F       		.uleb128 .LEHE165-.LEHB165
 6232 0476 00       		.uleb128 0
 6233 0477 00       		.uleb128 0
 6234 0478 8501     		.uleb128 .LEHB166-.LFB1540
 6235 047a 72       		.uleb128 .LEHE166-.LEHB166
 6236 047b 8802     		.uleb128 .L313-.LFB1540
 6237 047d 00       		.uleb128 0
 6238 047e 8102     		.uleb128 .LEHB167-.LFB1540
 6239 0480 05       		.uleb128 .LEHE167-.LEHB167
 6240 0481 00       		.uleb128 0
 6241 0482 00       		.uleb128 0
 6242 0483 A402     		.uleb128 .LEHB168-.LFB1540
 6243 0485 05       		.uleb128 .LEHE168-.LEHB168
 6244 0486 00       		.uleb128 0
 6245 0487 00       		.uleb128 0
 6246              	.LLSDACSE1540:
 6247              		.section	.text._ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEv
 6249              		.text
 6251              	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTi
 6252              	.LFB1541:
  16:../ExecuteTest.h **** {
 6253              		.loc 7 16 6
 6254              		.cfi_startproc
 6255              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 6256              		.cfi_lsda 0x1b,.LLSDA1541
 6257 2a95 F30F1EFA 		endbr64
 6258 2a99 55       		pushq	%rbp
 6259              		.cfi_def_cfa_offset 16
 6260              		.cfi_offset 6, -16
 6261 2a9a 4889E5   		movq	%rsp, %rbp
 6262              		.cfi_def_cfa_register 6
 6263 2a9d 4155     		pushq	%r13
 6264 2a9f 4154     		pushq	%r12
 6265 2aa1 53       		pushq	%rbx
 6266 2aa2 4881EC58 		subq	$1624, %rsp
 6266      060000
 6267              		.cfi_offset 13, -24
 6268              		.cfi_offset 12, -32
 6269              		.cfi_offset 3, -40
 6270 2aa9 4889BD98 		movq	%rdi, -1640(%rbp)
 6270      F9FFFF
 6271 2ab0 4889B590 		movq	%rsi, -1648(%rbp)
 6271      F9FFFF
  16:../ExecuteTest.h **** {
 6272              		.loc 7 16 6
 6273 2ab7 64488B04 		movq	%fs:40, %rax
 6273      25280000 
 6273      00
 6274 2ac0 488945D8 		movq	%rax, -40(%rbp)
 6275 2ac4 31C0     		xorl	%eax, %eax
 6276              	.LEHB169:
  18:../ExecuteTest.h **** 
 6277              		.loc 7 18 22
 6278 2ac6 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 6278      00
 6279              	.LEHE169:
  18:../ExecuteTest.h **** 
 6280              		.loc 7 18 25
 6281 2acb 488B9590 		movq	-1648(%rbp), %rdx
 6281      F9FFFF
 6282 2ad2 488910   		movq	%rdx, (%rax)
 6283              	.LBB107:
  23:../ExecuteTest.h **** #endif
 6284              		.loc 7 23 3
 6285 2ad5 488D8570 		leaq	-1168(%rbp), %rax
 6285      FBFFFF
 6286 2adc 4889C7   		movq	%rax, %rdi
 6287              	.LEHB170:
 6288 2adf E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev@PLT
 6288      00
 6289              	.LEHE170:
  23:../ExecuteTest.h **** #endif
 6290              		.loc 7 23 3 is_stmt 0 discriminator 1
 6291 2ae4 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 6291      000000
 6292 2aeb BE010000 		movl	$1, %esi
 6292      00
 6293 2af0 4889C7   		movq	%rax, %rdi
 6294 2af3 E8000000 		call	__sigsetjmp@PLT
 6294      00
 6295 2af8 F30F1EFA 		endbr64
 6296 2afc 85C0     		testl	%eax, %eax
 6297 2afe 0F95C0   		setne	%al
 6298 2b01 84C0     		testb	%al, %al
 6299 2b03 742B     		je	.L317
  23:../ExecuteTest.h **** #endif
 6300              		.loc 7 23 3 discriminator 4
 6301 2b05 BF080000 		movl	$8, %edi
 6301      00
 6302 2b0a E8000000 		call	__cxa_allocate_exception@PLT
 6302      00
 6303 2b0f 488D1500 		leaq	.LC32(%rip), %rdx
 6303      000000
 6304 2b16 488910   		movq	%rdx, (%rax)
 6305 2b19 BA000000 		movl	$0, %edx
 6305      00
 6306 2b1e 488D0D00 		leaq	_ZTIPKc(%rip), %rcx
 6306      000000
 6307 2b25 4889CE   		movq	%rcx, %rsi
 6308 2b28 4889C7   		movq	%rax, %rdi
 6309              	.LEHB171:
 6310 2b2b E8000000 		call	__cxa_throw@PLT
 6310      00
 6311              	.L317:
  25:../ExecuteTest.h **** 	}
 6312              		.loc 7 25 21 is_stmt 1
 6313 2b30 488B8598 		movq	-1640(%rbp), %rax
 6313      F9FFFF
 6314 2b37 4889C7   		movq	%rax, %rdi
 6315 2b3a E8F1E5FF 		call	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelper7Ru
 6315      FF
 6316              	.LEHE171:
  26:../ExecuteTest.h **** 	catch (AssertException const& e)
 6317              		.loc 7 26 2
 6318 2b3f 488D8570 		leaq	-1168(%rbp), %rax
 6318      FBFFFF
 6319 2b46 4889C7   		movq	%rax, %rdi
 6320              	.LEHB172:
 6321 2b49 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 6321      00
 6322              	.LEHE172:
 6323              	.LBE107:
 6324              		.loc 7 42 1
 6325 2b4e E90F0200 		jmp	.L315
 6325      00
 6326              	.L330:
 6327 2b53 F30F1EFA 		endbr64
 6328              	.LBB108:
  26:../ExecuteTest.h **** 	catch (AssertException const& e)
 6329              		.loc 7 26 2
 6330 2b57 4989C4   		movq	%rax, %r12
 6331 2b5a 4889D3   		movq	%rdx, %rbx
 6332 2b5d 488D8570 		leaq	-1168(%rbp), %rax
 6332      FBFFFF
 6333 2b64 4889C7   		movq	%rax, %rdi
 6334 2b67 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 6334      00
 6335 2b6c 4C89E0   		movq	%r12, %rax
 6336 2b6f 4889DA   		movq	%rbx, %rdx
 6337 2b72 EB04     		jmp	.L319
 6338              	.L329:
 6339 2b74 F30F1EFA 		endbr64
 6340              	.L319:
 6341              	.LBE108:
  27:../ExecuteTest.h **** 	{
 6342              		.loc 7 27 2
 6343 2b78 4883FA01 		cmpq	$1, %rdx
 6344 2b7c 740F     		je	.L320
 6345 2b7e 4883FA02 		cmpq	$2, %rdx
 6346 2b82 0F84A600 		je	.L321
 6346      0000
 6347 2b88 E9480100 		jmp	.L335
 6347      00
 6348              	.L320:
 6349              	.LBB109:
  27:../ExecuteTest.h **** 	{
 6350              		.loc 7 27 2 is_stmt 0 discriminator 1
 6351 2b8d 4889C7   		movq	%rax, %rdi
 6352 2b90 E8000000 		call	__cxa_begin_catch@PLT
 6352      00
  27:../ExecuteTest.h **** 	{
 6353              		.loc 7 27 32 is_stmt 1 discriminator 1
 6354 2b95 488985A8 		movq	%rax, -1624(%rbp)
 6354      F9FFFF
 6355              	.LEHB173:
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6356              		.loc 7 29 23 discriminator 1
 6357 2b9c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 6357      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6358              		.loc 7 29 40 discriminator 2
 6359 2ba1 488B18   		movq	(%rax), %rbx
  30:../ExecuteTest.h **** 	}
 6360              		.loc 7 30 90 discriminator 2
 6361 2ba4 488B85A8 		movq	-1624(%rbp), %rax
 6361      F9FFFF
 6362 2bab 488B00   		movq	(%rax), %rax
 6363 2bae 4883C010 		addq	$16, %rax
 6364 2bb2 488B10   		movq	(%rax), %rdx
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6365              		.loc 7 29 40 discriminator 2
 6366 2bb5 488B85A8 		movq	-1624(%rbp), %rax
 6366      F9FFFF
 6367 2bbc 4889C7   		movq	%rax, %rdi
 6368 2bbf FFD2     		call	*%rdx
 6369              	.LVL16:
 6370 2bc1 4989C4   		movq	%rax, %r12
  30:../ExecuteTest.h **** 	}
 6371              		.loc 7 30 4 discriminator 2
 6372 2bc4 488B85A8 		movq	-1624(%rbp), %rax
 6372      F9FFFF
 6373 2bcb 4889C7   		movq	%rax, %rdi
 6374 2bce E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 6374      00
 6375 2bd3 4189C5   		movl	%eax, %r13d
 6376 2bd6 488B85A8 		movq	-1624(%rbp), %rax
 6376      F9FFFF
 6377 2bdd 4889C7   		movq	%rax, %rdi
 6378 2be0 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 6378      00
  30:../ExecuteTest.h **** 	}
 6379              		.loc 7 30 4 is_stmt 0 discriminator 1
 6380 2be5 4889C1   		movq	%rax, %rcx
  30:../ExecuteTest.h **** 	}
 6381              		.loc 7 30 42 is_stmt 1 discriminator 1
 6382 2be8 488B8590 		movq	-1648(%rbp), %rax
 6382      F9FFFF
 6383 2bef 488B10   		movq	(%rax), %rdx
  30:../ExecuteTest.h **** 	}
 6384              		.loc 7 30 24 discriminator 1
 6385 2bf2 488B8590 		movq	-1648(%rbp), %rax
 6385      F9FFFF
 6386 2bf9 488B7008 		movq	8(%rax), %rsi
  30:../ExecuteTest.h **** 	}
 6387              		.loc 7 30 4 discriminator 1
 6388 2bfd 488D85B0 		leaq	-1616(%rbp), %rax
 6388      F9FFFF
 6389 2c04 4589E8   		movl	%r13d, %r8d
 6390 2c07 4889C7   		movq	%rax, %rdi
 6391 2c0a E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 6391      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6392              		.loc 7 29 40
 6393 2c0f 488D85B0 		leaq	-1616(%rbp), %rax
 6393      F9FFFF
 6394 2c16 4C89E2   		movq	%r12, %rdx
 6395 2c19 4889C6   		movq	%rax, %rsi
 6396 2c1c 4889DF   		movq	%rbx, %rdi
 6397 2c1f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6397      00
 6398              	.LEHE173:
  27:../ExecuteTest.h **** 	{
 6399              		.loc 7 27 2
 6400 2c24 E8000000 		call	__cxa_end_catch@PLT
 6400      00
 6401              	.LBE109:
 6402              		.loc 7 42 1
 6403 2c29 E9340100 		jmp	.L315
 6403      00
 6404              	.L321:
 6405              	.LBB110:
  32:../ExecuteTest.h **** 	{
 6406              		.loc 7 32 2
 6407 2c2e 4889C7   		movq	%rax, %rdi
 6408 2c31 E8000000 		call	__cxa_begin_catch@PLT
 6408      00
  32:../ExecuteTest.h **** 	{
 6409              		.loc 7 32 31
 6410 2c36 488985A0 		movq	%rax, -1632(%rbp)
 6410      F9FFFF
 6411              	.LBB111:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6412              		.loc 7 34 19
 6413 2c3d 488D85D0 		leaq	-1584(%rbp), %rax
 6413      F9FFFF
 6414 2c44 4889C7   		movq	%rax, %rdi
 6415              	.LEHB174:
 6416 2c47 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6416      00
 6417              	.LEHE174:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6418              		.loc 7 35 37
 6419 2c4c 488D85D0 		leaq	-1584(%rbp), %rax
 6419      F9FFFF
 6420 2c53 488D1500 		leaq	.LC6(%rip), %rdx
 6420      000000
 6421 2c5a 4889D6   		movq	%rdx, %rsi
 6422 2c5d 4889C7   		movq	%rax, %rdi
 6423              	.LEHB175:
 6424 2c60 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6424      00
 6425 2c65 4889C3   		movq	%rax, %rbx
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6426              		.loc 7 35 46
 6427 2c68 488B85A0 		movq	-1632(%rbp), %rax
 6427      F9FFFF
 6428 2c6f 488B00   		movq	(%rax), %rax
 6429 2c72 4883C010 		addq	$16, %rax
 6430 2c76 488B10   		movq	(%rax), %rdx
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6431              		.loc 7 35 37
 6432 2c79 488B85A0 		movq	-1632(%rbp), %rax
 6432      F9FFFF
 6433 2c80 4889C7   		movq	%rax, %rdi
 6434 2c83 FFD2     		call	*%rdx
 6435              	.LVL17:
 6436 2c85 4889C6   		movq	%rax, %rsi
 6437 2c88 4889DF   		movq	%rbx, %rdi
 6438 2c8b E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6438      00
  36:../ExecuteTest.h **** 	}
 6439              		.loc 7 36 23
 6440 2c90 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 6440      00
  36:../ExecuteTest.h **** 	}
 6441              		.loc 7 36 40
 6442 2c95 488B18   		movq	(%rax), %rbx
 6443 2c98 488D85D0 		leaq	-1584(%rbp), %rax
 6443      F9FFFF
 6444 2c9f 4889C7   		movq	%rax, %rdi
 6445 2ca2 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 6445      00
  36:../ExecuteTest.h **** 	}
 6446              		.loc 7 36 40 is_stmt 0 discriminator 1
 6447 2ca7 4889C2   		movq	%rax, %rdx
 6448 2caa 488B8590 		movq	-1648(%rbp), %rax
 6448      F9FFFF
 6449 2cb1 4889C6   		movq	%rax, %rsi
 6450 2cb4 4889DF   		movq	%rbx, %rdi
 6451 2cb7 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6451      00
 6452              	.LEHE175:
  37:../ExecuteTest.h **** 	catch (...)
 6453              		.loc 7 37 2 is_stmt 1
 6454 2cbc 488D85D0 		leaq	-1584(%rbp), %rax
 6454      F9FFFF
 6455 2cc3 4889C7   		movq	%rax, %rdi
 6456              	.LEHB176:
 6457 2cc6 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6457      00
 6458              	.LEHE176:
 6459              	.LBE111:
  32:../ExecuteTest.h **** 	{
 6460              		.loc 7 32 2
 6461 2ccb E8000000 		call	__cxa_end_catch@PLT
 6461      00
 6462              	.LBE110:
 6463              		.loc 7 42 1
 6464 2cd0 E98D0000 		jmp	.L315
 6464      00
 6465              	.L335:
  38:../ExecuteTest.h **** 	{
 6466              		.loc 7 38 2
 6467 2cd5 4889C7   		movq	%rax, %rdi
 6468 2cd8 E8000000 		call	__cxa_begin_catch@PLT
 6468      00
 6469              	.LEHB177:
  40:../ExecuteTest.h **** 	}
 6470              		.loc 7 40 23
 6471 2cdd E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 6471      00
  40:../ExecuteTest.h **** 	}
 6472              		.loc 7 40 40
 6473 2ce2 488B00   		movq	(%rax), %rax
 6474 2ce5 488B8D90 		movq	-1648(%rbp), %rcx
 6474      F9FFFF
 6475 2cec 488D1500 		leaq	.LC33(%rip), %rdx
 6475      000000
 6476 2cf3 4889CE   		movq	%rcx, %rsi
 6477 2cf6 4889C7   		movq	%rax, %rdi
 6478 2cf9 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6478      00
 6479              	.LEHE177:
 6480              	.LEHB178:
  38:../ExecuteTest.h **** 	{
 6481              		.loc 7 38 2
 6482 2cfe E8000000 		call	__cxa_end_catch@PLT
 6482      00
 6483              		.loc 7 42 1
 6484 2d03 EB5D     		jmp	.L315
 6485              	.L331:
 6486 2d05 F30F1EFA 		endbr64
 6487              	.LBB113:
  27:../ExecuteTest.h **** 	{
 6488              		.loc 7 27 2
 6489 2d09 4889C3   		movq	%rax, %rbx
 6490 2d0c E8000000 		call	__cxa_end_catch@PLT
 6490      00
 6491 2d11 4889D8   		movq	%rbx, %rax
 6492 2d14 4889C7   		movq	%rax, %rdi
 6493 2d17 E8000000 		call	_Unwind_Resume@PLT
 6493      00
 6494              	.LEHE178:
 6495              	.L333:
 6496 2d1c F30F1EFA 		endbr64
 6497              	.LBE113:
 6498              	.LBB114:
 6499              	.LBB112:
  37:../ExecuteTest.h **** 	catch (...)
 6500              		.loc 7 37 2
 6501 2d20 4889C3   		movq	%rax, %rbx
 6502 2d23 488D85D0 		leaq	-1584(%rbp), %rax
 6502      F9FFFF
 6503 2d2a 4889C7   		movq	%rax, %rdi
 6504 2d2d E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6504      00
 6505 2d32 EB07     		jmp	.L326
 6506              	.L332:
 6507 2d34 F30F1EFA 		endbr64
 6508              	.LBE112:
  32:../ExecuteTest.h **** 	{
 6509              		.loc 7 32 2
 6510 2d38 4889C3   		movq	%rax, %rbx
 6511              	.L326:
 6512 2d3b E8000000 		call	__cxa_end_catch@PLT
 6512      00
 6513 2d40 4889D8   		movq	%rbx, %rax
 6514 2d43 4889C7   		movq	%rax, %rdi
 6515              	.LEHB179:
 6516 2d46 E8000000 		call	_Unwind_Resume@PLT
 6516      00
 6517              	.LEHE179:
 6518              	.L334:
 6519 2d4b F30F1EFA 		endbr64
 6520              	.LBE114:
  38:../ExecuteTest.h **** 	{
 6521              		.loc 7 38 2
 6522 2d4f 4889C3   		movq	%rax, %rbx
 6523 2d52 E8000000 		call	__cxa_end_catch@PLT
 6523      00
 6524 2d57 4889D8   		movq	%rbx, %rax
 6525 2d5a 4889C7   		movq	%rax, %rdi
 6526              	.LEHB180:
 6527 2d5d E8000000 		call	_Unwind_Resume@PLT
 6527      00
 6528              	.LEHE180:
 6529              	.L315:
 6530              		.loc 7 42 1
 6531 2d62 488B45D8 		movq	-40(%rbp), %rax
 6532 2d66 64482B04 		subq	%fs:40, %rax
 6532      25280000 
 6532      00
 6533 2d6f 7405     		je	.L328
 6534 2d71 E8000000 		call	__stack_chk_fail@PLT
 6534      00
 6535              	.L328:
 6536 2d76 4881C458 		addq	$1624, %rsp
 6536      060000
 6537 2d7d 5B       		popq	%rbx
 6538 2d7e 415C     		popq	%r12
 6539 2d80 415D     		popq	%r13
 6540 2d82 5D       		popq	%rbp
 6541              		.cfi_def_cfa 7, 8
 6542 2d83 C3       		ret
 6543              		.cfi_endproc
 6544              	.LFE1541:
 6545              		.section	.gcc_except_table
 6546              		.align 4
 6547              	.LLSDA1541:
 6548 0488 FF       		.byte	0xff
 6549 0489 9B       		.byte	0x9b
 6550 048a 59       		.uleb128 .LLSDATT1541-.LLSDATTD1541
 6551              	.LLSDATTD1541:
 6552 048b 01       		.byte	0x1
 6553 048c 43       		.uleb128 .LLSDACSE1541-.LLSDACSB1541
 6554              	.LLSDACSB1541:
 6555 048d 31       		.uleb128 .LEHB169-.LFB1541
 6556 048e 05       		.uleb128 .LEHE169-.LEHB169
 6557 048f 00       		.uleb128 0
 6558 0490 00       		.uleb128 0
 6559 0491 4A       		.uleb128 .LEHB170-.LFB1541
 6560 0492 05       		.uleb128 .LEHE170-.LEHB170
 6561 0493 DF01     		.uleb128 .L329-.LFB1541
 6562 0495 05       		.uleb128 0x5
 6563 0496 9601     		.uleb128 .LEHB171-.LFB1541
 6564 0498 14       		.uleb128 .LEHE171-.LEHB171
 6565 0499 BE01     		.uleb128 .L330-.LFB1541
 6566 049b 07       		.uleb128 0x7
 6567 049c B401     		.uleb128 .LEHB172-.LFB1541
 6568 049e 05       		.uleb128 .LEHE172-.LEHB172
 6569 049f DF01     		.uleb128 .L329-.LFB1541
 6570 04a1 05       		.uleb128 0x5
 6571 04a2 8702     		.uleb128 .LEHB173-.LFB1541
 6572 04a4 8801     		.uleb128 .LEHE173-.LEHB173
 6573 04a6 F004     		.uleb128 .L331-.LFB1541
 6574 04a8 00       		.uleb128 0
 6575 04a9 B203     		.uleb128 .LEHB174-.LFB1541
 6576 04ab 05       		.uleb128 .LEHE174-.LEHB174
 6577 04ac 9F05     		.uleb128 .L332-.LFB1541
 6578 04ae 00       		.uleb128 0
 6579 04af CB03     		.uleb128 .LEHB175-.LFB1541
 6580 04b1 5C       		.uleb128 .LEHE175-.LEHB175
 6581 04b2 8705     		.uleb128 .L333-.LFB1541
 6582 04b4 00       		.uleb128 0
 6583 04b5 B104     		.uleb128 .LEHB176-.LFB1541
 6584 04b7 05       		.uleb128 .LEHE176-.LEHB176
 6585 04b8 9F05     		.uleb128 .L332-.LFB1541
 6586 04ba 00       		.uleb128 0
 6587 04bb C804     		.uleb128 .LEHB177-.LFB1541
 6588 04bd 21       		.uleb128 .LEHE177-.LEHB177
 6589 04be B605     		.uleb128 .L334-.LFB1541
 6590 04c0 00       		.uleb128 0
 6591 04c1 E904     		.uleb128 .LEHB178-.LFB1541
 6592 04c3 1E       		.uleb128 .LEHE178-.LEHB178
 6593 04c4 00       		.uleb128 0
 6594 04c5 00       		.uleb128 0
 6595 04c6 B105     		.uleb128 .LEHB179-.LFB1541
 6596 04c8 05       		.uleb128 .LEHE179-.LEHB179
 6597 04c9 00       		.uleb128 0
 6598 04ca 00       		.uleb128 0
 6599 04cb C805     		.uleb128 .LEHB180-.LFB1541
 6600 04cd 05       		.uleb128 .LEHE180-.LEHB180
 6601 04ce 00       		.uleb128 0
 6602 04cf 00       		.uleb128 0
 6603              	.LLSDACSE1541:
 6604 04d0 03       		.byte	0x3
 6605 04d1 00       		.byte	0
 6606 04d2 02       		.byte	0x2
 6607 04d3 7D       		.byte	0x7d
 6608 04d4 01       		.byte	0x1
 6609 04d5 7D       		.byte	0x7d
 6610 04d6 00       		.byte	0
 6611 04d7 7D       		.byte	0x7d
 6612              		.align 4
 6613 04d8 00000000 		.long	0
 6614              	
 6615 04dc 00000000 		.long	DW.ref._ZTISt9exception-.
 6616 04e0 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 6617              	.LLSDATT1541:
 6618              		.text
 6620              		.section	.rodata
 6621              	.LC36:
 6622 056f 202B2F2D 		.string	" +/- "
 6622      2000
 6623              		.section	.text._ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE,
 6624              		.weak	_ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE
 6626              	_ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE:
 6627              	.LFB1542:
  29:../Checks.h   **** 
  30:../Checks.h   **** void CheckEqual(TestResults& results, char const* expected, char const* actual, TestDetails const& 
  31:../Checks.h   **** 
  32:../Checks.h   **** void CheckEqual(TestResults& results, char* expected, char* actual, TestDetails const& details);
  33:../Checks.h   **** 
  34:../Checks.h   **** void CheckEqual(TestResults& results, char* expected, char const* actual, TestDetails const& detail
  35:../Checks.h   **** 
  36:../Checks.h   **** void CheckEqual(TestResults& results, char const* expected, char* actual, TestDetails const& detail
  37:../Checks.h   **** 
  38:../Checks.h   **** template< typename Expected, typename Actual, typename Tolerance >
  39:../Checks.h   **** bool AreClose(Expected const& expected, Actual const& actual, Tolerance const& tolerance)
  40:../Checks.h   **** {
  41:../Checks.h   ****     return (actual >= (expected - tolerance)) && (actual <= (expected + tolerance));
  42:../Checks.h   **** }
  43:../Checks.h   **** 
  44:../Checks.h   **** template< typename Expected, typename Actual, typename Tolerance >
  45:../Checks.h   **** void CheckClose(TestResults& results, Expected const& expected, Actual const& actual, Tolerance con
 6628              		.loc 8 45 6
 6629              		.cfi_startproc
 6630              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 6631              		.cfi_lsda 0x1b,.LLSDA1542
 6632 0000 F30F1EFA 		endbr64
 6633 0004 55       		pushq	%rbp
 6634              		.cfi_def_cfa_offset 16
 6635              		.cfi_offset 6, -16
 6636 0005 4889E5   		movq	%rsp, %rbp
 6637              		.cfi_def_cfa_register 6
 6638 0008 53       		pushq	%rbx
 6639 0009 4881ECD8 		subq	$472, %rsp
 6639      010000
 6640              		.cfi_offset 3, -24
 6641 0010 4889BD48 		movq	%rdi, -440(%rbp)
 6641      FEFFFF
 6642 0017 4889B540 		movq	%rsi, -448(%rbp)
 6642      FEFFFF
 6643 001e 48899538 		movq	%rdx, -456(%rbp)
 6643      FEFFFF
 6644 0025 48898D30 		movq	%rcx, -464(%rbp)
 6644      FEFFFF
 6645 002c 4C898528 		movq	%r8, -472(%rbp)
 6645      FEFFFF
 6646              		.loc 8 45 6
 6647 0033 64488B04 		movq	%fs:40, %rax
 6647      25280000 
 6647      00
 6648 003c 488945E8 		movq	%rax, -24(%rbp)
 6649 0040 31C0     		xorl	%eax, %eax
 6650              	.LBB115:
  46:../Checks.h   ****                 TestDetails const& details)
  47:../Checks.h   **** {
  48:../Checks.h   ****     if (!AreClose(expected, actual, tolerance))
 6651              		.loc 8 48 18
 6652 0042 488B9530 		movq	-464(%rbp), %rdx
 6652      FEFFFF
 6653 0049 488B8D38 		movq	-456(%rbp), %rcx
 6653      FEFFFF
 6654 0050 488B8540 		movq	-448(%rbp), %rax
 6654      FEFFFF
 6655 0057 4889CE   		movq	%rcx, %rsi
 6656 005a 4889C7   		movq	%rax, %rdi
 6657 005d E8000000 		call	_ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_
 6657      00
 6658 0062 83F001   		xorl	$1, %eax
 6659              		.loc 8 48 5
 6660 0065 84C0     		testb	%al, %al
 6661 0067 0F84F700 		je	.L341
 6661      0000
 6662              	.LBB116:
  49:../Checks.h   ****     { 
  50:../Checks.h   ****         UnitTest::MemoryOutStream stream;
 6663              		.loc 8 50 35
 6664 006d 488D8550 		leaq	-432(%rbp), %rax
 6664      FEFFFF
 6665 0074 4889C7   		movq	%rax, %rdi
 6666              	.LEHB181:
 6667 0077 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6667      00
 6668              	.LEHE181:
  51:../Checks.h   ****         stream << "Expected " << expected << " +/- " << tolerance << " but was " << actual;
 6669              		.loc 8 51 16
 6670 007c 488D8550 		leaq	-432(%rbp), %rax
 6670      FEFFFF
 6671 0083 488D1500 		leaq	.LC34(%rip), %rdx
 6671      000000
 6672 008a 4889D6   		movq	%rdx, %rsi
 6673 008d 4889C7   		movq	%rax, %rdi
 6674              	.LEHB182:
 6675 0090 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6675      00
 6676 0095 4889C2   		movq	%rax, %rdx
 6677              		.loc 8 51 31
 6678 0098 488B8540 		movq	-448(%rbp), %rax
 6678      FEFFFF
 6679 009f 8B00     		movl	(%rax), %eax
 6680 00a1 660F6EC0 		movd	%eax, %xmm0
 6681 00a5 4889D7   		movq	%rdx, %rdi
 6682 00a8 E8000000 		call	_ZNSolsEf@PLT
 6682      00
 6683              		.loc 8 51 31 is_stmt 0 discriminator 1
 6684 00ad 4889C2   		movq	%rax, %rdx
 6685              		.loc 8 51 43 is_stmt 1 discriminator 1
 6686 00b0 488D0500 		leaq	.LC36(%rip), %rax
 6686      000000
 6687 00b7 4889C6   		movq	%rax, %rsi
 6688 00ba 4889D7   		movq	%rdx, %rdi
 6689 00bd E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6689      00
 6690              		.loc 8 51 43 is_stmt 0 discriminator 2
 6691 00c2 4889C2   		movq	%rax, %rdx
 6692              		.loc 8 51 54 is_stmt 1 discriminator 2
 6693 00c5 488B8530 		movq	-464(%rbp), %rax
 6693      FEFFFF
 6694 00cc 8B00     		movl	(%rax), %eax
 6695 00ce 660F6EC0 		movd	%eax, %xmm0
 6696 00d2 4889D7   		movq	%rdx, %rdi
 6697 00d5 E8000000 		call	_ZNSolsEf@PLT
 6697      00
 6698              		.loc 8 51 54 is_stmt 0 discriminator 3
 6699 00da 4889C2   		movq	%rax, %rdx
 6700              		.loc 8 51 67 is_stmt 1 discriminator 3
 6701 00dd 488D0500 		leaq	.LC35(%rip), %rax
 6701      000000
 6702 00e4 4889C6   		movq	%rax, %rsi
 6703 00e7 4889D7   		movq	%rdx, %rdi
 6704 00ea E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6704      00
 6705              		.loc 8 51 67 is_stmt 0 discriminator 4
 6706 00ef 4889C2   		movq	%rax, %rdx
 6707              		.loc 8 51 82 is_stmt 1 discriminator 4
 6708 00f2 488B8538 		movq	-456(%rbp), %rax
 6708      FEFFFF
 6709 00f9 8B00     		movl	(%rax), %eax
 6710 00fb 660F6EC0 		movd	%eax, %xmm0
 6711 00ff 4889D7   		movq	%rdx, %rdi
 6712 0102 E8000000 		call	_ZNSolsEf@PLT
 6712      00
  52:../Checks.h   **** 
  53:../Checks.h   ****         results.OnTestFailure(details, stream.GetText());
 6713              		.loc 8 53 30
 6714 0107 488D8550 		leaq	-432(%rbp), %rax
 6714      FEFFFF
 6715 010e 4889C7   		movq	%rax, %rdi
 6716 0111 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 6716      00
 6717 0116 4889C2   		movq	%rax, %rdx
 6718 0119 488B8D28 		movq	-472(%rbp), %rcx
 6718      FEFFFF
 6719 0120 488B8548 		movq	-440(%rbp), %rax
 6719      FEFFFF
 6720 0127 4889CE   		movq	%rcx, %rsi
 6721 012a 4889C7   		movq	%rax, %rdi
 6722 012d E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6722      00
 6723              	.LEHE182:
  54:../Checks.h   ****     }
 6724              		.loc 8 54 5
 6725 0132 488D8550 		leaq	-432(%rbp), %rax
 6725      FEFFFF
 6726 0139 4889C7   		movq	%rax, %rdi
 6727              	.LEHB183:
 6728 013c E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6728      00
 6729              	.LEHE183:
 6730              	.LBE116:
 6731              	.LBE115:
  55:../Checks.h   **** }
 6732              		.loc 8 55 1
 6733 0141 EB21     		jmp	.L341
 6734              	.L340:
 6735 0143 F30F1EFA 		endbr64
 6736              	.LBB118:
 6737              	.LBB117:
  54:../Checks.h   ****     }
 6738              		.loc 8 54 5
 6739 0147 4889C3   		movq	%rax, %rbx
 6740 014a 488D8550 		leaq	-432(%rbp), %rax
 6740      FEFFFF
 6741 0151 4889C7   		movq	%rax, %rdi
 6742 0154 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6742      00
 6743 0159 4889D8   		movq	%rbx, %rax
 6744 015c 4889C7   		movq	%rax, %rdi
 6745              	.LEHB184:
 6746 015f E8000000 		call	_Unwind_Resume@PLT
 6746      00
 6747              	.LEHE184:
 6748              	.L341:
 6749              	.LBE117:
 6750              	.LBE118:
 6751              		.loc 8 55 1
 6752 0164 90       		nop
 6753 0165 488B45E8 		movq	-24(%rbp), %rax
 6754 0169 64482B04 		subq	%fs:40, %rax
 6754      25280000 
 6754      00
 6755 0172 7405     		je	.L339
 6756 0174 E8000000 		call	__stack_chk_fail@PLT
 6756      00
 6757              	.L339:
 6758 0179 488B5DF8 		movq	-8(%rbp), %rbx
 6759 017d C9       		leave
 6760              		.cfi_def_cfa 7, 8
 6761 017e C3       		ret
 6762              		.cfi_endproc
 6763              	.LFE1542:
 6764              		.section	.gcc_except_table
 6765              	.LLSDA1542:
 6766 04e4 FF       		.byte	0xff
 6767 04e5 FF       		.byte	0xff
 6768 04e6 01       		.byte	0x1
 6769 04e7 15       		.uleb128 .LLSDACSE1542-.LLSDACSB1542
 6770              	.LLSDACSB1542:
 6771 04e8 77       		.uleb128 .LEHB181-.LFB1542
 6772 04e9 05       		.uleb128 .LEHE181-.LEHB181
 6773 04ea 00       		.uleb128 0
 6774 04eb 00       		.uleb128 0
 6775 04ec 9001     		.uleb128 .LEHB182-.LFB1542
 6776 04ee A201     		.uleb128 .LEHE182-.LEHB182
 6777 04f0 C302     		.uleb128 .L340-.LFB1542
 6778 04f2 00       		.uleb128 0
 6779 04f3 BC02     		.uleb128 .LEHB183-.LFB1542
 6780 04f5 05       		.uleb128 .LEHE183-.LEHB183
 6781 04f6 00       		.uleb128 0
 6782 04f7 00       		.uleb128 0
 6783 04f8 DF02     		.uleb128 .LEHB184-.LFB1542
 6784 04fa 05       		.uleb128 .LEHE184-.LEHB184
 6785 04fb 00       		.uleb128 0
 6786 04fc 00       		.uleb128 0
 6787              	.LLSDACSE1542:
 6788              		.section	.text._ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE,
 6790              		.text
 6792              	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDe
 6793              	.LFB1543:
  16:../ExecuteTest.h **** {
 6794              		.loc 7 16 6
 6795              		.cfi_startproc
 6796              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 6797              		.cfi_lsda 0x1b,.LLSDA1543
 6798 2d84 F30F1EFA 		endbr64
 6799 2d88 55       		pushq	%rbp
 6800              		.cfi_def_cfa_offset 16
 6801              		.cfi_offset 6, -16
 6802 2d89 4889E5   		movq	%rsp, %rbp
 6803              		.cfi_def_cfa_register 6
 6804 2d8c 4155     		pushq	%r13
 6805 2d8e 4154     		pushq	%r12
 6806 2d90 53       		pushq	%rbx
 6807 2d91 4881EC58 		subq	$1624, %rsp
 6807      060000
 6808              		.cfi_offset 13, -24
 6809              		.cfi_offset 12, -32
 6810              		.cfi_offset 3, -40
 6811 2d98 4889BD98 		movq	%rdi, -1640(%rbp)
 6811      F9FFFF
 6812 2d9f 4889B590 		movq	%rsi, -1648(%rbp)
 6812      F9FFFF
  16:../ExecuteTest.h **** {
 6813              		.loc 7 16 6
 6814 2da6 64488B04 		movq	%fs:40, %rax
 6814      25280000 
 6814      00
 6815 2daf 488945D8 		movq	%rax, -40(%rbp)
 6816 2db3 31C0     		xorl	%eax, %eax
 6817              	.LEHB185:
  18:../ExecuteTest.h **** 
 6818              		.loc 7 18 22
 6819 2db5 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 6819      00
 6820              	.LEHE185:
  18:../ExecuteTest.h **** 
 6821              		.loc 7 18 25
 6822 2dba 488B9590 		movq	-1648(%rbp), %rdx
 6822      F9FFFF
 6823 2dc1 488910   		movq	%rdx, (%rax)
 6824              	.LBB119:
  23:../ExecuteTest.h **** #endif
 6825              		.loc 7 23 3
 6826 2dc4 488D8570 		leaq	-1168(%rbp), %rax
 6826      FBFFFF
 6827 2dcb 4889C7   		movq	%rax, %rdi
 6828              	.LEHB186:
 6829 2dce E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev@PLT
 6829      00
 6830              	.LEHE186:
  23:../ExecuteTest.h **** #endif
 6831              		.loc 7 23 3 is_stmt 0 discriminator 1
 6832 2dd3 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 6832      000000
 6833 2dda BE010000 		movl	$1, %esi
 6833      00
 6834 2ddf 4889C7   		movq	%rax, %rdi
 6835 2de2 E8000000 		call	__sigsetjmp@PLT
 6835      00
 6836 2de7 F30F1EFA 		endbr64
 6837 2deb 85C0     		testl	%eax, %eax
 6838 2ded 0F95C0   		setne	%al
 6839 2df0 84C0     		testb	%al, %al
 6840 2df2 742B     		je	.L344
  23:../ExecuteTest.h **** #endif
 6841              		.loc 7 23 3 discriminator 4
 6842 2df4 BF080000 		movl	$8, %edi
 6842      00
 6843 2df9 E8000000 		call	__cxa_allocate_exception@PLT
 6843      00
 6844 2dfe 488D1500 		leaq	.LC32(%rip), %rdx
 6844      000000
 6845 2e05 488910   		movq	%rdx, (%rax)
 6846 2e08 BA000000 		movl	$0, %edx
 6846      00
 6847 2e0d 488D0D00 		leaq	_ZTIPKc(%rip), %rcx
 6847      000000
 6848 2e14 4889CE   		movq	%rcx, %rsi
 6849 2e17 4889C7   		movq	%rax, %rdi
 6850              	.LEHB187:
 6851 2e1a E8000000 		call	__cxa_throw@PLT
 6851      00
 6852              	.L344:
  25:../ExecuteTest.h **** 	}
 6853              		.loc 7 25 21 is_stmt 1
 6854 2e1f 488B8598 		movq	-1640(%rbp), %rax
 6854      F9FFFF
 6855 2e26 4889C7   		movq	%rax, %rdi
 6856 2e29 E826E8FF 		call	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper
 6856      FF
 6857              	.LEHE187:
  26:../ExecuteTest.h **** 	catch (AssertException const& e)
 6858              		.loc 7 26 2
 6859 2e2e 488D8570 		leaq	-1168(%rbp), %rax
 6859      FBFFFF
 6860 2e35 4889C7   		movq	%rax, %rdi
 6861              	.LEHB188:
 6862 2e38 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 6862      00
 6863              	.LEHE188:
 6864              	.LBE119:
 6865              		.loc 7 42 1
 6866 2e3d E90F0200 		jmp	.L342
 6866      00
 6867              	.L357:
 6868 2e42 F30F1EFA 		endbr64
 6869              	.LBB120:
  26:../ExecuteTest.h **** 	catch (AssertException const& e)
 6870              		.loc 7 26 2
 6871 2e46 4989C4   		movq	%rax, %r12
 6872 2e49 4889D3   		movq	%rdx, %rbx
 6873 2e4c 488D8570 		leaq	-1168(%rbp), %rax
 6873      FBFFFF
 6874 2e53 4889C7   		movq	%rax, %rdi
 6875 2e56 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 6875      00
 6876 2e5b 4C89E0   		movq	%r12, %rax
 6877 2e5e 4889DA   		movq	%rbx, %rdx
 6878 2e61 EB04     		jmp	.L346
 6879              	.L356:
 6880 2e63 F30F1EFA 		endbr64
 6881              	.L346:
 6882              	.LBE120:
  27:../ExecuteTest.h **** 	{
 6883              		.loc 7 27 2
 6884 2e67 4883FA01 		cmpq	$1, %rdx
 6885 2e6b 740F     		je	.L347
 6886 2e6d 4883FA02 		cmpq	$2, %rdx
 6887 2e71 0F84A600 		je	.L348
 6887      0000
 6888 2e77 E9480100 		jmp	.L362
 6888      00
 6889              	.L347:
 6890              	.LBB121:
  27:../ExecuteTest.h **** 	{
 6891              		.loc 7 27 2 is_stmt 0 discriminator 1
 6892 2e7c 4889C7   		movq	%rax, %rdi
 6893 2e7f E8000000 		call	__cxa_begin_catch@PLT
 6893      00
  27:../ExecuteTest.h **** 	{
 6894              		.loc 7 27 32 is_stmt 1 discriminator 1
 6895 2e84 488985A8 		movq	%rax, -1624(%rbp)
 6895      F9FFFF
 6896              	.LEHB189:
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6897              		.loc 7 29 23 discriminator 1
 6898 2e8b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 6898      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6899              		.loc 7 29 40 discriminator 2
 6900 2e90 488B18   		movq	(%rax), %rbx
  30:../ExecuteTest.h **** 	}
 6901              		.loc 7 30 90 discriminator 2
 6902 2e93 488B85A8 		movq	-1624(%rbp), %rax
 6902      F9FFFF
 6903 2e9a 488B00   		movq	(%rax), %rax
 6904 2e9d 4883C010 		addq	$16, %rax
 6905 2ea1 488B10   		movq	(%rax), %rdx
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6906              		.loc 7 29 40 discriminator 2
 6907 2ea4 488B85A8 		movq	-1624(%rbp), %rax
 6907      F9FFFF
 6908 2eab 4889C7   		movq	%rax, %rdi
 6909 2eae FFD2     		call	*%rdx
 6910              	.LVL18:
 6911 2eb0 4989C4   		movq	%rax, %r12
  30:../ExecuteTest.h **** 	}
 6912              		.loc 7 30 4 discriminator 2
 6913 2eb3 488B85A8 		movq	-1624(%rbp), %rax
 6913      F9FFFF
 6914 2eba 4889C7   		movq	%rax, %rdi
 6915 2ebd E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 6915      00
 6916 2ec2 4189C5   		movl	%eax, %r13d
 6917 2ec5 488B85A8 		movq	-1624(%rbp), %rax
 6917      F9FFFF
 6918 2ecc 4889C7   		movq	%rax, %rdi
 6919 2ecf E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 6919      00
  30:../ExecuteTest.h **** 	}
 6920              		.loc 7 30 4 is_stmt 0 discriminator 1
 6921 2ed4 4889C1   		movq	%rax, %rcx
  30:../ExecuteTest.h **** 	}
 6922              		.loc 7 30 42 is_stmt 1 discriminator 1
 6923 2ed7 488B8590 		movq	-1648(%rbp), %rax
 6923      F9FFFF
 6924 2ede 488B10   		movq	(%rax), %rdx
  30:../ExecuteTest.h **** 	}
 6925              		.loc 7 30 24 discriminator 1
 6926 2ee1 488B8590 		movq	-1648(%rbp), %rax
 6926      F9FFFF
 6927 2ee8 488B7008 		movq	8(%rax), %rsi
  30:../ExecuteTest.h **** 	}
 6928              		.loc 7 30 4 discriminator 1
 6929 2eec 488D85B0 		leaq	-1616(%rbp), %rax
 6929      F9FFFF
 6930 2ef3 4589E8   		movl	%r13d, %r8d
 6931 2ef6 4889C7   		movq	%rax, %rdi
 6932 2ef9 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 6932      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6933              		.loc 7 29 40
 6934 2efe 488D85B0 		leaq	-1616(%rbp), %rax
 6934      F9FFFF
 6935 2f05 4C89E2   		movq	%r12, %rdx
 6936 2f08 4889C6   		movq	%rax, %rsi
 6937 2f0b 4889DF   		movq	%rbx, %rdi
 6938 2f0e E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6938      00
 6939              	.LEHE189:
  27:../ExecuteTest.h **** 	{
 6940              		.loc 7 27 2
 6941 2f13 E8000000 		call	__cxa_end_catch@PLT
 6941      00
 6942              	.LBE121:
 6943              		.loc 7 42 1
 6944 2f18 E9340100 		jmp	.L342
 6944      00
 6945              	.L348:
 6946              	.LBB122:
  32:../ExecuteTest.h **** 	{
 6947              		.loc 7 32 2
 6948 2f1d 4889C7   		movq	%rax, %rdi
 6949 2f20 E8000000 		call	__cxa_begin_catch@PLT
 6949      00
  32:../ExecuteTest.h **** 	{
 6950              		.loc 7 32 31
 6951 2f25 488985A0 		movq	%rax, -1632(%rbp)
 6951      F9FFFF
 6952              	.LBB123:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6953              		.loc 7 34 19
 6954 2f2c 488D85D0 		leaq	-1584(%rbp), %rax
 6954      F9FFFF
 6955 2f33 4889C7   		movq	%rax, %rdi
 6956              	.LEHB190:
 6957 2f36 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6957      00
 6958              	.LEHE190:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6959              		.loc 7 35 37
 6960 2f3b 488D85D0 		leaq	-1584(%rbp), %rax
 6960      F9FFFF
 6961 2f42 488D1500 		leaq	.LC6(%rip), %rdx
 6961      000000
 6962 2f49 4889D6   		movq	%rdx, %rsi
 6963 2f4c 4889C7   		movq	%rax, %rdi
 6964              	.LEHB191:
 6965 2f4f E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6965      00
 6966 2f54 4889C3   		movq	%rax, %rbx
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6967              		.loc 7 35 46
 6968 2f57 488B85A0 		movq	-1632(%rbp), %rax
 6968      F9FFFF
 6969 2f5e 488B00   		movq	(%rax), %rax
 6970 2f61 4883C010 		addq	$16, %rax
 6971 2f65 488B10   		movq	(%rax), %rdx
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6972              		.loc 7 35 37
 6973 2f68 488B85A0 		movq	-1632(%rbp), %rax
 6973      F9FFFF
 6974 2f6f 4889C7   		movq	%rax, %rdi
 6975 2f72 FFD2     		call	*%rdx
 6976              	.LVL19:
 6977 2f74 4889C6   		movq	%rax, %rsi
 6978 2f77 4889DF   		movq	%rbx, %rdi
 6979 2f7a E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6979      00
  36:../ExecuteTest.h **** 	}
 6980              		.loc 7 36 23
 6981 2f7f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 6981      00
  36:../ExecuteTest.h **** 	}
 6982              		.loc 7 36 40
 6983 2f84 488B18   		movq	(%rax), %rbx
 6984 2f87 488D85D0 		leaq	-1584(%rbp), %rax
 6984      F9FFFF
 6985 2f8e 4889C7   		movq	%rax, %rdi
 6986 2f91 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 6986      00
  36:../ExecuteTest.h **** 	}
 6987              		.loc 7 36 40 is_stmt 0 discriminator 1
 6988 2f96 4889C2   		movq	%rax, %rdx
 6989 2f99 488B8590 		movq	-1648(%rbp), %rax
 6989      F9FFFF
 6990 2fa0 4889C6   		movq	%rax, %rsi
 6991 2fa3 4889DF   		movq	%rbx, %rdi
 6992 2fa6 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6992      00
 6993              	.LEHE191:
  37:../ExecuteTest.h **** 	catch (...)
 6994              		.loc 7 37 2 is_stmt 1
 6995 2fab 488D85D0 		leaq	-1584(%rbp), %rax
 6995      F9FFFF
 6996 2fb2 4889C7   		movq	%rax, %rdi
 6997              	.LEHB192:
 6998 2fb5 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6998      00
 6999              	.LEHE192:
 7000              	.LBE123:
  32:../ExecuteTest.h **** 	{
 7001              		.loc 7 32 2
 7002 2fba E8000000 		call	__cxa_end_catch@PLT
 7002      00
 7003              	.LBE122:
 7004              		.loc 7 42 1
 7005 2fbf E98D0000 		jmp	.L342
 7005      00
 7006              	.L362:
  38:../ExecuteTest.h **** 	{
 7007              		.loc 7 38 2
 7008 2fc4 4889C7   		movq	%rax, %rdi
 7009 2fc7 E8000000 		call	__cxa_begin_catch@PLT
 7009      00
 7010              	.LEHB193:
  40:../ExecuteTest.h **** 	}
 7011              		.loc 7 40 23
 7012 2fcc E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 7012      00
  40:../ExecuteTest.h **** 	}
 7013              		.loc 7 40 40
 7014 2fd1 488B00   		movq	(%rax), %rax
 7015 2fd4 488B8D90 		movq	-1648(%rbp), %rcx
 7015      F9FFFF
 7016 2fdb 488D1500 		leaq	.LC33(%rip), %rdx
 7016      000000
 7017 2fe2 4889CE   		movq	%rcx, %rsi
 7018 2fe5 4889C7   		movq	%rax, %rdi
 7019 2fe8 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 7019      00
 7020              	.LEHE193:
 7021              	.LEHB194:
  38:../ExecuteTest.h **** 	{
 7022              		.loc 7 38 2
 7023 2fed E8000000 		call	__cxa_end_catch@PLT
 7023      00
 7024              		.loc 7 42 1
 7025 2ff2 EB5D     		jmp	.L342
 7026              	.L358:
 7027 2ff4 F30F1EFA 		endbr64
 7028              	.LBB125:
  27:../ExecuteTest.h **** 	{
 7029              		.loc 7 27 2
 7030 2ff8 4889C3   		movq	%rax, %rbx
 7031 2ffb E8000000 		call	__cxa_end_catch@PLT
 7031      00
 7032 3000 4889D8   		movq	%rbx, %rax
 7033 3003 4889C7   		movq	%rax, %rdi
 7034 3006 E8000000 		call	_Unwind_Resume@PLT
 7034      00
 7035              	.LEHE194:
 7036              	.L360:
 7037 300b F30F1EFA 		endbr64
 7038              	.LBE125:
 7039              	.LBB126:
 7040              	.LBB124:
  37:../ExecuteTest.h **** 	catch (...)
 7041              		.loc 7 37 2
 7042 300f 4889C3   		movq	%rax, %rbx
 7043 3012 488D85D0 		leaq	-1584(%rbp), %rax
 7043      F9FFFF
 7044 3019 4889C7   		movq	%rax, %rdi
 7045 301c E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7045      00
 7046 3021 EB07     		jmp	.L353
 7047              	.L359:
 7048 3023 F30F1EFA 		endbr64
 7049              	.LBE124:
  32:../ExecuteTest.h **** 	{
 7050              		.loc 7 32 2
 7051 3027 4889C3   		movq	%rax, %rbx
 7052              	.L353:
 7053 302a E8000000 		call	__cxa_end_catch@PLT
 7053      00
 7054 302f 4889D8   		movq	%rbx, %rax
 7055 3032 4889C7   		movq	%rax, %rdi
 7056              	.LEHB195:
 7057 3035 E8000000 		call	_Unwind_Resume@PLT
 7057      00
 7058              	.LEHE195:
 7059              	.L361:
 7060 303a F30F1EFA 		endbr64
 7061              	.LBE126:
  38:../ExecuteTest.h **** 	{
 7062              		.loc 7 38 2
 7063 303e 4889C3   		movq	%rax, %rbx
 7064 3041 E8000000 		call	__cxa_end_catch@PLT
 7064      00
 7065 3046 4889D8   		movq	%rbx, %rax
 7066 3049 4889C7   		movq	%rax, %rdi
 7067              	.LEHB196:
 7068 304c E8000000 		call	_Unwind_Resume@PLT
 7068      00
 7069              	.LEHE196:
 7070              	.L342:
 7071              		.loc 7 42 1
 7072 3051 488B45D8 		movq	-40(%rbp), %rax
 7073 3055 64482B04 		subq	%fs:40, %rax
 7073      25280000 
 7073      00
 7074 305e 7405     		je	.L355
 7075 3060 E8000000 		call	__stack_chk_fail@PLT
 7075      00
 7076              	.L355:
 7077 3065 4881C458 		addq	$1624, %rsp
 7077      060000
 7078 306c 5B       		popq	%rbx
 7079 306d 415C     		popq	%r12
 7080 306f 415D     		popq	%r13
 7081 3071 5D       		popq	%rbp
 7082              		.cfi_def_cfa 7, 8
 7083 3072 C3       		ret
 7084              		.cfi_endproc
 7085              	.LFE1543:
 7086              		.section	.gcc_except_table
 7087 04fd 000000   		.align 4
 7088              	.LLSDA1543:
 7089 0500 FF       		.byte	0xff
 7090 0501 9B       		.byte	0x9b
 7091 0502 59       		.uleb128 .LLSDATT1543-.LLSDATTD1543
 7092              	.LLSDATTD1543:
 7093 0503 01       		.byte	0x1
 7094 0504 43       		.uleb128 .LLSDACSE1543-.LLSDACSB1543
 7095              	.LLSDACSB1543:
 7096 0505 31       		.uleb128 .LEHB185-.LFB1543
 7097 0506 05       		.uleb128 .LEHE185-.LEHB185
 7098 0507 00       		.uleb128 0
 7099 0508 00       		.uleb128 0
 7100 0509 4A       		.uleb128 .LEHB186-.LFB1543
 7101 050a 05       		.uleb128 .LEHE186-.LEHB186
 7102 050b DF01     		.uleb128 .L356-.LFB1543
 7103 050d 05       		.uleb128 0x5
 7104 050e 9601     		.uleb128 .LEHB187-.LFB1543
 7105 0510 14       		.uleb128 .LEHE187-.LEHB187
 7106 0511 BE01     		.uleb128 .L357-.LFB1543
 7107 0513 07       		.uleb128 0x7
 7108 0514 B401     		.uleb128 .LEHB188-.LFB1543
 7109 0516 05       		.uleb128 .LEHE188-.LEHB188
 7110 0517 DF01     		.uleb128 .L356-.LFB1543
 7111 0519 05       		.uleb128 0x5
 7112 051a 8702     		.uleb128 .LEHB189-.LFB1543
 7113 051c 8801     		.uleb128 .LEHE189-.LEHB189
 7114 051e F004     		.uleb128 .L358-.LFB1543
 7115 0520 00       		.uleb128 0
 7116 0521 B203     		.uleb128 .LEHB190-.LFB1543
 7117 0523 05       		.uleb128 .LEHE190-.LEHB190
 7118 0524 9F05     		.uleb128 .L359-.LFB1543
 7119 0526 00       		.uleb128 0
 7120 0527 CB03     		.uleb128 .LEHB191-.LFB1543
 7121 0529 5C       		.uleb128 .LEHE191-.LEHB191
 7122 052a 8705     		.uleb128 .L360-.LFB1543
 7123 052c 00       		.uleb128 0
 7124 052d B104     		.uleb128 .LEHB192-.LFB1543
 7125 052f 05       		.uleb128 .LEHE192-.LEHB192
 7126 0530 9F05     		.uleb128 .L359-.LFB1543
 7127 0532 00       		.uleb128 0
 7128 0533 C804     		.uleb128 .LEHB193-.LFB1543
 7129 0535 21       		.uleb128 .LEHE193-.LEHB193
 7130 0536 B605     		.uleb128 .L361-.LFB1543
 7131 0538 00       		.uleb128 0
 7132 0539 E904     		.uleb128 .LEHB194-.LFB1543
 7133 053b 1E       		.uleb128 .LEHE194-.LEHB194
 7134 053c 00       		.uleb128 0
 7135 053d 00       		.uleb128 0
 7136 053e B105     		.uleb128 .LEHB195-.LFB1543
 7137 0540 05       		.uleb128 .LEHE195-.LEHB195
 7138 0541 00       		.uleb128 0
 7139 0542 00       		.uleb128 0
 7140 0543 C805     		.uleb128 .LEHB196-.LFB1543
 7141 0545 05       		.uleb128 .LEHE196-.LEHB196
 7142 0546 00       		.uleb128 0
 7143 0547 00       		.uleb128 0
 7144              	.LLSDACSE1543:
 7145 0548 03       		.byte	0x3
 7146 0549 00       		.byte	0
 7147 054a 02       		.byte	0x2
 7148 054b 7D       		.byte	0x7d
 7149 054c 01       		.byte	0x1
 7150 054d 7D       		.byte	0x7d
 7151 054e 00       		.byte	0
 7152 054f 7D       		.byte	0x7d
 7153              		.align 4
 7154 0550 00000000 		.long	0
 7155              	
 7156 0554 00000000 		.long	DW.ref._ZTISt9exception-.
 7157 0558 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 7158              	.LLSDATT1543:
 7159              		.text
 7161              		.section	.text._ZN8UnitTest5CheckIbEEbT_,"axG",@progbits,_ZN8UnitTest5CheckIbEEbT_,comdat
 7162              		.weak	_ZN8UnitTest5CheckIbEEbT_
 7164              	_ZN8UnitTest5CheckIbEEbT_:
 7165              	.LFB1544:
  12:../Checks.h   **** {
 7166              		.loc 8 12 6
 7167              		.cfi_startproc
 7168 0000 F30F1EFA 		endbr64
 7169 0004 55       		pushq	%rbp
 7170              		.cfi_def_cfa_offset 16
 7171              		.cfi_offset 6, -16
 7172 0005 4889E5   		movq	%rsp, %rbp
 7173              		.cfi_def_cfa_register 6
 7174 0008 89F8     		movl	%edi, %eax
 7175 000a 8845FC   		movb	%al, -4(%rbp)
  14:../Checks.h   **** }
 7176              		.loc 8 14 14
 7177 000d 0FB645FC 		movzbl	-4(%rbp), %eax
  15:../Checks.h   **** 
 7178              		.loc 8 15 1
 7179 0011 5D       		popq	%rbp
 7180              		.cfi_def_cfa 7, 8
 7181 0012 C3       		ret
 7182              		.cfi_endproc
 7183              	.LFE1544:
 7185              		.text
 7187              	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDe
 7188              	.LFB1545:
  16:../ExecuteTest.h **** {
 7189              		.loc 7 16 6
 7190              		.cfi_startproc
 7191              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 7192              		.cfi_lsda 0x1b,.LLSDA1545
 7193 3073 F30F1EFA 		endbr64
 7194 3077 55       		pushq	%rbp
 7195              		.cfi_def_cfa_offset 16
 7196              		.cfi_offset 6, -16
 7197 3078 4889E5   		movq	%rsp, %rbp
 7198              		.cfi_def_cfa_register 6
 7199 307b 4155     		pushq	%r13
 7200 307d 4154     		pushq	%r12
 7201 307f 53       		pushq	%rbx
 7202 3080 4881EC58 		subq	$1624, %rsp
 7202      060000
 7203              		.cfi_offset 13, -24
 7204              		.cfi_offset 12, -32
 7205              		.cfi_offset 3, -40
 7206 3087 4889BD98 		movq	%rdi, -1640(%rbp)
 7206      F9FFFF
 7207 308e 4889B590 		movq	%rsi, -1648(%rbp)
 7207      F9FFFF
  16:../ExecuteTest.h **** {
 7208              		.loc 7 16 6
 7209 3095 64488B04 		movq	%fs:40, %rax
 7209      25280000 
 7209      00
 7210 309e 488945D8 		movq	%rax, -40(%rbp)
 7211 30a2 31C0     		xorl	%eax, %eax
 7212              	.LEHB197:
  18:../ExecuteTest.h **** 
 7213              		.loc 7 18 22
 7214 30a4 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 7214      00
 7215              	.LEHE197:
  18:../ExecuteTest.h **** 
 7216              		.loc 7 18 25
 7217 30a9 488B9590 		movq	-1648(%rbp), %rdx
 7217      F9FFFF
 7218 30b0 488910   		movq	%rdx, (%rax)
 7219              	.LBB127:
  23:../ExecuteTest.h **** #endif
 7220              		.loc 7 23 3
 7221 30b3 488D8570 		leaq	-1168(%rbp), %rax
 7221      FBFFFF
 7222 30ba 4889C7   		movq	%rax, %rdi
 7223              	.LEHB198:
 7224 30bd E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev@PLT
 7224      00
 7225              	.LEHE198:
  23:../ExecuteTest.h **** #endif
 7226              		.loc 7 23 3 is_stmt 0 discriminator 1
 7227 30c2 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 7227      000000
 7228 30c9 BE010000 		movl	$1, %esi
 7228      00
 7229 30ce 4889C7   		movq	%rax, %rdi
 7230 30d1 E8000000 		call	__sigsetjmp@PLT
 7230      00
 7231 30d6 F30F1EFA 		endbr64
 7232 30da 85C0     		testl	%eax, %eax
 7233 30dc 0F95C0   		setne	%al
 7234 30df 84C0     		testb	%al, %al
 7235 30e1 742B     		je	.L367
  23:../ExecuteTest.h **** #endif
 7236              		.loc 7 23 3 discriminator 4
 7237 30e3 BF080000 		movl	$8, %edi
 7237      00
 7238 30e8 E8000000 		call	__cxa_allocate_exception@PLT
 7238      00
 7239 30ed 488D1500 		leaq	.LC32(%rip), %rdx
 7239      000000
 7240 30f4 488910   		movq	%rdx, (%rax)
 7241 30f7 BA000000 		movl	$0, %edx
 7241      00
 7242 30fc 488D0D00 		leaq	_ZTIPKc(%rip), %rcx
 7242      000000
 7243 3103 4889CE   		movq	%rcx, %rsi
 7244 3106 4889C7   		movq	%rax, %rdi
 7245              	.LEHB199:
 7246 3109 E8000000 		call	__cxa_throw@PLT
 7246      00
 7247              	.L367:
  25:../ExecuteTest.h **** 	}
 7248              		.loc 7 25 21 is_stmt 1
 7249 310e 488B8598 		movq	-1640(%rbp), %rax
 7249      F9FFFF
 7250 3115 4889C7   		movq	%rax, %rdi
 7251 3118 E811EBFF 		call	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 7251      FF
 7252              	.LEHE199:
  26:../ExecuteTest.h **** 	catch (AssertException const& e)
 7253              		.loc 7 26 2
 7254 311d 488D8570 		leaq	-1168(%rbp), %rax
 7254      FBFFFF
 7255 3124 4889C7   		movq	%rax, %rdi
 7256              	.LEHB200:
 7257 3127 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 7257      00
 7258              	.LEHE200:
 7259              	.LBE127:
 7260              		.loc 7 42 1
 7261 312c E90F0200 		jmp	.L365
 7261      00
 7262              	.L380:
 7263 3131 F30F1EFA 		endbr64
 7264              	.LBB128:
  26:../ExecuteTest.h **** 	catch (AssertException const& e)
 7265              		.loc 7 26 2
 7266 3135 4989C4   		movq	%rax, %r12
 7267 3138 4889D3   		movq	%rdx, %rbx
 7268 313b 488D8570 		leaq	-1168(%rbp), %rax
 7268      FBFFFF
 7269 3142 4889C7   		movq	%rax, %rdi
 7270 3145 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 7270      00
 7271 314a 4C89E0   		movq	%r12, %rax
 7272 314d 4889DA   		movq	%rbx, %rdx
 7273 3150 EB04     		jmp	.L369
 7274              	.L379:
 7275 3152 F30F1EFA 		endbr64
 7276              	.L369:
 7277              	.LBE128:
  27:../ExecuteTest.h **** 	{
 7278              		.loc 7 27 2
 7279 3156 4883FA01 		cmpq	$1, %rdx
 7280 315a 740F     		je	.L370
 7281 315c 4883FA02 		cmpq	$2, %rdx
 7282 3160 0F84A600 		je	.L371
 7282      0000
 7283 3166 E9480100 		jmp	.L385
 7283      00
 7284              	.L370:
 7285              	.LBB129:
  27:../ExecuteTest.h **** 	{
 7286              		.loc 7 27 2 is_stmt 0 discriminator 1
 7287 316b 4889C7   		movq	%rax, %rdi
 7288 316e E8000000 		call	__cxa_begin_catch@PLT
 7288      00
  27:../ExecuteTest.h **** 	{
 7289              		.loc 7 27 32 is_stmt 1 discriminator 1
 7290 3173 488985A8 		movq	%rax, -1624(%rbp)
 7290      F9FFFF
 7291              	.LEHB201:
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7292              		.loc 7 29 23 discriminator 1
 7293 317a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 7293      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7294              		.loc 7 29 40 discriminator 2
 7295 317f 488B18   		movq	(%rax), %rbx
  30:../ExecuteTest.h **** 	}
 7296              		.loc 7 30 90 discriminator 2
 7297 3182 488B85A8 		movq	-1624(%rbp), %rax
 7297      F9FFFF
 7298 3189 488B00   		movq	(%rax), %rax
 7299 318c 4883C010 		addq	$16, %rax
 7300 3190 488B10   		movq	(%rax), %rdx
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7301              		.loc 7 29 40 discriminator 2
 7302 3193 488B85A8 		movq	-1624(%rbp), %rax
 7302      F9FFFF
 7303 319a 4889C7   		movq	%rax, %rdi
 7304 319d FFD2     		call	*%rdx
 7305              	.LVL20:
 7306 319f 4989C4   		movq	%rax, %r12
  30:../ExecuteTest.h **** 	}
 7307              		.loc 7 30 4 discriminator 2
 7308 31a2 488B85A8 		movq	-1624(%rbp), %rax
 7308      F9FFFF
 7309 31a9 4889C7   		movq	%rax, %rdi
 7310 31ac E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 7310      00
 7311 31b1 4189C5   		movl	%eax, %r13d
 7312 31b4 488B85A8 		movq	-1624(%rbp), %rax
 7312      F9FFFF
 7313 31bb 4889C7   		movq	%rax, %rdi
 7314 31be E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 7314      00
  30:../ExecuteTest.h **** 	}
 7315              		.loc 7 30 4 is_stmt 0 discriminator 1
 7316 31c3 4889C1   		movq	%rax, %rcx
  30:../ExecuteTest.h **** 	}
 7317              		.loc 7 30 42 is_stmt 1 discriminator 1
 7318 31c6 488B8590 		movq	-1648(%rbp), %rax
 7318      F9FFFF
 7319 31cd 488B10   		movq	(%rax), %rdx
  30:../ExecuteTest.h **** 	}
 7320              		.loc 7 30 24 discriminator 1
 7321 31d0 488B8590 		movq	-1648(%rbp), %rax
 7321      F9FFFF
 7322 31d7 488B7008 		movq	8(%rax), %rsi
  30:../ExecuteTest.h **** 	}
 7323              		.loc 7 30 4 discriminator 1
 7324 31db 488D85B0 		leaq	-1616(%rbp), %rax
 7324      F9FFFF
 7325 31e2 4589E8   		movl	%r13d, %r8d
 7326 31e5 4889C7   		movq	%rax, %rdi
 7327 31e8 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 7327      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7328              		.loc 7 29 40
 7329 31ed 488D85B0 		leaq	-1616(%rbp), %rax
 7329      F9FFFF
 7330 31f4 4C89E2   		movq	%r12, %rdx
 7331 31f7 4889C6   		movq	%rax, %rsi
 7332 31fa 4889DF   		movq	%rbx, %rdi
 7333 31fd E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 7333      00
 7334              	.LEHE201:
  27:../ExecuteTest.h **** 	{
 7335              		.loc 7 27 2
 7336 3202 E8000000 		call	__cxa_end_catch@PLT
 7336      00
 7337              	.LBE129:
 7338              		.loc 7 42 1
 7339 3207 E9340100 		jmp	.L365
 7339      00
 7340              	.L371:
 7341              	.LBB130:
  32:../ExecuteTest.h **** 	{
 7342              		.loc 7 32 2
 7343 320c 4889C7   		movq	%rax, %rdi
 7344 320f E8000000 		call	__cxa_begin_catch@PLT
 7344      00
  32:../ExecuteTest.h **** 	{
 7345              		.loc 7 32 31
 7346 3214 488985A0 		movq	%rax, -1632(%rbp)
 7346      F9FFFF
 7347              	.LBB131:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7348              		.loc 7 34 19
 7349 321b 488D85D0 		leaq	-1584(%rbp), %rax
 7349      F9FFFF
 7350 3222 4889C7   		movq	%rax, %rdi
 7351              	.LEHB202:
 7352 3225 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 7352      00
 7353              	.LEHE202:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7354              		.loc 7 35 37
 7355 322a 488D85D0 		leaq	-1584(%rbp), %rax
 7355      F9FFFF
 7356 3231 488D1500 		leaq	.LC6(%rip), %rdx
 7356      000000
 7357 3238 4889D6   		movq	%rdx, %rsi
 7358 323b 4889C7   		movq	%rax, %rdi
 7359              	.LEHB203:
 7360 323e E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 7360      00
 7361 3243 4889C3   		movq	%rax, %rbx
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7362              		.loc 7 35 46
 7363 3246 488B85A0 		movq	-1632(%rbp), %rax
 7363      F9FFFF
 7364 324d 488B00   		movq	(%rax), %rax
 7365 3250 4883C010 		addq	$16, %rax
 7366 3254 488B10   		movq	(%rax), %rdx
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7367              		.loc 7 35 37
 7368 3257 488B85A0 		movq	-1632(%rbp), %rax
 7368      F9FFFF
 7369 325e 4889C7   		movq	%rax, %rdi
 7370 3261 FFD2     		call	*%rdx
 7371              	.LVL21:
 7372 3263 4889C6   		movq	%rax, %rsi
 7373 3266 4889DF   		movq	%rbx, %rdi
 7374 3269 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 7374      00
  36:../ExecuteTest.h **** 	}
 7375              		.loc 7 36 23
 7376 326e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 7376      00
  36:../ExecuteTest.h **** 	}
 7377              		.loc 7 36 40
 7378 3273 488B18   		movq	(%rax), %rbx
 7379 3276 488D85D0 		leaq	-1584(%rbp), %rax
 7379      F9FFFF
 7380 327d 4889C7   		movq	%rax, %rdi
 7381 3280 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 7381      00
  36:../ExecuteTest.h **** 	}
 7382              		.loc 7 36 40 is_stmt 0 discriminator 1
 7383 3285 4889C2   		movq	%rax, %rdx
 7384 3288 488B8590 		movq	-1648(%rbp), %rax
 7384      F9FFFF
 7385 328f 4889C6   		movq	%rax, %rsi
 7386 3292 4889DF   		movq	%rbx, %rdi
 7387 3295 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 7387      00
 7388              	.LEHE203:
  37:../ExecuteTest.h **** 	catch (...)
 7389              		.loc 7 37 2 is_stmt 1
 7390 329a 488D85D0 		leaq	-1584(%rbp), %rax
 7390      F9FFFF
 7391 32a1 4889C7   		movq	%rax, %rdi
 7392              	.LEHB204:
 7393 32a4 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7393      00
 7394              	.LEHE204:
 7395              	.LBE131:
  32:../ExecuteTest.h **** 	{
 7396              		.loc 7 32 2
 7397 32a9 E8000000 		call	__cxa_end_catch@PLT
 7397      00
 7398              	.LBE130:
 7399              		.loc 7 42 1
 7400 32ae E98D0000 		jmp	.L365
 7400      00
 7401              	.L385:
  38:../ExecuteTest.h **** 	{
 7402              		.loc 7 38 2
 7403 32b3 4889C7   		movq	%rax, %rdi
 7404 32b6 E8000000 		call	__cxa_begin_catch@PLT
 7404      00
 7405              	.LEHB205:
  40:../ExecuteTest.h **** 	}
 7406              		.loc 7 40 23
 7407 32bb E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 7407      00
  40:../ExecuteTest.h **** 	}
 7408              		.loc 7 40 40
 7409 32c0 488B00   		movq	(%rax), %rax
 7410 32c3 488B8D90 		movq	-1648(%rbp), %rcx
 7410      F9FFFF
 7411 32ca 488D1500 		leaq	.LC33(%rip), %rdx
 7411      000000
 7412 32d1 4889CE   		movq	%rcx, %rsi
 7413 32d4 4889C7   		movq	%rax, %rdi
 7414 32d7 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 7414      00
 7415              	.LEHE205:
 7416              	.LEHB206:
  38:../ExecuteTest.h **** 	{
 7417              		.loc 7 38 2
 7418 32dc E8000000 		call	__cxa_end_catch@PLT
 7418      00
 7419              		.loc 7 42 1
 7420 32e1 EB5D     		jmp	.L365
 7421              	.L381:
 7422 32e3 F30F1EFA 		endbr64
 7423              	.LBB133:
  27:../ExecuteTest.h **** 	{
 7424              		.loc 7 27 2
 7425 32e7 4889C3   		movq	%rax, %rbx
 7426 32ea E8000000 		call	__cxa_end_catch@PLT
 7426      00
 7427 32ef 4889D8   		movq	%rbx, %rax
 7428 32f2 4889C7   		movq	%rax, %rdi
 7429 32f5 E8000000 		call	_Unwind_Resume@PLT
 7429      00
 7430              	.LEHE206:
 7431              	.L383:
 7432 32fa F30F1EFA 		endbr64
 7433              	.LBE133:
 7434              	.LBB134:
 7435              	.LBB132:
  37:../ExecuteTest.h **** 	catch (...)
 7436              		.loc 7 37 2
 7437 32fe 4889C3   		movq	%rax, %rbx
 7438 3301 488D85D0 		leaq	-1584(%rbp), %rax
 7438      F9FFFF
 7439 3308 4889C7   		movq	%rax, %rdi
 7440 330b E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7440      00
 7441 3310 EB07     		jmp	.L376
 7442              	.L382:
 7443 3312 F30F1EFA 		endbr64
 7444              	.LBE132:
  32:../ExecuteTest.h **** 	{
 7445              		.loc 7 32 2
 7446 3316 4889C3   		movq	%rax, %rbx
 7447              	.L376:
 7448 3319 E8000000 		call	__cxa_end_catch@PLT
 7448      00
 7449 331e 4889D8   		movq	%rbx, %rax
 7450 3321 4889C7   		movq	%rax, %rdi
 7451              	.LEHB207:
 7452 3324 E8000000 		call	_Unwind_Resume@PLT
 7452      00
 7453              	.LEHE207:
 7454              	.L384:
 7455 3329 F30F1EFA 		endbr64
 7456              	.LBE134:
  38:../ExecuteTest.h **** 	{
 7457              		.loc 7 38 2
 7458 332d 4889C3   		movq	%rax, %rbx
 7459 3330 E8000000 		call	__cxa_end_catch@PLT
 7459      00
 7460 3335 4889D8   		movq	%rbx, %rax
 7461 3338 4889C7   		movq	%rax, %rdi
 7462              	.LEHB208:
 7463 333b E8000000 		call	_Unwind_Resume@PLT
 7463      00
 7464              	.LEHE208:
 7465              	.L365:
 7466              		.loc 7 42 1
 7467 3340 488B45D8 		movq	-40(%rbp), %rax
 7468 3344 64482B04 		subq	%fs:40, %rax
 7468      25280000 
 7468      00
 7469 334d 7405     		je	.L378
 7470 334f E8000000 		call	__stack_chk_fail@PLT
 7470      00
 7471              	.L378:
 7472 3354 4881C458 		addq	$1624, %rsp
 7472      060000
 7473 335b 5B       		popq	%rbx
 7474 335c 415C     		popq	%r12
 7475 335e 415D     		popq	%r13
 7476 3360 5D       		popq	%rbp
 7477              		.cfi_def_cfa 7, 8
 7478 3361 C3       		ret
 7479              		.cfi_endproc
 7480              	.LFE1545:
 7481              		.section	.gcc_except_table
 7482              		.align 4
 7483              	.LLSDA1545:
 7484 055c FF       		.byte	0xff
 7485 055d 9B       		.byte	0x9b
 7486 055e 59       		.uleb128 .LLSDATT1545-.LLSDATTD1545
 7487              	.LLSDATTD1545:
 7488 055f 01       		.byte	0x1
 7489 0560 43       		.uleb128 .LLSDACSE1545-.LLSDACSB1545
 7490              	.LLSDACSB1545:
 7491 0561 31       		.uleb128 .LEHB197-.LFB1545
 7492 0562 05       		.uleb128 .LEHE197-.LEHB197
 7493 0563 00       		.uleb128 0
 7494 0564 00       		.uleb128 0
 7495 0565 4A       		.uleb128 .LEHB198-.LFB1545
 7496 0566 05       		.uleb128 .LEHE198-.LEHB198
 7497 0567 DF01     		.uleb128 .L379-.LFB1545
 7498 0569 05       		.uleb128 0x5
 7499 056a 9601     		.uleb128 .LEHB199-.LFB1545
 7500 056c 14       		.uleb128 .LEHE199-.LEHB199
 7501 056d BE01     		.uleb128 .L380-.LFB1545
 7502 056f 07       		.uleb128 0x7
 7503 0570 B401     		.uleb128 .LEHB200-.LFB1545
 7504 0572 05       		.uleb128 .LEHE200-.LEHB200
 7505 0573 DF01     		.uleb128 .L379-.LFB1545
 7506 0575 05       		.uleb128 0x5
 7507 0576 8702     		.uleb128 .LEHB201-.LFB1545
 7508 0578 8801     		.uleb128 .LEHE201-.LEHB201
 7509 057a F004     		.uleb128 .L381-.LFB1545
 7510 057c 00       		.uleb128 0
 7511 057d B203     		.uleb128 .LEHB202-.LFB1545
 7512 057f 05       		.uleb128 .LEHE202-.LEHB202
 7513 0580 9F05     		.uleb128 .L382-.LFB1545
 7514 0582 00       		.uleb128 0
 7515 0583 CB03     		.uleb128 .LEHB203-.LFB1545
 7516 0585 5C       		.uleb128 .LEHE203-.LEHB203
 7517 0586 8705     		.uleb128 .L383-.LFB1545
 7518 0588 00       		.uleb128 0
 7519 0589 B104     		.uleb128 .LEHB204-.LFB1545
 7520 058b 05       		.uleb128 .LEHE204-.LEHB204
 7521 058c 9F05     		.uleb128 .L382-.LFB1545
 7522 058e 00       		.uleb128 0
 7523 058f C804     		.uleb128 .LEHB205-.LFB1545
 7524 0591 21       		.uleb128 .LEHE205-.LEHB205
 7525 0592 B605     		.uleb128 .L384-.LFB1545
 7526 0594 00       		.uleb128 0
 7527 0595 E904     		.uleb128 .LEHB206-.LFB1545
 7528 0597 1E       		.uleb128 .LEHE206-.LEHB206
 7529 0598 00       		.uleb128 0
 7530 0599 00       		.uleb128 0
 7531 059a B105     		.uleb128 .LEHB207-.LFB1545
 7532 059c 05       		.uleb128 .LEHE207-.LEHB207
 7533 059d 00       		.uleb128 0
 7534 059e 00       		.uleb128 0
 7535 059f C805     		.uleb128 .LEHB208-.LFB1545
 7536 05a1 05       		.uleb128 .LEHE208-.LEHB208
 7537 05a2 00       		.uleb128 0
 7538 05a3 00       		.uleb128 0
 7539              	.LLSDACSE1545:
 7540 05a4 03       		.byte	0x3
 7541 05a5 00       		.byte	0
 7542 05a6 02       		.byte	0x2
 7543 05a7 7D       		.byte	0x7d
 7544 05a8 01       		.byte	0x1
 7545 05a9 7D       		.byte	0x7d
 7546 05aa 00       		.byte	0
 7547 05ab 7D       		.byte	0x7d
 7548              		.align 4
 7549 05ac 00000000 		.long	0
 7550              	
 7551 05b0 00000000 		.long	DW.ref._ZTISt9exception-.
 7552 05b4 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 7553              	.LLSDATT1545:
 7554              		.text
 7556              		.section	.text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_E
 7557              		.align 2
 7558              		.weak	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv
 7560              	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv:
 7561              	.LFB1546:
 918:/usr/include/c++/11/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 7562              		.loc 6 918 7
 7563              		.cfi_startproc
 7564 0000 F30F1EFA 		endbr64
 7565 0004 55       		pushq	%rbp
 7566              		.cfi_def_cfa_offset 16
 7567              		.cfi_offset 6, -16
 7568 0005 4889E5   		movq	%rsp, %rbp
 7569              		.cfi_def_cfa_register 6
 7570 0008 48897DF8 		movq	%rdi, -8(%rbp)
 919:/usr/include/c++/11/bits/stl_vector.h **** 
 7571              		.loc 6 919 40
 7572 000c 488B45F8 		movq	-8(%rbp), %rax
 7573 0010 488B5008 		movq	8(%rax), %rdx
 919:/usr/include/c++/11/bits/stl_vector.h **** 
 7574              		.loc 6 919 66
 7575 0014 488B45F8 		movq	-8(%rbp), %rax
 7576 0018 488B08   		movq	(%rax), %rcx
 919:/usr/include/c++/11/bits/stl_vector.h **** 
 7577              		.loc 6 919 50
 7578 001b 4889D0   		movq	%rdx, %rax
 7579 001e 4829C8   		subq	%rcx, %rax
 7580 0021 48C1F803 		sarq	$3, %rax
 7581 0025 4889C2   		movq	%rax, %rdx
 7582 0028 48B8CDCC 		movabsq	$-3689348814741910323, %rax
 7582      CCCCCCCC 
 7582      CCCC
 7583 0032 480FAFC2 		imulq	%rdx, %rax
 919:/usr/include/c++/11/bits/stl_vector.h **** 
 7584              		.loc 6 919 77
 7585 0036 5D       		popq	%rbp
 7586              		.cfi_def_cfa 7, 8
 7587 0037 C3       		ret
 7588              		.cfi_endproc
 7589              	.LFE1546:
 7591              		.section	.text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_E
 7592              		.align 2
 7593              		.weak	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEixEm
 7595              	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEixEm:
 7596              	.LFB1547:
1061:/usr/include/c++/11/bits/stl_vector.h ****       {
 7597              		.loc 6 1061 7
 7598              		.cfi_startproc
 7599 0000 F30F1EFA 		endbr64
 7600 0004 55       		pushq	%rbp
 7601              		.cfi_def_cfa_offset 16
 7602              		.cfi_offset 6, -16
 7603 0005 4889E5   		movq	%rsp, %rbp
 7604              		.cfi_def_cfa_register 6
 7605 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7606 000c 488975F0 		movq	%rsi, -16(%rbp)
1064:/usr/include/c++/11/bits/stl_vector.h ****       }
 7607              		.loc 6 1064 25
 7608 0010 488B45F8 		movq	-8(%rbp), %rax
 7609 0014 488B08   		movq	(%rax), %rcx
1064:/usr/include/c++/11/bits/stl_vector.h ****       }
 7610              		.loc 6 1064 34
 7611 0017 488B55F0 		movq	-16(%rbp), %rdx
 7612 001b 4889D0   		movq	%rdx, %rax
 7613 001e 48C1E002 		salq	$2, %rax
 7614 0022 4801D0   		addq	%rdx, %rax
 7615 0025 48C1E003 		salq	$3, %rax
1064:/usr/include/c++/11/bits/stl_vector.h ****       }
 7616              		.loc 6 1064 39
 7617 0029 4801C8   		addq	%rcx, %rax
1065:/usr/include/c++/11/bits/stl_vector.h **** 
 7618              		.loc 6 1065 7
 7619 002c 5D       		popq	%rbp
 7620              		.cfi_def_cfa 7, 8
 7621 002d C3       		ret
 7622              		.cfi_endproc
 7623              	.LFE1547:
 7625              		.text
 7627              	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCo
 7628              	.LFB1548:
  16:../ExecuteTest.h **** {
 7629              		.loc 7 16 6
 7630              		.cfi_startproc
 7631              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 7632              		.cfi_lsda 0x1b,.LLSDA1548
 7633 3362 F30F1EFA 		endbr64
 7634 3366 55       		pushq	%rbp
 7635              		.cfi_def_cfa_offset 16
 7636              		.cfi_offset 6, -16
 7637 3367 4889E5   		movq	%rsp, %rbp
 7638              		.cfi_def_cfa_register 6
 7639 336a 4155     		pushq	%r13
 7640 336c 4154     		pushq	%r12
 7641 336e 53       		pushq	%rbx
 7642 336f 4881EC58 		subq	$1624, %rsp
 7642      060000
 7643              		.cfi_offset 13, -24
 7644              		.cfi_offset 12, -32
 7645              		.cfi_offset 3, -40
 7646 3376 4889BD98 		movq	%rdi, -1640(%rbp)
 7646      F9FFFF
 7647 337d 4889B590 		movq	%rsi, -1648(%rbp)
 7647      F9FFFF
  16:../ExecuteTest.h **** {
 7648              		.loc 7 16 6
 7649 3384 64488B04 		movq	%fs:40, %rax
 7649      25280000 
 7649      00
 7650 338d 488945D8 		movq	%rax, -40(%rbp)
 7651 3391 31C0     		xorl	%eax, %eax
 7652              	.LEHB209:
  18:../ExecuteTest.h **** 
 7653              		.loc 7 18 22
 7654 3393 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 7654      00
 7655              	.LEHE209:
  18:../ExecuteTest.h **** 
 7656              		.loc 7 18 25
 7657 3398 488B9590 		movq	-1648(%rbp), %rdx
 7657      F9FFFF
 7658 339f 488910   		movq	%rdx, (%rax)
 7659              	.LBB135:
  23:../ExecuteTest.h **** #endif
 7660              		.loc 7 23 3
 7661 33a2 488D8570 		leaq	-1168(%rbp), %rax
 7661      FBFFFF
 7662 33a9 4889C7   		movq	%rax, %rdi
 7663              	.LEHB210:
 7664 33ac E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev@PLT
 7664      00
 7665              	.LEHE210:
  23:../ExecuteTest.h **** #endif
 7666              		.loc 7 23 3 is_stmt 0 discriminator 1
 7667 33b1 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 7667      000000
 7668 33b8 BE010000 		movl	$1, %esi
 7668      00
 7669 33bd 4889C7   		movq	%rax, %rdi
 7670 33c0 E8000000 		call	__sigsetjmp@PLT
 7670      00
 7671 33c5 F30F1EFA 		endbr64
 7672 33c9 85C0     		testl	%eax, %eax
 7673 33cb 0F95C0   		setne	%al
 7674 33ce 84C0     		testb	%al, %al
 7675 33d0 742B     		je	.L392
  23:../ExecuteTest.h **** #endif
 7676              		.loc 7 23 3 discriminator 4
 7677 33d2 BF080000 		movl	$8, %edi
 7677      00
 7678 33d7 E8000000 		call	__cxa_allocate_exception@PLT
 7678      00
 7679 33dc 488D1500 		leaq	.LC32(%rip), %rdx
 7679      000000
 7680 33e3 488910   		movq	%rdx, (%rax)
 7681 33e6 BA000000 		movl	$0, %edx
 7681      00
 7682 33eb 488D0D00 		leaq	_ZTIPKc(%rip), %rcx
 7682      000000
 7683 33f2 4889CE   		movq	%rcx, %rsi
 7684 33f5 4889C7   		movq	%rax, %rdi
 7685              	.LEHB211:
 7686 33f8 E8000000 		call	__cxa_throw@PLT
 7686      00
 7687              	.L392:
  25:../ExecuteTest.h **** 	}
 7688              		.loc 7 25 21 is_stmt 1
 7689 33fd 488B8598 		movq	-1640(%rbp), %rax
 7689      F9FFFF
 7690 3404 4889C7   		movq	%rax, %rdi
 7691 3407 E8DAEEFF 		call	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 7691      FF
 7692              	.LEHE211:
  26:../ExecuteTest.h **** 	catch (AssertException const& e)
 7693              		.loc 7 26 2
 7694 340c 488D8570 		leaq	-1168(%rbp), %rax
 7694      FBFFFF
 7695 3413 4889C7   		movq	%rax, %rdi
 7696              	.LEHB212:
 7697 3416 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 7697      00
 7698              	.LEHE212:
 7699              	.LBE135:
 7700              		.loc 7 42 1
 7701 341b E90F0200 		jmp	.L390
 7701      00
 7702              	.L405:
 7703 3420 F30F1EFA 		endbr64
 7704              	.LBB136:
  26:../ExecuteTest.h **** 	catch (AssertException const& e)
 7705              		.loc 7 26 2
 7706 3424 4989C4   		movq	%rax, %r12
 7707 3427 4889D3   		movq	%rdx, %rbx
 7708 342a 488D8570 		leaq	-1168(%rbp), %rax
 7708      FBFFFF
 7709 3431 4889C7   		movq	%rax, %rdi
 7710 3434 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 7710      00
 7711 3439 4C89E0   		movq	%r12, %rax
 7712 343c 4889DA   		movq	%rbx, %rdx
 7713 343f EB04     		jmp	.L394
 7714              	.L404:
 7715 3441 F30F1EFA 		endbr64
 7716              	.L394:
 7717              	.LBE136:
  27:../ExecuteTest.h **** 	{
 7718              		.loc 7 27 2
 7719 3445 4883FA01 		cmpq	$1, %rdx
 7720 3449 740F     		je	.L395
 7721 344b 4883FA02 		cmpq	$2, %rdx
 7722 344f 0F84A600 		je	.L396
 7722      0000
 7723 3455 E9480100 		jmp	.L410
 7723      00
 7724              	.L395:
 7725              	.LBB137:
  27:../ExecuteTest.h **** 	{
 7726              		.loc 7 27 2 is_stmt 0 discriminator 1
 7727 345a 4889C7   		movq	%rax, %rdi
 7728 345d E8000000 		call	__cxa_begin_catch@PLT
 7728      00
  27:../ExecuteTest.h **** 	{
 7729              		.loc 7 27 32 is_stmt 1 discriminator 1
 7730 3462 488985A8 		movq	%rax, -1624(%rbp)
 7730      F9FFFF
 7731              	.LEHB213:
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7732              		.loc 7 29 23 discriminator 1
 7733 3469 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 7733      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7734              		.loc 7 29 40 discriminator 2
 7735 346e 488B18   		movq	(%rax), %rbx
  30:../ExecuteTest.h **** 	}
 7736              		.loc 7 30 90 discriminator 2
 7737 3471 488B85A8 		movq	-1624(%rbp), %rax
 7737      F9FFFF
 7738 3478 488B00   		movq	(%rax), %rax
 7739 347b 4883C010 		addq	$16, %rax
 7740 347f 488B10   		movq	(%rax), %rdx
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7741              		.loc 7 29 40 discriminator 2
 7742 3482 488B85A8 		movq	-1624(%rbp), %rax
 7742      F9FFFF
 7743 3489 4889C7   		movq	%rax, %rdi
 7744 348c FFD2     		call	*%rdx
 7745              	.LVL22:
 7746 348e 4989C4   		movq	%rax, %r12
  30:../ExecuteTest.h **** 	}
 7747              		.loc 7 30 4 discriminator 2
 7748 3491 488B85A8 		movq	-1624(%rbp), %rax
 7748      F9FFFF
 7749 3498 4889C7   		movq	%rax, %rdi
 7750 349b E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 7750      00
 7751 34a0 4189C5   		movl	%eax, %r13d
 7752 34a3 488B85A8 		movq	-1624(%rbp), %rax
 7752      F9FFFF
 7753 34aa 4889C7   		movq	%rax, %rdi
 7754 34ad E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 7754      00
  30:../ExecuteTest.h **** 	}
 7755              		.loc 7 30 4 is_stmt 0 discriminator 1
 7756 34b2 4889C1   		movq	%rax, %rcx
  30:../ExecuteTest.h **** 	}
 7757              		.loc 7 30 42 is_stmt 1 discriminator 1
 7758 34b5 488B8590 		movq	-1648(%rbp), %rax
 7758      F9FFFF
 7759 34bc 488B10   		movq	(%rax), %rdx
  30:../ExecuteTest.h **** 	}
 7760              		.loc 7 30 24 discriminator 1
 7761 34bf 488B8590 		movq	-1648(%rbp), %rax
 7761      F9FFFF
 7762 34c6 488B7008 		movq	8(%rax), %rsi
  30:../ExecuteTest.h **** 	}
 7763              		.loc 7 30 4 discriminator 1
 7764 34ca 488D85B0 		leaq	-1616(%rbp), %rax
 7764      F9FFFF
 7765 34d1 4589E8   		movl	%r13d, %r8d
 7766 34d4 4889C7   		movq	%rax, %rdi
 7767 34d7 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 7767      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7768              		.loc 7 29 40
 7769 34dc 488D85B0 		leaq	-1616(%rbp), %rax
 7769      F9FFFF
 7770 34e3 4C89E2   		movq	%r12, %rdx
 7771 34e6 4889C6   		movq	%rax, %rsi
 7772 34e9 4889DF   		movq	%rbx, %rdi
 7773 34ec E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 7773      00
 7774              	.LEHE213:
  27:../ExecuteTest.h **** 	{
 7775              		.loc 7 27 2
 7776 34f1 E8000000 		call	__cxa_end_catch@PLT
 7776      00
 7777              	.LBE137:
 7778              		.loc 7 42 1
 7779 34f6 E9340100 		jmp	.L390
 7779      00
 7780              	.L396:
 7781              	.LBB138:
  32:../ExecuteTest.h **** 	{
 7782              		.loc 7 32 2
 7783 34fb 4889C7   		movq	%rax, %rdi
 7784 34fe E8000000 		call	__cxa_begin_catch@PLT
 7784      00
  32:../ExecuteTest.h **** 	{
 7785              		.loc 7 32 31
 7786 3503 488985A0 		movq	%rax, -1632(%rbp)
 7786      F9FFFF
 7787              	.LBB139:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7788              		.loc 7 34 19
 7789 350a 488D85D0 		leaq	-1584(%rbp), %rax
 7789      F9FFFF
 7790 3511 4889C7   		movq	%rax, %rdi
 7791              	.LEHB214:
 7792 3514 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 7792      00
 7793              	.LEHE214:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7794              		.loc 7 35 37
 7795 3519 488D85D0 		leaq	-1584(%rbp), %rax
 7795      F9FFFF
 7796 3520 488D1500 		leaq	.LC6(%rip), %rdx
 7796      000000
 7797 3527 4889D6   		movq	%rdx, %rsi
 7798 352a 4889C7   		movq	%rax, %rdi
 7799              	.LEHB215:
 7800 352d E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 7800      00
 7801 3532 4889C3   		movq	%rax, %rbx
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7802              		.loc 7 35 46
 7803 3535 488B85A0 		movq	-1632(%rbp), %rax
 7803      F9FFFF
 7804 353c 488B00   		movq	(%rax), %rax
 7805 353f 4883C010 		addq	$16, %rax
 7806 3543 488B10   		movq	(%rax), %rdx
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7807              		.loc 7 35 37
 7808 3546 488B85A0 		movq	-1632(%rbp), %rax
 7808      F9FFFF
 7809 354d 4889C7   		movq	%rax, %rdi
 7810 3550 FFD2     		call	*%rdx
 7811              	.LVL23:
 7812 3552 4889C6   		movq	%rax, %rsi
 7813 3555 4889DF   		movq	%rbx, %rdi
 7814 3558 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 7814      00
  36:../ExecuteTest.h **** 	}
 7815              		.loc 7 36 23
 7816 355d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 7816      00
  36:../ExecuteTest.h **** 	}
 7817              		.loc 7 36 40
 7818 3562 488B18   		movq	(%rax), %rbx
 7819 3565 488D85D0 		leaq	-1584(%rbp), %rax
 7819      F9FFFF
 7820 356c 4889C7   		movq	%rax, %rdi
 7821 356f E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 7821      00
  36:../ExecuteTest.h **** 	}
 7822              		.loc 7 36 40 is_stmt 0 discriminator 1
 7823 3574 4889C2   		movq	%rax, %rdx
 7824 3577 488B8590 		movq	-1648(%rbp), %rax
 7824      F9FFFF
 7825 357e 4889C6   		movq	%rax, %rsi
 7826 3581 4889DF   		movq	%rbx, %rdi
 7827 3584 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 7827      00
 7828              	.LEHE215:
  37:../ExecuteTest.h **** 	catch (...)
 7829              		.loc 7 37 2 is_stmt 1
 7830 3589 488D85D0 		leaq	-1584(%rbp), %rax
 7830      F9FFFF
 7831 3590 4889C7   		movq	%rax, %rdi
 7832              	.LEHB216:
 7833 3593 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7833      00
 7834              	.LEHE216:
 7835              	.LBE139:
  32:../ExecuteTest.h **** 	{
 7836              		.loc 7 32 2
 7837 3598 E8000000 		call	__cxa_end_catch@PLT
 7837      00
 7838              	.LBE138:
 7839              		.loc 7 42 1
 7840 359d E98D0000 		jmp	.L390
 7840      00
 7841              	.L410:
  38:../ExecuteTest.h **** 	{
 7842              		.loc 7 38 2
 7843 35a2 4889C7   		movq	%rax, %rdi
 7844 35a5 E8000000 		call	__cxa_begin_catch@PLT
 7844      00
 7845              	.LEHB217:
  40:../ExecuteTest.h **** 	}
 7846              		.loc 7 40 23
 7847 35aa E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 7847      00
  40:../ExecuteTest.h **** 	}
 7848              		.loc 7 40 40
 7849 35af 488B00   		movq	(%rax), %rax
 7850 35b2 488B8D90 		movq	-1648(%rbp), %rcx
 7850      F9FFFF
 7851 35b9 488D1500 		leaq	.LC33(%rip), %rdx
 7851      000000
 7852 35c0 4889CE   		movq	%rcx, %rsi
 7853 35c3 4889C7   		movq	%rax, %rdi
 7854 35c6 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 7854      00
 7855              	.LEHE217:
 7856              	.LEHB218:
  38:../ExecuteTest.h **** 	{
 7857              		.loc 7 38 2
 7858 35cb E8000000 		call	__cxa_end_catch@PLT
 7858      00
 7859              		.loc 7 42 1
 7860 35d0 EB5D     		jmp	.L390
 7861              	.L406:
 7862 35d2 F30F1EFA 		endbr64
 7863              	.LBB141:
  27:../ExecuteTest.h **** 	{
 7864              		.loc 7 27 2
 7865 35d6 4889C3   		movq	%rax, %rbx
 7866 35d9 E8000000 		call	__cxa_end_catch@PLT
 7866      00
 7867 35de 4889D8   		movq	%rbx, %rax
 7868 35e1 4889C7   		movq	%rax, %rdi
 7869 35e4 E8000000 		call	_Unwind_Resume@PLT
 7869      00
 7870              	.LEHE218:
 7871              	.L408:
 7872 35e9 F30F1EFA 		endbr64
 7873              	.LBE141:
 7874              	.LBB142:
 7875              	.LBB140:
  37:../ExecuteTest.h **** 	catch (...)
 7876              		.loc 7 37 2
 7877 35ed 4889C3   		movq	%rax, %rbx
 7878 35f0 488D85D0 		leaq	-1584(%rbp), %rax
 7878      F9FFFF
 7879 35f7 4889C7   		movq	%rax, %rdi
 7880 35fa E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7880      00
 7881 35ff EB07     		jmp	.L401
 7882              	.L407:
 7883 3601 F30F1EFA 		endbr64
 7884              	.LBE140:
  32:../ExecuteTest.h **** 	{
 7885              		.loc 7 32 2
 7886 3605 4889C3   		movq	%rax, %rbx
 7887              	.L401:
 7888 3608 E8000000 		call	__cxa_end_catch@PLT
 7888      00
 7889 360d 4889D8   		movq	%rbx, %rax
 7890 3610 4889C7   		movq	%rax, %rdi
 7891              	.LEHB219:
 7892 3613 E8000000 		call	_Unwind_Resume@PLT
 7892      00
 7893              	.LEHE219:
 7894              	.L409:
 7895 3618 F30F1EFA 		endbr64
 7896              	.LBE142:
  38:../ExecuteTest.h **** 	{
 7897              		.loc 7 38 2
 7898 361c 4889C3   		movq	%rax, %rbx
 7899 361f E8000000 		call	__cxa_end_catch@PLT
 7899      00
 7900 3624 4889D8   		movq	%rbx, %rax
 7901 3627 4889C7   		movq	%rax, %rdi
 7902              	.LEHB220:
 7903 362a E8000000 		call	_Unwind_Resume@PLT
 7903      00
 7904              	.LEHE220:
 7905              	.L390:
 7906              		.loc 7 42 1
 7907 362f 488B45D8 		movq	-40(%rbp), %rax
 7908 3633 64482B04 		subq	%fs:40, %rax
 7908      25280000 
 7908      00
 7909 363c 7405     		je	.L403
 7910 363e E8000000 		call	__stack_chk_fail@PLT
 7910      00
 7911              	.L403:
 7912 3643 4881C458 		addq	$1624, %rsp
 7912      060000
 7913 364a 5B       		popq	%rbx
 7914 364b 415C     		popq	%r12
 7915 364d 415D     		popq	%r13
 7916 364f 5D       		popq	%rbp
 7917              		.cfi_def_cfa 7, 8
 7918 3650 C3       		ret
 7919              		.cfi_endproc
 7920              	.LFE1548:
 7921              		.section	.gcc_except_table
 7922              		.align 4
 7923              	.LLSDA1548:
 7924 05b8 FF       		.byte	0xff
 7925 05b9 9B       		.byte	0x9b
 7926 05ba 59       		.uleb128 .LLSDATT1548-.LLSDATTD1548
 7927              	.LLSDATTD1548:
 7928 05bb 01       		.byte	0x1
 7929 05bc 43       		.uleb128 .LLSDACSE1548-.LLSDACSB1548
 7930              	.LLSDACSB1548:
 7931 05bd 31       		.uleb128 .LEHB209-.LFB1548
 7932 05be 05       		.uleb128 .LEHE209-.LEHB209
 7933 05bf 00       		.uleb128 0
 7934 05c0 00       		.uleb128 0
 7935 05c1 4A       		.uleb128 .LEHB210-.LFB1548
 7936 05c2 05       		.uleb128 .LEHE210-.LEHB210
 7937 05c3 DF01     		.uleb128 .L404-.LFB1548
 7938 05c5 05       		.uleb128 0x5
 7939 05c6 9601     		.uleb128 .LEHB211-.LFB1548
 7940 05c8 14       		.uleb128 .LEHE211-.LEHB211
 7941 05c9 BE01     		.uleb128 .L405-.LFB1548
 7942 05cb 07       		.uleb128 0x7
 7943 05cc B401     		.uleb128 .LEHB212-.LFB1548
 7944 05ce 05       		.uleb128 .LEHE212-.LEHB212
 7945 05cf DF01     		.uleb128 .L404-.LFB1548
 7946 05d1 05       		.uleb128 0x5
 7947 05d2 8702     		.uleb128 .LEHB213-.LFB1548
 7948 05d4 8801     		.uleb128 .LEHE213-.LEHB213
 7949 05d6 F004     		.uleb128 .L406-.LFB1548
 7950 05d8 00       		.uleb128 0
 7951 05d9 B203     		.uleb128 .LEHB214-.LFB1548
 7952 05db 05       		.uleb128 .LEHE214-.LEHB214
 7953 05dc 9F05     		.uleb128 .L407-.LFB1548
 7954 05de 00       		.uleb128 0
 7955 05df CB03     		.uleb128 .LEHB215-.LFB1548
 7956 05e1 5C       		.uleb128 .LEHE215-.LEHB215
 7957 05e2 8705     		.uleb128 .L408-.LFB1548
 7958 05e4 00       		.uleb128 0
 7959 05e5 B104     		.uleb128 .LEHB216-.LFB1548
 7960 05e7 05       		.uleb128 .LEHE216-.LEHB216
 7961 05e8 9F05     		.uleb128 .L407-.LFB1548
 7962 05ea 00       		.uleb128 0
 7963 05eb C804     		.uleb128 .LEHB217-.LFB1548
 7964 05ed 21       		.uleb128 .LEHE217-.LEHB217
 7965 05ee B605     		.uleb128 .L409-.LFB1548
 7966 05f0 00       		.uleb128 0
 7967 05f1 E904     		.uleb128 .LEHB218-.LFB1548
 7968 05f3 1E       		.uleb128 .LEHE218-.LEHB218
 7969 05f4 00       		.uleb128 0
 7970 05f5 00       		.uleb128 0
 7971 05f6 B105     		.uleb128 .LEHB219-.LFB1548
 7972 05f8 05       		.uleb128 .LEHE219-.LEHB219
 7973 05f9 00       		.uleb128 0
 7974 05fa 00       		.uleb128 0
 7975 05fb C805     		.uleb128 .LEHB220-.LFB1548
 7976 05fd 05       		.uleb128 .LEHE220-.LEHB220
 7977 05fe 00       		.uleb128 0
 7978 05ff 00       		.uleb128 0
 7979              	.LLSDACSE1548:
 7980 0600 03       		.byte	0x3
 7981 0601 00       		.byte	0
 7982 0602 02       		.byte	0x2
 7983 0603 7D       		.byte	0x7d
 7984 0604 01       		.byte	0x1
 7985 0605 7D       		.byte	0x7d
 7986 0606 00       		.byte	0
 7987 0607 7D       		.byte	0x7d
 7988              		.align 4
 7989 0608 00000000 		.long	0
 7990              	
 7991 060c 00000000 		.long	DW.ref._ZTISt9exception-.
 7992 0610 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 7993              	.LLSDATT1548:
 7994              		.text
 7996              		.section	.text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_E
 7997              		.align 2
 7998              		.weak	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE2atEm
 8000              	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE2atEm:
 8001              	.LFB1549:
1097:/usr/include/c++/11/bits/stl_vector.h **** 
1098:/usr/include/c++/11/bits/stl_vector.h ****       /**
1099:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1100:/usr/include/c++/11/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
1101:/usr/include/c++/11/bits/stl_vector.h ****        *  accessed.
1102:/usr/include/c++/11/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1103:/usr/include/c++/11/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1104:/usr/include/c++/11/bits/stl_vector.h ****        *
1105:/usr/include/c++/11/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
1106:/usr/include/c++/11/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1107:/usr/include/c++/11/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
1108:/usr/include/c++/11/bits/stl_vector.h ****        */
1109:/usr/include/c++/11/bits/stl_vector.h ****       const_reference
1110:/usr/include/c++/11/bits/stl_vector.h ****       at(size_type __n) const
 8002              		.loc 6 1110 7
 8003              		.cfi_startproc
 8004 0000 F30F1EFA 		endbr64
 8005 0004 55       		pushq	%rbp
 8006              		.cfi_def_cfa_offset 16
 8007              		.cfi_offset 6, -16
 8008 0005 4889E5   		movq	%rsp, %rbp
 8009              		.cfi_def_cfa_register 6
 8010 0008 4883EC10 		subq	$16, %rsp
 8011 000c 48897DF8 		movq	%rdi, -8(%rbp)
 8012 0010 488975F0 		movq	%rsi, -16(%rbp)
1111:/usr/include/c++/11/bits/stl_vector.h ****       {
1112:/usr/include/c++/11/bits/stl_vector.h **** 	_M_range_check(__n);
 8013              		.loc 6 1112 16
 8014 0014 488B55F0 		movq	-16(%rbp), %rdx
 8015 0018 488B45F8 		movq	-8(%rbp), %rax
 8016 001c 4889D6   		movq	%rdx, %rsi
 8017 001f 4889C7   		movq	%rax, %rdi
 8018 0022 E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE14_M_rang
 8018      00
1113:/usr/include/c++/11/bits/stl_vector.h **** 	return (*this)[__n];
 8019              		.loc 6 1113 16
 8020 0027 488B55F0 		movq	-16(%rbp), %rdx
 8021 002b 488B45F8 		movq	-8(%rbp), %rax
 8022 002f 4889D6   		movq	%rdx, %rsi
 8023 0032 4889C7   		movq	%rax, %rdi
 8024 0035 E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEixEm
 8024      00
1114:/usr/include/c++/11/bits/stl_vector.h ****       }
 8025              		.loc 6 1114 7
 8026 003a C9       		leave
 8027              		.cfi_def_cfa 7, 8
 8028 003b C3       		ret
 8029              		.cfi_endproc
 8030              	.LFE1549:
 8032              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev,"axG"
 8033              		.align 2
 8034              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev
 8036              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev:
 8037              	.LFB1573:
 128:/usr/include/c++/11/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 8038              		.loc 6 128 14
 8039              		.cfi_startproc
 8040 0000 F30F1EFA 		endbr64
 8041 0004 55       		pushq	%rbp
 8042              		.cfi_def_cfa_offset 16
 8043              		.cfi_offset 6, -16
 8044 0005 4889E5   		movq	%rsp, %rbp
 8045              		.cfi_def_cfa_register 6
 8046 0008 4883EC10 		subq	$16, %rsp
 8047 000c 48897DF8 		movq	%rdi, -8(%rbp)
 8048              	.LBB143:
 128:/usr/include/c++/11/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 8049              		.loc 6 128 14
 8050 0010 488B45F8 		movq	-8(%rbp), %rax
 8051 0014 4889C7   		movq	%rax, %rdi
 8052 0017 E8000000 		call	_ZNSaIN8UnitTest18DeferredTestResultEED2Ev
 8052      00
 8053              	.LBE143:
 8054 001c 90       		nop
 8055 001d C9       		leave
 8056              		.cfi_def_cfa 7, 8
 8057 001e C3       		ret
 8058              		.cfi_endproc
 8059              	.LFE1573:
 8061              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
 8062              		.set	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev,_ZNSt12_Vector_
 8063              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev,"axG",@progbits,_ZN
 8064              		.align 2
 8065              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev
 8067              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev:
 8068              	.LFB1575:
 290:/usr/include/c++/11/bits/stl_vector.h **** #endif
 8069              		.loc 6 290 7
 8070              		.cfi_startproc
 8071 0000 F30F1EFA 		endbr64
 8072 0004 55       		pushq	%rbp
 8073              		.cfi_def_cfa_offset 16
 8074              		.cfi_offset 6, -16
 8075 0005 4889E5   		movq	%rsp, %rbp
 8076              		.cfi_def_cfa_register 6
 8077 0008 4883EC10 		subq	$16, %rsp
 8078 000c 48897DF8 		movq	%rdi, -8(%rbp)
 8079              	.LBB144:
 290:/usr/include/c++/11/bits/stl_vector.h **** #endif
 8080              		.loc 6 290 22
 8081 0010 488B45F8 		movq	-8(%rbp), %rax
 8082 0014 4889C7   		movq	%rax, %rdi
 8083 0017 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC1Ev
 8083      00
 8084              	.LBE144:
 290:/usr/include/c++/11/bits/stl_vector.h **** #endif
 8085              		.loc 6 290 24
 8086 001c 90       		nop
 8087 001d C9       		leave
 8088              		.cfi_def_cfa 7, 8
 8089 001e C3       		ret
 8090              		.cfi_endproc
 8091              	.LFE1575:
 8093              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev
 8094              		.set	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev,_ZNSt12_Vector_baseIN8UnitTes
 8095              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZN
 8096              		.align 2
 8097              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 8099              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:
 8100              	.LFB1578:
 333:/usr/include/c++/11/bits/stl_vector.h ****       {
 8101              		.loc 6 333 7
 8102              		.cfi_startproc
 8103              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8104              		.cfi_lsda 0x1b,.LLSDA1578
 8105 0000 F30F1EFA 		endbr64
 8106 0004 55       		pushq	%rbp
 8107              		.cfi_def_cfa_offset 16
 8108              		.cfi_offset 6, -16
 8109 0005 4889E5   		movq	%rsp, %rbp
 8110              		.cfi_def_cfa_register 6
 8111 0008 53       		pushq	%rbx
 8112 0009 4883EC18 		subq	$24, %rsp
 8113              		.cfi_offset 3, -24
 8114 000d 48897DE8 		movq	%rdi, -24(%rbp)
 8115              	.LBB145:
 336:/usr/include/c++/11/bits/stl_vector.h ****       }
 8116              		.loc 6 336 17
 8117 0011 488B45E8 		movq	-24(%rbp), %rax
 8118 0015 488B5010 		movq	16(%rax), %rdx
 336:/usr/include/c++/11/bits/stl_vector.h ****       }
 8119              		.loc 6 336 45
 8120 0019 488B45E8 		movq	-24(%rbp), %rax
 8121 001d 488B08   		movq	(%rax), %rcx
 336:/usr/include/c++/11/bits/stl_vector.h ****       }
 8122              		.loc 6 336 35
 8123 0020 4889D0   		movq	%rdx, %rax
 8124 0023 4829C8   		subq	%rcx, %rax
 8125 0026 48C1F807 		sarq	$7, %rax
 335:/usr/include/c++/11/bits/stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 8126              		.loc 6 335 15
 8127 002a 4889C2   		movq	%rax, %rdx
 8128 002d 488B45E8 		movq	-24(%rbp), %rax
 8129 0031 488B08   		movq	(%rax), %rcx
 8130 0034 488B45E8 		movq	-24(%rbp), %rax
 8131 0038 4889CE   		movq	%rcx, %rsi
 8132 003b 4889C7   		movq	%rax, %rdi
 8133              	.LEHB221:
 8134 003e E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m
 8134      00
 8135              	.LEHE221:
 337:/usr/include/c++/11/bits/stl_vector.h **** 
 8136              		.loc 6 337 7
 8137 0043 488B45E8 		movq	-24(%rbp), %rax
 8138 0047 4889C7   		movq	%rax, %rdi
 8139 004a E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
 8139      00
 8140              	.LBE145:
 8141 004f EB1E     		jmp	.L418
 8142              	.L417:
 8143 0051 F30F1EFA 		endbr64
 8144              	.LBB146:
 8145 0055 4889C3   		movq	%rax, %rbx
 8146 0058 488B45E8 		movq	-24(%rbp), %rax
 8147 005c 4889C7   		movq	%rax, %rdi
 8148 005f E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
 8148      00
 8149 0064 4889D8   		movq	%rbx, %rax
 8150 0067 4889C7   		movq	%rax, %rdi
 8151              	.LEHB222:
 8152 006a E8000000 		call	_Unwind_Resume@PLT
 8152      00
 8153              	.LEHE222:
 8154              	.L418:
 8155              	.LBE146:
 8156 006f 488B5DF8 		movq	-8(%rbp), %rbx
 8157 0073 C9       		leave
 8158              		.cfi_def_cfa 7, 8
 8159 0074 C3       		ret
 8160              		.cfi_endproc
 8161              	.LFE1578:
 8162              		.section	.gcc_except_table
 8163              	.LLSDA1578:
 8164 0614 FF       		.byte	0xff
 8165 0615 FF       		.byte	0xff
 8166 0616 01       		.byte	0x1
 8167 0617 08       		.uleb128 .LLSDACSE1578-.LLSDACSB1578
 8168              	.LLSDACSB1578:
 8169 0618 3E       		.uleb128 .LEHB221-.LFB1578
 8170 0619 05       		.uleb128 .LEHE221-.LEHB221
 8171 061a 51       		.uleb128 .L417-.LFB1578
 8172 061b 00       		.uleb128 0
 8173 061c 6A       		.uleb128 .LEHB222-.LFB1578
 8174 061d 05       		.uleb128 .LEHE222-.LEHB222
 8175 061e 00       		.uleb128 0
 8176 061f 00       		.uleb128 0
 8177              	.LLSDACSE1578:
 8178              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZN
 8180              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
 8181              		.set	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED1Ev,_ZNSt12_Vector_baseIN8UnitTes
 8182              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv,
 8183              		.align 2
 8184              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
 8186              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv:
 8187              	.LFB1580:
 276:/usr/include/c++/11/bits/stl_vector.h ****       { return this->_M_impl; }
 8188              		.loc 6 276 7
 8189              		.cfi_startproc
 8190 0000 F30F1EFA 		endbr64
 8191 0004 55       		pushq	%rbp
 8192              		.cfi_def_cfa_offset 16
 8193              		.cfi_offset 6, -16
 8194 0005 4889E5   		movq	%rsp, %rbp
 8195              		.cfi_def_cfa_register 6
 8196 0008 48897DF8 		movq	%rdi, -8(%rbp)
 277:/usr/include/c++/11/bits/stl_vector.h **** 
 8197              		.loc 6 277 22
 8198 000c 488B45F8 		movq	-8(%rbp), %rax
 277:/usr/include/c++/11/bits/stl_vector.h **** 
 8199              		.loc 6 277 31
 8200 0010 5D       		popq	%rbp
 8201              		.cfi_def_cfa 7, 8
 8202 0011 C3       		ret
 8203              		.cfi_endproc
 8204              	.LFE1580:
 8206              		.section	.text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E,"axG",@progbits,_Z
 8207              		.weak	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E
 8209              	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E:
 8210              	.LFB1581:
 8211              		.file 9 "/usr/include/c++/11/bits/alloc_traits.h"
   1:/usr/include/c++/11/bits/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/usr/include/c++/11/bits/alloc_traits.h **** 
   3:/usr/include/c++/11/bits/alloc_traits.h **** // Copyright (C) 2011-2021 Free Software Foundation, Inc.
   4:/usr/include/c++/11/bits/alloc_traits.h **** //
   5:/usr/include/c++/11/bits/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/11/bits/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/11/bits/alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/11/bits/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/11/bits/alloc_traits.h **** // any later version.
  10:/usr/include/c++/11/bits/alloc_traits.h **** 
  11:/usr/include/c++/11/bits/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/11/bits/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/11/bits/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/11/bits/alloc_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/11/bits/alloc_traits.h **** 
  16:/usr/include/c++/11/bits/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/11/bits/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/11/bits/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/11/bits/alloc_traits.h **** 
  20:/usr/include/c++/11/bits/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/11/bits/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/11/bits/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/11/bits/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/11/bits/alloc_traits.h **** 
  25:/usr/include/c++/11/bits/alloc_traits.h **** /** @file bits/alloc_traits.h
  26:/usr/include/c++/11/bits/alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/11/bits/alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:/usr/include/c++/11/bits/alloc_traits.h ****  */
  29:/usr/include/c++/11/bits/alloc_traits.h **** 
  30:/usr/include/c++/11/bits/alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:/usr/include/c++/11/bits/alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:/usr/include/c++/11/bits/alloc_traits.h **** 
  33:/usr/include/c++/11/bits/alloc_traits.h **** #include <bits/stl_construct.h>
  34:/usr/include/c++/11/bits/alloc_traits.h **** #include <bits/memoryfwd.h>
  35:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus >= 201103L
  36:/usr/include/c++/11/bits/alloc_traits.h **** # include <bits/allocator.h>
  37:/usr/include/c++/11/bits/alloc_traits.h **** # include <bits/ptr_traits.h>
  38:/usr/include/c++/11/bits/alloc_traits.h **** # include <ext/numeric_traits.h>
  39:/usr/include/c++/11/bits/alloc_traits.h **** #endif
  40:/usr/include/c++/11/bits/alloc_traits.h **** 
  41:/usr/include/c++/11/bits/alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/11/bits/alloc_traits.h **** {
  43:/usr/include/c++/11/bits/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/11/bits/alloc_traits.h **** 
  45:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus >= 201103L
  46:/usr/include/c++/11/bits/alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  47:/usr/include/c++/11/bits/alloc_traits.h **** 
  48:/usr/include/c++/11/bits/alloc_traits.h ****   /// @cond undocumented
  49:/usr/include/c++/11/bits/alloc_traits.h ****   struct __allocator_traits_base
  50:/usr/include/c++/11/bits/alloc_traits.h ****   {
  51:/usr/include/c++/11/bits/alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  52:/usr/include/c++/11/bits/alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
  53:/usr/include/c++/11/bits/alloc_traits.h **** 
  54:/usr/include/c++/11/bits/alloc_traits.h ****     template<typename _Tp, typename _Up>
  55:/usr/include/c++/11/bits/alloc_traits.h ****       struct __rebind<_Tp, _Up,
  56:/usr/include/c++/11/bits/alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
  57:/usr/include/c++/11/bits/alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
  58:/usr/include/c++/11/bits/alloc_traits.h **** 
  59:/usr/include/c++/11/bits/alloc_traits.h ****   protected:
  60:/usr/include/c++/11/bits/alloc_traits.h ****     template<typename _Tp>
  61:/usr/include/c++/11/bits/alloc_traits.h ****       using __pointer = typename _Tp::pointer;
  62:/usr/include/c++/11/bits/alloc_traits.h ****     template<typename _Tp>
  63:/usr/include/c++/11/bits/alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
  64:/usr/include/c++/11/bits/alloc_traits.h ****     template<typename _Tp>
  65:/usr/include/c++/11/bits/alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  66:/usr/include/c++/11/bits/alloc_traits.h ****     template<typename _Tp>
  67:/usr/include/c++/11/bits/alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  68:/usr/include/c++/11/bits/alloc_traits.h ****     template<typename _Tp>
  69:/usr/include/c++/11/bits/alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  70:/usr/include/c++/11/bits/alloc_traits.h ****     template<typename _Tp>
  71:/usr/include/c++/11/bits/alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
  72:/usr/include/c++/11/bits/alloc_traits.h ****     template<typename _Tp>
  73:/usr/include/c++/11/bits/alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  74:/usr/include/c++/11/bits/alloc_traits.h ****     template<typename _Tp>
  75:/usr/include/c++/11/bits/alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
  76:/usr/include/c++/11/bits/alloc_traits.h ****   };
  77:/usr/include/c++/11/bits/alloc_traits.h **** 
  78:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc, typename _Up>
  79:/usr/include/c++/11/bits/alloc_traits.h ****     using __alloc_rebind
  80:/usr/include/c++/11/bits/alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  81:/usr/include/c++/11/bits/alloc_traits.h ****   /// @endcond
  82:/usr/include/c++/11/bits/alloc_traits.h **** 
  83:/usr/include/c++/11/bits/alloc_traits.h ****   /**
  84:/usr/include/c++/11/bits/alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  85:/usr/include/c++/11/bits/alloc_traits.h ****    * @headerfile memory
  86:/usr/include/c++/11/bits/alloc_traits.h ****    * @ingroup allocators
  87:/usr/include/c++/11/bits/alloc_traits.h ****    * @since C++11
  88:/usr/include/c++/11/bits/alloc_traits.h ****   */
  89:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
  90:/usr/include/c++/11/bits/alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  91:/usr/include/c++/11/bits/alloc_traits.h ****     {
  92:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator type
  93:/usr/include/c++/11/bits/alloc_traits.h ****       typedef _Alloc allocator_type;
  94:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocated type
  95:/usr/include/c++/11/bits/alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  96:/usr/include/c++/11/bits/alloc_traits.h **** 
  97:/usr/include/c++/11/bits/alloc_traits.h ****       /**
  98:/usr/include/c++/11/bits/alloc_traits.h ****        * @brief   The allocator's pointer type.
  99:/usr/include/c++/11/bits/alloc_traits.h ****        *
 100:/usr/include/c++/11/bits/alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
 101:/usr/include/c++/11/bits/alloc_traits.h ****       */
 102:/usr/include/c++/11/bits/alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
 103:/usr/include/c++/11/bits/alloc_traits.h **** 
 104:/usr/include/c++/11/bits/alloc_traits.h ****     private:
 105:/usr/include/c++/11/bits/alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
 106:/usr/include/c++/11/bits/alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
 107:/usr/include/c++/11/bits/alloc_traits.h **** 	struct _Ptr
 108:/usr/include/c++/11/bits/alloc_traits.h **** 	{
 109:/usr/include/c++/11/bits/alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 110:/usr/include/c++/11/bits/alloc_traits.h **** 	};
 111:/usr/include/c++/11/bits/alloc_traits.h **** 
 112:/usr/include/c++/11/bits/alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
 113:/usr/include/c++/11/bits/alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
 114:/usr/include/c++/11/bits/alloc_traits.h **** 	{
 115:/usr/include/c++/11/bits/alloc_traits.h **** 	  using type = _Func<_Alloc>;
 116:/usr/include/c++/11/bits/alloc_traits.h **** 	};
 117:/usr/include/c++/11/bits/alloc_traits.h **** 
 118:/usr/include/c++/11/bits/alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
 119:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 120:/usr/include/c++/11/bits/alloc_traits.h **** 	struct _Diff
 121:/usr/include/c++/11/bits/alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
 122:/usr/include/c++/11/bits/alloc_traits.h **** 
 123:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _A2, typename _PtrT>
 124:/usr/include/c++/11/bits/alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 125:/usr/include/c++/11/bits/alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 126:/usr/include/c++/11/bits/alloc_traits.h **** 
 127:/usr/include/c++/11/bits/alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 128:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
 129:/usr/include/c++/11/bits/alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 130:/usr/include/c++/11/bits/alloc_traits.h **** 
 131:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _A2, typename _DiffT>
 132:/usr/include/c++/11/bits/alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
 133:/usr/include/c++/11/bits/alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 134:/usr/include/c++/11/bits/alloc_traits.h **** 
 135:/usr/include/c++/11/bits/alloc_traits.h ****     public:
 136:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 137:/usr/include/c++/11/bits/alloc_traits.h ****        * @brief   The allocator's const pointer type.
 138:/usr/include/c++/11/bits/alloc_traits.h ****        *
 139:/usr/include/c++/11/bits/alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 140:/usr/include/c++/11/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 141:/usr/include/c++/11/bits/alloc_traits.h ****       */
 142:/usr/include/c++/11/bits/alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
 143:/usr/include/c++/11/bits/alloc_traits.h **** 
 144:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 145:/usr/include/c++/11/bits/alloc_traits.h ****        * @brief   The allocator's void pointer type.
 146:/usr/include/c++/11/bits/alloc_traits.h ****        *
 147:/usr/include/c++/11/bits/alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 148:/usr/include/c++/11/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 149:/usr/include/c++/11/bits/alloc_traits.h ****       */
 150:/usr/include/c++/11/bits/alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
 151:/usr/include/c++/11/bits/alloc_traits.h **** 
 152:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 153:/usr/include/c++/11/bits/alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 154:/usr/include/c++/11/bits/alloc_traits.h ****        *
 155:/usr/include/c++/11/bits/alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 156:/usr/include/c++/11/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 157:/usr/include/c++/11/bits/alloc_traits.h ****       */
 158:/usr/include/c++/11/bits/alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 159:/usr/include/c++/11/bits/alloc_traits.h **** 
 160:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 161:/usr/include/c++/11/bits/alloc_traits.h ****        * @brief   The allocator's difference type
 162:/usr/include/c++/11/bits/alloc_traits.h ****        *
 163:/usr/include/c++/11/bits/alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 164:/usr/include/c++/11/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 165:/usr/include/c++/11/bits/alloc_traits.h ****       */
 166:/usr/include/c++/11/bits/alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 167:/usr/include/c++/11/bits/alloc_traits.h **** 
 168:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 169:/usr/include/c++/11/bits/alloc_traits.h ****        * @brief   The allocator's size type
 170:/usr/include/c++/11/bits/alloc_traits.h ****        *
 171:/usr/include/c++/11/bits/alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 172:/usr/include/c++/11/bits/alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 173:/usr/include/c++/11/bits/alloc_traits.h ****       */
 174:/usr/include/c++/11/bits/alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
 175:/usr/include/c++/11/bits/alloc_traits.h **** 
 176:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 177:/usr/include/c++/11/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 178:/usr/include/c++/11/bits/alloc_traits.h ****        *
 179:/usr/include/c++/11/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 180:/usr/include/c++/11/bits/alloc_traits.h ****        * otherwise @c false_type
 181:/usr/include/c++/11/bits/alloc_traits.h ****       */
 182:/usr/include/c++/11/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment
 183:/usr/include/c++/11/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 184:/usr/include/c++/11/bits/alloc_traits.h **** 
 185:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 186:/usr/include/c++/11/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 187:/usr/include/c++/11/bits/alloc_traits.h ****        *
 188:/usr/include/c++/11/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
 189:/usr/include/c++/11/bits/alloc_traits.h ****        * otherwise @c false_type
 190:/usr/include/c++/11/bits/alloc_traits.h ****       */
 191:/usr/include/c++/11/bits/alloc_traits.h ****       using propagate_on_container_move_assignment
 192:/usr/include/c++/11/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
 193:/usr/include/c++/11/bits/alloc_traits.h **** 
 194:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 195:/usr/include/c++/11/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 196:/usr/include/c++/11/bits/alloc_traits.h ****        *
 197:/usr/include/c++/11/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 198:/usr/include/c++/11/bits/alloc_traits.h ****        * otherwise @c false_type
 199:/usr/include/c++/11/bits/alloc_traits.h ****       */
 200:/usr/include/c++/11/bits/alloc_traits.h ****       using propagate_on_container_swap
 201:/usr/include/c++/11/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 202:/usr/include/c++/11/bits/alloc_traits.h **** 
 203:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 204:/usr/include/c++/11/bits/alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 205:/usr/include/c++/11/bits/alloc_traits.h ****        *
 206:/usr/include/c++/11/bits/alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
 207:/usr/include/c++/11/bits/alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
 208:/usr/include/c++/11/bits/alloc_traits.h ****       */
 209:/usr/include/c++/11/bits/alloc_traits.h ****       using is_always_equal
 210:/usr/include/c++/11/bits/alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 211:/usr/include/c++/11/bits/alloc_traits.h **** 
 212:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Tp>
 213:/usr/include/c++/11/bits/alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 214:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Tp>
 215:/usr/include/c++/11/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 216:/usr/include/c++/11/bits/alloc_traits.h **** 
 217:/usr/include/c++/11/bits/alloc_traits.h ****     private:
 218:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Alloc2>
 219:/usr/include/c++/11/bits/alloc_traits.h **** 	static constexpr auto
 220:/usr/include/c++/11/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
 221:/usr/include/c++/11/bits/alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
 222:/usr/include/c++/11/bits/alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 223:/usr/include/c++/11/bits/alloc_traits.h **** 
 224:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Alloc2>
 225:/usr/include/c++/11/bits/alloc_traits.h **** 	static constexpr pointer
 226:/usr/include/c++/11/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
 227:/usr/include/c++/11/bits/alloc_traits.h **** 	{ return __a.allocate(__n); }
 228:/usr/include/c++/11/bits/alloc_traits.h **** 
 229:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 230:/usr/include/c++/11/bits/alloc_traits.h **** 	struct __construct_helper
 231:/usr/include/c++/11/bits/alloc_traits.h **** 	{
 232:/usr/include/c++/11/bits/alloc_traits.h **** 	  template<typename _Alloc2,
 233:/usr/include/c++/11/bits/alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 234:/usr/include/c++/11/bits/alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 235:/usr/include/c++/11/bits/alloc_traits.h **** 	    static true_type __test(int);
 236:/usr/include/c++/11/bits/alloc_traits.h **** 
 237:/usr/include/c++/11/bits/alloc_traits.h **** 	  template<typename>
 238:/usr/include/c++/11/bits/alloc_traits.h **** 	    static false_type __test(...);
 239:/usr/include/c++/11/bits/alloc_traits.h **** 
 240:/usr/include/c++/11/bits/alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 241:/usr/include/c++/11/bits/alloc_traits.h **** 	};
 242:/usr/include/c++/11/bits/alloc_traits.h **** 
 243:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 244:/usr/include/c++/11/bits/alloc_traits.h **** 	using __has_construct
 245:/usr/include/c++/11/bits/alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
 246:/usr/include/c++/11/bits/alloc_traits.h **** 
 247:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 248:/usr/include/c++/11/bits/alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR _Require<__has_construct<_Tp, _Args...>>
 249:/usr/include/c++/11/bits/alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 250:/usr/include/c++/11/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 251:/usr/include/c++/11/bits/alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 252:/usr/include/c++/11/bits/alloc_traits.h **** 
 253:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 254:/usr/include/c++/11/bits/alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR
 255:/usr/include/c++/11/bits/alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 256:/usr/include/c++/11/bits/alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 257:/usr/include/c++/11/bits/alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 258:/usr/include/c++/11/bits/alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Tp, _Args...>::value)
 259:/usr/include/c++/11/bits/alloc_traits.h **** 	{
 260:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus <= 201703L
 261:/usr/include/c++/11/bits/alloc_traits.h **** 	  ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
 262:/usr/include/c++/11/bits/alloc_traits.h **** #else
 263:/usr/include/c++/11/bits/alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 264:/usr/include/c++/11/bits/alloc_traits.h **** #endif
 265:/usr/include/c++/11/bits/alloc_traits.h **** 	}
 266:/usr/include/c++/11/bits/alloc_traits.h **** 
 267:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 268:/usr/include/c++/11/bits/alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR auto
 269:/usr/include/c++/11/bits/alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 270:/usr/include/c++/11/bits/alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 271:/usr/include/c++/11/bits/alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 272:/usr/include/c++/11/bits/alloc_traits.h **** 	{ __a.destroy(__p); }
 273:/usr/include/c++/11/bits/alloc_traits.h **** 
 274:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 275:/usr/include/c++/11/bits/alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR void
 276:/usr/include/c++/11/bits/alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
 277:/usr/include/c++/11/bits/alloc_traits.h **** 	noexcept(std::is_nothrow_destructible<_Tp>::value)
 278:/usr/include/c++/11/bits/alloc_traits.h **** 	{ std::_Destroy(__p); }
 279:/usr/include/c++/11/bits/alloc_traits.h **** 
 280:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Alloc2>
 281:/usr/include/c++/11/bits/alloc_traits.h **** 	static constexpr auto
 282:/usr/include/c++/11/bits/alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 283:/usr/include/c++/11/bits/alloc_traits.h **** 	-> decltype(__a.max_size())
 284:/usr/include/c++/11/bits/alloc_traits.h **** 	{ return __a.max_size(); }
 285:/usr/include/c++/11/bits/alloc_traits.h **** 
 286:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Alloc2>
 287:/usr/include/c++/11/bits/alloc_traits.h **** 	static constexpr size_type
 288:/usr/include/c++/11/bits/alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 289:/usr/include/c++/11/bits/alloc_traits.h **** 	{
 290:/usr/include/c++/11/bits/alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 291:/usr/include/c++/11/bits/alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 292:/usr/include/c++/11/bits/alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
 293:/usr/include/c++/11/bits/alloc_traits.h **** 	    / sizeof(value_type);
 294:/usr/include/c++/11/bits/alloc_traits.h **** 	}
 295:/usr/include/c++/11/bits/alloc_traits.h **** 
 296:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Alloc2>
 297:/usr/include/c++/11/bits/alloc_traits.h **** 	static constexpr auto
 298:/usr/include/c++/11/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 299:/usr/include/c++/11/bits/alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
 300:/usr/include/c++/11/bits/alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 301:/usr/include/c++/11/bits/alloc_traits.h **** 
 302:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Alloc2>
 303:/usr/include/c++/11/bits/alloc_traits.h **** 	static constexpr _Alloc2
 304:/usr/include/c++/11/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 305:/usr/include/c++/11/bits/alloc_traits.h **** 	{ return __a; }
 306:/usr/include/c++/11/bits/alloc_traits.h **** 
 307:/usr/include/c++/11/bits/alloc_traits.h ****     public:
 308:/usr/include/c++/11/bits/alloc_traits.h **** 
 309:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 310:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 311:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 312:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 313:/usr/include/c++/11/bits/alloc_traits.h ****        *
 314:/usr/include/c++/11/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 315:/usr/include/c++/11/bits/alloc_traits.h ****       */
 316:/usr/include/c++/11/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 317:/usr/include/c++/11/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 318:/usr/include/c++/11/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 319:/usr/include/c++/11/bits/alloc_traits.h **** 
 320:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 321:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 322:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 323:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 324:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 325:/usr/include/c++/11/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 326:/usr/include/c++/11/bits/alloc_traits.h ****        *          of type @c value_type
 327:/usr/include/c++/11/bits/alloc_traits.h ****        *
 328:/usr/include/c++/11/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 329:/usr/include/c++/11/bits/alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 330:/usr/include/c++/11/bits/alloc_traits.h ****       */
 331:/usr/include/c++/11/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 332:/usr/include/c++/11/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 333:/usr/include/c++/11/bits/alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
 334:/usr/include/c++/11/bits/alloc_traits.h **** 
 335:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 336:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 337:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 338:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 339:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 340:/usr/include/c++/11/bits/alloc_traits.h ****        *
 341:/usr/include/c++/11/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 342:/usr/include/c++/11/bits/alloc_traits.h ****       */
 343:/usr/include/c++/11/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 344:/usr/include/c++/11/bits/alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
 345:/usr/include/c++/11/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 346:/usr/include/c++/11/bits/alloc_traits.h **** 
 347:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 348:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Construct an object of type `_Tp`
 349:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 350:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 351:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __args Constructor arguments.
 352:/usr/include/c++/11/bits/alloc_traits.h ****        *
 353:/usr/include/c++/11/bits/alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 354:/usr/include/c++/11/bits/alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 355:/usr/include/c++/11/bits/alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 356:/usr/include/c++/11/bits/alloc_traits.h ****        *  arguments @a __args...
 357:/usr/include/c++/11/bits/alloc_traits.h ****       */
 358:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 359:/usr/include/c++/11/bits/alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR auto
 360:/usr/include/c++/11/bits/alloc_traits.h **** 	construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 361:/usr/include/c++/11/bits/alloc_traits.h **** 	noexcept(noexcept(_S_construct(__a, __p,
 362:/usr/include/c++/11/bits/alloc_traits.h **** 				       std::forward<_Args>(__args)...)))
 363:/usr/include/c++/11/bits/alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 364:/usr/include/c++/11/bits/alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 365:/usr/include/c++/11/bits/alloc_traits.h **** 
 366:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 367:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 368:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 369:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 370:/usr/include/c++/11/bits/alloc_traits.h ****        *
 371:/usr/include/c++/11/bits/alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 372:/usr/include/c++/11/bits/alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 373:/usr/include/c++/11/bits/alloc_traits.h ****       */
 374:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Tp>
 375:/usr/include/c++/11/bits/alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 376:/usr/include/c++/11/bits/alloc_traits.h **** 	destroy(_Alloc& __a, _Tp* __p)
 377:/usr/include/c++/11/bits/alloc_traits.h **** 	noexcept(noexcept(_S_destroy(__a, __p, 0)))
 378:/usr/include/c++/11/bits/alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
 379:/usr/include/c++/11/bits/alloc_traits.h **** 
 380:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 381:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  The maximum supported allocation size
 382:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 383:/usr/include/c++/11/bits/alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 384:/usr/include/c++/11/bits/alloc_traits.h ****        *
 385:/usr/include/c++/11/bits/alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 386:/usr/include/c++/11/bits/alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 387:/usr/include/c++/11/bits/alloc_traits.h ****       */
 388:/usr/include/c++/11/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 389:/usr/include/c++/11/bits/alloc_traits.h ****       max_size(const _Alloc& __a) noexcept
 390:/usr/include/c++/11/bits/alloc_traits.h ****       { return _S_max_size(__a, 0); }
 391:/usr/include/c++/11/bits/alloc_traits.h **** 
 392:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 393:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 394:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __rhs  An allocator.
 395:/usr/include/c++/11/bits/alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 396:/usr/include/c++/11/bits/alloc_traits.h ****        *
 397:/usr/include/c++/11/bits/alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 398:/usr/include/c++/11/bits/alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 399:/usr/include/c++/11/bits/alloc_traits.h ****       */
 400:/usr/include/c++/11/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR _Alloc
 401:/usr/include/c++/11/bits/alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 402:/usr/include/c++/11/bits/alloc_traits.h ****       { return _S_select(__rhs, 0); }
 403:/usr/include/c++/11/bits/alloc_traits.h ****     };
 404:/usr/include/c++/11/bits/alloc_traits.h **** 
 405:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus > 201703L
 406:/usr/include/c++/11/bits/alloc_traits.h **** # define __cpp_lib_constexpr_dynamic_alloc 201907L
 407:/usr/include/c++/11/bits/alloc_traits.h **** #endif
 408:/usr/include/c++/11/bits/alloc_traits.h **** 
 409:/usr/include/c++/11/bits/alloc_traits.h ****   /// Partial specialization for std::allocator.
 410:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Tp>
 411:/usr/include/c++/11/bits/alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 412:/usr/include/c++/11/bits/alloc_traits.h ****     {
 413:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator type
 414:/usr/include/c++/11/bits/alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 415:/usr/include/c++/11/bits/alloc_traits.h **** 
 416:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocated type
 417:/usr/include/c++/11/bits/alloc_traits.h ****       using value_type = _Tp;
 418:/usr/include/c++/11/bits/alloc_traits.h **** 
 419:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator's pointer type.
 420:/usr/include/c++/11/bits/alloc_traits.h ****       using pointer = _Tp*;
 421:/usr/include/c++/11/bits/alloc_traits.h **** 
 422:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator's const pointer type.
 423:/usr/include/c++/11/bits/alloc_traits.h ****       using const_pointer = const _Tp*;
 424:/usr/include/c++/11/bits/alloc_traits.h **** 
 425:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator's void pointer type.
 426:/usr/include/c++/11/bits/alloc_traits.h ****       using void_pointer = void*;
 427:/usr/include/c++/11/bits/alloc_traits.h **** 
 428:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator's const void pointer type.
 429:/usr/include/c++/11/bits/alloc_traits.h ****       using const_void_pointer = const void*;
 430:/usr/include/c++/11/bits/alloc_traits.h **** 
 431:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator's difference type
 432:/usr/include/c++/11/bits/alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 433:/usr/include/c++/11/bits/alloc_traits.h **** 
 434:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator's size type
 435:/usr/include/c++/11/bits/alloc_traits.h ****       using size_type = std::size_t;
 436:/usr/include/c++/11/bits/alloc_traits.h **** 
 437:/usr/include/c++/11/bits/alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 438:/usr/include/c++/11/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 439:/usr/include/c++/11/bits/alloc_traits.h **** 
 440:/usr/include/c++/11/bits/alloc_traits.h ****       /// How the allocator is propagated on move assignment
 441:/usr/include/c++/11/bits/alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 442:/usr/include/c++/11/bits/alloc_traits.h **** 
 443:/usr/include/c++/11/bits/alloc_traits.h ****       /// How the allocator is propagated on swap
 444:/usr/include/c++/11/bits/alloc_traits.h ****       using propagate_on_container_swap = false_type;
 445:/usr/include/c++/11/bits/alloc_traits.h **** 
 446:/usr/include/c++/11/bits/alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 447:/usr/include/c++/11/bits/alloc_traits.h ****       using is_always_equal = true_type;
 448:/usr/include/c++/11/bits/alloc_traits.h **** 
 449:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Up>
 450:/usr/include/c++/11/bits/alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 451:/usr/include/c++/11/bits/alloc_traits.h **** 
 452:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Up>
 453:/usr/include/c++/11/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 454:/usr/include/c++/11/bits/alloc_traits.h **** 
 455:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 456:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 457:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 458:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 459:/usr/include/c++/11/bits/alloc_traits.h ****        *
 460:/usr/include/c++/11/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 461:/usr/include/c++/11/bits/alloc_traits.h ****       */
 462:/usr/include/c++/11/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 463:/usr/include/c++/11/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 464:/usr/include/c++/11/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 465:/usr/include/c++/11/bits/alloc_traits.h **** 
 466:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 467:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 468:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 469:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 470:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 471:/usr/include/c++/11/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 472:/usr/include/c++/11/bits/alloc_traits.h ****        *          of type @c value_type
 473:/usr/include/c++/11/bits/alloc_traits.h ****        *
 474:/usr/include/c++/11/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 475:/usr/include/c++/11/bits/alloc_traits.h ****       */
 476:/usr/include/c++/11/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 477:/usr/include/c++/11/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 478:/usr/include/c++/11/bits/alloc_traits.h ****       {
 479:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus <= 201703L
 480:/usr/include/c++/11/bits/alloc_traits.h **** 	return __a.allocate(__n, __hint);
 481:/usr/include/c++/11/bits/alloc_traits.h **** #else
 482:/usr/include/c++/11/bits/alloc_traits.h **** 	return __a.allocate(__n);
 483:/usr/include/c++/11/bits/alloc_traits.h **** #endif
 484:/usr/include/c++/11/bits/alloc_traits.h ****       }
 485:/usr/include/c++/11/bits/alloc_traits.h **** 
 486:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 487:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 488:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 489:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 490:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 491:/usr/include/c++/11/bits/alloc_traits.h ****        *
 492:/usr/include/c++/11/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 493:/usr/include/c++/11/bits/alloc_traits.h ****       */
 494:/usr/include/c++/11/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 495:/usr/include/c++/11/bits/alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 496:/usr/include/c++/11/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 497:/usr/include/c++/11/bits/alloc_traits.h **** 
 498:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 499:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Construct an object of type `_Up`
 500:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 501:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for
 502:/usr/include/c++/11/bits/alloc_traits.h ****        *	       an object of type `_Up`.
 503:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __args Constructor arguments.
 504:/usr/include/c++/11/bits/alloc_traits.h ****        *
 505:/usr/include/c++/11/bits/alloc_traits.h ****        *  Calls `__a.construct(__p, std::forward<_Args>(__args)...)`
 506:/usr/include/c++/11/bits/alloc_traits.h ****        *  in C++11, C++14 and C++17. Changed in C++20 to call
 507:/usr/include/c++/11/bits/alloc_traits.h ****        *  `std::construct_at(__p, std::forward<_Args>(__args)...)` instead.
 508:/usr/include/c++/11/bits/alloc_traits.h ****       */
 509:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Up, typename... _Args>
 510:/usr/include/c++/11/bits/alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 511:/usr/include/c++/11/bits/alloc_traits.h **** 	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
 512:/usr/include/c++/11/bits/alloc_traits.h **** 		  _Args&&... __args)
 513:/usr/include/c++/11/bits/alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 514:/usr/include/c++/11/bits/alloc_traits.h **** 	{
 515:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus <= 201703L
 516:/usr/include/c++/11/bits/alloc_traits.h **** 	  __a.construct(__p, std::forward<_Args>(__args)...);
 517:/usr/include/c++/11/bits/alloc_traits.h **** #else
 518:/usr/include/c++/11/bits/alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 519:/usr/include/c++/11/bits/alloc_traits.h **** #endif
 520:/usr/include/c++/11/bits/alloc_traits.h **** 	}
 521:/usr/include/c++/11/bits/alloc_traits.h **** 
 522:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 523:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Destroy an object of type @a _Up
 524:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 525:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 526:/usr/include/c++/11/bits/alloc_traits.h ****        *
 527:/usr/include/c++/11/bits/alloc_traits.h ****        *  Calls @c __a.destroy(__p).
 528:/usr/include/c++/11/bits/alloc_traits.h ****       */
 529:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Up>
 530:/usr/include/c++/11/bits/alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 531:/usr/include/c++/11/bits/alloc_traits.h **** 	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
 532:/usr/include/c++/11/bits/alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 533:/usr/include/c++/11/bits/alloc_traits.h **** 	{
 534:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus <= 201703L
 535:/usr/include/c++/11/bits/alloc_traits.h **** 	  __a.destroy(__p);
 536:/usr/include/c++/11/bits/alloc_traits.h **** #else
 537:/usr/include/c++/11/bits/alloc_traits.h **** 	  std::destroy_at(__p);
 538:/usr/include/c++/11/bits/alloc_traits.h **** #endif
 539:/usr/include/c++/11/bits/alloc_traits.h **** 	}
 540:/usr/include/c++/11/bits/alloc_traits.h **** 
 541:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 542:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  The maximum supported allocation size
 543:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 544:/usr/include/c++/11/bits/alloc_traits.h ****        *  @return @c __a.max_size()
 545:/usr/include/c++/11/bits/alloc_traits.h ****       */
 546:/usr/include/c++/11/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 547:/usr/include/c++/11/bits/alloc_traits.h ****       max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
 548:/usr/include/c++/11/bits/alloc_traits.h ****       {
 549:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus <= 201703L
 550:/usr/include/c++/11/bits/alloc_traits.h **** 	return __a.max_size();
 551:/usr/include/c++/11/bits/alloc_traits.h **** #else
 552:/usr/include/c++/11/bits/alloc_traits.h **** 	return size_t(-1) / sizeof(value_type);
 553:/usr/include/c++/11/bits/alloc_traits.h **** #endif
 554:/usr/include/c++/11/bits/alloc_traits.h ****       }
 555:/usr/include/c++/11/bits/alloc_traits.h **** 
 556:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 557:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 558:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __rhs  An allocator.
 559:/usr/include/c++/11/bits/alloc_traits.h ****        *  @return @c __rhs
 560:/usr/include/c++/11/bits/alloc_traits.h ****       */
 561:/usr/include/c++/11/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR allocator_type
 562:/usr/include/c++/11/bits/alloc_traits.h ****       select_on_container_copy_construction(const allocator_type& __rhs)
 563:/usr/include/c++/11/bits/alloc_traits.h ****       { return __rhs; }
 564:/usr/include/c++/11/bits/alloc_traits.h ****     };
 565:/usr/include/c++/11/bits/alloc_traits.h **** 
 566:/usr/include/c++/11/bits/alloc_traits.h ****   /// Explicit specialization for std::allocator<void>.
 567:/usr/include/c++/11/bits/alloc_traits.h ****   template<>
 568:/usr/include/c++/11/bits/alloc_traits.h ****     struct allocator_traits<allocator<void>>
 569:/usr/include/c++/11/bits/alloc_traits.h ****     {
 570:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator type
 571:/usr/include/c++/11/bits/alloc_traits.h ****       using allocator_type = allocator<void>;
 572:/usr/include/c++/11/bits/alloc_traits.h **** 
 573:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocated type
 574:/usr/include/c++/11/bits/alloc_traits.h ****       using value_type = void;
 575:/usr/include/c++/11/bits/alloc_traits.h **** 
 576:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator's pointer type.
 577:/usr/include/c++/11/bits/alloc_traits.h ****       using pointer = void*;
 578:/usr/include/c++/11/bits/alloc_traits.h **** 
 579:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator's const pointer type.
 580:/usr/include/c++/11/bits/alloc_traits.h ****       using const_pointer = const void*;
 581:/usr/include/c++/11/bits/alloc_traits.h **** 
 582:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator's void pointer type.
 583:/usr/include/c++/11/bits/alloc_traits.h ****       using void_pointer = void*;
 584:/usr/include/c++/11/bits/alloc_traits.h **** 
 585:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator's const void pointer type.
 586:/usr/include/c++/11/bits/alloc_traits.h ****       using const_void_pointer = const void*;
 587:/usr/include/c++/11/bits/alloc_traits.h **** 
 588:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator's difference type
 589:/usr/include/c++/11/bits/alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 590:/usr/include/c++/11/bits/alloc_traits.h **** 
 591:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator's size type
 592:/usr/include/c++/11/bits/alloc_traits.h ****       using size_type = std::size_t;
 593:/usr/include/c++/11/bits/alloc_traits.h **** 
 594:/usr/include/c++/11/bits/alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 595:/usr/include/c++/11/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 596:/usr/include/c++/11/bits/alloc_traits.h **** 
 597:/usr/include/c++/11/bits/alloc_traits.h ****       /// How the allocator is propagated on move assignment
 598:/usr/include/c++/11/bits/alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 599:/usr/include/c++/11/bits/alloc_traits.h **** 
 600:/usr/include/c++/11/bits/alloc_traits.h ****       /// How the allocator is propagated on swap
 601:/usr/include/c++/11/bits/alloc_traits.h ****       using propagate_on_container_swap = false_type;
 602:/usr/include/c++/11/bits/alloc_traits.h **** 
 603:/usr/include/c++/11/bits/alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 604:/usr/include/c++/11/bits/alloc_traits.h ****       using is_always_equal = true_type;
 605:/usr/include/c++/11/bits/alloc_traits.h **** 
 606:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Up>
 607:/usr/include/c++/11/bits/alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 608:/usr/include/c++/11/bits/alloc_traits.h **** 
 609:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Up>
 610:/usr/include/c++/11/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 611:/usr/include/c++/11/bits/alloc_traits.h **** 
 612:/usr/include/c++/11/bits/alloc_traits.h ****       /// allocate is ill-formed for allocator<void>
 613:/usr/include/c++/11/bits/alloc_traits.h ****       static void*
 614:/usr/include/c++/11/bits/alloc_traits.h ****       allocate(allocator_type&, size_type, const void* = nullptr) = delete;
 615:/usr/include/c++/11/bits/alloc_traits.h **** 
 616:/usr/include/c++/11/bits/alloc_traits.h ****       /// deallocate is ill-formed for allocator<void>
 617:/usr/include/c++/11/bits/alloc_traits.h ****       static void
 618:/usr/include/c++/11/bits/alloc_traits.h ****       deallocate(allocator_type&, void*, size_type) = delete;
 619:/usr/include/c++/11/bits/alloc_traits.h **** 
 620:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 621:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Construct an object of type `_Up`
 622:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 623:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for
 624:/usr/include/c++/11/bits/alloc_traits.h ****        *	       an object of type `_Up`.
 625:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __args Constructor arguments.
 626:/usr/include/c++/11/bits/alloc_traits.h ****        *
 627:/usr/include/c++/11/bits/alloc_traits.h ****        *  Calls `__a.construct(__p, std::forward<_Args>(__args)...)`
 628:/usr/include/c++/11/bits/alloc_traits.h ****        *  in C++11, C++14 and C++17. Changed in C++20 to call
 629:/usr/include/c++/11/bits/alloc_traits.h ****        *  `std::construct_at(__p, std::forward<_Args>(__args)...)` instead.
 630:/usr/include/c++/11/bits/alloc_traits.h ****       */
 631:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Up, typename... _Args>
 632:/usr/include/c++/11/bits/alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 633:/usr/include/c++/11/bits/alloc_traits.h **** 	construct(allocator_type&, _Up* __p, _Args&&... __args)
 634:/usr/include/c++/11/bits/alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 635:/usr/include/c++/11/bits/alloc_traits.h **** 	{ std::_Construct(__p, std::forward<_Args>(__args)...); }
 636:/usr/include/c++/11/bits/alloc_traits.h **** 
 637:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 638:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Destroy an object of type `_Up`
 639:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 640:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 641:/usr/include/c++/11/bits/alloc_traits.h ****        *
 642:/usr/include/c++/11/bits/alloc_traits.h ****        *  Invokes the destructor for `*__p`.
 643:/usr/include/c++/11/bits/alloc_traits.h ****       */
 644:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Up>
 645:/usr/include/c++/11/bits/alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 646:/usr/include/c++/11/bits/alloc_traits.h **** 	destroy(allocator_type&, _Up* __p)
 647:/usr/include/c++/11/bits/alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 648:/usr/include/c++/11/bits/alloc_traits.h **** 	{ std::_Destroy(__p); }
 649:/usr/include/c++/11/bits/alloc_traits.h **** 
 650:/usr/include/c++/11/bits/alloc_traits.h ****       /// max_size is ill-formed for allocator<void>
 651:/usr/include/c++/11/bits/alloc_traits.h ****       static size_type
 652:/usr/include/c++/11/bits/alloc_traits.h ****       max_size(const allocator_type&) = delete;
 653:/usr/include/c++/11/bits/alloc_traits.h **** 
 654:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 655:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 656:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __rhs  An allocator.
 657:/usr/include/c++/11/bits/alloc_traits.h ****        *  @return `__rhs`
 658:/usr/include/c++/11/bits/alloc_traits.h ****       */
 659:/usr/include/c++/11/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR allocator_type
 660:/usr/include/c++/11/bits/alloc_traits.h ****       select_on_container_copy_construction(const allocator_type& __rhs)
 661:/usr/include/c++/11/bits/alloc_traits.h ****       { return __rhs; }
 662:/usr/include/c++/11/bits/alloc_traits.h ****     };
 663:/usr/include/c++/11/bits/alloc_traits.h **** 
 664:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus < 201703L
 665:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 666:/usr/include/c++/11/bits/alloc_traits.h ****     inline void
 667:/usr/include/c++/11/bits/alloc_traits.h ****     __do_alloc_on_copy(_Alloc& __one, const _Alloc& __two, true_type)
 668:/usr/include/c++/11/bits/alloc_traits.h ****     { __one = __two; }
 669:/usr/include/c++/11/bits/alloc_traits.h **** 
 670:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 671:/usr/include/c++/11/bits/alloc_traits.h ****     inline void
 672:/usr/include/c++/11/bits/alloc_traits.h ****     __do_alloc_on_copy(_Alloc&, const _Alloc&, false_type)
 673:/usr/include/c++/11/bits/alloc_traits.h ****     { }
 674:/usr/include/c++/11/bits/alloc_traits.h **** #endif
 675:/usr/include/c++/11/bits/alloc_traits.h **** 
 676:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 677:/usr/include/c++/11/bits/alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 678:/usr/include/c++/11/bits/alloc_traits.h ****     __alloc_on_copy(_Alloc& __one, const _Alloc& __two)
 679:/usr/include/c++/11/bits/alloc_traits.h ****     {
 680:/usr/include/c++/11/bits/alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 681:/usr/include/c++/11/bits/alloc_traits.h ****       typedef typename __traits::propagate_on_container_copy_assignment __pocca;
 682:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus >= 201703L
 683:/usr/include/c++/11/bits/alloc_traits.h ****       if constexpr (__pocca::value)
 684:/usr/include/c++/11/bits/alloc_traits.h **** 	__one = __two;
 685:/usr/include/c++/11/bits/alloc_traits.h **** #else
 686:/usr/include/c++/11/bits/alloc_traits.h ****       __do_alloc_on_copy(__one, __two, __pocca());
 687:/usr/include/c++/11/bits/alloc_traits.h **** #endif
 688:/usr/include/c++/11/bits/alloc_traits.h ****     }
 689:/usr/include/c++/11/bits/alloc_traits.h **** 
 690:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 691:/usr/include/c++/11/bits/alloc_traits.h ****     constexpr _Alloc
 692:/usr/include/c++/11/bits/alloc_traits.h ****     __alloc_on_copy(const _Alloc& __a)
 693:/usr/include/c++/11/bits/alloc_traits.h ****     {
 694:/usr/include/c++/11/bits/alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 695:/usr/include/c++/11/bits/alloc_traits.h ****       return __traits::select_on_container_copy_construction(__a);
 696:/usr/include/c++/11/bits/alloc_traits.h ****     }
 697:/usr/include/c++/11/bits/alloc_traits.h **** 
 698:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus < 201703L
 699:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 700:/usr/include/c++/11/bits/alloc_traits.h ****     inline void __do_alloc_on_move(_Alloc& __one, _Alloc& __two, true_type)
 701:/usr/include/c++/11/bits/alloc_traits.h ****     { __one = std::move(__two); }
 702:/usr/include/c++/11/bits/alloc_traits.h **** 
 703:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 704:/usr/include/c++/11/bits/alloc_traits.h ****     inline void __do_alloc_on_move(_Alloc&, _Alloc&, false_type)
 705:/usr/include/c++/11/bits/alloc_traits.h ****     { }
 706:/usr/include/c++/11/bits/alloc_traits.h **** #endif
 707:/usr/include/c++/11/bits/alloc_traits.h **** 
 708:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 709:/usr/include/c++/11/bits/alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 710:/usr/include/c++/11/bits/alloc_traits.h ****     __alloc_on_move(_Alloc& __one, _Alloc& __two)
 711:/usr/include/c++/11/bits/alloc_traits.h ****     {
 712:/usr/include/c++/11/bits/alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 713:/usr/include/c++/11/bits/alloc_traits.h ****       typedef typename __traits::propagate_on_container_move_assignment __pocma;
 714:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus >= 201703L
 715:/usr/include/c++/11/bits/alloc_traits.h ****       if constexpr (__pocma::value)
 716:/usr/include/c++/11/bits/alloc_traits.h **** 	__one = std::move(__two);
 717:/usr/include/c++/11/bits/alloc_traits.h **** #else
 718:/usr/include/c++/11/bits/alloc_traits.h ****       __do_alloc_on_move(__one, __two, __pocma());
 719:/usr/include/c++/11/bits/alloc_traits.h **** #endif
 720:/usr/include/c++/11/bits/alloc_traits.h ****     }
 721:/usr/include/c++/11/bits/alloc_traits.h **** 
 722:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus < 201703L
 723:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 724:/usr/include/c++/11/bits/alloc_traits.h ****     inline void __do_alloc_on_swap(_Alloc& __one, _Alloc& __two, true_type)
 725:/usr/include/c++/11/bits/alloc_traits.h ****     {
 726:/usr/include/c++/11/bits/alloc_traits.h ****       using std::swap;
 727:/usr/include/c++/11/bits/alloc_traits.h ****       swap(__one, __two);
 728:/usr/include/c++/11/bits/alloc_traits.h ****     }
 729:/usr/include/c++/11/bits/alloc_traits.h **** 
 730:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 731:/usr/include/c++/11/bits/alloc_traits.h ****     inline void __do_alloc_on_swap(_Alloc&, _Alloc&, false_type)
 732:/usr/include/c++/11/bits/alloc_traits.h ****     { }
 733:/usr/include/c++/11/bits/alloc_traits.h **** #endif
 734:/usr/include/c++/11/bits/alloc_traits.h **** 
 735:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 736:/usr/include/c++/11/bits/alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 737:/usr/include/c++/11/bits/alloc_traits.h ****     __alloc_on_swap(_Alloc& __one, _Alloc& __two)
 738:/usr/include/c++/11/bits/alloc_traits.h ****     {
 739:/usr/include/c++/11/bits/alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 740:/usr/include/c++/11/bits/alloc_traits.h ****       typedef typename __traits::propagate_on_container_swap __pocs;
 741:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus >= 201703L
 742:/usr/include/c++/11/bits/alloc_traits.h ****       if constexpr (__pocs::value)
 743:/usr/include/c++/11/bits/alloc_traits.h **** 	{
 744:/usr/include/c++/11/bits/alloc_traits.h **** 	  using std::swap;
 745:/usr/include/c++/11/bits/alloc_traits.h **** 	  swap(__one, __two);
 746:/usr/include/c++/11/bits/alloc_traits.h **** 	}
 747:/usr/include/c++/11/bits/alloc_traits.h **** #else
 748:/usr/include/c++/11/bits/alloc_traits.h ****       __do_alloc_on_swap(__one, __two, __pocs());
 749:/usr/include/c++/11/bits/alloc_traits.h **** #endif
 750:/usr/include/c++/11/bits/alloc_traits.h ****     }
 751:/usr/include/c++/11/bits/alloc_traits.h **** 
 752:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc, typename _Tp,
 753:/usr/include/c++/11/bits/alloc_traits.h **** 	   typename _ValueT = __remove_cvref_t<typename _Alloc::value_type>,
 754:/usr/include/c++/11/bits/alloc_traits.h **** 	   typename = void>
 755:/usr/include/c++/11/bits/alloc_traits.h ****     struct __is_alloc_insertable_impl
 756:/usr/include/c++/11/bits/alloc_traits.h ****     : false_type
 757:/usr/include/c++/11/bits/alloc_traits.h ****     { };
 758:/usr/include/c++/11/bits/alloc_traits.h **** 
 759:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc, typename _Tp, typename _ValueT>
 760:/usr/include/c++/11/bits/alloc_traits.h ****     struct __is_alloc_insertable_impl<_Alloc, _Tp, _ValueT,
 761:/usr/include/c++/11/bits/alloc_traits.h ****       __void_t<decltype(allocator_traits<_Alloc>::construct(
 762:/usr/include/c++/11/bits/alloc_traits.h **** 		   std::declval<_Alloc&>(), std::declval<_ValueT*>(),
 763:/usr/include/c++/11/bits/alloc_traits.h **** 		   std::declval<_Tp>()))>>
 764:/usr/include/c++/11/bits/alloc_traits.h ****     : true_type
 765:/usr/include/c++/11/bits/alloc_traits.h ****     { };
 766:/usr/include/c++/11/bits/alloc_traits.h **** 
 767:/usr/include/c++/11/bits/alloc_traits.h ****   // true if _Alloc::value_type is CopyInsertable into containers using _Alloc
 768:/usr/include/c++/11/bits/alloc_traits.h ****   // (might be wrong if _Alloc::construct exists but is not constrained,
 769:/usr/include/c++/11/bits/alloc_traits.h ****   // i.e. actually trying to use it would still be invalid. Use with caution.)
 770:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 771:/usr/include/c++/11/bits/alloc_traits.h ****     struct __is_copy_insertable
 772:/usr/include/c++/11/bits/alloc_traits.h ****     : __is_alloc_insertable_impl<_Alloc,
 773:/usr/include/c++/11/bits/alloc_traits.h **** 				 typename _Alloc::value_type const&>::type
 774:/usr/include/c++/11/bits/alloc_traits.h ****     { };
 775:/usr/include/c++/11/bits/alloc_traits.h **** 
 776:/usr/include/c++/11/bits/alloc_traits.h ****   // std::allocator<_Tp> just requires CopyConstructible
 777:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Tp>
 778:/usr/include/c++/11/bits/alloc_traits.h ****     struct __is_copy_insertable<allocator<_Tp>>
 779:/usr/include/c++/11/bits/alloc_traits.h ****     : is_copy_constructible<_Tp>
 780:/usr/include/c++/11/bits/alloc_traits.h ****     { };
 781:/usr/include/c++/11/bits/alloc_traits.h **** 
 782:/usr/include/c++/11/bits/alloc_traits.h ****   // true if _Alloc::value_type is MoveInsertable into containers using _Alloc
 783:/usr/include/c++/11/bits/alloc_traits.h ****   // (might be wrong if _Alloc::construct exists but is not constrained,
 784:/usr/include/c++/11/bits/alloc_traits.h ****   // i.e. actually trying to use it would still be invalid. Use with caution.)
 785:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 786:/usr/include/c++/11/bits/alloc_traits.h ****     struct __is_move_insertable
 787:/usr/include/c++/11/bits/alloc_traits.h ****     : __is_alloc_insertable_impl<_Alloc, typename _Alloc::value_type>::type
 788:/usr/include/c++/11/bits/alloc_traits.h ****     { };
 789:/usr/include/c++/11/bits/alloc_traits.h **** 
 790:/usr/include/c++/11/bits/alloc_traits.h ****   // std::allocator<_Tp> just requires MoveConstructible
 791:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Tp>
 792:/usr/include/c++/11/bits/alloc_traits.h ****     struct __is_move_insertable<allocator<_Tp>>
 793:/usr/include/c++/11/bits/alloc_traits.h ****     : is_move_constructible<_Tp>
 794:/usr/include/c++/11/bits/alloc_traits.h ****     { };
 795:/usr/include/c++/11/bits/alloc_traits.h **** 
 796:/usr/include/c++/11/bits/alloc_traits.h ****   // Trait to detect Allocator-like types.
 797:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc, typename = void>
 798:/usr/include/c++/11/bits/alloc_traits.h ****     struct __is_allocator : false_type { };
 799:/usr/include/c++/11/bits/alloc_traits.h **** 
 800:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 801:/usr/include/c++/11/bits/alloc_traits.h ****     struct __is_allocator<_Alloc,
 802:/usr/include/c++/11/bits/alloc_traits.h ****       __void_t<typename _Alloc::value_type,
 803:/usr/include/c++/11/bits/alloc_traits.h **** 	       decltype(std::declval<_Alloc&>().allocate(size_t{}))>>
 804:/usr/include/c++/11/bits/alloc_traits.h ****     : true_type { };
 805:/usr/include/c++/11/bits/alloc_traits.h **** 
 806:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 807:/usr/include/c++/11/bits/alloc_traits.h ****     using _RequireAllocator
 808:/usr/include/c++/11/bits/alloc_traits.h ****       = typename enable_if<__is_allocator<_Alloc>::value, _Alloc>::type;
 809:/usr/include/c++/11/bits/alloc_traits.h **** 
 810:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 811:/usr/include/c++/11/bits/alloc_traits.h ****     using _RequireNotAllocator
 812:/usr/include/c++/11/bits/alloc_traits.h ****       = typename enable_if<!__is_allocator<_Alloc>::value, _Alloc>::type;
 813:/usr/include/c++/11/bits/alloc_traits.h **** 
 814:/usr/include/c++/11/bits/alloc_traits.h **** #if __cpp_concepts >= 201907L
 815:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 816:/usr/include/c++/11/bits/alloc_traits.h ****     concept __allocator_like = requires (_Alloc& __a) {
 817:/usr/include/c++/11/bits/alloc_traits.h ****       typename _Alloc::value_type;
 818:/usr/include/c++/11/bits/alloc_traits.h ****       __a.deallocate(__a.allocate(1u), 1u);
 819:/usr/include/c++/11/bits/alloc_traits.h ****     };
 820:/usr/include/c++/11/bits/alloc_traits.h **** #endif
 821:/usr/include/c++/11/bits/alloc_traits.h **** #endif // C++11
 822:/usr/include/c++/11/bits/alloc_traits.h **** 
 823:/usr/include/c++/11/bits/alloc_traits.h ****   /**
 824:/usr/include/c++/11/bits/alloc_traits.h ****    * Destroy a range of objects using the supplied allocator.  For
 825:/usr/include/c++/11/bits/alloc_traits.h ****    * non-default allocators we do not optimize away invocation of
 826:/usr/include/c++/11/bits/alloc_traits.h ****    * destroy() even if _Tp has a trivial destructor.
 827:/usr/include/c++/11/bits/alloc_traits.h ****    */
 828:/usr/include/c++/11/bits/alloc_traits.h **** 
 829:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _ForwardIterator, typename _Allocator>
 830:/usr/include/c++/11/bits/alloc_traits.h ****     void
 831:/usr/include/c++/11/bits/alloc_traits.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 832:/usr/include/c++/11/bits/alloc_traits.h **** 	     _Allocator& __alloc)
 833:/usr/include/c++/11/bits/alloc_traits.h ****     {
 834:/usr/include/c++/11/bits/alloc_traits.h ****       for (; __first != __last; ++__first)
 835:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus < 201103L
 836:/usr/include/c++/11/bits/alloc_traits.h **** 	__alloc.destroy(std::__addressof(*__first));
 837:/usr/include/c++/11/bits/alloc_traits.h **** #else
 838:/usr/include/c++/11/bits/alloc_traits.h **** 	allocator_traits<_Allocator>::destroy(__alloc,
 839:/usr/include/c++/11/bits/alloc_traits.h **** 					      std::__addressof(*__first));
 840:/usr/include/c++/11/bits/alloc_traits.h **** #endif
 841:/usr/include/c++/11/bits/alloc_traits.h ****     }
 842:/usr/include/c++/11/bits/alloc_traits.h **** 
 843:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _ForwardIterator, typename _Tp>
 844:/usr/include/c++/11/bits/alloc_traits.h ****     inline void
 845:/usr/include/c++/11/bits/alloc_traits.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 8212              		.loc 9 845 5
 8213              		.cfi_startproc
 8214 0000 F30F1EFA 		endbr64
 8215 0004 55       		pushq	%rbp
 8216              		.cfi_def_cfa_offset 16
 8217              		.cfi_offset 6, -16
 8218 0005 4889E5   		movq	%rsp, %rbp
 8219              		.cfi_def_cfa_register 6
 8220 0008 4883EC20 		subq	$32, %rsp
 8221 000c 48897DF8 		movq	%rdi, -8(%rbp)
 8222 0010 488975F0 		movq	%rsi, -16(%rbp)
 8223 0014 488955E8 		movq	%rdx, -24(%rbp)
 846:/usr/include/c++/11/bits/alloc_traits.h **** 	     allocator<_Tp>&)
 847:/usr/include/c++/11/bits/alloc_traits.h ****     {
 848:/usr/include/c++/11/bits/alloc_traits.h ****       _Destroy(__first, __last);
 8224              		.loc 9 848 15
 8225 0018 488B55F0 		movq	-16(%rbp), %rdx
 8226 001c 488B45F8 		movq	-8(%rbp), %rax
 8227 0020 4889D6   		movq	%rdx, %rsi
 8228 0023 4889C7   		movq	%rax, %rdi
 8229 0026 E8000000 		call	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_
 8229      00
 849:/usr/include/c++/11/bits/alloc_traits.h ****     }
 8230              		.loc 9 849 5
 8231 002b 90       		nop
 8232 002c C9       		leave
 8233              		.cfi_def_cfa 7, 8
 8234 002d C3       		ret
 8235              		.cfi_endproc
 8236              	.LFE1581:
 8238              		.section	.rodata
 8239 0575 000000   		.align 8
 8240              	.LC37:
 8241 0578 76656374 		.string	"vector::_M_range_check: __n (which is %zu) >= this->size() (which is %zu)"
 8241      6F723A3A 
 8241      5F4D5F72 
 8241      616E6765 
 8241      5F636865 
 8242              		.section	.text._ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE14_M_range_checkEm,"axG",@prog
 8243              		.align 2
 8244              		.weak	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE14_M_range_checkEm
 8246              	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE14_M_range_checkEm:
 8247              	.LFB1590:
1070:/usr/include/c++/11/bits/stl_vector.h ****       {
 8248              		.loc 6 1070 7
 8249              		.cfi_startproc
 8250 0000 F30F1EFA 		endbr64
 8251 0004 55       		pushq	%rbp
 8252              		.cfi_def_cfa_offset 16
 8253              		.cfi_offset 6, -16
 8254 0005 4889E5   		movq	%rsp, %rbp
 8255              		.cfi_def_cfa_register 6
 8256 0008 4883EC10 		subq	$16, %rsp
 8257 000c 48897DF8 		movq	%rdi, -8(%rbp)
 8258 0010 488975F0 		movq	%rsi, -16(%rbp)
1072:/usr/include/c++/11/bits/stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
 8259              		.loc 6 1072 23
 8260 0014 488B45F8 		movq	-8(%rbp), %rax
 8261 0018 4889C7   		movq	%rax, %rdi
 8262 001b E8000000 		call	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv
 8262      00
1072:/usr/include/c++/11/bits/stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
 8263              		.loc 6 1072 10
 8264 0020 483945F0 		cmpq	%rax, -16(%rbp)
 8265 0024 0F93C0   		setnb	%al
1072:/usr/include/c++/11/bits/stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
 8266              		.loc 6 1072 2
 8267 0027 84C0     		testb	%al, %al
 8268 0029 742A     		je	.L424
1073:/usr/include/c++/11/bits/stl_vector.h **** 				       "(which is %zu) >= this->size() "
 8269              		.loc 6 1073 28
 8270 002b 488B45F8 		movq	-8(%rbp), %rax
 8271 002f 4889C7   		movq	%rax, %rdi
 8272 0032 E8000000 		call	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv
 8272      00
 8273 0037 4889C2   		movq	%rax, %rdx
 8274 003a 488B45F0 		movq	-16(%rbp), %rax
 8275 003e 4889C6   		movq	%rax, %rsi
 8276 0041 488D0500 		leaq	.LC37(%rip), %rax
 8276      000000
 8277 0048 4889C7   		movq	%rax, %rdi
 8278 004b B8000000 		movl	$0, %eax
 8278      00
 8279 0050 E8000000 		call	_ZSt24__throw_out_of_range_fmtPKcz@PLT
 8279      00
 8280              	.L424:
1077:/usr/include/c++/11/bits/stl_vector.h **** 
 8281              		.loc 6 1077 7
 8282 0055 90       		nop
 8283 0056 C9       		leave
 8284              		.cfi_def_cfa 7, 8
 8285 0057 C3       		ret
 8286              		.cfi_endproc
 8287              	.LFE1590:
 8289              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEixEm,"axG",@progbits,_ZNSt6vect
 8290              		.align 2
 8291              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEixEm
 8293              	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEixEm:
 8294              	.LFB1591:
1043:/usr/include/c++/11/bits/stl_vector.h ****       {
 8295              		.loc 6 1043 7
 8296              		.cfi_startproc
 8297 0000 F30F1EFA 		endbr64
 8298 0004 55       		pushq	%rbp
 8299              		.cfi_def_cfa_offset 16
 8300              		.cfi_offset 6, -16
 8301 0005 4889E5   		movq	%rsp, %rbp
 8302              		.cfi_def_cfa_register 6
 8303 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8304 000c 488975F0 		movq	%rsi, -16(%rbp)
1046:/usr/include/c++/11/bits/stl_vector.h ****       }
 8305              		.loc 6 1046 25
 8306 0010 488B45F8 		movq	-8(%rbp), %rax
 8307 0014 488B10   		movq	(%rax), %rdx
1046:/usr/include/c++/11/bits/stl_vector.h ****       }
 8308              		.loc 6 1046 34
 8309 0017 488B45F0 		movq	-16(%rbp), %rax
 8310 001b 48C1E007 		salq	$7, %rax
1046:/usr/include/c++/11/bits/stl_vector.h ****       }
 8311              		.loc 6 1046 39
 8312 001f 4801D0   		addq	%rdx, %rax
1047:/usr/include/c++/11/bits/stl_vector.h **** 
 8313              		.loc 6 1047 7
 8314 0022 5D       		popq	%rbp
 8315              		.cfi_def_cfa 7, 8
 8316 0023 C3       		ret
 8317              		.cfi_endproc
 8318              	.LFE1591:
 8320              		.section	.text._ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE,"axG",
 8321              		.weak	_ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE
 8323              	_ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE:
 8324              	.LFB1592:
 8325              		.file 10 "/usr/include/c++/11/bits/basic_string.h"
   1:/usr/include/c++/11/bits/basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/usr/include/c++/11/bits/basic_string.h **** 
   3:/usr/include/c++/11/bits/basic_string.h **** // Copyright (C) 1997-2021 Free Software Foundation, Inc.
   4:/usr/include/c++/11/bits/basic_string.h **** //
   5:/usr/include/c++/11/bits/basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/11/bits/basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/11/bits/basic_string.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/11/bits/basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/11/bits/basic_string.h **** // any later version.
  10:/usr/include/c++/11/bits/basic_string.h **** 
  11:/usr/include/c++/11/bits/basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/11/bits/basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/11/bits/basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/11/bits/basic_string.h **** // GNU General Public License for more details.
  15:/usr/include/c++/11/bits/basic_string.h **** 
  16:/usr/include/c++/11/bits/basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/11/bits/basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/11/bits/basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/11/bits/basic_string.h **** 
  20:/usr/include/c++/11/bits/basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/11/bits/basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/11/bits/basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/11/bits/basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/11/bits/basic_string.h **** 
  25:/usr/include/c++/11/bits/basic_string.h **** /** @file bits/basic_string.h
  26:/usr/include/c++/11/bits/basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/11/bits/basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/c++/11/bits/basic_string.h ****  */
  29:/usr/include/c++/11/bits/basic_string.h **** 
  30:/usr/include/c++/11/bits/basic_string.h **** //
  31:/usr/include/c++/11/bits/basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:/usr/include/c++/11/bits/basic_string.h **** //
  33:/usr/include/c++/11/bits/basic_string.h **** 
  34:/usr/include/c++/11/bits/basic_string.h **** #ifndef _BASIC_STRING_H
  35:/usr/include/c++/11/bits/basic_string.h **** #define _BASIC_STRING_H 1
  36:/usr/include/c++/11/bits/basic_string.h **** 
  37:/usr/include/c++/11/bits/basic_string.h **** #pragma GCC system_header
  38:/usr/include/c++/11/bits/basic_string.h **** 
  39:/usr/include/c++/11/bits/basic_string.h **** #include <ext/atomicity.h>
  40:/usr/include/c++/11/bits/basic_string.h **** #include <ext/alloc_traits.h>
  41:/usr/include/c++/11/bits/basic_string.h **** #include <debug/debug.h>
  42:/usr/include/c++/11/bits/basic_string.h **** 
  43:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
  44:/usr/include/c++/11/bits/basic_string.h **** #include <initializer_list>
  45:/usr/include/c++/11/bits/basic_string.h **** #endif
  46:/usr/include/c++/11/bits/basic_string.h **** 
  47:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
  48:/usr/include/c++/11/bits/basic_string.h **** # include <string_view>
  49:/usr/include/c++/11/bits/basic_string.h **** #endif
  50:/usr/include/c++/11/bits/basic_string.h **** 
  51:/usr/include/c++/11/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  52:/usr/include/c++/11/bits/basic_string.h **** {
  53:/usr/include/c++/11/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  54:/usr/include/c++/11/bits/basic_string.h **** 
  55:/usr/include/c++/11/bits/basic_string.h **** #ifdef __cpp_lib_is_constant_evaluated
  56:/usr/include/c++/11/bits/basic_string.h **** // Support P1032R1 in C++20 (but not P0980R1 yet).
  57:/usr/include/c++/11/bits/basic_string.h **** # define __cpp_lib_constexpr_string 201811L
  58:/usr/include/c++/11/bits/basic_string.h **** #elif __cplusplus >= 201703L
  59:/usr/include/c++/11/bits/basic_string.h **** // Support P0426R1 changes to char_traits in C++17.
  60:/usr/include/c++/11/bits/basic_string.h **** # define __cpp_lib_constexpr_string 201611L
  61:/usr/include/c++/11/bits/basic_string.h **** #elif __cplusplus > 201703L
  62:/usr/include/c++/11/bits/basic_string.h **** #endif
  63:/usr/include/c++/11/bits/basic_string.h **** 
  64:/usr/include/c++/11/bits/basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
  65:/usr/include/c++/11/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  66:/usr/include/c++/11/bits/basic_string.h ****   /**
  67:/usr/include/c++/11/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
  68:/usr/include/c++/11/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  69:/usr/include/c++/11/bits/basic_string.h ****    *
  70:/usr/include/c++/11/bits/basic_string.h ****    *  @ingroup strings
  71:/usr/include/c++/11/bits/basic_string.h ****    *  @ingroup sequences
  72:/usr/include/c++/11/bits/basic_string.h ****    *
  73:/usr/include/c++/11/bits/basic_string.h ****    *  @tparam _CharT  Type of character
  74:/usr/include/c++/11/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  75:/usr/include/c++/11/bits/basic_string.h ****    *                   char_traits<_CharT>.
  76:/usr/include/c++/11/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  77:/usr/include/c++/11/bits/basic_string.h ****    *
  78:/usr/include/c++/11/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  79:/usr/include/c++/11/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  80:/usr/include/c++/11/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  81:/usr/include/c++/11/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  82:/usr/include/c++/11/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  83:/usr/include/c++/11/bits/basic_string.h ****    */
  84:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
  85:/usr/include/c++/11/bits/basic_string.h ****     class basic_string
  86:/usr/include/c++/11/bits/basic_string.h ****     {
  87:/usr/include/c++/11/bits/basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  88:/usr/include/c++/11/bits/basic_string.h **** 	rebind<_CharT>::other _Char_alloc_type;
  89:/usr/include/c++/11/bits/basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
  90:/usr/include/c++/11/bits/basic_string.h **** 
  91:/usr/include/c++/11/bits/basic_string.h ****       // Types:
  92:/usr/include/c++/11/bits/basic_string.h ****     public:
  93:/usr/include/c++/11/bits/basic_string.h ****       typedef _Traits					traits_type;
  94:/usr/include/c++/11/bits/basic_string.h ****       typedef typename _Traits::char_type		value_type;
  95:/usr/include/c++/11/bits/basic_string.h ****       typedef _Char_alloc_type				allocator_type;
  96:/usr/include/c++/11/bits/basic_string.h ****       typedef typename _Alloc_traits::size_type		size_type;
  97:/usr/include/c++/11/bits/basic_string.h ****       typedef typename _Alloc_traits::difference_type	difference_type;
  98:/usr/include/c++/11/bits/basic_string.h ****       typedef typename _Alloc_traits::reference		reference;
  99:/usr/include/c++/11/bits/basic_string.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
 100:/usr/include/c++/11/bits/basic_string.h ****       typedef typename _Alloc_traits::pointer		pointer;
 101:/usr/include/c++/11/bits/basic_string.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
 102:/usr/include/c++/11/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
 103:/usr/include/c++/11/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
 104:/usr/include/c++/11/bits/basic_string.h **** 							const_iterator;
 105:/usr/include/c++/11/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 106:/usr/include/c++/11/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 107:/usr/include/c++/11/bits/basic_string.h **** 
 108:/usr/include/c++/11/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
 109:/usr/include/c++/11/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 110:/usr/include/c++/11/bits/basic_string.h **** 
 111:/usr/include/c++/11/bits/basic_string.h ****     protected:
 112:/usr/include/c++/11/bits/basic_string.h ****       // type used for positions in insert, erase etc.
 113:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus < 201103L
 114:/usr/include/c++/11/bits/basic_string.h ****       typedef iterator __const_iterator;
 115:/usr/include/c++/11/bits/basic_string.h **** #else
 116:/usr/include/c++/11/bits/basic_string.h ****       typedef const_iterator __const_iterator;
 117:/usr/include/c++/11/bits/basic_string.h **** #endif
 118:/usr/include/c++/11/bits/basic_string.h **** 
 119:/usr/include/c++/11/bits/basic_string.h ****     private:
 120:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
 121:/usr/include/c++/11/bits/basic_string.h ****       // A helper type for avoiding boiler-plate.
 122:/usr/include/c++/11/bits/basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
 123:/usr/include/c++/11/bits/basic_string.h **** 
 124:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp, typename _Res>
 125:/usr/include/c++/11/bits/basic_string.h **** 	using _If_sv = enable_if_t<
 126:/usr/include/c++/11/bits/basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
 127:/usr/include/c++/11/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
 128:/usr/include/c++/11/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
 129:/usr/include/c++/11/bits/basic_string.h **** 	  _Res>;
 130:/usr/include/c++/11/bits/basic_string.h **** 
 131:/usr/include/c++/11/bits/basic_string.h ****       // Allows an implicit conversion to __sv_type.
 132:/usr/include/c++/11/bits/basic_string.h ****       static __sv_type
 133:/usr/include/c++/11/bits/basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
 134:/usr/include/c++/11/bits/basic_string.h ****       { return __svt; }
 135:/usr/include/c++/11/bits/basic_string.h **** 
 136:/usr/include/c++/11/bits/basic_string.h ****       // Wraps a string_view by explicit conversion and thus
 137:/usr/include/c++/11/bits/basic_string.h ****       // allows to add an internal constructor that does not
 138:/usr/include/c++/11/bits/basic_string.h ****       // participate in overload resolution when a string_view
 139:/usr/include/c++/11/bits/basic_string.h ****       // is provided.
 140:/usr/include/c++/11/bits/basic_string.h ****       struct __sv_wrapper
 141:/usr/include/c++/11/bits/basic_string.h ****       {
 142:/usr/include/c++/11/bits/basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
 143:/usr/include/c++/11/bits/basic_string.h **** 	__sv_type _M_sv;
 144:/usr/include/c++/11/bits/basic_string.h ****       };
 145:/usr/include/c++/11/bits/basic_string.h **** 
 146:/usr/include/c++/11/bits/basic_string.h ****       /**
 147:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
 148:/usr/include/c++/11/bits/basic_string.h ****        *          wrapper.
 149:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __svw  string view wrapper.
 150:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 151:/usr/include/c++/11/bits/basic_string.h ****        */
 152:/usr/include/c++/11/bits/basic_string.h ****       explicit
 153:/usr/include/c++/11/bits/basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
 154:/usr/include/c++/11/bits/basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
 155:/usr/include/c++/11/bits/basic_string.h **** #endif
 156:/usr/include/c++/11/bits/basic_string.h **** 
 157:/usr/include/c++/11/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 158:/usr/include/c++/11/bits/basic_string.h ****       struct _Alloc_hider : allocator_type // TODO check __is_final
 159:/usr/include/c++/11/bits/basic_string.h ****       {
 160:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus < 201103L
 161:/usr/include/c++/11/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
 162:/usr/include/c++/11/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 163:/usr/include/c++/11/bits/basic_string.h **** #else
 164:/usr/include/c++/11/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a)
 165:/usr/include/c++/11/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 166:/usr/include/c++/11/bits/basic_string.h **** 
 167:/usr/include/c++/11/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, _Alloc&& __a = _Alloc())
 168:/usr/include/c++/11/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 169:/usr/include/c++/11/bits/basic_string.h **** #endif
 170:/usr/include/c++/11/bits/basic_string.h **** 
 171:/usr/include/c++/11/bits/basic_string.h **** 	pointer _M_p; // The actual data.
 172:/usr/include/c++/11/bits/basic_string.h ****       };
 173:/usr/include/c++/11/bits/basic_string.h **** 
 174:/usr/include/c++/11/bits/basic_string.h ****       _Alloc_hider	_M_dataplus;
 175:/usr/include/c++/11/bits/basic_string.h ****       size_type		_M_string_length;
 176:/usr/include/c++/11/bits/basic_string.h **** 
 177:/usr/include/c++/11/bits/basic_string.h ****       enum { _S_local_capacity = 15 / sizeof(_CharT) };
 178:/usr/include/c++/11/bits/basic_string.h **** 
 179:/usr/include/c++/11/bits/basic_string.h ****       union
 180:/usr/include/c++/11/bits/basic_string.h ****       {
 181:/usr/include/c++/11/bits/basic_string.h **** 	_CharT           _M_local_buf[_S_local_capacity + 1];
 182:/usr/include/c++/11/bits/basic_string.h **** 	size_type        _M_allocated_capacity;
 183:/usr/include/c++/11/bits/basic_string.h ****       };
 184:/usr/include/c++/11/bits/basic_string.h **** 
 185:/usr/include/c++/11/bits/basic_string.h ****       void
 186:/usr/include/c++/11/bits/basic_string.h ****       _M_data(pointer __p)
 187:/usr/include/c++/11/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 188:/usr/include/c++/11/bits/basic_string.h **** 
 189:/usr/include/c++/11/bits/basic_string.h ****       void
 190:/usr/include/c++/11/bits/basic_string.h ****       _M_length(size_type __length)
 191:/usr/include/c++/11/bits/basic_string.h ****       { _M_string_length = __length; }
 192:/usr/include/c++/11/bits/basic_string.h **** 
 193:/usr/include/c++/11/bits/basic_string.h ****       pointer
 194:/usr/include/c++/11/bits/basic_string.h ****       _M_data() const
 195:/usr/include/c++/11/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 196:/usr/include/c++/11/bits/basic_string.h **** 
 197:/usr/include/c++/11/bits/basic_string.h ****       pointer
 198:/usr/include/c++/11/bits/basic_string.h ****       _M_local_data()
 199:/usr/include/c++/11/bits/basic_string.h ****       {
 200:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
 201:/usr/include/c++/11/bits/basic_string.h **** 	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
 202:/usr/include/c++/11/bits/basic_string.h **** #else
 203:/usr/include/c++/11/bits/basic_string.h **** 	return pointer(_M_local_buf);
 204:/usr/include/c++/11/bits/basic_string.h **** #endif
 205:/usr/include/c++/11/bits/basic_string.h ****       }
 206:/usr/include/c++/11/bits/basic_string.h **** 
 207:/usr/include/c++/11/bits/basic_string.h ****       const_pointer
 208:/usr/include/c++/11/bits/basic_string.h ****       _M_local_data() const
 209:/usr/include/c++/11/bits/basic_string.h ****       {
 210:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
 211:/usr/include/c++/11/bits/basic_string.h **** 	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
 212:/usr/include/c++/11/bits/basic_string.h **** #else
 213:/usr/include/c++/11/bits/basic_string.h **** 	return const_pointer(_M_local_buf);
 214:/usr/include/c++/11/bits/basic_string.h **** #endif
 215:/usr/include/c++/11/bits/basic_string.h ****       }
 216:/usr/include/c++/11/bits/basic_string.h **** 
 217:/usr/include/c++/11/bits/basic_string.h ****       void
 218:/usr/include/c++/11/bits/basic_string.h ****       _M_capacity(size_type __capacity)
 219:/usr/include/c++/11/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 220:/usr/include/c++/11/bits/basic_string.h **** 
 221:/usr/include/c++/11/bits/basic_string.h ****       void
 222:/usr/include/c++/11/bits/basic_string.h ****       _M_set_length(size_type __n)
 223:/usr/include/c++/11/bits/basic_string.h ****       {
 224:/usr/include/c++/11/bits/basic_string.h **** 	_M_length(__n);
 225:/usr/include/c++/11/bits/basic_string.h **** 	traits_type::assign(_M_data()[__n], _CharT());
 226:/usr/include/c++/11/bits/basic_string.h ****       }
 227:/usr/include/c++/11/bits/basic_string.h **** 
 228:/usr/include/c++/11/bits/basic_string.h ****       bool
 229:/usr/include/c++/11/bits/basic_string.h ****       _M_is_local() const
 230:/usr/include/c++/11/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 231:/usr/include/c++/11/bits/basic_string.h **** 
 232:/usr/include/c++/11/bits/basic_string.h ****       // Create & Destroy
 233:/usr/include/c++/11/bits/basic_string.h ****       pointer
 234:/usr/include/c++/11/bits/basic_string.h ****       _M_create(size_type&, size_type);
 235:/usr/include/c++/11/bits/basic_string.h **** 
 236:/usr/include/c++/11/bits/basic_string.h ****       void
 237:/usr/include/c++/11/bits/basic_string.h ****       _M_dispose()
 238:/usr/include/c++/11/bits/basic_string.h ****       {
 239:/usr/include/c++/11/bits/basic_string.h **** 	if (!_M_is_local())
 240:/usr/include/c++/11/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 241:/usr/include/c++/11/bits/basic_string.h ****       }
 242:/usr/include/c++/11/bits/basic_string.h **** 
 243:/usr/include/c++/11/bits/basic_string.h ****       void
 244:/usr/include/c++/11/bits/basic_string.h ****       _M_destroy(size_type __size) throw()
 245:/usr/include/c++/11/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 246:/usr/include/c++/11/bits/basic_string.h **** 
 247:/usr/include/c++/11/bits/basic_string.h ****       // _M_construct_aux is used to implement the 21.3.1 para 15 which
 248:/usr/include/c++/11/bits/basic_string.h ****       // requires special behaviour if _InIterator is an integral type
 249:/usr/include/c++/11/bits/basic_string.h ****       template<typename _InIterator>
 250:/usr/include/c++/11/bits/basic_string.h ****         void
 251:/usr/include/c++/11/bits/basic_string.h ****         _M_construct_aux(_InIterator __beg, _InIterator __end,
 252:/usr/include/c++/11/bits/basic_string.h **** 			 std::__false_type)
 253:/usr/include/c++/11/bits/basic_string.h **** 	{
 254:/usr/include/c++/11/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
 255:/usr/include/c++/11/bits/basic_string.h ****           _M_construct(__beg, __end, _Tag());
 256:/usr/include/c++/11/bits/basic_string.h **** 	}
 257:/usr/include/c++/11/bits/basic_string.h **** 
 258:/usr/include/c++/11/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 259:/usr/include/c++/11/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
 260:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Integer>
 261:/usr/include/c++/11/bits/basic_string.h ****         void
 262:/usr/include/c++/11/bits/basic_string.h ****         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)
 263:/usr/include/c++/11/bits/basic_string.h **** 	{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }
 264:/usr/include/c++/11/bits/basic_string.h **** 
 265:/usr/include/c++/11/bits/basic_string.h ****       void
 266:/usr/include/c++/11/bits/basic_string.h ****       _M_construct_aux_2(size_type __req, _CharT __c)
 267:/usr/include/c++/11/bits/basic_string.h ****       { _M_construct(__req, __c); }
 268:/usr/include/c++/11/bits/basic_string.h **** 
 269:/usr/include/c++/11/bits/basic_string.h ****       template<typename _InIterator>
 270:/usr/include/c++/11/bits/basic_string.h ****         void
 271:/usr/include/c++/11/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end)
 272:/usr/include/c++/11/bits/basic_string.h **** 	{
 273:/usr/include/c++/11/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
 274:/usr/include/c++/11/bits/basic_string.h **** 	  _M_construct_aux(__beg, __end, _Integral());
 275:/usr/include/c++/11/bits/basic_string.h ****         }
 276:/usr/include/c++/11/bits/basic_string.h **** 
 277:/usr/include/c++/11/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
 278:/usr/include/c++/11/bits/basic_string.h ****       template<typename _InIterator>
 279:/usr/include/c++/11/bits/basic_string.h ****         void
 280:/usr/include/c++/11/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end,
 281:/usr/include/c++/11/bits/basic_string.h **** 		     std::input_iterator_tag);
 282:/usr/include/c++/11/bits/basic_string.h **** 
 283:/usr/include/c++/11/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
 284:/usr/include/c++/11/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
 285:/usr/include/c++/11/bits/basic_string.h ****       template<typename _FwdIterator>
 286:/usr/include/c++/11/bits/basic_string.h ****         void
 287:/usr/include/c++/11/bits/basic_string.h ****         _M_construct(_FwdIterator __beg, _FwdIterator __end,
 288:/usr/include/c++/11/bits/basic_string.h **** 		     std::forward_iterator_tag);
 289:/usr/include/c++/11/bits/basic_string.h **** 
 290:/usr/include/c++/11/bits/basic_string.h ****       void
 291:/usr/include/c++/11/bits/basic_string.h ****       _M_construct(size_type __req, _CharT __c);
 292:/usr/include/c++/11/bits/basic_string.h **** 
 293:/usr/include/c++/11/bits/basic_string.h ****       allocator_type&
 294:/usr/include/c++/11/bits/basic_string.h ****       _M_get_allocator()
 295:/usr/include/c++/11/bits/basic_string.h ****       { return _M_dataplus; }
 296:/usr/include/c++/11/bits/basic_string.h **** 
 297:/usr/include/c++/11/bits/basic_string.h ****       const allocator_type&
 298:/usr/include/c++/11/bits/basic_string.h ****       _M_get_allocator() const
 299:/usr/include/c++/11/bits/basic_string.h ****       { return _M_dataplus; }
 300:/usr/include/c++/11/bits/basic_string.h **** 
 301:/usr/include/c++/11/bits/basic_string.h ****     private:
 302:/usr/include/c++/11/bits/basic_string.h **** 
 303:/usr/include/c++/11/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
 304:/usr/include/c++/11/bits/basic_string.h ****       // The explicit instantiations in misc-inst.cc require this due to
 305:/usr/include/c++/11/bits/basic_string.h ****       // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64063
 306:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp, bool _Requires =
 307:/usr/include/c++/11/bits/basic_string.h **** 	       !__are_same<_Tp, _CharT*>::__value
 308:/usr/include/c++/11/bits/basic_string.h **** 	       && !__are_same<_Tp, const _CharT*>::__value
 309:/usr/include/c++/11/bits/basic_string.h **** 	       && !__are_same<_Tp, iterator>::__value
 310:/usr/include/c++/11/bits/basic_string.h **** 	       && !__are_same<_Tp, const_iterator>::__value>
 311:/usr/include/c++/11/bits/basic_string.h **** 	struct __enable_if_not_native_iterator
 312:/usr/include/c++/11/bits/basic_string.h **** 	{ typedef basic_string& __type; };
 313:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
 314:/usr/include/c++/11/bits/basic_string.h **** 	struct __enable_if_not_native_iterator<_Tp, false> { };
 315:/usr/include/c++/11/bits/basic_string.h **** #endif
 316:/usr/include/c++/11/bits/basic_string.h **** 
 317:/usr/include/c++/11/bits/basic_string.h ****       size_type
 318:/usr/include/c++/11/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 319:/usr/include/c++/11/bits/basic_string.h ****       {
 320:/usr/include/c++/11/bits/basic_string.h **** 	if (__pos > this->size())
 321:/usr/include/c++/11/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 322:/usr/include/c++/11/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 323:/usr/include/c++/11/bits/basic_string.h **** 				   __s, __pos, this->size());
 324:/usr/include/c++/11/bits/basic_string.h **** 	return __pos;
 325:/usr/include/c++/11/bits/basic_string.h ****       }
 326:/usr/include/c++/11/bits/basic_string.h **** 
 327:/usr/include/c++/11/bits/basic_string.h ****       void
 328:/usr/include/c++/11/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 329:/usr/include/c++/11/bits/basic_string.h ****       {
 330:/usr/include/c++/11/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 331:/usr/include/c++/11/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 332:/usr/include/c++/11/bits/basic_string.h ****       }
 333:/usr/include/c++/11/bits/basic_string.h **** 
 334:/usr/include/c++/11/bits/basic_string.h **** 
 335:/usr/include/c++/11/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 336:/usr/include/c++/11/bits/basic_string.h ****       size_type
 337:/usr/include/c++/11/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
 338:/usr/include/c++/11/bits/basic_string.h ****       {
 339:/usr/include/c++/11/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 340:/usr/include/c++/11/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 341:/usr/include/c++/11/bits/basic_string.h ****       }
 342:/usr/include/c++/11/bits/basic_string.h **** 
 343:/usr/include/c++/11/bits/basic_string.h ****       // True if _Rep and source do not overlap.
 344:/usr/include/c++/11/bits/basic_string.h ****       bool
 345:/usr/include/c++/11/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 346:/usr/include/c++/11/bits/basic_string.h ****       {
 347:/usr/include/c++/11/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 348:/usr/include/c++/11/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 349:/usr/include/c++/11/bits/basic_string.h ****       }
 350:/usr/include/c++/11/bits/basic_string.h **** 
 351:/usr/include/c++/11/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
 352:/usr/include/c++/11/bits/basic_string.h ****       // traits_type::copy/move/assign.
 353:/usr/include/c++/11/bits/basic_string.h ****       static void
 354:/usr/include/c++/11/bits/basic_string.h ****       _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
 355:/usr/include/c++/11/bits/basic_string.h ****       {
 356:/usr/include/c++/11/bits/basic_string.h **** 	if (__n == 1)
 357:/usr/include/c++/11/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 358:/usr/include/c++/11/bits/basic_string.h **** 	else
 359:/usr/include/c++/11/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 360:/usr/include/c++/11/bits/basic_string.h ****       }
 361:/usr/include/c++/11/bits/basic_string.h **** 
 362:/usr/include/c++/11/bits/basic_string.h ****       static void
 363:/usr/include/c++/11/bits/basic_string.h ****       _S_move(_CharT* __d, const _CharT* __s, size_type __n)
 364:/usr/include/c++/11/bits/basic_string.h ****       {
 365:/usr/include/c++/11/bits/basic_string.h **** 	if (__n == 1)
 366:/usr/include/c++/11/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 367:/usr/include/c++/11/bits/basic_string.h **** 	else
 368:/usr/include/c++/11/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);
 369:/usr/include/c++/11/bits/basic_string.h ****       }
 370:/usr/include/c++/11/bits/basic_string.h **** 
 371:/usr/include/c++/11/bits/basic_string.h ****       static void
 372:/usr/include/c++/11/bits/basic_string.h ****       _S_assign(_CharT* __d, size_type __n, _CharT __c)
 373:/usr/include/c++/11/bits/basic_string.h ****       {
 374:/usr/include/c++/11/bits/basic_string.h **** 	if (__n == 1)
 375:/usr/include/c++/11/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
 376:/usr/include/c++/11/bits/basic_string.h **** 	else
 377:/usr/include/c++/11/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);
 378:/usr/include/c++/11/bits/basic_string.h ****       }
 379:/usr/include/c++/11/bits/basic_string.h **** 
 380:/usr/include/c++/11/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 381:/usr/include/c++/11/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
 382:/usr/include/c++/11/bits/basic_string.h ****       template<class _Iterator>
 383:/usr/include/c++/11/bits/basic_string.h ****         static void
 384:/usr/include/c++/11/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 385:/usr/include/c++/11/bits/basic_string.h ****         {
 386:/usr/include/c++/11/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
 387:/usr/include/c++/11/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 388:/usr/include/c++/11/bits/basic_string.h **** 	}
 389:/usr/include/c++/11/bits/basic_string.h **** 
 390:/usr/include/c++/11/bits/basic_string.h ****       static void
 391:/usr/include/c++/11/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 392:/usr/include/c++/11/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 393:/usr/include/c++/11/bits/basic_string.h **** 
 394:/usr/include/c++/11/bits/basic_string.h ****       static void
 395:/usr/include/c++/11/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 396:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 397:/usr/include/c++/11/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 398:/usr/include/c++/11/bits/basic_string.h **** 
 399:/usr/include/c++/11/bits/basic_string.h ****       static void
 400:/usr/include/c++/11/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 401:/usr/include/c++/11/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 402:/usr/include/c++/11/bits/basic_string.h **** 
 403:/usr/include/c++/11/bits/basic_string.h ****       static void
 404:/usr/include/c++/11/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 405:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 406:/usr/include/c++/11/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 407:/usr/include/c++/11/bits/basic_string.h **** 
 408:/usr/include/c++/11/bits/basic_string.h ****       static int
 409:/usr/include/c++/11/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 410:/usr/include/c++/11/bits/basic_string.h ****       {
 411:/usr/include/c++/11/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 412:/usr/include/c++/11/bits/basic_string.h **** 
 413:/usr/include/c++/11/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 414:/usr/include/c++/11/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 415:/usr/include/c++/11/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 416:/usr/include/c++/11/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 417:/usr/include/c++/11/bits/basic_string.h **** 	else
 418:/usr/include/c++/11/bits/basic_string.h **** 	  return int(__d);
 419:/usr/include/c++/11/bits/basic_string.h ****       }
 420:/usr/include/c++/11/bits/basic_string.h **** 
 421:/usr/include/c++/11/bits/basic_string.h ****       void
 422:/usr/include/c++/11/bits/basic_string.h ****       _M_assign(const basic_string&);
 423:/usr/include/c++/11/bits/basic_string.h **** 
 424:/usr/include/c++/11/bits/basic_string.h ****       void
 425:/usr/include/c++/11/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 426:/usr/include/c++/11/bits/basic_string.h **** 		size_type __len2);
 427:/usr/include/c++/11/bits/basic_string.h **** 
 428:/usr/include/c++/11/bits/basic_string.h ****       void
 429:/usr/include/c++/11/bits/basic_string.h ****       _M_erase(size_type __pos, size_type __n);
 430:/usr/include/c++/11/bits/basic_string.h **** 
 431:/usr/include/c++/11/bits/basic_string.h ****     public:
 432:/usr/include/c++/11/bits/basic_string.h ****       // Construct/copy/destroy:
 433:/usr/include/c++/11/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 434:/usr/include/c++/11/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 435:/usr/include/c++/11/bits/basic_string.h **** 
 436:/usr/include/c++/11/bits/basic_string.h ****       /**
 437:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
 438:/usr/include/c++/11/bits/basic_string.h ****        */
 439:/usr/include/c++/11/bits/basic_string.h ****       basic_string()
 440:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 441:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 442:/usr/include/c++/11/bits/basic_string.h ****       { _M_set_length(0); }
 443:/usr/include/c++/11/bits/basic_string.h **** 
 444:/usr/include/c++/11/bits/basic_string.h ****       /**
 445:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 446:/usr/include/c++/11/bits/basic_string.h ****        */
 447:/usr/include/c++/11/bits/basic_string.h ****       explicit
 448:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const _Alloc& __a) _GLIBCXX_NOEXCEPT
 449:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 450:/usr/include/c++/11/bits/basic_string.h ****       { _M_set_length(0); }
 451:/usr/include/c++/11/bits/basic_string.h **** 
 452:/usr/include/c++/11/bits/basic_string.h ****       /**
 453:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a __str.
 454:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string.
 455:/usr/include/c++/11/bits/basic_string.h ****        */
 456:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const basic_string& __str)
 457:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 458:/usr/include/c++/11/bits/basic_string.h **** 		    _Alloc_traits::_S_select_on_copy(__str._M_get_allocator()))
 459:/usr/include/c++/11/bits/basic_string.h ****       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
 460:/usr/include/c++/11/bits/basic_string.h **** 
 461:/usr/include/c++/11/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 462:/usr/include/c++/11/bits/basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
 463:/usr/include/c++/11/bits/basic_string.h ****       /**
 464:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 465:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string.
 466:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 467:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 468:/usr/include/c++/11/bits/basic_string.h ****        */
 469:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 470:/usr/include/c++/11/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 471:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 472:/usr/include/c++/11/bits/basic_string.h ****       {
 473:/usr/include/c++/11/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 474:/usr/include/c++/11/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 475:/usr/include/c++/11/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, npos));
 476:/usr/include/c++/11/bits/basic_string.h ****       }
 477:/usr/include/c++/11/bits/basic_string.h **** 
 478:/usr/include/c++/11/bits/basic_string.h ****       /**
 479:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 480:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string.
 481:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 482:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 483:/usr/include/c++/11/bits/basic_string.h ****        */
 484:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 485:/usr/include/c++/11/bits/basic_string.h **** 		   size_type __n)
 486:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 487:/usr/include/c++/11/bits/basic_string.h ****       {
 488:/usr/include/c++/11/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 489:/usr/include/c++/11/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 490:/usr/include/c++/11/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 491:/usr/include/c++/11/bits/basic_string.h ****       }
 492:/usr/include/c++/11/bits/basic_string.h **** 
 493:/usr/include/c++/11/bits/basic_string.h ****       /**
 494:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 495:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string.
 496:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 497:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 498:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 499:/usr/include/c++/11/bits/basic_string.h ****        */
 500:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 501:/usr/include/c++/11/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a)
 502:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 503:/usr/include/c++/11/bits/basic_string.h ****       {
 504:/usr/include/c++/11/bits/basic_string.h **** 	const _CharT* __start
 505:/usr/include/c++/11/bits/basic_string.h **** 	  = __str._M_data() + __str._M_check(__pos, "string::string");
 506:/usr/include/c++/11/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 507:/usr/include/c++/11/bits/basic_string.h ****       }
 508:/usr/include/c++/11/bits/basic_string.h **** 
 509:/usr/include/c++/11/bits/basic_string.h ****       /**
 510:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 511:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __s  Source character %array.
 512:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 513:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 514:/usr/include/c++/11/bits/basic_string.h ****        *
 515:/usr/include/c++/11/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 516:/usr/include/c++/11/bits/basic_string.h ****        *  has no special meaning.
 517:/usr/include/c++/11/bits/basic_string.h ****        */
 518:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 519:/usr/include/c++/11/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 520:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 521:/usr/include/c++/11/bits/basic_string.h ****       { _M_construct(__s, __s + __n); }
 522:/usr/include/c++/11/bits/basic_string.h **** 
 523:/usr/include/c++/11/bits/basic_string.h ****       /**
 524:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
 525:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __s  Source C string.
 526:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 527:/usr/include/c++/11/bits/basic_string.h ****        */
 528:/usr/include/c++/11/bits/basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 529:/usr/include/c++/11/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 530:/usr/include/c++/11/bits/basic_string.h ****       // 3076. basic_string CTAD ambiguity
 531:/usr/include/c++/11/bits/basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 532:/usr/include/c++/11/bits/basic_string.h **** #endif
 533:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 534:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 535:/usr/include/c++/11/bits/basic_string.h ****       {
 536:/usr/include/c++/11/bits/basic_string.h **** 	const _CharT* __end = __s ? __s + traits_type::length(__s)
 537:/usr/include/c++/11/bits/basic_string.h **** 	  // We just need a non-null pointer here to get an exception:
 538:/usr/include/c++/11/bits/basic_string.h **** 	  : reinterpret_cast<const _CharT*>(__alignof__(_CharT));
 539:/usr/include/c++/11/bits/basic_string.h **** 	_M_construct(__s, __end, random_access_iterator_tag());
 540:/usr/include/c++/11/bits/basic_string.h ****       }
 541:/usr/include/c++/11/bits/basic_string.h **** 
 542:/usr/include/c++/11/bits/basic_string.h ****       /**
 543:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
 544:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __n  Number of characters.
 545:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __c  Character to use.
 546:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 547:/usr/include/c++/11/bits/basic_string.h ****        */
 548:/usr/include/c++/11/bits/basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 549:/usr/include/c++/11/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 550:/usr/include/c++/11/bits/basic_string.h ****       // 3076. basic_string CTAD ambiguity
 551:/usr/include/c++/11/bits/basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 552:/usr/include/c++/11/bits/basic_string.h **** #endif
 553:/usr/include/c++/11/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
 554:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 555:/usr/include/c++/11/bits/basic_string.h ****       { _M_construct(__n, __c); }
 556:/usr/include/c++/11/bits/basic_string.h **** 
 557:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
 558:/usr/include/c++/11/bits/basic_string.h ****       /**
 559:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Move construct string.
 560:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string.
 561:/usr/include/c++/11/bits/basic_string.h ****        *
 562:/usr/include/c++/11/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 563:/usr/include/c++/11/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
 564:/usr/include/c++/11/bits/basic_string.h ****        */
 565:/usr/include/c++/11/bits/basic_string.h ****       basic_string(basic_string&& __str) noexcept
 566:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 567:/usr/include/c++/11/bits/basic_string.h ****       {
 568:/usr/include/c++/11/bits/basic_string.h **** 	if (__str._M_is_local())
 569:/usr/include/c++/11/bits/basic_string.h **** 	  {
 570:/usr/include/c++/11/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 571:/usr/include/c++/11/bits/basic_string.h **** 			      _S_local_capacity + 1);
 572:/usr/include/c++/11/bits/basic_string.h **** 	  }
 573:/usr/include/c++/11/bits/basic_string.h **** 	else
 574:/usr/include/c++/11/bits/basic_string.h **** 	  {
 575:/usr/include/c++/11/bits/basic_string.h **** 	    _M_data(__str._M_data());
 576:/usr/include/c++/11/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 577:/usr/include/c++/11/bits/basic_string.h **** 	  }
 578:/usr/include/c++/11/bits/basic_string.h **** 
 579:/usr/include/c++/11/bits/basic_string.h **** 	// Must use _M_length() here not _M_set_length() because
 580:/usr/include/c++/11/bits/basic_string.h **** 	// basic_stringbuf relies on writing into unallocated capacity so
 581:/usr/include/c++/11/bits/basic_string.h **** 	// we mess up the contents if we put a '\0' in the string.
 582:/usr/include/c++/11/bits/basic_string.h **** 	_M_length(__str.length());
 583:/usr/include/c++/11/bits/basic_string.h **** 	__str._M_data(__str._M_local_data());
 584:/usr/include/c++/11/bits/basic_string.h **** 	__str._M_set_length(0);
 585:/usr/include/c++/11/bits/basic_string.h ****       }
 586:/usr/include/c++/11/bits/basic_string.h **** 
 587:/usr/include/c++/11/bits/basic_string.h ****       /**
 588:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
 589:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 590:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 591:/usr/include/c++/11/bits/basic_string.h ****        */
 592:/usr/include/c++/11/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
 593:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 594:/usr/include/c++/11/bits/basic_string.h ****       { _M_construct(__l.begin(), __l.end()); }
 595:/usr/include/c++/11/bits/basic_string.h **** 
 596:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
 597:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 598:/usr/include/c++/11/bits/basic_string.h ****       { _M_construct(__str.begin(), __str.end()); }
 599:/usr/include/c++/11/bits/basic_string.h **** 
 600:/usr/include/c++/11/bits/basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
 601:/usr/include/c++/11/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_always_equal())
 602:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 603:/usr/include/c++/11/bits/basic_string.h ****       {
 604:/usr/include/c++/11/bits/basic_string.h **** 	if (__str._M_is_local())
 605:/usr/include/c++/11/bits/basic_string.h **** 	  {
 606:/usr/include/c++/11/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 607:/usr/include/c++/11/bits/basic_string.h **** 			      _S_local_capacity + 1);
 608:/usr/include/c++/11/bits/basic_string.h **** 	    _M_length(__str.length());
 609:/usr/include/c++/11/bits/basic_string.h **** 	    __str._M_set_length(0);
 610:/usr/include/c++/11/bits/basic_string.h **** 	  }
 611:/usr/include/c++/11/bits/basic_string.h **** 	else if (_Alloc_traits::_S_always_equal()
 612:/usr/include/c++/11/bits/basic_string.h **** 	    || __str.get_allocator() == __a)
 613:/usr/include/c++/11/bits/basic_string.h **** 	  {
 614:/usr/include/c++/11/bits/basic_string.h **** 	    _M_data(__str._M_data());
 615:/usr/include/c++/11/bits/basic_string.h **** 	    _M_length(__str.length());
 616:/usr/include/c++/11/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 617:/usr/include/c++/11/bits/basic_string.h **** 	    __str._M_data(__str._M_local_buf);
 618:/usr/include/c++/11/bits/basic_string.h **** 	    __str._M_set_length(0);
 619:/usr/include/c++/11/bits/basic_string.h **** 	  }
 620:/usr/include/c++/11/bits/basic_string.h **** 	else
 621:/usr/include/c++/11/bits/basic_string.h **** 	  _M_construct(__str.begin(), __str.end());
 622:/usr/include/c++/11/bits/basic_string.h ****       }
 623:/usr/include/c++/11/bits/basic_string.h **** 
 624:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
 625:/usr/include/c++/11/bits/basic_string.h **** 
 626:/usr/include/c++/11/bits/basic_string.h ****       /**
 627:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
 628:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __beg  Start of range.
 629:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __end  End of range.
 630:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 631:/usr/include/c++/11/bits/basic_string.h ****        */
 632:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
 633:/usr/include/c++/11/bits/basic_string.h ****       template<typename _InputIterator,
 634:/usr/include/c++/11/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 635:/usr/include/c++/11/bits/basic_string.h **** #else
 636:/usr/include/c++/11/bits/basic_string.h ****       template<typename _InputIterator>
 637:/usr/include/c++/11/bits/basic_string.h **** #endif
 638:/usr/include/c++/11/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 639:/usr/include/c++/11/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 640:/usr/include/c++/11/bits/basic_string.h **** 	: _M_dataplus(_M_local_data(), __a)
 641:/usr/include/c++/11/bits/basic_string.h **** 	{ _M_construct(__beg, __end); }
 642:/usr/include/c++/11/bits/basic_string.h **** 
 643:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
 644:/usr/include/c++/11/bits/basic_string.h ****       /**
 645:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
 646:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __t   Source object convertible to string view.
 647:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
 648:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
 649:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a   Allocator to use.
 650:/usr/include/c++/11/bits/basic_string.h ****        */
 651:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp,
 652:/usr/include/c++/11/bits/basic_string.h **** 	       typename = enable_if_t<is_convertible_v<const _Tp&, __sv_type>>>
 653:/usr/include/c++/11/bits/basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
 654:/usr/include/c++/11/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 655:/usr/include/c++/11/bits/basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
 656:/usr/include/c++/11/bits/basic_string.h **** 
 657:/usr/include/c++/11/bits/basic_string.h ****       /**
 658:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string from a string_view.
 659:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __t  Source object convertible to string view.
 660:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 661:/usr/include/c++/11/bits/basic_string.h ****        */
 662:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 663:/usr/include/c++/11/bits/basic_string.h **** 	explicit
 664:/usr/include/c++/11/bits/basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
 665:/usr/include/c++/11/bits/basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
 666:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
 667:/usr/include/c++/11/bits/basic_string.h **** 
 668:/usr/include/c++/11/bits/basic_string.h ****       /**
 669:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Destroy the string instance.
 670:/usr/include/c++/11/bits/basic_string.h ****        */
 671:/usr/include/c++/11/bits/basic_string.h ****       ~basic_string()
 672:/usr/include/c++/11/bits/basic_string.h ****       { _M_dispose(); }
 673:/usr/include/c++/11/bits/basic_string.h **** 
 674:/usr/include/c++/11/bits/basic_string.h ****       /**
 675:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 676:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string.
 677:/usr/include/c++/11/bits/basic_string.h ****        */
 678:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
 679:/usr/include/c++/11/bits/basic_string.h ****       operator=(const basic_string& __str)
 680:/usr/include/c++/11/bits/basic_string.h ****       {
 681:/usr/include/c++/11/bits/basic_string.h **** 	return this->assign(__str);
 682:/usr/include/c++/11/bits/basic_string.h ****       }
 683:/usr/include/c++/11/bits/basic_string.h **** 
 684:/usr/include/c++/11/bits/basic_string.h ****       /**
 685:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 686:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
 687:/usr/include/c++/11/bits/basic_string.h ****        */
 688:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
 689:/usr/include/c++/11/bits/basic_string.h ****       operator=(const _CharT* __s)
 690:/usr/include/c++/11/bits/basic_string.h ****       { return this->assign(__s); }
 691:/usr/include/c++/11/bits/basic_string.h **** 
 692:/usr/include/c++/11/bits/basic_string.h ****       /**
 693:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
 694:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __c  Source character.
 695:/usr/include/c++/11/bits/basic_string.h ****        *
 696:/usr/include/c++/11/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
 697:/usr/include/c++/11/bits/basic_string.h ****        *  (*this)[0] == @a c.
 698:/usr/include/c++/11/bits/basic_string.h ****        */
 699:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
 700:/usr/include/c++/11/bits/basic_string.h ****       operator=(_CharT __c)
 701:/usr/include/c++/11/bits/basic_string.h ****       {
 702:/usr/include/c++/11/bits/basic_string.h **** 	this->assign(1, __c);
 703:/usr/include/c++/11/bits/basic_string.h **** 	return *this;
 704:/usr/include/c++/11/bits/basic_string.h ****       }
 705:/usr/include/c++/11/bits/basic_string.h **** 
 706:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
 707:/usr/include/c++/11/bits/basic_string.h ****       /**
 708:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 709:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string.
 710:/usr/include/c++/11/bits/basic_string.h ****        *
 711:/usr/include/c++/11/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 712:/usr/include/c++/11/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
 713:/usr/include/c++/11/bits/basic_string.h ****        */
 714:/usr/include/c++/11/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 715:/usr/include/c++/11/bits/basic_string.h ****       // 2063. Contradictory requirements for string move assignment
 716:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
 717:/usr/include/c++/11/bits/basic_string.h ****       operator=(basic_string&& __str)
 718:/usr/include/c++/11/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 719:/usr/include/c++/11/bits/basic_string.h ****       {
 720:/usr/include/c++/11/bits/basic_string.h **** 	if (!_M_is_local() && _Alloc_traits::_S_propagate_on_move_assign()
 721:/usr/include/c++/11/bits/basic_string.h **** 	    && !_Alloc_traits::_S_always_equal()
 722:/usr/include/c++/11/bits/basic_string.h **** 	    && _M_get_allocator() != __str._M_get_allocator())
 723:/usr/include/c++/11/bits/basic_string.h **** 	  {
 724:/usr/include/c++/11/bits/basic_string.h **** 	    // Destroy existing storage before replacing allocator.
 725:/usr/include/c++/11/bits/basic_string.h **** 	    _M_destroy(_M_allocated_capacity);
 726:/usr/include/c++/11/bits/basic_string.h **** 	    _M_data(_M_local_data());
 727:/usr/include/c++/11/bits/basic_string.h **** 	    _M_set_length(0);
 728:/usr/include/c++/11/bits/basic_string.h **** 	  }
 729:/usr/include/c++/11/bits/basic_string.h **** 	// Replace allocator if POCMA is true.
 730:/usr/include/c++/11/bits/basic_string.h **** 	std::__alloc_on_move(_M_get_allocator(), __str._M_get_allocator());
 731:/usr/include/c++/11/bits/basic_string.h **** 
 732:/usr/include/c++/11/bits/basic_string.h **** 	if (__str._M_is_local())
 733:/usr/include/c++/11/bits/basic_string.h **** 	  {
 734:/usr/include/c++/11/bits/basic_string.h **** 	    // We've always got room for a short string, just copy it
 735:/usr/include/c++/11/bits/basic_string.h **** 	    // (unless this is a self-move, because that would violate the
 736:/usr/include/c++/11/bits/basic_string.h **** 	    // char_traits::copy precondition that the ranges don't overlap).
 737:/usr/include/c++/11/bits/basic_string.h **** 	    if (__builtin_expect(std::__addressof(__str) != this, true))
 738:/usr/include/c++/11/bits/basic_string.h **** 	      {
 739:/usr/include/c++/11/bits/basic_string.h **** 		if (__str.size())
 740:/usr/include/c++/11/bits/basic_string.h **** 		  this->_S_copy(_M_data(), __str._M_data(), __str.size());
 741:/usr/include/c++/11/bits/basic_string.h **** 		_M_set_length(__str.size());
 742:/usr/include/c++/11/bits/basic_string.h **** 	      }
 743:/usr/include/c++/11/bits/basic_string.h **** 	  }
 744:/usr/include/c++/11/bits/basic_string.h **** 	else if (_Alloc_traits::_S_propagate_on_move_assign()
 745:/usr/include/c++/11/bits/basic_string.h **** 	    || _Alloc_traits::_S_always_equal()
 746:/usr/include/c++/11/bits/basic_string.h **** 	    || _M_get_allocator() == __str._M_get_allocator())
 747:/usr/include/c++/11/bits/basic_string.h **** 	  {
 748:/usr/include/c++/11/bits/basic_string.h **** 	    // Just move the allocated pointer, our allocator can free it.
 749:/usr/include/c++/11/bits/basic_string.h **** 	    pointer __data = nullptr;
 750:/usr/include/c++/11/bits/basic_string.h **** 	    size_type __capacity;
 751:/usr/include/c++/11/bits/basic_string.h **** 	    if (!_M_is_local())
 752:/usr/include/c++/11/bits/basic_string.h **** 	      {
 753:/usr/include/c++/11/bits/basic_string.h **** 		if (_Alloc_traits::_S_always_equal())
 754:/usr/include/c++/11/bits/basic_string.h **** 		  {
 755:/usr/include/c++/11/bits/basic_string.h **** 		    // __str can reuse our existing storage.
 756:/usr/include/c++/11/bits/basic_string.h **** 		    __data = _M_data();
 757:/usr/include/c++/11/bits/basic_string.h **** 		    __capacity = _M_allocated_capacity;
 758:/usr/include/c++/11/bits/basic_string.h **** 		  }
 759:/usr/include/c++/11/bits/basic_string.h **** 		else // __str can't use it, so free it.
 760:/usr/include/c++/11/bits/basic_string.h **** 		  _M_destroy(_M_allocated_capacity);
 761:/usr/include/c++/11/bits/basic_string.h **** 	      }
 762:/usr/include/c++/11/bits/basic_string.h **** 
 763:/usr/include/c++/11/bits/basic_string.h **** 	    _M_data(__str._M_data());
 764:/usr/include/c++/11/bits/basic_string.h **** 	    _M_length(__str.length());
 765:/usr/include/c++/11/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 766:/usr/include/c++/11/bits/basic_string.h **** 	    if (__data)
 767:/usr/include/c++/11/bits/basic_string.h **** 	      {
 768:/usr/include/c++/11/bits/basic_string.h **** 		__str._M_data(__data);
 769:/usr/include/c++/11/bits/basic_string.h **** 		__str._M_capacity(__capacity);
 770:/usr/include/c++/11/bits/basic_string.h **** 	      }
 771:/usr/include/c++/11/bits/basic_string.h **** 	    else
 772:/usr/include/c++/11/bits/basic_string.h **** 	      __str._M_data(__str._M_local_buf);
 773:/usr/include/c++/11/bits/basic_string.h **** 	  }
 774:/usr/include/c++/11/bits/basic_string.h **** 	else // Need to do a deep copy
 775:/usr/include/c++/11/bits/basic_string.h **** 	  assign(__str);
 776:/usr/include/c++/11/bits/basic_string.h **** 	__str.clear();
 777:/usr/include/c++/11/bits/basic_string.h **** 	return *this;
 778:/usr/include/c++/11/bits/basic_string.h ****       }
 779:/usr/include/c++/11/bits/basic_string.h **** 
 780:/usr/include/c++/11/bits/basic_string.h ****       /**
 781:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 782:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
 783:/usr/include/c++/11/bits/basic_string.h ****        */
 784:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
 785:/usr/include/c++/11/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
 786:/usr/include/c++/11/bits/basic_string.h ****       {
 787:/usr/include/c++/11/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
 788:/usr/include/c++/11/bits/basic_string.h **** 	return *this;
 789:/usr/include/c++/11/bits/basic_string.h ****       }
 790:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
 791:/usr/include/c++/11/bits/basic_string.h **** 
 792:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
 793:/usr/include/c++/11/bits/basic_string.h ****       /**
 794:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
 795:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __svt  An object convertible to string_view.
 796:/usr/include/c++/11/bits/basic_string.h ****        */
 797:/usr/include/c++/11/bits/basic_string.h ****      template<typename _Tp>
 798:/usr/include/c++/11/bits/basic_string.h ****        _If_sv<_Tp, basic_string&>
 799:/usr/include/c++/11/bits/basic_string.h ****        operator=(const _Tp& __svt)
 800:/usr/include/c++/11/bits/basic_string.h ****        { return this->assign(__svt); }
 801:/usr/include/c++/11/bits/basic_string.h **** 
 802:/usr/include/c++/11/bits/basic_string.h ****       /**
 803:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Convert to a string_view.
 804:/usr/include/c++/11/bits/basic_string.h ****        *  @return A string_view.
 805:/usr/include/c++/11/bits/basic_string.h ****        */
 806:/usr/include/c++/11/bits/basic_string.h ****       operator __sv_type() const noexcept
 807:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(data(), size()); }
 808:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
 809:/usr/include/c++/11/bits/basic_string.h **** 
 810:/usr/include/c++/11/bits/basic_string.h ****       // Iterators:
 811:/usr/include/c++/11/bits/basic_string.h ****       /**
 812:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 813:/usr/include/c++/11/bits/basic_string.h ****        *  the %string.
 814:/usr/include/c++/11/bits/basic_string.h ****        */
 815:/usr/include/c++/11/bits/basic_string.h ****       iterator
 816:/usr/include/c++/11/bits/basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 817:/usr/include/c++/11/bits/basic_string.h ****       { return iterator(_M_data()); }
 818:/usr/include/c++/11/bits/basic_string.h **** 
 819:/usr/include/c++/11/bits/basic_string.h ****       /**
 820:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 821:/usr/include/c++/11/bits/basic_string.h ****        *  character in the %string.
 822:/usr/include/c++/11/bits/basic_string.h ****        */
 823:/usr/include/c++/11/bits/basic_string.h ****       const_iterator
 824:/usr/include/c++/11/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 825:/usr/include/c++/11/bits/basic_string.h ****       { return const_iterator(_M_data()); }
 826:/usr/include/c++/11/bits/basic_string.h **** 
 827:/usr/include/c++/11/bits/basic_string.h ****       /**
 828:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
 829:/usr/include/c++/11/bits/basic_string.h ****        *  character in the %string.
 830:/usr/include/c++/11/bits/basic_string.h ****        */
 831:/usr/include/c++/11/bits/basic_string.h ****       iterator
 832:/usr/include/c++/11/bits/basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 833:/usr/include/c++/11/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
 834:/usr/include/c++/11/bits/basic_string.h **** 
 835:/usr/include/c++/11/bits/basic_string.h ****       /**
 836:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 837:/usr/include/c++/11/bits/basic_string.h ****        *  last character in the %string.
 838:/usr/include/c++/11/bits/basic_string.h ****        */
 839:/usr/include/c++/11/bits/basic_string.h ****       const_iterator
 840:/usr/include/c++/11/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 841:/usr/include/c++/11/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 842:/usr/include/c++/11/bits/basic_string.h **** 
 843:/usr/include/c++/11/bits/basic_string.h ****       /**
 844:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 845:/usr/include/c++/11/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 846:/usr/include/c++/11/bits/basic_string.h ****        *  order.
 847:/usr/include/c++/11/bits/basic_string.h ****        */
 848:/usr/include/c++/11/bits/basic_string.h ****       reverse_iterator
 849:/usr/include/c++/11/bits/basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 850:/usr/include/c++/11/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
 851:/usr/include/c++/11/bits/basic_string.h **** 
 852:/usr/include/c++/11/bits/basic_string.h ****       /**
 853:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 854:/usr/include/c++/11/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 855:/usr/include/c++/11/bits/basic_string.h ****        *  reverse element order.
 856:/usr/include/c++/11/bits/basic_string.h ****        */
 857:/usr/include/c++/11/bits/basic_string.h ****       const_reverse_iterator
 858:/usr/include/c++/11/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 859:/usr/include/c++/11/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 860:/usr/include/c++/11/bits/basic_string.h **** 
 861:/usr/include/c++/11/bits/basic_string.h ****       /**
 862:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 863:/usr/include/c++/11/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 864:/usr/include/c++/11/bits/basic_string.h ****        *  element order.
 865:/usr/include/c++/11/bits/basic_string.h ****        */
 866:/usr/include/c++/11/bits/basic_string.h ****       reverse_iterator
 867:/usr/include/c++/11/bits/basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
 868:/usr/include/c++/11/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
 869:/usr/include/c++/11/bits/basic_string.h **** 
 870:/usr/include/c++/11/bits/basic_string.h ****       /**
 871:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 872:/usr/include/c++/11/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 873:/usr/include/c++/11/bits/basic_string.h ****        *  is done in reverse element order.
 874:/usr/include/c++/11/bits/basic_string.h ****        */
 875:/usr/include/c++/11/bits/basic_string.h ****       const_reverse_iterator
 876:/usr/include/c++/11/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 877:/usr/include/c++/11/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 878:/usr/include/c++/11/bits/basic_string.h **** 
 879:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
 880:/usr/include/c++/11/bits/basic_string.h ****       /**
 881:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 882:/usr/include/c++/11/bits/basic_string.h ****        *  character in the %string.
 883:/usr/include/c++/11/bits/basic_string.h ****        */
 884:/usr/include/c++/11/bits/basic_string.h ****       const_iterator
 885:/usr/include/c++/11/bits/basic_string.h ****       cbegin() const noexcept
 886:/usr/include/c++/11/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
 887:/usr/include/c++/11/bits/basic_string.h **** 
 888:/usr/include/c++/11/bits/basic_string.h ****       /**
 889:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 890:/usr/include/c++/11/bits/basic_string.h ****        *  last character in the %string.
 891:/usr/include/c++/11/bits/basic_string.h ****        */
 892:/usr/include/c++/11/bits/basic_string.h ****       const_iterator
 893:/usr/include/c++/11/bits/basic_string.h ****       cend() const noexcept
 894:/usr/include/c++/11/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
 895:/usr/include/c++/11/bits/basic_string.h **** 
 896:/usr/include/c++/11/bits/basic_string.h ****       /**
 897:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 898:/usr/include/c++/11/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 899:/usr/include/c++/11/bits/basic_string.h ****        *  reverse element order.
 900:/usr/include/c++/11/bits/basic_string.h ****        */
 901:/usr/include/c++/11/bits/basic_string.h ****       const_reverse_iterator
 902:/usr/include/c++/11/bits/basic_string.h ****       crbegin() const noexcept
 903:/usr/include/c++/11/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 904:/usr/include/c++/11/bits/basic_string.h **** 
 905:/usr/include/c++/11/bits/basic_string.h ****       /**
 906:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 907:/usr/include/c++/11/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 908:/usr/include/c++/11/bits/basic_string.h ****        *  is done in reverse element order.
 909:/usr/include/c++/11/bits/basic_string.h ****        */
 910:/usr/include/c++/11/bits/basic_string.h ****       const_reverse_iterator
 911:/usr/include/c++/11/bits/basic_string.h ****       crend() const noexcept
 912:/usr/include/c++/11/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 913:/usr/include/c++/11/bits/basic_string.h **** #endif
 914:/usr/include/c++/11/bits/basic_string.h **** 
 915:/usr/include/c++/11/bits/basic_string.h ****     public:
 916:/usr/include/c++/11/bits/basic_string.h ****       // Capacity:
 917:/usr/include/c++/11/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 918:/usr/include/c++/11/bits/basic_string.h ****       ///  null-termination.
 919:/usr/include/c++/11/bits/basic_string.h ****       size_type
 920:/usr/include/c++/11/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 921:/usr/include/c++/11/bits/basic_string.h ****       { return _M_string_length; }
 922:/usr/include/c++/11/bits/basic_string.h **** 
 923:/usr/include/c++/11/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 924:/usr/include/c++/11/bits/basic_string.h ****       ///  null-termination.
 925:/usr/include/c++/11/bits/basic_string.h ****       size_type
 926:/usr/include/c++/11/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 927:/usr/include/c++/11/bits/basic_string.h ****       { return _M_string_length; }
 928:/usr/include/c++/11/bits/basic_string.h **** 
 929:/usr/include/c++/11/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
 930:/usr/include/c++/11/bits/basic_string.h ****       size_type
 931:/usr/include/c++/11/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 932:/usr/include/c++/11/bits/basic_string.h ****       { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
 933:/usr/include/c++/11/bits/basic_string.h **** 
 934:/usr/include/c++/11/bits/basic_string.h ****       /**
 935:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 936:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 937:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
 938:/usr/include/c++/11/bits/basic_string.h ****        *
 939:/usr/include/c++/11/bits/basic_string.h ****        *  This function will %resize the %string to the specified
 940:/usr/include/c++/11/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
 941:/usr/include/c++/11/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
 942:/usr/include/c++/11/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 943:/usr/include/c++/11/bits/basic_string.h ****        */
 944:/usr/include/c++/11/bits/basic_string.h ****       void
 945:/usr/include/c++/11/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
 946:/usr/include/c++/11/bits/basic_string.h **** 
 947:/usr/include/c++/11/bits/basic_string.h ****       /**
 948:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 949:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 950:/usr/include/c++/11/bits/basic_string.h ****        *
 951:/usr/include/c++/11/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
 952:/usr/include/c++/11/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 953:/usr/include/c++/11/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 954:/usr/include/c++/11/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
 955:/usr/include/c++/11/bits/basic_string.h ****        *  setting them to 0.
 956:/usr/include/c++/11/bits/basic_string.h ****        */
 957:/usr/include/c++/11/bits/basic_string.h ****       void
 958:/usr/include/c++/11/bits/basic_string.h ****       resize(size_type __n)
 959:/usr/include/c++/11/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
 960:/usr/include/c++/11/bits/basic_string.h **** 
 961:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
 962:/usr/include/c++/11/bits/basic_string.h **** #pragma GCC diagnostic push
 963:/usr/include/c++/11/bits/basic_string.h **** #pragma GCC diagnostic ignored "-Wdeprecated-declarations"
 964:/usr/include/c++/11/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 965:/usr/include/c++/11/bits/basic_string.h ****       void
 966:/usr/include/c++/11/bits/basic_string.h ****       shrink_to_fit() noexcept
 967:/usr/include/c++/11/bits/basic_string.h ****       { reserve(); }
 968:/usr/include/c++/11/bits/basic_string.h **** #pragma GCC diagnostic pop
 969:/usr/include/c++/11/bits/basic_string.h **** #endif
 970:/usr/include/c++/11/bits/basic_string.h **** 
 971:/usr/include/c++/11/bits/basic_string.h ****       /**
 972:/usr/include/c++/11/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
 973:/usr/include/c++/11/bits/basic_string.h ****        *  before needing to allocate more memory.
 974:/usr/include/c++/11/bits/basic_string.h ****        */
 975:/usr/include/c++/11/bits/basic_string.h ****       size_type
 976:/usr/include/c++/11/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 977:/usr/include/c++/11/bits/basic_string.h ****       {
 978:/usr/include/c++/11/bits/basic_string.h **** 	return _M_is_local() ? size_type(_S_local_capacity)
 979:/usr/include/c++/11/bits/basic_string.h **** 	                     : _M_allocated_capacity;
 980:/usr/include/c++/11/bits/basic_string.h ****       }
 981:/usr/include/c++/11/bits/basic_string.h **** 
 982:/usr/include/c++/11/bits/basic_string.h ****       /**
 983:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 984:/usr/include/c++/11/bits/basic_string.h ****        *          characters.
 985:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
 986:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
 987:/usr/include/c++/11/bits/basic_string.h ****        *
 988:/usr/include/c++/11/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
 989:/usr/include/c++/11/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
 990:/usr/include/c++/11/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
 991:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.
 992:/usr/include/c++/11/bits/basic_string.h ****        *
 993:/usr/include/c++/11/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
 994:/usr/include/c++/11/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
 995:/usr/include/c++/11/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
 996:/usr/include/c++/11/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
 997:/usr/include/c++/11/bits/basic_string.h ****        *  data.
 998:/usr/include/c++/11/bits/basic_string.h ****        */
 999:/usr/include/c++/11/bits/basic_string.h ****       void
1000:/usr/include/c++/11/bits/basic_string.h ****       reserve(size_type __res_arg);
1001:/usr/include/c++/11/bits/basic_string.h **** 
1002:/usr/include/c++/11/bits/basic_string.h ****       /**
1003:/usr/include/c++/11/bits/basic_string.h ****        *  Equivalent to shrink_to_fit().
1004:/usr/include/c++/11/bits/basic_string.h ****        */
1005:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus > 201703L
1006:/usr/include/c++/11/bits/basic_string.h ****       [[deprecated("use shrink_to_fit() instead")]]
1007:/usr/include/c++/11/bits/basic_string.h **** #endif
1008:/usr/include/c++/11/bits/basic_string.h ****       void
1009:/usr/include/c++/11/bits/basic_string.h ****       reserve();
1010:/usr/include/c++/11/bits/basic_string.h **** 
1011:/usr/include/c++/11/bits/basic_string.h ****       /**
1012:/usr/include/c++/11/bits/basic_string.h ****        *  Erases the string, making it empty.
1013:/usr/include/c++/11/bits/basic_string.h ****        */
1014:/usr/include/c++/11/bits/basic_string.h ****       void
1015:/usr/include/c++/11/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
1016:/usr/include/c++/11/bits/basic_string.h ****       { _M_set_length(0); }
1017:/usr/include/c++/11/bits/basic_string.h **** 
1018:/usr/include/c++/11/bits/basic_string.h ****       /**
1019:/usr/include/c++/11/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
1020:/usr/include/c++/11/bits/basic_string.h ****        *  <code>*this == ""</code>.
1021:/usr/include/c++/11/bits/basic_string.h ****        */
1022:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NODISCARD bool
1023:/usr/include/c++/11/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
1024:/usr/include/c++/11/bits/basic_string.h ****       { return this->size() == 0; }
1025:/usr/include/c++/11/bits/basic_string.h **** 
1026:/usr/include/c++/11/bits/basic_string.h ****       // Element access:
1027:/usr/include/c++/11/bits/basic_string.h ****       /**
1028:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1029:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
1030:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
1031:/usr/include/c++/11/bits/basic_string.h ****        *
1032:/usr/include/c++/11/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
1033:/usr/include/c++/11/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
1034:/usr/include/c++/11/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1035:/usr/include/c++/11/bits/basic_string.h ****        *  see at().)
1036:/usr/include/c++/11/bits/basic_string.h ****        */
1037:/usr/include/c++/11/bits/basic_string.h ****       const_reference
1038:/usr/include/c++/11/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
1039:/usr/include/c++/11/bits/basic_string.h ****       {
1040:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
1041:/usr/include/c++/11/bits/basic_string.h **** 	return _M_data()[__pos];
1042:/usr/include/c++/11/bits/basic_string.h ****       }
1043:/usr/include/c++/11/bits/basic_string.h **** 
1044:/usr/include/c++/11/bits/basic_string.h ****       /**
1045:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1046:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
1047:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Read/write reference to the character.
1048:/usr/include/c++/11/bits/basic_string.h ****        *
1049:/usr/include/c++/11/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
1050:/usr/include/c++/11/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
1051:/usr/include/c++/11/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1052:/usr/include/c++/11/bits/basic_string.h ****        *  see at().)
1053:/usr/include/c++/11/bits/basic_string.h ****        */
1054:/usr/include/c++/11/bits/basic_string.h ****       reference
1055:/usr/include/c++/11/bits/basic_string.h ****       operator[](size_type __pos)
1056:/usr/include/c++/11/bits/basic_string.h ****       {
1057:/usr/include/c++/11/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
1058:/usr/include/c++/11/bits/basic_string.h **** 	// and in C++11 mode.
1059:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
1060:/usr/include/c++/11/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
1061:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
1062:/usr/include/c++/11/bits/basic_string.h **** 	return _M_data()[__pos];
1063:/usr/include/c++/11/bits/basic_string.h ****       }
1064:/usr/include/c++/11/bits/basic_string.h **** 
1065:/usr/include/c++/11/bits/basic_string.h ****       /**
1066:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1067:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n The index of the character to access.
1068:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
1069:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1070:/usr/include/c++/11/bits/basic_string.h ****        *
1071:/usr/include/c++/11/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
1072:/usr/include/c++/11/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
1073:/usr/include/c++/11/bits/basic_string.h ****        *  throws out_of_range if the check fails.
1074:/usr/include/c++/11/bits/basic_string.h ****        */
1075:/usr/include/c++/11/bits/basic_string.h ****       const_reference
1076:/usr/include/c++/11/bits/basic_string.h ****       at(size_type __n) const
1077:/usr/include/c++/11/bits/basic_string.h ****       {
1078:/usr/include/c++/11/bits/basic_string.h **** 	if (__n >= this->size())
1079:/usr/include/c++/11/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1080:/usr/include/c++/11/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
1081:/usr/include/c++/11/bits/basic_string.h **** 				       "(which is %zu)"),
1082:/usr/include/c++/11/bits/basic_string.h **** 				   __n, this->size());
1083:/usr/include/c++/11/bits/basic_string.h **** 	return _M_data()[__n];
1084:/usr/include/c++/11/bits/basic_string.h ****       }
1085:/usr/include/c++/11/bits/basic_string.h **** 
1086:/usr/include/c++/11/bits/basic_string.h ****       /**
1087:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1088:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n The index of the character to access.
1089:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Read/write reference to the character.
1090:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1091:/usr/include/c++/11/bits/basic_string.h ****        *
1092:/usr/include/c++/11/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
1093:/usr/include/c++/11/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
1094:/usr/include/c++/11/bits/basic_string.h ****        *  throws out_of_range if the check fails.
1095:/usr/include/c++/11/bits/basic_string.h ****        */
1096:/usr/include/c++/11/bits/basic_string.h ****       reference
1097:/usr/include/c++/11/bits/basic_string.h ****       at(size_type __n)
1098:/usr/include/c++/11/bits/basic_string.h ****       {
1099:/usr/include/c++/11/bits/basic_string.h **** 	if (__n >= size())
1100:/usr/include/c++/11/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1101:/usr/include/c++/11/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
1102:/usr/include/c++/11/bits/basic_string.h **** 				       "(which is %zu)"),
1103:/usr/include/c++/11/bits/basic_string.h **** 				   __n, this->size());
1104:/usr/include/c++/11/bits/basic_string.h **** 	return _M_data()[__n];
1105:/usr/include/c++/11/bits/basic_string.h ****       }
1106:/usr/include/c++/11/bits/basic_string.h **** 
1107:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
1108:/usr/include/c++/11/bits/basic_string.h ****       /**
1109:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
1110:/usr/include/c++/11/bits/basic_string.h ****        *  element of the %string.
1111:/usr/include/c++/11/bits/basic_string.h ****        */
1112:/usr/include/c++/11/bits/basic_string.h ****       reference
1113:/usr/include/c++/11/bits/basic_string.h ****       front() noexcept
1114:/usr/include/c++/11/bits/basic_string.h ****       {
1115:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1116:/usr/include/c++/11/bits/basic_string.h **** 	return operator[](0);
1117:/usr/include/c++/11/bits/basic_string.h ****       }
1118:/usr/include/c++/11/bits/basic_string.h **** 
1119:/usr/include/c++/11/bits/basic_string.h ****       /**
1120:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
1121:/usr/include/c++/11/bits/basic_string.h ****        *  element of the %string.
1122:/usr/include/c++/11/bits/basic_string.h ****        */
1123:/usr/include/c++/11/bits/basic_string.h ****       const_reference
1124:/usr/include/c++/11/bits/basic_string.h ****       front() const noexcept
1125:/usr/include/c++/11/bits/basic_string.h ****       {
1126:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1127:/usr/include/c++/11/bits/basic_string.h **** 	return operator[](0);
1128:/usr/include/c++/11/bits/basic_string.h ****       }
1129:/usr/include/c++/11/bits/basic_string.h **** 
1130:/usr/include/c++/11/bits/basic_string.h ****       /**
1131:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
1132:/usr/include/c++/11/bits/basic_string.h ****        *  element of the %string.
1133:/usr/include/c++/11/bits/basic_string.h ****        */
1134:/usr/include/c++/11/bits/basic_string.h ****       reference
1135:/usr/include/c++/11/bits/basic_string.h ****       back() noexcept
1136:/usr/include/c++/11/bits/basic_string.h ****       {
1137:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1138:/usr/include/c++/11/bits/basic_string.h **** 	return operator[](this->size() - 1);
1139:/usr/include/c++/11/bits/basic_string.h ****       }
1140:/usr/include/c++/11/bits/basic_string.h **** 
1141:/usr/include/c++/11/bits/basic_string.h ****       /**
1142:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
1143:/usr/include/c++/11/bits/basic_string.h ****        *  last element of the %string.
1144:/usr/include/c++/11/bits/basic_string.h ****        */
1145:/usr/include/c++/11/bits/basic_string.h ****       const_reference
1146:/usr/include/c++/11/bits/basic_string.h ****       back() const noexcept
1147:/usr/include/c++/11/bits/basic_string.h ****       {
1148:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1149:/usr/include/c++/11/bits/basic_string.h **** 	return operator[](this->size() - 1);
1150:/usr/include/c++/11/bits/basic_string.h ****       }
1151:/usr/include/c++/11/bits/basic_string.h **** #endif
1152:/usr/include/c++/11/bits/basic_string.h **** 
1153:/usr/include/c++/11/bits/basic_string.h ****       // Modifiers:
1154:/usr/include/c++/11/bits/basic_string.h ****       /**
1155:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a string to this string.
1156:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  The string to append.
1157:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1158:/usr/include/c++/11/bits/basic_string.h ****        */
1159:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1160:/usr/include/c++/11/bits/basic_string.h ****       operator+=(const basic_string& __str)
1161:/usr/include/c++/11/bits/basic_string.h ****       { return this->append(__str); }
1162:/usr/include/c++/11/bits/basic_string.h **** 
1163:/usr/include/c++/11/bits/basic_string.h ****       /**
1164:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a C string.
1165:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  The C string to append.
1166:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1167:/usr/include/c++/11/bits/basic_string.h ****        */
1168:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1169:/usr/include/c++/11/bits/basic_string.h ****       operator+=(const _CharT* __s)
1170:/usr/include/c++/11/bits/basic_string.h ****       { return this->append(__s); }
1171:/usr/include/c++/11/bits/basic_string.h **** 
1172:/usr/include/c++/11/bits/basic_string.h ****       /**
1173:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a character.
1174:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  The character to append.
1175:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1176:/usr/include/c++/11/bits/basic_string.h ****        */
1177:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1178:/usr/include/c++/11/bits/basic_string.h ****       operator+=(_CharT __c)
1179:/usr/include/c++/11/bits/basic_string.h ****       {
1180:/usr/include/c++/11/bits/basic_string.h **** 	this->push_back(__c);
1181:/usr/include/c++/11/bits/basic_string.h **** 	return *this;
1182:/usr/include/c++/11/bits/basic_string.h ****       }
1183:/usr/include/c++/11/bits/basic_string.h **** 
1184:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
1185:/usr/include/c++/11/bits/basic_string.h ****       /**
1186:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1187:/usr/include/c++/11/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
1188:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1189:/usr/include/c++/11/bits/basic_string.h ****        */
1190:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1191:/usr/include/c++/11/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
1192:/usr/include/c++/11/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1193:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
1194:/usr/include/c++/11/bits/basic_string.h **** 
1195:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
1196:/usr/include/c++/11/bits/basic_string.h ****       /**
1197:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a string_view.
1198:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1199:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1200:/usr/include/c++/11/bits/basic_string.h ****        */
1201:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
1202:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1203:/usr/include/c++/11/bits/basic_string.h **** 	operator+=(const _Tp& __svt)
1204:/usr/include/c++/11/bits/basic_string.h **** 	{ return this->append(__svt); }
1205:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
1206:/usr/include/c++/11/bits/basic_string.h **** 
1207:/usr/include/c++/11/bits/basic_string.h ****       /**
1208:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a string to this string.
1209:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  The string to append.
1210:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1211:/usr/include/c++/11/bits/basic_string.h ****        */
1212:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1213:/usr/include/c++/11/bits/basic_string.h ****       append(const basic_string& __str)
1214:/usr/include/c++/11/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
1215:/usr/include/c++/11/bits/basic_string.h **** 
1216:/usr/include/c++/11/bits/basic_string.h ****       /**
1217:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a substring.
1218:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  The string to append.
1219:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
1220:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1221:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1222:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
1223:/usr/include/c++/11/bits/basic_string.h ****        *
1224:/usr/include/c++/11/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
1225:/usr/include/c++/11/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
1226:/usr/include/c++/11/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
1227:/usr/include/c++/11/bits/basic_string.h ****        *  remainder of @a __str is appended.
1228:/usr/include/c++/11/bits/basic_string.h ****        */
1229:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1230:/usr/include/c++/11/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos)
1231:/usr/include/c++/11/bits/basic_string.h ****       { return _M_append(__str._M_data()
1232:/usr/include/c++/11/bits/basic_string.h **** 			 + __str._M_check(__pos, "basic_string::append"),
1233:/usr/include/c++/11/bits/basic_string.h **** 			 __str._M_limit(__pos, __n)); }
1234:/usr/include/c++/11/bits/basic_string.h **** 
1235:/usr/include/c++/11/bits/basic_string.h ****       /**
1236:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a C substring.
1237:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  The C string to append.
1238:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1239:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1240:/usr/include/c++/11/bits/basic_string.h ****        */
1241:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1242:/usr/include/c++/11/bits/basic_string.h ****       append(const _CharT* __s, size_type __n)
1243:/usr/include/c++/11/bits/basic_string.h ****       {
1244:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1245:/usr/include/c++/11/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1246:/usr/include/c++/11/bits/basic_string.h **** 	return _M_append(__s, __n);
1247:/usr/include/c++/11/bits/basic_string.h ****       }
1248:/usr/include/c++/11/bits/basic_string.h **** 
1249:/usr/include/c++/11/bits/basic_string.h ****       /**
1250:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a C string.
1251:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  The C string to append.
1252:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1253:/usr/include/c++/11/bits/basic_string.h ****        */
1254:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1255:/usr/include/c++/11/bits/basic_string.h ****       append(const _CharT* __s)
1256:/usr/include/c++/11/bits/basic_string.h ****       {
1257:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1258:/usr/include/c++/11/bits/basic_string.h **** 	const size_type __n = traits_type::length(__s);
1259:/usr/include/c++/11/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1260:/usr/include/c++/11/bits/basic_string.h **** 	return _M_append(__s, __n);
1261:/usr/include/c++/11/bits/basic_string.h ****       }
1262:/usr/include/c++/11/bits/basic_string.h **** 
1263:/usr/include/c++/11/bits/basic_string.h ****       /**
1264:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append multiple characters.
1265:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1266:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  The character to use.
1267:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1268:/usr/include/c++/11/bits/basic_string.h ****        *
1269:/usr/include/c++/11/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
1270:/usr/include/c++/11/bits/basic_string.h ****        */
1271:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1272:/usr/include/c++/11/bits/basic_string.h ****       append(size_type __n, _CharT __c)
1273:/usr/include/c++/11/bits/basic_string.h ****       { return _M_replace_aux(this->size(), size_type(0), __n, __c); }
1274:/usr/include/c++/11/bits/basic_string.h **** 
1275:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
1276:/usr/include/c++/11/bits/basic_string.h ****       /**
1277:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1278:/usr/include/c++/11/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1279:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1280:/usr/include/c++/11/bits/basic_string.h ****        */
1281:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1282:/usr/include/c++/11/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
1283:/usr/include/c++/11/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1284:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
1285:/usr/include/c++/11/bits/basic_string.h **** 
1286:/usr/include/c++/11/bits/basic_string.h ****       /**
1287:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a range of characters.
1288:/usr/include/c++/11/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1289:/usr/include/c++/11/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1290:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1291:/usr/include/c++/11/bits/basic_string.h ****        *
1292:/usr/include/c++/11/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1293:/usr/include/c++/11/bits/basic_string.h ****        */
1294:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
1295:/usr/include/c++/11/bits/basic_string.h ****       template<class _InputIterator,
1296:/usr/include/c++/11/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1297:/usr/include/c++/11/bits/basic_string.h **** #else
1298:/usr/include/c++/11/bits/basic_string.h ****       template<class _InputIterator>
1299:/usr/include/c++/11/bits/basic_string.h **** #endif
1300:/usr/include/c++/11/bits/basic_string.h ****         basic_string&
1301:/usr/include/c++/11/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1302:/usr/include/c++/11/bits/basic_string.h ****         { return this->replace(end(), end(), __first, __last); }
1303:/usr/include/c++/11/bits/basic_string.h **** 
1304:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
1305:/usr/include/c++/11/bits/basic_string.h ****       /**
1306:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a string_view.
1307:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1308:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1309:/usr/include/c++/11/bits/basic_string.h ****        */
1310:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
1311:/usr/include/c++/11/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
1312:/usr/include/c++/11/bits/basic_string.h ****         append(const _Tp& __svt)
1313:/usr/include/c++/11/bits/basic_string.h ****         {
1314:/usr/include/c++/11/bits/basic_string.h ****           __sv_type __sv = __svt;
1315:/usr/include/c++/11/bits/basic_string.h ****           return this->append(__sv.data(), __sv.size());
1316:/usr/include/c++/11/bits/basic_string.h ****         }
1317:/usr/include/c++/11/bits/basic_string.h **** 
1318:/usr/include/c++/11/bits/basic_string.h ****       /**
1319:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a range of characters from a string_view.
1320:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended from.
1321:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos The position in the string_view to append from.
1322:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
1323:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1324:/usr/include/c++/11/bits/basic_string.h ****        */
1325:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
1326:/usr/include/c++/11/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
1327:/usr/include/c++/11/bits/basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
1328:/usr/include/c++/11/bits/basic_string.h **** 	{
1329:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1330:/usr/include/c++/11/bits/basic_string.h **** 	  return _M_append(__sv.data()
1331:/usr/include/c++/11/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
1332:/usr/include/c++/11/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1333:/usr/include/c++/11/bits/basic_string.h **** 	}
1334:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
1335:/usr/include/c++/11/bits/basic_string.h **** 
1336:/usr/include/c++/11/bits/basic_string.h ****       /**
1337:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a single character.
1338:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to append.
1339:/usr/include/c++/11/bits/basic_string.h ****        */
1340:/usr/include/c++/11/bits/basic_string.h ****       void
1341:/usr/include/c++/11/bits/basic_string.h ****       push_back(_CharT __c)
1342:/usr/include/c++/11/bits/basic_string.h ****       {
1343:/usr/include/c++/11/bits/basic_string.h **** 	const size_type __size = this->size();
1344:/usr/include/c++/11/bits/basic_string.h **** 	if (__size + 1 > this->capacity())
1345:/usr/include/c++/11/bits/basic_string.h **** 	  this->_M_mutate(__size, size_type(0), 0, size_type(1));
1346:/usr/include/c++/11/bits/basic_string.h **** 	traits_type::assign(this->_M_data()[__size], __c);
1347:/usr/include/c++/11/bits/basic_string.h **** 	this->_M_set_length(__size + 1);
1348:/usr/include/c++/11/bits/basic_string.h ****       }
1349:/usr/include/c++/11/bits/basic_string.h **** 
1350:/usr/include/c++/11/bits/basic_string.h ****       /**
1351:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1352:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string to use.
1353:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1354:/usr/include/c++/11/bits/basic_string.h ****        */
1355:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1356:/usr/include/c++/11/bits/basic_string.h ****       assign(const basic_string& __str)
1357:/usr/include/c++/11/bits/basic_string.h ****       {
1358:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
1359:/usr/include/c++/11/bits/basic_string.h **** 	if (_Alloc_traits::_S_propagate_on_copy_assign())
1360:/usr/include/c++/11/bits/basic_string.h **** 	  {
1361:/usr/include/c++/11/bits/basic_string.h **** 	    if (!_Alloc_traits::_S_always_equal() && !_M_is_local()
1362:/usr/include/c++/11/bits/basic_string.h **** 		&& _M_get_allocator() != __str._M_get_allocator())
1363:/usr/include/c++/11/bits/basic_string.h **** 	      {
1364:/usr/include/c++/11/bits/basic_string.h **** 		// Propagating allocator cannot free existing storage so must
1365:/usr/include/c++/11/bits/basic_string.h **** 		// deallocate it before replacing current allocator.
1366:/usr/include/c++/11/bits/basic_string.h **** 		if (__str.size() <= _S_local_capacity)
1367:/usr/include/c++/11/bits/basic_string.h **** 		  {
1368:/usr/include/c++/11/bits/basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
1369:/usr/include/c++/11/bits/basic_string.h **** 		    _M_data(_M_local_data());
1370:/usr/include/c++/11/bits/basic_string.h **** 		    _M_set_length(0);
1371:/usr/include/c++/11/bits/basic_string.h **** 		  }
1372:/usr/include/c++/11/bits/basic_string.h **** 		else
1373:/usr/include/c++/11/bits/basic_string.h **** 		  {
1374:/usr/include/c++/11/bits/basic_string.h **** 		    const auto __len = __str.size();
1375:/usr/include/c++/11/bits/basic_string.h **** 		    auto __alloc = __str._M_get_allocator();
1376:/usr/include/c++/11/bits/basic_string.h **** 		    // If this allocation throws there are no effects:
1377:/usr/include/c++/11/bits/basic_string.h **** 		    auto __ptr = _Alloc_traits::allocate(__alloc, __len + 1);
1378:/usr/include/c++/11/bits/basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
1379:/usr/include/c++/11/bits/basic_string.h **** 		    _M_data(__ptr);
1380:/usr/include/c++/11/bits/basic_string.h **** 		    _M_capacity(__len);
1381:/usr/include/c++/11/bits/basic_string.h **** 		    _M_set_length(__len);
1382:/usr/include/c++/11/bits/basic_string.h **** 		  }
1383:/usr/include/c++/11/bits/basic_string.h **** 	      }
1384:/usr/include/c++/11/bits/basic_string.h **** 	    std::__alloc_on_copy(_M_get_allocator(), __str._M_get_allocator());
1385:/usr/include/c++/11/bits/basic_string.h **** 	  }
1386:/usr/include/c++/11/bits/basic_string.h **** #endif
1387:/usr/include/c++/11/bits/basic_string.h **** 	this->_M_assign(__str);
1388:/usr/include/c++/11/bits/basic_string.h **** 	return *this;
1389:/usr/include/c++/11/bits/basic_string.h ****       }
1390:/usr/include/c++/11/bits/basic_string.h **** 
1391:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
1392:/usr/include/c++/11/bits/basic_string.h ****       /**
1393:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1394:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string to use.
1395:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1396:/usr/include/c++/11/bits/basic_string.h ****        *
1397:/usr/include/c++/11/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
1398:/usr/include/c++/11/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
1399:/usr/include/c++/11/bits/basic_string.h ****        */
1400:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1401:/usr/include/c++/11/bits/basic_string.h ****       assign(basic_string&& __str)
1402:/usr/include/c++/11/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
1403:/usr/include/c++/11/bits/basic_string.h ****       {
1404:/usr/include/c++/11/bits/basic_string.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
1405:/usr/include/c++/11/bits/basic_string.h **** 	// 2063. Contradictory requirements for string move assignment
1406:/usr/include/c++/11/bits/basic_string.h **** 	return *this = std::move(__str);
1407:/usr/include/c++/11/bits/basic_string.h ****       }
1408:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
1409:/usr/include/c++/11/bits/basic_string.h **** 
1410:/usr/include/c++/11/bits/basic_string.h ****       /**
1411:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
1412:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  The string to use.
1413:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
1414:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1415:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1416:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
1417:/usr/include/c++/11/bits/basic_string.h ****        *
1418:/usr/include/c++/11/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
1419:/usr/include/c++/11/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
1420:/usr/include/c++/11/bits/basic_string.h ****        *  is larger than the number of available characters in @a
1421:/usr/include/c++/11/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
1422:/usr/include/c++/11/bits/basic_string.h ****        */
1423:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1424:/usr/include/c++/11/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
1425:/usr/include/c++/11/bits/basic_string.h ****       { return _M_replace(size_type(0), this->size(), __str._M_data()
1426:/usr/include/c++/11/bits/basic_string.h **** 			  + __str._M_check(__pos, "basic_string::assign"),
1427:/usr/include/c++/11/bits/basic_string.h **** 			  __str._M_limit(__pos, __n)); }
1428:/usr/include/c++/11/bits/basic_string.h **** 
1429:/usr/include/c++/11/bits/basic_string.h ****       /**
1430:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to a C substring.
1431:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  The C string to use.
1432:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1433:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1434:/usr/include/c++/11/bits/basic_string.h ****        *
1435:/usr/include/c++/11/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
1436:/usr/include/c++/11/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
1437:/usr/include/c++/11/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
1438:/usr/include/c++/11/bits/basic_string.h ****        */
1439:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1440:/usr/include/c++/11/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n)
1441:/usr/include/c++/11/bits/basic_string.h ****       {
1442:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1443:/usr/include/c++/11/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s, __n);
1444:/usr/include/c++/11/bits/basic_string.h ****       }
1445:/usr/include/c++/11/bits/basic_string.h **** 
1446:/usr/include/c++/11/bits/basic_string.h ****       /**
1447:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
1448:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  The C string to use.
1449:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1450:/usr/include/c++/11/bits/basic_string.h ****        *
1451:/usr/include/c++/11/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
1452:/usr/include/c++/11/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
1453:/usr/include/c++/11/bits/basic_string.h ****        *  function returns.
1454:/usr/include/c++/11/bits/basic_string.h ****        */
1455:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1456:/usr/include/c++/11/bits/basic_string.h ****       assign(const _CharT* __s)
1457:/usr/include/c++/11/bits/basic_string.h ****       {
1458:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1459:/usr/include/c++/11/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s,
1460:/usr/include/c++/11/bits/basic_string.h **** 			  traits_type::length(__s));
1461:/usr/include/c++/11/bits/basic_string.h ****       }
1462:/usr/include/c++/11/bits/basic_string.h **** 
1463:/usr/include/c++/11/bits/basic_string.h ****       /**
1464:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
1465:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
1466:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  The character to use.
1467:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1468:/usr/include/c++/11/bits/basic_string.h ****        *
1469:/usr/include/c++/11/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
1470:/usr/include/c++/11/bits/basic_string.h ****        *  character @a __c.
1471:/usr/include/c++/11/bits/basic_string.h ****        */
1472:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1473:/usr/include/c++/11/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
1474:/usr/include/c++/11/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
1475:/usr/include/c++/11/bits/basic_string.h **** 
1476:/usr/include/c++/11/bits/basic_string.h ****       /**
1477:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
1478:/usr/include/c++/11/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1479:/usr/include/c++/11/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1480:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1481:/usr/include/c++/11/bits/basic_string.h ****        *
1482:/usr/include/c++/11/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
1483:/usr/include/c++/11/bits/basic_string.h ****       */
1484:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
1485:/usr/include/c++/11/bits/basic_string.h ****       template<class _InputIterator,
1486:/usr/include/c++/11/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1487:/usr/include/c++/11/bits/basic_string.h **** #else
1488:/usr/include/c++/11/bits/basic_string.h ****       template<class _InputIterator>
1489:/usr/include/c++/11/bits/basic_string.h **** #endif
1490:/usr/include/c++/11/bits/basic_string.h ****         basic_string&
1491:/usr/include/c++/11/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
1492:/usr/include/c++/11/bits/basic_string.h ****         { return this->replace(begin(), end(), __first, __last); }
1493:/usr/include/c++/11/bits/basic_string.h **** 
1494:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
1495:/usr/include/c++/11/bits/basic_string.h ****       /**
1496:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
1497:/usr/include/c++/11/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
1498:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1499:/usr/include/c++/11/bits/basic_string.h ****        */
1500:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1501:/usr/include/c++/11/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
1502:/usr/include/c++/11/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
1503:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
1504:/usr/include/c++/11/bits/basic_string.h **** 
1505:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
1506:/usr/include/c++/11/bits/basic_string.h ****       /**
1507:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value from a string_view.
1508:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1509:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1510:/usr/include/c++/11/bits/basic_string.h ****        */
1511:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
1512:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1513:/usr/include/c++/11/bits/basic_string.h **** 	assign(const _Tp& __svt)
1514:/usr/include/c++/11/bits/basic_string.h **** 	{
1515:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1516:/usr/include/c++/11/bits/basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
1517:/usr/include/c++/11/bits/basic_string.h **** 	}
1518:/usr/include/c++/11/bits/basic_string.h **** 
1519:/usr/include/c++/11/bits/basic_string.h ****       /**
1520:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
1521:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1522:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
1523:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  The number of characters to assign.
1524:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1525:/usr/include/c++/11/bits/basic_string.h ****        */
1526:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
1527:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1528:/usr/include/c++/11/bits/basic_string.h **** 	assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
1529:/usr/include/c++/11/bits/basic_string.h **** 	{
1530:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1531:/usr/include/c++/11/bits/basic_string.h **** 	  return _M_replace(size_type(0), this->size(),
1532:/usr/include/c++/11/bits/basic_string.h **** 	      __sv.data()
1533:/usr/include/c++/11/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
1534:/usr/include/c++/11/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1535:/usr/include/c++/11/bits/basic_string.h **** 	}
1536:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
1537:/usr/include/c++/11/bits/basic_string.h **** 
1538:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
1539:/usr/include/c++/11/bits/basic_string.h ****       /**
1540:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1541:/usr/include/c++/11/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1542:/usr/include/c++/11/bits/basic_string.h ****        *              insert at.
1543:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1544:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  The character to insert.
1545:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1546:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1547:/usr/include/c++/11/bits/basic_string.h ****        *
1548:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1549:/usr/include/c++/11/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1550:/usr/include/c++/11/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1551:/usr/include/c++/11/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1552:/usr/include/c++/11/bits/basic_string.h ****        *  change if an error is thrown.
1553:/usr/include/c++/11/bits/basic_string.h ****       */
1554:/usr/include/c++/11/bits/basic_string.h ****       iterator
1555:/usr/include/c++/11/bits/basic_string.h ****       insert(const_iterator __p, size_type __n, _CharT __c)
1556:/usr/include/c++/11/bits/basic_string.h ****       {
1557:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1558:/usr/include/c++/11/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1559:/usr/include/c++/11/bits/basic_string.h **** 	this->replace(__p, __p, __n, __c);
1560:/usr/include/c++/11/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1561:/usr/include/c++/11/bits/basic_string.h ****       }
1562:/usr/include/c++/11/bits/basic_string.h **** #else
1563:/usr/include/c++/11/bits/basic_string.h ****       /**
1564:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1565:/usr/include/c++/11/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1566:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1567:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  The character to insert.
1568:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1569:/usr/include/c++/11/bits/basic_string.h ****        *
1570:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1571:/usr/include/c++/11/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1572:/usr/include/c++/11/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1573:/usr/include/c++/11/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1574:/usr/include/c++/11/bits/basic_string.h ****        *  change if an error is thrown.
1575:/usr/include/c++/11/bits/basic_string.h ****       */
1576:/usr/include/c++/11/bits/basic_string.h ****       void
1577:/usr/include/c++/11/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
1578:/usr/include/c++/11/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
1579:/usr/include/c++/11/bits/basic_string.h **** #endif
1580:/usr/include/c++/11/bits/basic_string.h **** 
1581:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
1582:/usr/include/c++/11/bits/basic_string.h ****       /**
1583:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1584:/usr/include/c++/11/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1585:/usr/include/c++/11/bits/basic_string.h ****        *              insert at.
1586:/usr/include/c++/11/bits/basic_string.h ****        *  @param __beg  Start of range.
1587:/usr/include/c++/11/bits/basic_string.h ****        *  @param __end  End of range.
1588:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1589:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1590:/usr/include/c++/11/bits/basic_string.h ****        *
1591:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts characters in range [beg,end).  If adding characters
1592:/usr/include/c++/11/bits/basic_string.h ****        *  causes the length to exceed max_size(), length_error is
1593:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1594:/usr/include/c++/11/bits/basic_string.h ****        *  is thrown.
1595:/usr/include/c++/11/bits/basic_string.h ****       */
1596:/usr/include/c++/11/bits/basic_string.h ****       template<class _InputIterator,
1597:/usr/include/c++/11/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1598:/usr/include/c++/11/bits/basic_string.h **** 	iterator
1599:/usr/include/c++/11/bits/basic_string.h ****         insert(const_iterator __p, _InputIterator __beg, _InputIterator __end)
1600:/usr/include/c++/11/bits/basic_string.h ****         {
1601:/usr/include/c++/11/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1602:/usr/include/c++/11/bits/basic_string.h **** 	  const size_type __pos = __p - begin();
1603:/usr/include/c++/11/bits/basic_string.h **** 	  this->replace(__p, __p, __beg, __end);
1604:/usr/include/c++/11/bits/basic_string.h **** 	  return iterator(this->_M_data() + __pos);
1605:/usr/include/c++/11/bits/basic_string.h **** 	}
1606:/usr/include/c++/11/bits/basic_string.h **** #else
1607:/usr/include/c++/11/bits/basic_string.h ****       /**
1608:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1609:/usr/include/c++/11/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1610:/usr/include/c++/11/bits/basic_string.h ****        *  @param __beg  Start of range.
1611:/usr/include/c++/11/bits/basic_string.h ****        *  @param __end  End of range.
1612:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1613:/usr/include/c++/11/bits/basic_string.h ****        *
1614:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
1615:/usr/include/c++/11/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1616:/usr/include/c++/11/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1617:/usr/include/c++/11/bits/basic_string.h ****        *  change if an error is thrown.
1618:/usr/include/c++/11/bits/basic_string.h ****       */
1619:/usr/include/c++/11/bits/basic_string.h ****       template<class _InputIterator>
1620:/usr/include/c++/11/bits/basic_string.h ****         void
1621:/usr/include/c++/11/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
1622:/usr/include/c++/11/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
1623:/usr/include/c++/11/bits/basic_string.h **** #endif
1624:/usr/include/c++/11/bits/basic_string.h **** 
1625:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
1626:/usr/include/c++/11/bits/basic_string.h ****       /**
1627:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
1628:/usr/include/c++/11/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1629:/usr/include/c++/11/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1630:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1631:/usr/include/c++/11/bits/basic_string.h ****        */
1632:/usr/include/c++/11/bits/basic_string.h ****       iterator
1633:/usr/include/c++/11/bits/basic_string.h ****       insert(const_iterator __p, initializer_list<_CharT> __l)
1634:/usr/include/c++/11/bits/basic_string.h ****       { return this->insert(__p, __l.begin(), __l.end()); }
1635:/usr/include/c++/11/bits/basic_string.h **** 
1636:/usr/include/c++/11/bits/basic_string.h **** #ifdef _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
1637:/usr/include/c++/11/bits/basic_string.h ****       // See PR libstdc++/83328
1638:/usr/include/c++/11/bits/basic_string.h ****       void
1639:/usr/include/c++/11/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
1640:/usr/include/c++/11/bits/basic_string.h ****       {
1641:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1642:/usr/include/c++/11/bits/basic_string.h **** 	this->insert(__p - begin(), __l.begin(), __l.size());
1643:/usr/include/c++/11/bits/basic_string.h ****       }
1644:/usr/include/c++/11/bits/basic_string.h **** #endif
1645:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
1646:/usr/include/c++/11/bits/basic_string.h **** 
1647:/usr/include/c++/11/bits/basic_string.h ****       /**
1648:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert value of a string.
1649:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos1 Position in string to insert at.
1650:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  The string to insert.
1651:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1652:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1653:/usr/include/c++/11/bits/basic_string.h ****        *
1654:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
1655:/usr/include/c++/11/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1656:/usr/include/c++/11/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1657:/usr/include/c++/11/bits/basic_string.h ****        *  change if an error is thrown.
1658:/usr/include/c++/11/bits/basic_string.h ****       */
1659:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1660:/usr/include/c++/11/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
1661:/usr/include/c++/11/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0),
1662:/usr/include/c++/11/bits/basic_string.h **** 			     __str._M_data(), __str.size()); }
1663:/usr/include/c++/11/bits/basic_string.h **** 
1664:/usr/include/c++/11/bits/basic_string.h ****       /**
1665:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert a substring.
1666:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos1  Position in string to insert at.
1667:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str   The string to insert.
1668:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1669:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
1670:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1671:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1672:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
1673:/usr/include/c++/11/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
1674:/usr/include/c++/11/bits/basic_string.h ****        *
1675:/usr/include/c++/11/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
1676:/usr/include/c++/11/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
1677:/usr/include/c++/11/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
1678:/usr/include/c++/11/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
1679:/usr/include/c++/11/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
1680:/usr/include/c++/11/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1681:/usr/include/c++/11/bits/basic_string.h ****       */
1682:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1683:/usr/include/c++/11/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
1684:/usr/include/c++/11/bits/basic_string.h **** 	     size_type __pos2, size_type __n = npos)
1685:/usr/include/c++/11/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0), __str._M_data()
1686:/usr/include/c++/11/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::insert"),
1687:/usr/include/c++/11/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n)); }
1688:/usr/include/c++/11/bits/basic_string.h **** 
1689:/usr/include/c++/11/bits/basic_string.h ****       /**
1690:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert a C substring.
1691:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Position in string to insert at.
1692:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  The C string to insert.
1693:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
1694:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1695:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1696:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1697:/usr/include/c++/11/bits/basic_string.h ****        *  string.
1698:/usr/include/c++/11/bits/basic_string.h ****        *
1699:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
1700:/usr/include/c++/11/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
1701:/usr/include/c++/11/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
1702:/usr/include/c++/11/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
1703:/usr/include/c++/11/bits/basic_string.h ****        *  doesn't change if an error is thrown.
1704:/usr/include/c++/11/bits/basic_string.h ****       */
1705:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1706:/usr/include/c++/11/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n)
1707:/usr/include/c++/11/bits/basic_string.h ****       { return this->replace(__pos, size_type(0), __s, __n); }
1708:/usr/include/c++/11/bits/basic_string.h **** 
1709:/usr/include/c++/11/bits/basic_string.h ****       /**
1710:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert a C string.
1711:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Position in string to insert at.
1712:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  The C string to insert.
1713:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1714:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1715:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1716:/usr/include/c++/11/bits/basic_string.h ****        *  string.
1717:/usr/include/c++/11/bits/basic_string.h ****        *
1718:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
1719:/usr/include/c++/11/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
1720:/usr/include/c++/11/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
1721:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
1722:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.
1723:/usr/include/c++/11/bits/basic_string.h ****       */
1724:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1725:/usr/include/c++/11/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
1726:/usr/include/c++/11/bits/basic_string.h ****       {
1727:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1728:/usr/include/c++/11/bits/basic_string.h **** 	return this->replace(__pos, size_type(0), __s,
1729:/usr/include/c++/11/bits/basic_string.h **** 			     traits_type::length(__s));
1730:/usr/include/c++/11/bits/basic_string.h ****       }
1731:/usr/include/c++/11/bits/basic_string.h **** 
1732:/usr/include/c++/11/bits/basic_string.h ****       /**
1733:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1734:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
1735:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1736:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  The character to insert.
1737:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1738:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1739:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1740:/usr/include/c++/11/bits/basic_string.h ****        *  string.
1741:/usr/include/c++/11/bits/basic_string.h ****        *
1742:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
1743:/usr/include/c++/11/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
1744:/usr/include/c++/11/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
1745:/usr/include/c++/11/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1746:/usr/include/c++/11/bits/basic_string.h ****        *  change if an error is thrown.
1747:/usr/include/c++/11/bits/basic_string.h ****       */
1748:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1749:/usr/include/c++/11/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
1750:/usr/include/c++/11/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
1751:/usr/include/c++/11/bits/basic_string.h **** 			      size_type(0), __n, __c); }
1752:/usr/include/c++/11/bits/basic_string.h **** 
1753:/usr/include/c++/11/bits/basic_string.h ****       /**
1754:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert one character.
1755:/usr/include/c++/11/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
1756:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  The character to insert.
1757:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
1758:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1759:/usr/include/c++/11/bits/basic_string.h ****        *
1760:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
1761:/usr/include/c++/11/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
1762:/usr/include/c++/11/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
1763:/usr/include/c++/11/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1764:/usr/include/c++/11/bits/basic_string.h ****        *  change if an error is thrown.
1765:/usr/include/c++/11/bits/basic_string.h ****       */
1766:/usr/include/c++/11/bits/basic_string.h ****       iterator
1767:/usr/include/c++/11/bits/basic_string.h ****       insert(__const_iterator __p, _CharT __c)
1768:/usr/include/c++/11/bits/basic_string.h ****       {
1769:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1770:/usr/include/c++/11/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1771:/usr/include/c++/11/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
1772:/usr/include/c++/11/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1773:/usr/include/c++/11/bits/basic_string.h ****       }
1774:/usr/include/c++/11/bits/basic_string.h **** 
1775:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
1776:/usr/include/c++/11/bits/basic_string.h ****       /**
1777:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert a string_view.
1778:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Position in string to insert at.
1779:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
1780:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1781:/usr/include/c++/11/bits/basic_string.h ****       */
1782:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
1783:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1784:/usr/include/c++/11/bits/basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
1785:/usr/include/c++/11/bits/basic_string.h **** 	{
1786:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1787:/usr/include/c++/11/bits/basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
1788:/usr/include/c++/11/bits/basic_string.h **** 	}
1789:/usr/include/c++/11/bits/basic_string.h **** 
1790:/usr/include/c++/11/bits/basic_string.h ****       /**
1791:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert a string_view.
1792:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos1  Position in string to insert at.
1793:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
1794:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1795:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n    The number of characters to insert.
1796:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1797:/usr/include/c++/11/bits/basic_string.h ****       */
1798:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
1799:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1800:/usr/include/c++/11/bits/basic_string.h **** 	insert(size_type __pos1, const _Tp& __svt,
1801:/usr/include/c++/11/bits/basic_string.h **** 	       size_type __pos2, size_type __n = npos)
1802:/usr/include/c++/11/bits/basic_string.h **** 	{
1803:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1804:/usr/include/c++/11/bits/basic_string.h **** 	  return this->replace(__pos1, size_type(0),
1805:/usr/include/c++/11/bits/basic_string.h **** 	      __sv.data()
1806:/usr/include/c++/11/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
1807:/usr/include/c++/11/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
1808:/usr/include/c++/11/bits/basic_string.h **** 	}
1809:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
1810:/usr/include/c++/11/bits/basic_string.h **** 
1811:/usr/include/c++/11/bits/basic_string.h ****       /**
1812:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Remove characters.
1813:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
1814:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
1815:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1816:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1817:/usr/include/c++/11/bits/basic_string.h ****        *  string.
1818:/usr/include/c++/11/bits/basic_string.h ****        *
1819:/usr/include/c++/11/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
1820:/usr/include/c++/11/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
1821:/usr/include/c++/11/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
1822:/usr/include/c++/11/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
1823:/usr/include/c++/11/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1824:/usr/include/c++/11/bits/basic_string.h ****        *  change if an error is thrown.
1825:/usr/include/c++/11/bits/basic_string.h ****       */
1826:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1827:/usr/include/c++/11/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
1828:/usr/include/c++/11/bits/basic_string.h ****       {
1829:/usr/include/c++/11/bits/basic_string.h **** 	_M_check(__pos, "basic_string::erase");
1830:/usr/include/c++/11/bits/basic_string.h **** 	if (__n == npos)
1831:/usr/include/c++/11/bits/basic_string.h **** 	  this->_M_set_length(__pos);
1832:/usr/include/c++/11/bits/basic_string.h **** 	else if (__n != 0)
1833:/usr/include/c++/11/bits/basic_string.h **** 	  this->_M_erase(__pos, _M_limit(__pos, __n));
1834:/usr/include/c++/11/bits/basic_string.h **** 	return *this;
1835:/usr/include/c++/11/bits/basic_string.h ****       }
1836:/usr/include/c++/11/bits/basic_string.h **** 
1837:/usr/include/c++/11/bits/basic_string.h ****       /**
1838:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Remove one character.
1839:/usr/include/c++/11/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
1840:/usr/include/c++/11/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
1841:/usr/include/c++/11/bits/basic_string.h ****        *
1842:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
1843:/usr/include/c++/11/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
1844:/usr/include/c++/11/bits/basic_string.h ****       */
1845:/usr/include/c++/11/bits/basic_string.h ****       iterator
1846:/usr/include/c++/11/bits/basic_string.h ****       erase(__const_iterator __position)
1847:/usr/include/c++/11/bits/basic_string.h ****       {
1848:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= begin()
1849:/usr/include/c++/11/bits/basic_string.h **** 				 && __position < end());
1850:/usr/include/c++/11/bits/basic_string.h **** 	const size_type __pos = __position - begin();
1851:/usr/include/c++/11/bits/basic_string.h **** 	this->_M_erase(__pos, size_type(1));
1852:/usr/include/c++/11/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1853:/usr/include/c++/11/bits/basic_string.h ****       }
1854:/usr/include/c++/11/bits/basic_string.h **** 
1855:/usr/include/c++/11/bits/basic_string.h ****       /**
1856:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Remove a range of characters.
1857:/usr/include/c++/11/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
1858:/usr/include/c++/11/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
1859:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
1860:/usr/include/c++/11/bits/basic_string.h ****        *
1861:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
1862:/usr/include/c++/11/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
1863:/usr/include/c++/11/bits/basic_string.h ****       */
1864:/usr/include/c++/11/bits/basic_string.h ****       iterator
1865:/usr/include/c++/11/bits/basic_string.h ****       erase(__const_iterator __first, __const_iterator __last)
1866:/usr/include/c++/11/bits/basic_string.h ****       {
1867:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__first >= begin() && __first <= __last
1868:/usr/include/c++/11/bits/basic_string.h **** 				 && __last <= end());
1869:/usr/include/c++/11/bits/basic_string.h ****         const size_type __pos = __first - begin();
1870:/usr/include/c++/11/bits/basic_string.h **** 	if (__last == end())
1871:/usr/include/c++/11/bits/basic_string.h **** 	  this->_M_set_length(__pos);
1872:/usr/include/c++/11/bits/basic_string.h **** 	else
1873:/usr/include/c++/11/bits/basic_string.h **** 	  this->_M_erase(__pos, __last - __first);
1874:/usr/include/c++/11/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1875:/usr/include/c++/11/bits/basic_string.h ****       }
1876:/usr/include/c++/11/bits/basic_string.h **** 
1877:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
1878:/usr/include/c++/11/bits/basic_string.h ****       /**
1879:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Remove the last character.
1880:/usr/include/c++/11/bits/basic_string.h ****        *
1881:/usr/include/c++/11/bits/basic_string.h ****        *  The string must be non-empty.
1882:/usr/include/c++/11/bits/basic_string.h ****        */
1883:/usr/include/c++/11/bits/basic_string.h ****       void
1884:/usr/include/c++/11/bits/basic_string.h ****       pop_back() noexcept
1885:/usr/include/c++/11/bits/basic_string.h ****       {
1886:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1887:/usr/include/c++/11/bits/basic_string.h **** 	_M_erase(size() - 1, 1);
1888:/usr/include/c++/11/bits/basic_string.h ****       }
1889:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
1890:/usr/include/c++/11/bits/basic_string.h **** 
1891:/usr/include/c++/11/bits/basic_string.h ****       /**
1892:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1893:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1894:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
1895:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String to insert.
1896:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1897:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1898:/usr/include/c++/11/bits/basic_string.h ****        *  string.
1899:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1900:/usr/include/c++/11/bits/basic_string.h ****        *
1901:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
1902:/usr/include/c++/11/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
1903:/usr/include/c++/11/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1904:/usr/include/c++/11/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
1905:/usr/include/c++/11/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
1906:/usr/include/c++/11/bits/basic_string.h ****        *  error is thrown.
1907:/usr/include/c++/11/bits/basic_string.h ****       */
1908:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1909:/usr/include/c++/11/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
1910:/usr/include/c++/11/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
1911:/usr/include/c++/11/bits/basic_string.h **** 
1912:/usr/include/c++/11/bits/basic_string.h ****       /**
1913:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1914:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
1915:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1916:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String to insert.
1917:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
1918:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
1919:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1920:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
1921:/usr/include/c++/11/bits/basic_string.h ****        *  __str.size().
1922:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1923:/usr/include/c++/11/bits/basic_string.h ****        *
1924:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
1925:/usr/include/c++/11/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
1926:/usr/include/c++/11/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
1927:/usr/include/c++/11/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
1928:/usr/include/c++/11/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
1929:/usr/include/c++/11/bits/basic_string.h ****       */
1930:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1931:/usr/include/c++/11/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
1932:/usr/include/c++/11/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
1933:/usr/include/c++/11/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
1934:/usr/include/c++/11/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
1935:/usr/include/c++/11/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
1936:/usr/include/c++/11/bits/basic_string.h **** 
1937:/usr/include/c++/11/bits/basic_string.h ****       /**
1938:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
1939:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1940:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1941:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to insert.
1942:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
1943:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1944:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
1945:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1946:/usr/include/c++/11/bits/basic_string.h ****        *
1947:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1948:/usr/include/c++/11/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
1949:/usr/include/c++/11/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
1950:/usr/include/c++/11/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
1951:/usr/include/c++/11/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
1952:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1953:/usr/include/c++/11/bits/basic_string.h ****        *  is thrown.
1954:/usr/include/c++/11/bits/basic_string.h ****       */
1955:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1956:/usr/include/c++/11/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
1957:/usr/include/c++/11/bits/basic_string.h **** 	      size_type __n2)
1958:/usr/include/c++/11/bits/basic_string.h ****       {
1959:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n2);
1960:/usr/include/c++/11/bits/basic_string.h **** 	return _M_replace(_M_check(__pos, "basic_string::replace"),
1961:/usr/include/c++/11/bits/basic_string.h **** 			  _M_limit(__pos, __n1), __s, __n2);
1962:/usr/include/c++/11/bits/basic_string.h ****       }
1963:/usr/include/c++/11/bits/basic_string.h **** 
1964:/usr/include/c++/11/bits/basic_string.h ****       /**
1965:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
1966:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1967:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1968:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to insert.
1969:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1970:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
1971:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1972:/usr/include/c++/11/bits/basic_string.h ****        *
1973:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1974:/usr/include/c++/11/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
1975:/usr/include/c++/11/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
1976:/usr/include/c++/11/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
1977:/usr/include/c++/11/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1978:/usr/include/c++/11/bits/basic_string.h ****        *  change if an error is thrown.
1979:/usr/include/c++/11/bits/basic_string.h ****       */
1980:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1981:/usr/include/c++/11/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
1982:/usr/include/c++/11/bits/basic_string.h ****       {
1983:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1984:/usr/include/c++/11/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
1985:/usr/include/c++/11/bits/basic_string.h ****       }
1986:/usr/include/c++/11/bits/basic_string.h **** 
1987:/usr/include/c++/11/bits/basic_string.h ****       /**
1988:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
1989:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1990:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1991:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
1992:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to insert.
1993:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1994:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
1995:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1996:/usr/include/c++/11/bits/basic_string.h ****        *
1997:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
1998:/usr/include/c++/11/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
1999:/usr/include/c++/11/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
2000:/usr/include/c++/11/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
2001:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
2002:/usr/include/c++/11/bits/basic_string.h ****        *  is thrown.
2003:/usr/include/c++/11/bits/basic_string.h ****       */
2004:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
2005:/usr/include/c++/11/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
2006:/usr/include/c++/11/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
2007:/usr/include/c++/11/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
2008:/usr/include/c++/11/bits/basic_string.h **** 
2009:/usr/include/c++/11/bits/basic_string.h ****       /**
2010:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
2011:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2012:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2013:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String value to insert.
2014:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
2015:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2016:/usr/include/c++/11/bits/basic_string.h ****        *
2017:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2018:/usr/include/c++/11/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
2019:/usr/include/c++/11/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
2020:/usr/include/c++/11/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
2021:/usr/include/c++/11/bits/basic_string.h ****       */
2022:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
2023:/usr/include/c++/11/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2024:/usr/include/c++/11/bits/basic_string.h **** 	      const basic_string& __str)
2025:/usr/include/c++/11/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
2026:/usr/include/c++/11/bits/basic_string.h **** 
2027:/usr/include/c++/11/bits/basic_string.h ****       /**
2028:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
2029:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2030:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2031:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string value to insert.
2032:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
2033:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
2034:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2035:/usr/include/c++/11/bits/basic_string.h ****        *
2036:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2037:/usr/include/c++/11/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
2038:/usr/include/c++/11/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2039:/usr/include/c++/11/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2040:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.
2041:/usr/include/c++/11/bits/basic_string.h ****       */
2042:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
2043:/usr/include/c++/11/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2044:/usr/include/c++/11/bits/basic_string.h **** 	      const _CharT* __s, size_type __n)
2045:/usr/include/c++/11/bits/basic_string.h ****       {
2046:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2047:/usr/include/c++/11/bits/basic_string.h **** 				 && __i2 <= end());
2048:/usr/include/c++/11/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1, __s, __n);
2049:/usr/include/c++/11/bits/basic_string.h ****       }
2050:/usr/include/c++/11/bits/basic_string.h **** 
2051:/usr/include/c++/11/bits/basic_string.h ****       /**
2052:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
2053:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2054:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2055:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string value to insert.
2056:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
2057:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2058:/usr/include/c++/11/bits/basic_string.h ****        *
2059:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2060:/usr/include/c++/11/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
2061:/usr/include/c++/11/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2062:/usr/include/c++/11/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2063:/usr/include/c++/11/bits/basic_string.h ****       */
2064:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
2065:/usr/include/c++/11/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, const _CharT* __s)
2066:/usr/include/c++/11/bits/basic_string.h ****       {
2067:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2068:/usr/include/c++/11/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
2069:/usr/include/c++/11/bits/basic_string.h ****       }
2070:/usr/include/c++/11/bits/basic_string.h **** 
2071:/usr/include/c++/11/bits/basic_string.h ****       /**
2072:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
2073:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2074:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2075:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
2076:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to insert.
2077:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
2078:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2079:/usr/include/c++/11/bits/basic_string.h ****        *
2080:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2081:/usr/include/c++/11/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
2082:/usr/include/c++/11/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2083:/usr/include/c++/11/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2084:/usr/include/c++/11/bits/basic_string.h ****       */
2085:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
2086:/usr/include/c++/11/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, size_type __n,
2087:/usr/include/c++/11/bits/basic_string.h **** 	      _CharT __c)
2088:/usr/include/c++/11/bits/basic_string.h ****       {
2089:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2090:/usr/include/c++/11/bits/basic_string.h **** 				 && __i2 <= end());
2091:/usr/include/c++/11/bits/basic_string.h **** 	return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __c);
2092:/usr/include/c++/11/bits/basic_string.h ****       }
2093:/usr/include/c++/11/bits/basic_string.h **** 
2094:/usr/include/c++/11/bits/basic_string.h ****       /**
2095:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
2096:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2097:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2098:/usr/include/c++/11/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
2099:/usr/include/c++/11/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
2100:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
2101:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2102:/usr/include/c++/11/bits/basic_string.h ****        *
2103:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2104:/usr/include/c++/11/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2105:/usr/include/c++/11/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2106:/usr/include/c++/11/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2107:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.
2108:/usr/include/c++/11/bits/basic_string.h ****       */
2109:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
2110:/usr/include/c++/11/bits/basic_string.h ****       template<class _InputIterator,
2111:/usr/include/c++/11/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
2112:/usr/include/c++/11/bits/basic_string.h ****         basic_string&
2113:/usr/include/c++/11/bits/basic_string.h ****         replace(const_iterator __i1, const_iterator __i2,
2114:/usr/include/c++/11/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2115:/usr/include/c++/11/bits/basic_string.h ****         {
2116:/usr/include/c++/11/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2117:/usr/include/c++/11/bits/basic_string.h **** 				   && __i2 <= end());
2118:/usr/include/c++/11/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2119:/usr/include/c++/11/bits/basic_string.h **** 	  return this->_M_replace_dispatch(__i1, __i2, __k1, __k2,
2120:/usr/include/c++/11/bits/basic_string.h **** 					   std::__false_type());
2121:/usr/include/c++/11/bits/basic_string.h **** 	}
2122:/usr/include/c++/11/bits/basic_string.h **** #else
2123:/usr/include/c++/11/bits/basic_string.h ****       template<class _InputIterator>
2124:/usr/include/c++/11/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
2125:/usr/include/c++/11/bits/basic_string.h ****         typename __enable_if_not_native_iterator<_InputIterator>::__type
2126:/usr/include/c++/11/bits/basic_string.h **** #else
2127:/usr/include/c++/11/bits/basic_string.h ****         basic_string&
2128:/usr/include/c++/11/bits/basic_string.h **** #endif
2129:/usr/include/c++/11/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
2130:/usr/include/c++/11/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2131:/usr/include/c++/11/bits/basic_string.h ****         {
2132:/usr/include/c++/11/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2133:/usr/include/c++/11/bits/basic_string.h **** 				   && __i2 <= end());
2134:/usr/include/c++/11/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2135:/usr/include/c++/11/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
2136:/usr/include/c++/11/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
2137:/usr/include/c++/11/bits/basic_string.h **** 	}
2138:/usr/include/c++/11/bits/basic_string.h **** #endif
2139:/usr/include/c++/11/bits/basic_string.h **** 
2140:/usr/include/c++/11/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
2141:/usr/include/c++/11/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
2142:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
2143:/usr/include/c++/11/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2144:/usr/include/c++/11/bits/basic_string.h **** 	      _CharT* __k1, _CharT* __k2)
2145:/usr/include/c++/11/bits/basic_string.h ****       {
2146:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2147:/usr/include/c++/11/bits/basic_string.h **** 				 && __i2 <= end());
2148:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2149:/usr/include/c++/11/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2150:/usr/include/c++/11/bits/basic_string.h **** 			     __k1, __k2 - __k1);
2151:/usr/include/c++/11/bits/basic_string.h ****       }
2152:/usr/include/c++/11/bits/basic_string.h **** 
2153:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
2154:/usr/include/c++/11/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2155:/usr/include/c++/11/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
2156:/usr/include/c++/11/bits/basic_string.h ****       {
2157:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2158:/usr/include/c++/11/bits/basic_string.h **** 				 && __i2 <= end());
2159:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2160:/usr/include/c++/11/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2161:/usr/include/c++/11/bits/basic_string.h **** 			     __k1, __k2 - __k1);
2162:/usr/include/c++/11/bits/basic_string.h ****       }
2163:/usr/include/c++/11/bits/basic_string.h **** 
2164:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
2165:/usr/include/c++/11/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2166:/usr/include/c++/11/bits/basic_string.h **** 	      iterator __k1, iterator __k2)
2167:/usr/include/c++/11/bits/basic_string.h ****       {
2168:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2169:/usr/include/c++/11/bits/basic_string.h **** 				 && __i2 <= end());
2170:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2171:/usr/include/c++/11/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2172:/usr/include/c++/11/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
2173:/usr/include/c++/11/bits/basic_string.h ****       }
2174:/usr/include/c++/11/bits/basic_string.h **** 
2175:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
2176:/usr/include/c++/11/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2177:/usr/include/c++/11/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
2178:/usr/include/c++/11/bits/basic_string.h ****       {
2179:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2180:/usr/include/c++/11/bits/basic_string.h **** 				 && __i2 <= end());
2181:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2182:/usr/include/c++/11/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2183:/usr/include/c++/11/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
2184:/usr/include/c++/11/bits/basic_string.h ****       }
2185:/usr/include/c++/11/bits/basic_string.h **** 
2186:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
2187:/usr/include/c++/11/bits/basic_string.h ****       /**
2188:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
2189:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2190:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2191:/usr/include/c++/11/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
2192:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
2193:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2194:/usr/include/c++/11/bits/basic_string.h ****        *
2195:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2196:/usr/include/c++/11/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2197:/usr/include/c++/11/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2198:/usr/include/c++/11/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2199:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.
2200:/usr/include/c++/11/bits/basic_string.h ****       */
2201:/usr/include/c++/11/bits/basic_string.h ****       basic_string& replace(const_iterator __i1, const_iterator __i2,
2202:/usr/include/c++/11/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
2203:/usr/include/c++/11/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.size()); }
2204:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
2205:/usr/include/c++/11/bits/basic_string.h **** 
2206:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
2207:/usr/include/c++/11/bits/basic_string.h ****       /**
2208:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2209:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  The position to replace at.
2210:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n    The number of characters to replace.
2211:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
2212:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
2213:/usr/include/c++/11/bits/basic_string.h ****       */
2214:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
2215:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2216:/usr/include/c++/11/bits/basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
2217:/usr/include/c++/11/bits/basic_string.h **** 	{
2218:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2219:/usr/include/c++/11/bits/basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
2220:/usr/include/c++/11/bits/basic_string.h **** 	}
2221:/usr/include/c++/11/bits/basic_string.h **** 
2222:/usr/include/c++/11/bits/basic_string.h ****       /**
2223:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2224:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos1  The position to replace at.
2225:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1    The number of characters to replace.
2226:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2227:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
2228:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n2    The number of characters to insert.
2229:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
2230:/usr/include/c++/11/bits/basic_string.h ****       */
2231:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
2232:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2233:/usr/include/c++/11/bits/basic_string.h **** 	replace(size_type __pos1, size_type __n1, const _Tp& __svt,
2234:/usr/include/c++/11/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
2235:/usr/include/c++/11/bits/basic_string.h **** 	{
2236:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2237:/usr/include/c++/11/bits/basic_string.h **** 	  return this->replace(__pos1, __n1,
2238:/usr/include/c++/11/bits/basic_string.h **** 	      __sv.data()
2239:/usr/include/c++/11/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
2240:/usr/include/c++/11/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
2241:/usr/include/c++/11/bits/basic_string.h **** 	}
2242:/usr/include/c++/11/bits/basic_string.h **** 
2243:/usr/include/c++/11/bits/basic_string.h ****       /**
2244:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2245:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i1    An iterator referencing the start position
2246:/usr/include/c++/11/bits/basic_string.h ****           to replace at.
2247:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i2    An iterator referencing the end position
2248:/usr/include/c++/11/bits/basic_string.h ****           for the replace.
2249:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2250:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
2251:/usr/include/c++/11/bits/basic_string.h ****       */
2252:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
2253:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2254:/usr/include/c++/11/bits/basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
2255:/usr/include/c++/11/bits/basic_string.h **** 	{
2256:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2257:/usr/include/c++/11/bits/basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
2258:/usr/include/c++/11/bits/basic_string.h **** 	}
2259:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
2260:/usr/include/c++/11/bits/basic_string.h **** 
2261:/usr/include/c++/11/bits/basic_string.h ****     private:
2262:/usr/include/c++/11/bits/basic_string.h ****       template<class _Integer>
2263:/usr/include/c++/11/bits/basic_string.h **** 	basic_string&
2264:/usr/include/c++/11/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2265:/usr/include/c++/11/bits/basic_string.h **** 			    _Integer __n, _Integer __val, __true_type)
2266:/usr/include/c++/11/bits/basic_string.h ****         { return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __val); }
2267:/usr/include/c++/11/bits/basic_string.h **** 
2268:/usr/include/c++/11/bits/basic_string.h ****       template<class _InputIterator>
2269:/usr/include/c++/11/bits/basic_string.h **** 	basic_string&
2270:/usr/include/c++/11/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2271:/usr/include/c++/11/bits/basic_string.h **** 			    _InputIterator __k1, _InputIterator __k2,
2272:/usr/include/c++/11/bits/basic_string.h **** 			    __false_type);
2273:/usr/include/c++/11/bits/basic_string.h **** 
2274:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
2275:/usr/include/c++/11/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
2276:/usr/include/c++/11/bits/basic_string.h **** 		     _CharT __c);
2277:/usr/include/c++/11/bits/basic_string.h **** 
2278:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
2279:/usr/include/c++/11/bits/basic_string.h ****       _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
2280:/usr/include/c++/11/bits/basic_string.h **** 		 const size_type __len2);
2281:/usr/include/c++/11/bits/basic_string.h **** 
2282:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
2283:/usr/include/c++/11/bits/basic_string.h ****       _M_append(const _CharT* __s, size_type __n);
2284:/usr/include/c++/11/bits/basic_string.h **** 
2285:/usr/include/c++/11/bits/basic_string.h ****     public:
2286:/usr/include/c++/11/bits/basic_string.h **** 
2287:/usr/include/c++/11/bits/basic_string.h ****       /**
2288:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Copy substring into C string.
2289:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to copy value into.
2290:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
2291:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
2292:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Number of characters actually copied
2293:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2294:/usr/include/c++/11/bits/basic_string.h ****        *
2295:/usr/include/c++/11/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
2296:/usr/include/c++/11/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
2297:/usr/include/c++/11/bits/basic_string.h ****        *  out_of_range is thrown.
2298:/usr/include/c++/11/bits/basic_string.h ****       */
2299:/usr/include/c++/11/bits/basic_string.h ****       size_type
2300:/usr/include/c++/11/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
2301:/usr/include/c++/11/bits/basic_string.h **** 
2302:/usr/include/c++/11/bits/basic_string.h ****       /**
2303:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Swap contents with another string.
2304:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  String to swap with.
2305:/usr/include/c++/11/bits/basic_string.h ****        *
2306:/usr/include/c++/11/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
2307:/usr/include/c++/11/bits/basic_string.h ****        *  time.
2308:/usr/include/c++/11/bits/basic_string.h ****       */
2309:/usr/include/c++/11/bits/basic_string.h ****       void
2310:/usr/include/c++/11/bits/basic_string.h ****       swap(basic_string& __s) _GLIBCXX_NOEXCEPT;
2311:/usr/include/c++/11/bits/basic_string.h **** 
2312:/usr/include/c++/11/bits/basic_string.h ****       // String operations:
2313:/usr/include/c++/11/bits/basic_string.h ****       /**
2314:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
2315:/usr/include/c++/11/bits/basic_string.h ****        *
2316:/usr/include/c++/11/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
2317:/usr/include/c++/11/bits/basic_string.h ****        *  happen.
2318:/usr/include/c++/11/bits/basic_string.h ****       */
2319:/usr/include/c++/11/bits/basic_string.h ****       const _CharT*
2320:/usr/include/c++/11/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
2321:/usr/include/c++/11/bits/basic_string.h ****       { return _M_data(); }
2322:/usr/include/c++/11/bits/basic_string.h **** 
2323:/usr/include/c++/11/bits/basic_string.h ****       /**
2324:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
2325:/usr/include/c++/11/bits/basic_string.h ****        *
2326:/usr/include/c++/11/bits/basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
2327:/usr/include/c++/11/bits/basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
2328:/usr/include/c++/11/bits/basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
2329:/usr/include/c++/11/bits/basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
2330:/usr/include/c++/11/bits/basic_string.h ****       */
2331:/usr/include/c++/11/bits/basic_string.h ****       const _CharT*
2332:/usr/include/c++/11/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
2333:/usr/include/c++/11/bits/basic_string.h ****       { return _M_data(); }
2334:/usr/include/c++/11/bits/basic_string.h **** 
2335:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
2336:/usr/include/c++/11/bits/basic_string.h ****       /**
2337:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Return non-const pointer to contents.
2338:/usr/include/c++/11/bits/basic_string.h ****        *
2339:/usr/include/c++/11/bits/basic_string.h ****        *  This is a pointer to the character sequence held by the string.
2340:/usr/include/c++/11/bits/basic_string.h ****        *  Modifying the characters in the sequence is allowed.
2341:/usr/include/c++/11/bits/basic_string.h ****       */
2342:/usr/include/c++/11/bits/basic_string.h ****       _CharT*
2343:/usr/include/c++/11/bits/basic_string.h ****       data() noexcept
2344:/usr/include/c++/11/bits/basic_string.h ****       { return _M_data(); }
2345:/usr/include/c++/11/bits/basic_string.h **** #endif
2346:/usr/include/c++/11/bits/basic_string.h **** 
2347:/usr/include/c++/11/bits/basic_string.h ****       /**
2348:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
2349:/usr/include/c++/11/bits/basic_string.h ****       */
2350:/usr/include/c++/11/bits/basic_string.h ****       allocator_type
2351:/usr/include/c++/11/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
2352:/usr/include/c++/11/bits/basic_string.h ****       { return _M_get_allocator(); }
2353:/usr/include/c++/11/bits/basic_string.h **** 
2354:/usr/include/c++/11/bits/basic_string.h ****       /**
2355:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a C substring.
2356:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to locate.
2357:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2358:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
2359:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2360:/usr/include/c++/11/bits/basic_string.h ****        *
2361:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
2362:/usr/include/c++/11/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2363:/usr/include/c++/11/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
2364:/usr/include/c++/11/bits/basic_string.h ****        *  npos.
2365:/usr/include/c++/11/bits/basic_string.h ****       */
2366:/usr/include/c++/11/bits/basic_string.h ****       size_type
2367:/usr/include/c++/11/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
2368:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2369:/usr/include/c++/11/bits/basic_string.h **** 
2370:/usr/include/c++/11/bits/basic_string.h ****       /**
2371:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a string.
2372:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String to locate.
2373:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2374:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2375:/usr/include/c++/11/bits/basic_string.h ****        *
2376:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
2377:/usr/include/c++/11/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
2378:/usr/include/c++/11/bits/basic_string.h ****        *  found, returns npos.
2379:/usr/include/c++/11/bits/basic_string.h ****       */
2380:/usr/include/c++/11/bits/basic_string.h ****       size_type
2381:/usr/include/c++/11/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
2382:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2383:/usr/include/c++/11/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
2384:/usr/include/c++/11/bits/basic_string.h **** 
2385:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
2386:/usr/include/c++/11/bits/basic_string.h ****       /**
2387:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a string_view.
2388:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2389:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2390:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2391:/usr/include/c++/11/bits/basic_string.h ****       */
2392:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
2393:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2394:/usr/include/c++/11/bits/basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
2395:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2396:/usr/include/c++/11/bits/basic_string.h **** 	{
2397:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2398:/usr/include/c++/11/bits/basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
2399:/usr/include/c++/11/bits/basic_string.h **** 	}
2400:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
2401:/usr/include/c++/11/bits/basic_string.h **** 
2402:/usr/include/c++/11/bits/basic_string.h ****       /**
2403:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a C string.
2404:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to locate.
2405:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2406:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2407:/usr/include/c++/11/bits/basic_string.h ****        *
2408:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
2409:/usr/include/c++/11/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
2410:/usr/include/c++/11/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
2411:/usr/include/c++/11/bits/basic_string.h ****       */
2412:/usr/include/c++/11/bits/basic_string.h ****       size_type
2413:/usr/include/c++/11/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2414:/usr/include/c++/11/bits/basic_string.h ****       {
2415:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2416:/usr/include/c++/11/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
2417:/usr/include/c++/11/bits/basic_string.h ****       }
2418:/usr/include/c++/11/bits/basic_string.h **** 
2419:/usr/include/c++/11/bits/basic_string.h ****       /**
2420:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character.
2421:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to locate.
2422:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2423:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
2424:/usr/include/c++/11/bits/basic_string.h ****        *
2425:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
2426:/usr/include/c++/11/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2427:/usr/include/c++/11/bits/basic_string.h ****        *  found.  If not found, returns npos.
2428:/usr/include/c++/11/bits/basic_string.h ****       */
2429:/usr/include/c++/11/bits/basic_string.h ****       size_type
2430:/usr/include/c++/11/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
2431:/usr/include/c++/11/bits/basic_string.h **** 
2432:/usr/include/c++/11/bits/basic_string.h ****       /**
2433:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a string.
2434:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String to locate.
2435:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2436:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2437:/usr/include/c++/11/bits/basic_string.h ****        *
2438:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
2439:/usr/include/c++/11/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
2440:/usr/include/c++/11/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
2441:/usr/include/c++/11/bits/basic_string.h ****       */
2442:/usr/include/c++/11/bits/basic_string.h ****       size_type
2443:/usr/include/c++/11/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
2444:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2445:/usr/include/c++/11/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
2446:/usr/include/c++/11/bits/basic_string.h **** 
2447:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
2448:/usr/include/c++/11/bits/basic_string.h ****       /**
2449:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a string_view.
2450:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2451:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2452:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2453:/usr/include/c++/11/bits/basic_string.h ****       */
2454:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
2455:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2456:/usr/include/c++/11/bits/basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
2457:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2458:/usr/include/c++/11/bits/basic_string.h **** 	{
2459:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2460:/usr/include/c++/11/bits/basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
2461:/usr/include/c++/11/bits/basic_string.h **** 	}
2462:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
2463:/usr/include/c++/11/bits/basic_string.h **** 
2464:/usr/include/c++/11/bits/basic_string.h ****       /**
2465:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
2466:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to locate.
2467:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2468:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2469:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2470:/usr/include/c++/11/bits/basic_string.h ****        *
2471:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
2472:/usr/include/c++/11/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2473:/usr/include/c++/11/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
2474:/usr/include/c++/11/bits/basic_string.h ****        *  npos.
2475:/usr/include/c++/11/bits/basic_string.h ****       */
2476:/usr/include/c++/11/bits/basic_string.h ****       size_type
2477:/usr/include/c++/11/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
2478:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2479:/usr/include/c++/11/bits/basic_string.h **** 
2480:/usr/include/c++/11/bits/basic_string.h ****       /**
2481:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a C string.
2482:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to locate.
2483:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
2484:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
2485:/usr/include/c++/11/bits/basic_string.h ****        *
2486:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
2487:/usr/include/c++/11/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
2488:/usr/include/c++/11/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
2489:/usr/include/c++/11/bits/basic_string.h ****       */
2490:/usr/include/c++/11/bits/basic_string.h ****       size_type
2491:/usr/include/c++/11/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
2492:/usr/include/c++/11/bits/basic_string.h ****       {
2493:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2494:/usr/include/c++/11/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
2495:/usr/include/c++/11/bits/basic_string.h ****       }
2496:/usr/include/c++/11/bits/basic_string.h **** 
2497:/usr/include/c++/11/bits/basic_string.h ****       /**
2498:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character.
2499:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to locate.
2500:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2501:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
2502:/usr/include/c++/11/bits/basic_string.h ****        *
2503:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2504:/usr/include/c++/11/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2505:/usr/include/c++/11/bits/basic_string.h ****        *  found.  If not found, returns npos.
2506:/usr/include/c++/11/bits/basic_string.h ****       */
2507:/usr/include/c++/11/bits/basic_string.h ****       size_type
2508:/usr/include/c++/11/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
2509:/usr/include/c++/11/bits/basic_string.h **** 
2510:/usr/include/c++/11/bits/basic_string.h ****       /**
2511:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character of string.
2512:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2513:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2514:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
2515:/usr/include/c++/11/bits/basic_string.h ****        *
2516:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2517:/usr/include/c++/11/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2518:/usr/include/c++/11/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2519:/usr/include/c++/11/bits/basic_string.h ****        *  npos.
2520:/usr/include/c++/11/bits/basic_string.h ****       */
2521:/usr/include/c++/11/bits/basic_string.h ****       size_type
2522:/usr/include/c++/11/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
2523:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2524:/usr/include/c++/11/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
2525:/usr/include/c++/11/bits/basic_string.h **** 
2526:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
2527:/usr/include/c++/11/bits/basic_string.h ****       /**
2528:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character of a string_view.
2529:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2530:/usr/include/c++/11/bits/basic_string.h ****        *                characters to locate.
2531:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2532:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
2533:/usr/include/c++/11/bits/basic_string.h ****       */
2534:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
2535:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2536:/usr/include/c++/11/bits/basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
2537:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2538:/usr/include/c++/11/bits/basic_string.h **** 	{
2539:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2540:/usr/include/c++/11/bits/basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
2541:/usr/include/c++/11/bits/basic_string.h **** 	}
2542:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
2543:/usr/include/c++/11/bits/basic_string.h **** 
2544:/usr/include/c++/11/bits/basic_string.h ****       /**
2545:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
2546:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2547:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2548:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2549:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
2550:/usr/include/c++/11/bits/basic_string.h ****        *
2551:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2552:/usr/include/c++/11/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2553:/usr/include/c++/11/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2554:/usr/include/c++/11/bits/basic_string.h ****        *  returns npos.
2555:/usr/include/c++/11/bits/basic_string.h ****       */
2556:/usr/include/c++/11/bits/basic_string.h ****       size_type
2557:/usr/include/c++/11/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
2558:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2559:/usr/include/c++/11/bits/basic_string.h **** 
2560:/usr/include/c++/11/bits/basic_string.h ****       /**
2561:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
2562:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2563:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2564:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
2565:/usr/include/c++/11/bits/basic_string.h ****        *
2566:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2567:/usr/include/c++/11/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2568:/usr/include/c++/11/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2569:/usr/include/c++/11/bits/basic_string.h ****       */
2570:/usr/include/c++/11/bits/basic_string.h ****       size_type
2571:/usr/include/c++/11/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
2572:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2573:/usr/include/c++/11/bits/basic_string.h ****       {
2574:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2575:/usr/include/c++/11/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
2576:/usr/include/c++/11/bits/basic_string.h ****       }
2577:/usr/include/c++/11/bits/basic_string.h **** 
2578:/usr/include/c++/11/bits/basic_string.h ****       /**
2579:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character.
2580:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to locate.
2581:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2582:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
2583:/usr/include/c++/11/bits/basic_string.h ****        *
2584:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
2585:/usr/include/c++/11/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
2586:/usr/include/c++/11/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
2587:/usr/include/c++/11/bits/basic_string.h ****        *
2588:/usr/include/c++/11/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
2589:/usr/include/c++/11/bits/basic_string.h ****       */
2590:/usr/include/c++/11/bits/basic_string.h ****       size_type
2591:/usr/include/c++/11/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2592:/usr/include/c++/11/bits/basic_string.h ****       { return this->find(__c, __pos); }
2593:/usr/include/c++/11/bits/basic_string.h **** 
2594:/usr/include/c++/11/bits/basic_string.h ****       /**
2595:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2596:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2597:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2598:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
2599:/usr/include/c++/11/bits/basic_string.h ****        *
2600:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2601:/usr/include/c++/11/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2602:/usr/include/c++/11/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2603:/usr/include/c++/11/bits/basic_string.h ****        *  npos.
2604:/usr/include/c++/11/bits/basic_string.h ****       */
2605:/usr/include/c++/11/bits/basic_string.h ****       size_type
2606:/usr/include/c++/11/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
2607:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2608:/usr/include/c++/11/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
2609:/usr/include/c++/11/bits/basic_string.h **** 
2610:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
2611:/usr/include/c++/11/bits/basic_string.h ****       /**
2612:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2613:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2614:/usr/include/c++/11/bits/basic_string.h ****        *                characters to locate.
2615:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2616:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
2617:/usr/include/c++/11/bits/basic_string.h ****       */
2618:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
2619:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2620:/usr/include/c++/11/bits/basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
2621:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2622:/usr/include/c++/11/bits/basic_string.h **** 	{
2623:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2624:/usr/include/c++/11/bits/basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
2625:/usr/include/c++/11/bits/basic_string.h **** 	}
2626:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
2627:/usr/include/c++/11/bits/basic_string.h **** 
2628:/usr/include/c++/11/bits/basic_string.h ****       /**
2629:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
2630:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2631:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2632:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2633:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
2634:/usr/include/c++/11/bits/basic_string.h ****        *
2635:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2636:/usr/include/c++/11/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2637:/usr/include/c++/11/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2638:/usr/include/c++/11/bits/basic_string.h ****        *  returns npos.
2639:/usr/include/c++/11/bits/basic_string.h ****       */
2640:/usr/include/c++/11/bits/basic_string.h ****       size_type
2641:/usr/include/c++/11/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
2642:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2643:/usr/include/c++/11/bits/basic_string.h **** 
2644:/usr/include/c++/11/bits/basic_string.h ****       /**
2645:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
2646:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2647:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2648:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
2649:/usr/include/c++/11/bits/basic_string.h ****        *
2650:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2651:/usr/include/c++/11/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2652:/usr/include/c++/11/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2653:/usr/include/c++/11/bits/basic_string.h ****       */
2654:/usr/include/c++/11/bits/basic_string.h ****       size_type
2655:/usr/include/c++/11/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
2656:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2657:/usr/include/c++/11/bits/basic_string.h ****       {
2658:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2659:/usr/include/c++/11/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
2660:/usr/include/c++/11/bits/basic_string.h ****       }
2661:/usr/include/c++/11/bits/basic_string.h **** 
2662:/usr/include/c++/11/bits/basic_string.h ****       /**
2663:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character.
2664:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to locate.
2665:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2666:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
2667:/usr/include/c++/11/bits/basic_string.h ****        *
2668:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2669:/usr/include/c++/11/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2670:/usr/include/c++/11/bits/basic_string.h ****        *  found.  If not found, returns npos.
2671:/usr/include/c++/11/bits/basic_string.h ****        *
2672:/usr/include/c++/11/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
2673:/usr/include/c++/11/bits/basic_string.h ****       */
2674:/usr/include/c++/11/bits/basic_string.h ****       size_type
2675:/usr/include/c++/11/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
2676:/usr/include/c++/11/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
2677:/usr/include/c++/11/bits/basic_string.h **** 
2678:/usr/include/c++/11/bits/basic_string.h ****       /**
2679:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
2680:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2681:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2682:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
2683:/usr/include/c++/11/bits/basic_string.h ****        *
2684:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
2685:/usr/include/c++/11/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
2686:/usr/include/c++/11/bits/basic_string.h ****        *  was found.  If not found, returns npos.
2687:/usr/include/c++/11/bits/basic_string.h ****       */
2688:/usr/include/c++/11/bits/basic_string.h ****       size_type
2689:/usr/include/c++/11/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
2690:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2691:/usr/include/c++/11/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
2692:/usr/include/c++/11/bits/basic_string.h **** 
2693:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
2694:/usr/include/c++/11/bits/basic_string.h ****       /**
2695:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character not in a string_view.
2696:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  A object convertible to string_view containing
2697:/usr/include/c++/11/bits/basic_string.h ****        *                characters to avoid.
2698:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2699:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
2700:/usr/include/c++/11/bits/basic_string.h ****        */
2701:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
2702:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2703:/usr/include/c++/11/bits/basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
2704:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2705:/usr/include/c++/11/bits/basic_string.h **** 	{
2706:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2707:/usr/include/c++/11/bits/basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
2708:/usr/include/c++/11/bits/basic_string.h **** 	}
2709:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
2710:/usr/include/c++/11/bits/basic_string.h **** 
2711:/usr/include/c++/11/bits/basic_string.h ****       /**
2712:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
2713:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2714:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2715:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
2716:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
2717:/usr/include/c++/11/bits/basic_string.h ****        *
2718:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2719:/usr/include/c++/11/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
2720:/usr/include/c++/11/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2721:/usr/include/c++/11/bits/basic_string.h ****        *  found.  If not found, returns npos.
2722:/usr/include/c++/11/bits/basic_string.h ****       */
2723:/usr/include/c++/11/bits/basic_string.h ****       size_type
2724:/usr/include/c++/11/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
2725:/usr/include/c++/11/bits/basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
2726:/usr/include/c++/11/bits/basic_string.h **** 
2727:/usr/include/c++/11/bits/basic_string.h ****       /**
2728:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
2729:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2730:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2731:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
2732:/usr/include/c++/11/bits/basic_string.h ****        *
2733:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2734:/usr/include/c++/11/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
2735:/usr/include/c++/11/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2736:/usr/include/c++/11/bits/basic_string.h ****       */
2737:/usr/include/c++/11/bits/basic_string.h ****       size_type
2738:/usr/include/c++/11/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
2739:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2740:/usr/include/c++/11/bits/basic_string.h ****       {
2741:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2742:/usr/include/c++/11/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
2743:/usr/include/c++/11/bits/basic_string.h ****       }
2744:/usr/include/c++/11/bits/basic_string.h **** 
2745:/usr/include/c++/11/bits/basic_string.h ****       /**
2746:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a different character.
2747:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to avoid.
2748:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2749:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
2750:/usr/include/c++/11/bits/basic_string.h ****        *
2751:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
2752:/usr/include/c++/11/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
2753:/usr/include/c++/11/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
2754:/usr/include/c++/11/bits/basic_string.h ****       */
2755:/usr/include/c++/11/bits/basic_string.h ****       size_type
2756:/usr/include/c++/11/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
2757:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2758:/usr/include/c++/11/bits/basic_string.h **** 
2759:/usr/include/c++/11/bits/basic_string.h ****       /**
2760:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
2761:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2762:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2763:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
2764:/usr/include/c++/11/bits/basic_string.h ****        *
2765:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2766:/usr/include/c++/11/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
2767:/usr/include/c++/11/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2768:/usr/include/c++/11/bits/basic_string.h ****        *  npos.
2769:/usr/include/c++/11/bits/basic_string.h ****       */
2770:/usr/include/c++/11/bits/basic_string.h ****       size_type
2771:/usr/include/c++/11/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
2772:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2773:/usr/include/c++/11/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
2774:/usr/include/c++/11/bits/basic_string.h **** 
2775:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
2776:/usr/include/c++/11/bits/basic_string.h ****       /**
2777:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
2778:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2779:/usr/include/c++/11/bits/basic_string.h ****        *                characters to avoid.
2780:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2781:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
2782:/usr/include/c++/11/bits/basic_string.h ****        */
2783:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
2784:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2785:/usr/include/c++/11/bits/basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
2786:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2787:/usr/include/c++/11/bits/basic_string.h **** 	{
2788:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2789:/usr/include/c++/11/bits/basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
2790:/usr/include/c++/11/bits/basic_string.h **** 	}
2791:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
2792:/usr/include/c++/11/bits/basic_string.h **** 
2793:/usr/include/c++/11/bits/basic_string.h ****       /**
2794:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
2795:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2796:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2797:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
2798:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
2799:/usr/include/c++/11/bits/basic_string.h ****        *
2800:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
2801:/usr/include/c++/11/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
2802:/usr/include/c++/11/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
2803:/usr/include/c++/11/bits/basic_string.h ****        *  returns npos.
2804:/usr/include/c++/11/bits/basic_string.h ****       */
2805:/usr/include/c++/11/bits/basic_string.h ****       size_type
2806:/usr/include/c++/11/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
2807:/usr/include/c++/11/bits/basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
2808:/usr/include/c++/11/bits/basic_string.h ****       /**
2809:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
2810:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2811:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2812:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
2813:/usr/include/c++/11/bits/basic_string.h ****        *
2814:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2815:/usr/include/c++/11/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
2816:/usr/include/c++/11/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2817:/usr/include/c++/11/bits/basic_string.h ****        *  npos.
2818:/usr/include/c++/11/bits/basic_string.h ****       */
2819:/usr/include/c++/11/bits/basic_string.h ****       size_type
2820:/usr/include/c++/11/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
2821:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2822:/usr/include/c++/11/bits/basic_string.h ****       {
2823:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2824:/usr/include/c++/11/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
2825:/usr/include/c++/11/bits/basic_string.h ****       }
2826:/usr/include/c++/11/bits/basic_string.h **** 
2827:/usr/include/c++/11/bits/basic_string.h ****       /**
2828:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a different character.
2829:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to avoid.
2830:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2831:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
2832:/usr/include/c++/11/bits/basic_string.h ****        *
2833:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
2834:/usr/include/c++/11/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
2835:/usr/include/c++/11/bits/basic_string.h ****        *  found.  If not found, returns npos.
2836:/usr/include/c++/11/bits/basic_string.h ****       */
2837:/usr/include/c++/11/bits/basic_string.h ****       size_type
2838:/usr/include/c++/11/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
2839:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2840:/usr/include/c++/11/bits/basic_string.h **** 
2841:/usr/include/c++/11/bits/basic_string.h ****       /**
2842:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Get a substring.
2843:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
2844:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
2845:/usr/include/c++/11/bits/basic_string.h ****        *  @return  The new string.
2846:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2847:/usr/include/c++/11/bits/basic_string.h ****        *
2848:/usr/include/c++/11/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
2849:/usr/include/c++/11/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
2850:/usr/include/c++/11/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
2851:/usr/include/c++/11/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
2852:/usr/include/c++/11/bits/basic_string.h ****       */
2853:/usr/include/c++/11/bits/basic_string.h ****       basic_string
2854:/usr/include/c++/11/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
2855:/usr/include/c++/11/bits/basic_string.h ****       { return basic_string(*this,
2856:/usr/include/c++/11/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
2857:/usr/include/c++/11/bits/basic_string.h **** 
2858:/usr/include/c++/11/bits/basic_string.h ****       /**
2859:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare to a string.
2860:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String to compare against.
2861:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2862:/usr/include/c++/11/bits/basic_string.h ****        *
2863:/usr/include/c++/11/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
2864:/usr/include/c++/11/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
2865:/usr/include/c++/11/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
2866:/usr/include/c++/11/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
2867:/usr/include/c++/11/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
2868:/usr/include/c++/11/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
2869:/usr/include/c++/11/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2870:/usr/include/c++/11/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2871:/usr/include/c++/11/bits/basic_string.h ****       */
2872:/usr/include/c++/11/bits/basic_string.h ****       int
2873:/usr/include/c++/11/bits/basic_string.h ****       compare(const basic_string& __str) const
2874:/usr/include/c++/11/bits/basic_string.h ****       {
2875:/usr/include/c++/11/bits/basic_string.h **** 	const size_type __size = this->size();
2876:/usr/include/c++/11/bits/basic_string.h **** 	const size_type __osize = __str.size();
2877:/usr/include/c++/11/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
2878:/usr/include/c++/11/bits/basic_string.h **** 
2879:/usr/include/c++/11/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
2880:/usr/include/c++/11/bits/basic_string.h **** 	if (!__r)
2881:/usr/include/c++/11/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
2882:/usr/include/c++/11/bits/basic_string.h **** 	return __r;
2883:/usr/include/c++/11/bits/basic_string.h ****       }
2884:/usr/include/c++/11/bits/basic_string.h **** 
2885:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
2886:/usr/include/c++/11/bits/basic_string.h ****       /**
2887:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2888:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
2889:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2890:/usr/include/c++/11/bits/basic_string.h ****        */
2891:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
2892:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, int>
2893:/usr/include/c++/11/bits/basic_string.h **** 	compare(const _Tp& __svt) const
2894:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2895:/usr/include/c++/11/bits/basic_string.h **** 	{
2896:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2897:/usr/include/c++/11/bits/basic_string.h **** 	  const size_type __size = this->size();
2898:/usr/include/c++/11/bits/basic_string.h **** 	  const size_type __osize = __sv.size();
2899:/usr/include/c++/11/bits/basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
2900:/usr/include/c++/11/bits/basic_string.h **** 
2901:/usr/include/c++/11/bits/basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
2902:/usr/include/c++/11/bits/basic_string.h **** 	  if (!__r)
2903:/usr/include/c++/11/bits/basic_string.h **** 	    __r = _S_compare(__size, __osize);
2904:/usr/include/c++/11/bits/basic_string.h **** 	  return __r;
2905:/usr/include/c++/11/bits/basic_string.h **** 	}
2906:/usr/include/c++/11/bits/basic_string.h **** 
2907:/usr/include/c++/11/bits/basic_string.h ****       /**
2908:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2909:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
2910:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  The number of characters to compare.
2911:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2912:/usr/include/c++/11/bits/basic_string.h ****        *                against.
2913:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2914:/usr/include/c++/11/bits/basic_string.h ****        */
2915:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
2916:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, int>
2917:/usr/include/c++/11/bits/basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
2918:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2919:/usr/include/c++/11/bits/basic_string.h **** 	{
2920:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2921:/usr/include/c++/11/bits/basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
2922:/usr/include/c++/11/bits/basic_string.h **** 	}
2923:/usr/include/c++/11/bits/basic_string.h **** 
2924:/usr/include/c++/11/bits/basic_string.h ****       /**
2925:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2926:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
2927:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  The number of characters to compare.
2928:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2929:/usr/include/c++/11/bits/basic_string.h ****        *                against.
2930:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
2931:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n2  The number of characters to compare.
2932:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2933:/usr/include/c++/11/bits/basic_string.h ****        */
2934:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
2935:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, int>
2936:/usr/include/c++/11/bits/basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
2937:/usr/include/c++/11/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
2938:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2939:/usr/include/c++/11/bits/basic_string.h **** 	{
2940:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2941:/usr/include/c++/11/bits/basic_string.h **** 	  return __sv_type(*this)
2942:/usr/include/c++/11/bits/basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
2943:/usr/include/c++/11/bits/basic_string.h **** 	}
2944:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
2945:/usr/include/c++/11/bits/basic_string.h **** 
2946:/usr/include/c++/11/bits/basic_string.h ****       /**
2947:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare substring to a string.
2948:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2949:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
2950:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String to compare against.
2951:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2952:/usr/include/c++/11/bits/basic_string.h ****        *
2953:/usr/include/c++/11/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
2954:/usr/include/c++/11/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
2955:/usr/include/c++/11/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
2956:/usr/include/c++/11/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
2957:/usr/include/c++/11/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
2958:/usr/include/c++/11/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
2959:/usr/include/c++/11/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
2960:/usr/include/c++/11/bits/basic_string.h ****        *  strings by calling
2961:/usr/include/c++/11/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
2962:/usr/include/c++/11/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
2963:/usr/include/c++/11/bits/basic_string.h ****        *  the shorter one is ordered first.
2964:/usr/include/c++/11/bits/basic_string.h ****       */
2965:/usr/include/c++/11/bits/basic_string.h ****       int
2966:/usr/include/c++/11/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
2967:/usr/include/c++/11/bits/basic_string.h **** 
2968:/usr/include/c++/11/bits/basic_string.h ****       /**
2969:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
2970:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
2971:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2972:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String to compare against.
2973:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
2974:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
2975:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2976:/usr/include/c++/11/bits/basic_string.h ****        *
2977:/usr/include/c++/11/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2978:/usr/include/c++/11/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
2979:/usr/include/c++/11/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
2980:/usr/include/c++/11/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
2981:/usr/include/c++/11/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
2982:/usr/include/c++/11/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
2983:/usr/include/c++/11/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
2984:/usr/include/c++/11/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
2985:/usr/include/c++/11/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
2986:/usr/include/c++/11/bits/basic_string.h ****        *  calling
2987:/usr/include/c++/11/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
2988:/usr/include/c++/11/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2989:/usr/include/c++/11/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2990:/usr/include/c++/11/bits/basic_string.h ****       */
2991:/usr/include/c++/11/bits/basic_string.h ****       int
2992:/usr/include/c++/11/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
2993:/usr/include/c++/11/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
2994:/usr/include/c++/11/bits/basic_string.h **** 
2995:/usr/include/c++/11/bits/basic_string.h ****       /**
2996:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare to a C string.
2997:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to compare against.
2998:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2999:/usr/include/c++/11/bits/basic_string.h ****        *
3000:/usr/include/c++/11/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
3001:/usr/include/c++/11/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
3002:/usr/include/c++/11/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
3003:/usr/include/c++/11/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
3004:/usr/include/c++/11/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
3005:/usr/include/c++/11/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
3006:/usr/include/c++/11/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
3007:/usr/include/c++/11/bits/basic_string.h ****        *  ordered first.
3008:/usr/include/c++/11/bits/basic_string.h ****       */
3009:/usr/include/c++/11/bits/basic_string.h ****       int
3010:/usr/include/c++/11/bits/basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
3011:/usr/include/c++/11/bits/basic_string.h **** 
3012:/usr/include/c++/11/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
3013:/usr/include/c++/11/bits/basic_string.h ****       // 5 String::compare specification questionable
3014:/usr/include/c++/11/bits/basic_string.h ****       /**
3015:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
3016:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
3017:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
3018:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to compare against.
3019:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3020:/usr/include/c++/11/bits/basic_string.h ****        *
3021:/usr/include/c++/11/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
3022:/usr/include/c++/11/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
3023:/usr/include/c++/11/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
3024:/usr/include/c++/11/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
3025:/usr/include/c++/11/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
3026:/usr/include/c++/11/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
3027:/usr/include/c++/11/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
3028:/usr/include/c++/11/bits/basic_string.h ****        *  function then compares the two string by calling
3029:/usr/include/c++/11/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
3030:/usr/include/c++/11/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3031:/usr/include/c++/11/bits/basic_string.h ****        *  one is ordered first.
3032:/usr/include/c++/11/bits/basic_string.h ****       */
3033:/usr/include/c++/11/bits/basic_string.h ****       int
3034:/usr/include/c++/11/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
3035:/usr/include/c++/11/bits/basic_string.h **** 
3036:/usr/include/c++/11/bits/basic_string.h ****       /**
3037:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
3038:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
3039:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
3040:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  character %array to compare against.
3041:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
3042:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3043:/usr/include/c++/11/bits/basic_string.h ****        *
3044:/usr/include/c++/11/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
3045:/usr/include/c++/11/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
3046:/usr/include/c++/11/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
3047:/usr/include/c++/11/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
3048:/usr/include/c++/11/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
3049:/usr/include/c++/11/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
3050:/usr/include/c++/11/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
3051:/usr/include/c++/11/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
3052:/usr/include/c++/11/bits/basic_string.h ****        *  function then compares the two strings by calling
3053:/usr/include/c++/11/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
3054:/usr/include/c++/11/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3055:/usr/include/c++/11/bits/basic_string.h ****        *  one is ordered first.
3056:/usr/include/c++/11/bits/basic_string.h ****        *
3057:/usr/include/c++/11/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
3058:/usr/include/c++/11/bits/basic_string.h ****        *  no special meaning.
3059:/usr/include/c++/11/bits/basic_string.h ****       */
3060:/usr/include/c++/11/bits/basic_string.h ****       int
3061:/usr/include/c++/11/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
3062:/usr/include/c++/11/bits/basic_string.h **** 	      size_type __n2) const;
3063:/usr/include/c++/11/bits/basic_string.h **** 
3064:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus > 201703L
3065:/usr/include/c++/11/bits/basic_string.h ****       bool
3066:/usr/include/c++/11/bits/basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3067:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3068:/usr/include/c++/11/bits/basic_string.h **** 
3069:/usr/include/c++/11/bits/basic_string.h ****       bool
3070:/usr/include/c++/11/bits/basic_string.h ****       starts_with(_CharT __x) const noexcept
3071:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3072:/usr/include/c++/11/bits/basic_string.h **** 
3073:/usr/include/c++/11/bits/basic_string.h ****       bool
3074:/usr/include/c++/11/bits/basic_string.h ****       starts_with(const _CharT* __x) const noexcept
3075:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3076:/usr/include/c++/11/bits/basic_string.h **** 
3077:/usr/include/c++/11/bits/basic_string.h ****       bool
3078:/usr/include/c++/11/bits/basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3079:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3080:/usr/include/c++/11/bits/basic_string.h **** 
3081:/usr/include/c++/11/bits/basic_string.h ****       bool
3082:/usr/include/c++/11/bits/basic_string.h ****       ends_with(_CharT __x) const noexcept
3083:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3084:/usr/include/c++/11/bits/basic_string.h **** 
3085:/usr/include/c++/11/bits/basic_string.h ****       bool
3086:/usr/include/c++/11/bits/basic_string.h ****       ends_with(const _CharT* __x) const noexcept
3087:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3088:/usr/include/c++/11/bits/basic_string.h **** #endif // C++20
3089:/usr/include/c++/11/bits/basic_string.h **** 
3090:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus > 202002L
3091:/usr/include/c++/11/bits/basic_string.h ****       bool
3092:/usr/include/c++/11/bits/basic_string.h ****       contains(basic_string_view<_CharT, _Traits> __x) const noexcept
3093:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).contains(__x); }
3094:/usr/include/c++/11/bits/basic_string.h **** 
3095:/usr/include/c++/11/bits/basic_string.h ****       bool
3096:/usr/include/c++/11/bits/basic_string.h ****       contains(_CharT __x) const noexcept
3097:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).contains(__x); }
3098:/usr/include/c++/11/bits/basic_string.h **** 
3099:/usr/include/c++/11/bits/basic_string.h ****       bool
3100:/usr/include/c++/11/bits/basic_string.h ****       contains(const _CharT* __x) const noexcept
3101:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).contains(__x); }
3102:/usr/include/c++/11/bits/basic_string.h **** #endif // C++23
3103:/usr/include/c++/11/bits/basic_string.h **** 
3104:/usr/include/c++/11/bits/basic_string.h ****       // Allow basic_stringbuf::__xfer_bufptrs to call _M_length:
3105:/usr/include/c++/11/bits/basic_string.h ****       template<typename, typename, typename> friend class basic_stringbuf;
3106:/usr/include/c++/11/bits/basic_string.h ****     };
3107:/usr/include/c++/11/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
3108:/usr/include/c++/11/bits/basic_string.h **** #else  // !_GLIBCXX_USE_CXX11_ABI
3109:/usr/include/c++/11/bits/basic_string.h ****   // Reference-counted COW string implentation
3110:/usr/include/c++/11/bits/basic_string.h **** 
3111:/usr/include/c++/11/bits/basic_string.h ****   /**
3112:/usr/include/c++/11/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
3113:/usr/include/c++/11/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
3114:/usr/include/c++/11/bits/basic_string.h ****    *
3115:/usr/include/c++/11/bits/basic_string.h ****    *  @ingroup strings
3116:/usr/include/c++/11/bits/basic_string.h ****    *  @ingroup sequences
3117:/usr/include/c++/11/bits/basic_string.h ****    *
3118:/usr/include/c++/11/bits/basic_string.h ****    *  @tparam _CharT  Type of character
3119:/usr/include/c++/11/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
3120:/usr/include/c++/11/bits/basic_string.h ****    *                   char_traits<_CharT>.
3121:/usr/include/c++/11/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
3122:/usr/include/c++/11/bits/basic_string.h ****    *
3123:/usr/include/c++/11/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
3124:/usr/include/c++/11/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
3125:/usr/include/c++/11/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
3126:/usr/include/c++/11/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
3127:/usr/include/c++/11/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
3128:/usr/include/c++/11/bits/basic_string.h ****    *
3129:/usr/include/c++/11/bits/basic_string.h ****    *  @doctodo
3130:/usr/include/c++/11/bits/basic_string.h ****    *
3131:/usr/include/c++/11/bits/basic_string.h ****    *
3132:/usr/include/c++/11/bits/basic_string.h ****    *  Documentation?  What's that?
3133:/usr/include/c++/11/bits/basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
3134:/usr/include/c++/11/bits/basic_string.h ****    *
3135:/usr/include/c++/11/bits/basic_string.h ****    *  A string looks like this:
3136:/usr/include/c++/11/bits/basic_string.h ****    *
3137:/usr/include/c++/11/bits/basic_string.h ****    *  @code
3138:/usr/include/c++/11/bits/basic_string.h ****    *                                        [_Rep]
3139:/usr/include/c++/11/bits/basic_string.h ****    *                                        _M_length
3140:/usr/include/c++/11/bits/basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
3141:/usr/include/c++/11/bits/basic_string.h ****    *   _M_dataplus                          _M_refcount
3142:/usr/include/c++/11/bits/basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
3143:/usr/include/c++/11/bits/basic_string.h ****    *  @endcode
3144:/usr/include/c++/11/bits/basic_string.h ****    *
3145:/usr/include/c++/11/bits/basic_string.h ****    *  Where the _M_p points to the first character in the string, and
3146:/usr/include/c++/11/bits/basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
3147:/usr/include/c++/11/bits/basic_string.h ****    *  pointer to the header.
3148:/usr/include/c++/11/bits/basic_string.h ****    *
3149:/usr/include/c++/11/bits/basic_string.h ****    *  This approach has the enormous advantage that a string object
3150:/usr/include/c++/11/bits/basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
3151:/usr/include/c++/11/bits/basic_string.h ****    *  within a single %pair of inline functions, which each compile to
3152:/usr/include/c++/11/bits/basic_string.h ****    *  a single @a add instruction: _Rep::_M_data(), and
3153:/usr/include/c++/11/bits/basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
3154:/usr/include/c++/11/bits/basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
3155:/usr/include/c++/11/bits/basic_string.h ****    *  object at the front.
3156:/usr/include/c++/11/bits/basic_string.h ****    *
3157:/usr/include/c++/11/bits/basic_string.h ****    *  The reason you want _M_data pointing to the character %array and
3158:/usr/include/c++/11/bits/basic_string.h ****    *  not the _Rep is so that the debugger can see the string
3159:/usr/include/c++/11/bits/basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
3160:/usr/include/c++/11/bits/basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
3161:/usr/include/c++/11/bits/basic_string.h ****    *  string length.)
3162:/usr/include/c++/11/bits/basic_string.h ****    *
3163:/usr/include/c++/11/bits/basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
3164:/usr/include/c++/11/bits/basic_string.h ****    *  static <em>empty string</em> _Rep object already @a constructed before
3165:/usr/include/c++/11/bits/basic_string.h ****    *  static constructors have run.  The reference-count encoding is
3166:/usr/include/c++/11/bits/basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
3167:/usr/include/c++/11/bits/basic_string.h ****    *  destroy the empty-string _Rep object.
3168:/usr/include/c++/11/bits/basic_string.h ****    *
3169:/usr/include/c++/11/bits/basic_string.h ****    *  All but the last paragraph is considered pretty conventional
3170:/usr/include/c++/11/bits/basic_string.h ****    *  for a C++ string implementation.
3171:/usr/include/c++/11/bits/basic_string.h ****   */
3172:/usr/include/c++/11/bits/basic_string.h ****   // 21.3  Template class basic_string
3173:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3174:/usr/include/c++/11/bits/basic_string.h ****     class basic_string
3175:/usr/include/c++/11/bits/basic_string.h ****     {
3176:/usr/include/c++/11/bits/basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
3177:/usr/include/c++/11/bits/basic_string.h **** 	rebind<_CharT>::other _CharT_alloc_type;
3178:/usr/include/c++/11/bits/basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_CharT_alloc_type> _CharT_alloc_traits;
3179:/usr/include/c++/11/bits/basic_string.h **** 
3180:/usr/include/c++/11/bits/basic_string.h ****       // Types:
3181:/usr/include/c++/11/bits/basic_string.h ****     public:
3182:/usr/include/c++/11/bits/basic_string.h ****       typedef _Traits					    traits_type;
3183:/usr/include/c++/11/bits/basic_string.h ****       typedef typename _Traits::char_type		    value_type;
3184:/usr/include/c++/11/bits/basic_string.h ****       typedef _Alloc					    allocator_type;
3185:/usr/include/c++/11/bits/basic_string.h ****       typedef typename _CharT_alloc_traits::size_type	    size_type;
3186:/usr/include/c++/11/bits/basic_string.h ****       typedef typename _CharT_alloc_traits::difference_type difference_type;
3187:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus < 201103L
3188:/usr/include/c++/11/bits/basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
3189:/usr/include/c++/11/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
3190:/usr/include/c++/11/bits/basic_string.h **** #else
3191:/usr/include/c++/11/bits/basic_string.h ****       typedef value_type&				    reference;
3192:/usr/include/c++/11/bits/basic_string.h ****       typedef const value_type&				    const_reference;
3193:/usr/include/c++/11/bits/basic_string.h **** #endif
3194:/usr/include/c++/11/bits/basic_string.h ****       typedef typename _CharT_alloc_traits::pointer	    pointer;
3195:/usr/include/c++/11/bits/basic_string.h ****       typedef typename _CharT_alloc_traits::const_pointer   const_pointer;
3196:/usr/include/c++/11/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
3197:/usr/include/c++/11/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
3198:/usr/include/c++/11/bits/basic_string.h ****                                                             const_iterator;
3199:/usr/include/c++/11/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
3200:/usr/include/c++/11/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
3201:/usr/include/c++/11/bits/basic_string.h **** 
3202:/usr/include/c++/11/bits/basic_string.h ****     protected:
3203:/usr/include/c++/11/bits/basic_string.h ****       // type used for positions in insert, erase etc.
3204:/usr/include/c++/11/bits/basic_string.h ****       typedef iterator __const_iterator;
3205:/usr/include/c++/11/bits/basic_string.h **** 
3206:/usr/include/c++/11/bits/basic_string.h ****     private:
3207:/usr/include/c++/11/bits/basic_string.h ****       // _Rep: string representation
3208:/usr/include/c++/11/bits/basic_string.h ****       //   Invariants:
3209:/usr/include/c++/11/bits/basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
3210:/usr/include/c++/11/bits/basic_string.h ****       //      must be kept null-terminated.
3211:/usr/include/c++/11/bits/basic_string.h ****       //   2. _M_capacity >= _M_length
3212:/usr/include/c++/11/bits/basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
3213:/usr/include/c++/11/bits/basic_string.h ****       //   3. _M_refcount has three states:
3214:/usr/include/c++/11/bits/basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
3215:/usr/include/c++/11/bits/basic_string.h ****       //       0: one reference, non-const.
3216:/usr/include/c++/11/bits/basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
3217:/usr/include/c++/11/bits/basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
3218:/usr/include/c++/11/bits/basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
3219:/usr/include/c++/11/bits/basic_string.h ****       //      empty string representation needs no constructor.
3220:/usr/include/c++/11/bits/basic_string.h **** 
3221:/usr/include/c++/11/bits/basic_string.h ****       struct _Rep_base
3222:/usr/include/c++/11/bits/basic_string.h ****       {
3223:/usr/include/c++/11/bits/basic_string.h **** 	size_type		_M_length;
3224:/usr/include/c++/11/bits/basic_string.h **** 	size_type		_M_capacity;
3225:/usr/include/c++/11/bits/basic_string.h **** 	_Atomic_word		_M_refcount;
3226:/usr/include/c++/11/bits/basic_string.h ****       };
3227:/usr/include/c++/11/bits/basic_string.h **** 
3228:/usr/include/c++/11/bits/basic_string.h ****       struct _Rep : _Rep_base
3229:/usr/include/c++/11/bits/basic_string.h ****       {
3230:/usr/include/c++/11/bits/basic_string.h **** 	// Types:
3231:/usr/include/c++/11/bits/basic_string.h **** 	typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
3232:/usr/include/c++/11/bits/basic_string.h **** 	  rebind<char>::other _Raw_bytes_alloc;
3233:/usr/include/c++/11/bits/basic_string.h **** 
3234:/usr/include/c++/11/bits/basic_string.h **** 	// (Public) Data members:
3235:/usr/include/c++/11/bits/basic_string.h **** 
3236:/usr/include/c++/11/bits/basic_string.h **** 	// The maximum number of individual char_type elements of an
3237:/usr/include/c++/11/bits/basic_string.h **** 	// individual string is determined by _S_max_size. This is the
3238:/usr/include/c++/11/bits/basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
3239:/usr/include/c++/11/bits/basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
3240:/usr/include/c++/11/bits/basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
3241:/usr/include/c++/11/bits/basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
3242:/usr/include/c++/11/bits/basic_string.h **** 	// look like this:
3243:/usr/include/c++/11/bits/basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
3244:/usr/include/c++/11/bits/basic_string.h **** 	// Solving for m:
3245:/usr/include/c++/11/bits/basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
3246:/usr/include/c++/11/bits/basic_string.h **** 	// In addition, this implementation quarters this amount.
3247:/usr/include/c++/11/bits/basic_string.h **** 	static const size_type	_S_max_size;
3248:/usr/include/c++/11/bits/basic_string.h **** 	static const _CharT	_S_terminal;
3249:/usr/include/c++/11/bits/basic_string.h **** 
3250:/usr/include/c++/11/bits/basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
3251:/usr/include/c++/11/bits/basic_string.h ****         // (carefully) in an empty string with one reference.
3252:/usr/include/c++/11/bits/basic_string.h ****         static size_type _S_empty_rep_storage[];
3253:/usr/include/c++/11/bits/basic_string.h **** 
3254:/usr/include/c++/11/bits/basic_string.h ****         static _Rep&
3255:/usr/include/c++/11/bits/basic_string.h ****         _S_empty_rep() _GLIBCXX_NOEXCEPT
3256:/usr/include/c++/11/bits/basic_string.h ****         { 
3257:/usr/include/c++/11/bits/basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
3258:/usr/include/c++/11/bits/basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
3259:/usr/include/c++/11/bits/basic_string.h **** 	  // be reasonably safe in this case.
3260:/usr/include/c++/11/bits/basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
3261:/usr/include/c++/11/bits/basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
3262:/usr/include/c++/11/bits/basic_string.h **** 	}
3263:/usr/include/c++/11/bits/basic_string.h **** 
3264:/usr/include/c++/11/bits/basic_string.h ****         bool
3265:/usr/include/c++/11/bits/basic_string.h **** 	_M_is_leaked() const _GLIBCXX_NOEXCEPT
3266:/usr/include/c++/11/bits/basic_string.h ****         {
3267:/usr/include/c++/11/bits/basic_string.h **** #if defined(__GTHREADS)
3268:/usr/include/c++/11/bits/basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3269:/usr/include/c++/11/bits/basic_string.h ****           // so we need to use an atomic load. However, _M_is_leaked
3270:/usr/include/c++/11/bits/basic_string.h ****           // predicate does not change concurrently (i.e. the string is either
3271:/usr/include/c++/11/bits/basic_string.h ****           // leaked or not), so a relaxed load is enough.
3272:/usr/include/c++/11/bits/basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_RELAXED) < 0;
3273:/usr/include/c++/11/bits/basic_string.h **** #else
3274:/usr/include/c++/11/bits/basic_string.h ****           return this->_M_refcount < 0;
3275:/usr/include/c++/11/bits/basic_string.h **** #endif
3276:/usr/include/c++/11/bits/basic_string.h ****         }
3277:/usr/include/c++/11/bits/basic_string.h **** 
3278:/usr/include/c++/11/bits/basic_string.h ****         bool
3279:/usr/include/c++/11/bits/basic_string.h **** 	_M_is_shared() const _GLIBCXX_NOEXCEPT
3280:/usr/include/c++/11/bits/basic_string.h **** 	{
3281:/usr/include/c++/11/bits/basic_string.h **** #if defined(__GTHREADS)
3282:/usr/include/c++/11/bits/basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3283:/usr/include/c++/11/bits/basic_string.h ****           // so we need to use an atomic load. Another thread can drop last
3284:/usr/include/c++/11/bits/basic_string.h ****           // but one reference concurrently with this check, so we need this
3285:/usr/include/c++/11/bits/basic_string.h ****           // load to be acquire to synchronize with release fetch_and_add in
3286:/usr/include/c++/11/bits/basic_string.h ****           // _M_dispose.
3287:/usr/include/c++/11/bits/basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_ACQUIRE) > 0;
3288:/usr/include/c++/11/bits/basic_string.h **** #else
3289:/usr/include/c++/11/bits/basic_string.h ****           return this->_M_refcount > 0;
3290:/usr/include/c++/11/bits/basic_string.h **** #endif
3291:/usr/include/c++/11/bits/basic_string.h ****         }
3292:/usr/include/c++/11/bits/basic_string.h **** 
3293:/usr/include/c++/11/bits/basic_string.h ****         void
3294:/usr/include/c++/11/bits/basic_string.h **** 	_M_set_leaked() _GLIBCXX_NOEXCEPT
3295:/usr/include/c++/11/bits/basic_string.h ****         { this->_M_refcount = -1; }
3296:/usr/include/c++/11/bits/basic_string.h **** 
3297:/usr/include/c++/11/bits/basic_string.h ****         void
3298:/usr/include/c++/11/bits/basic_string.h **** 	_M_set_sharable() _GLIBCXX_NOEXCEPT
3299:/usr/include/c++/11/bits/basic_string.h ****         { this->_M_refcount = 0; }
3300:/usr/include/c++/11/bits/basic_string.h **** 
3301:/usr/include/c++/11/bits/basic_string.h **** 	void
3302:/usr/include/c++/11/bits/basic_string.h **** 	_M_set_length_and_sharable(size_type __n) _GLIBCXX_NOEXCEPT
3303:/usr/include/c++/11/bits/basic_string.h **** 	{
3304:/usr/include/c++/11/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3305:/usr/include/c++/11/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3306:/usr/include/c++/11/bits/basic_string.h **** #endif
3307:/usr/include/c++/11/bits/basic_string.h **** 	    {
3308:/usr/include/c++/11/bits/basic_string.h **** 	      this->_M_set_sharable();  // One reference.
3309:/usr/include/c++/11/bits/basic_string.h **** 	      this->_M_length = __n;
3310:/usr/include/c++/11/bits/basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
3311:/usr/include/c++/11/bits/basic_string.h **** 	      // grrr. (per 21.3.4)
3312:/usr/include/c++/11/bits/basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
3313:/usr/include/c++/11/bits/basic_string.h **** 	    }
3314:/usr/include/c++/11/bits/basic_string.h **** 	}
3315:/usr/include/c++/11/bits/basic_string.h **** 
3316:/usr/include/c++/11/bits/basic_string.h **** 	_CharT*
3317:/usr/include/c++/11/bits/basic_string.h **** 	_M_refdata() throw()
3318:/usr/include/c++/11/bits/basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
3319:/usr/include/c++/11/bits/basic_string.h **** 
3320:/usr/include/c++/11/bits/basic_string.h **** 	_CharT*
3321:/usr/include/c++/11/bits/basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
3322:/usr/include/c++/11/bits/basic_string.h **** 	{
3323:/usr/include/c++/11/bits/basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
3324:/usr/include/c++/11/bits/basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
3325:/usr/include/c++/11/bits/basic_string.h **** 	}
3326:/usr/include/c++/11/bits/basic_string.h **** 
3327:/usr/include/c++/11/bits/basic_string.h **** 	// Create & Destroy
3328:/usr/include/c++/11/bits/basic_string.h **** 	static _Rep*
3329:/usr/include/c++/11/bits/basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
3330:/usr/include/c++/11/bits/basic_string.h **** 
3331:/usr/include/c++/11/bits/basic_string.h **** 	void
3332:/usr/include/c++/11/bits/basic_string.h **** 	_M_dispose(const _Alloc& __a) _GLIBCXX_NOEXCEPT
3333:/usr/include/c++/11/bits/basic_string.h **** 	{
3334:/usr/include/c++/11/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3335:/usr/include/c++/11/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3336:/usr/include/c++/11/bits/basic_string.h **** #endif
3337:/usr/include/c++/11/bits/basic_string.h **** 	    {
3338:/usr/include/c++/11/bits/basic_string.h **** 	      // Be race-detector-friendly.  For more info see bits/c++config.
3339:/usr/include/c++/11/bits/basic_string.h **** 	      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
3340:/usr/include/c++/11/bits/basic_string.h ****               // Decrement of _M_refcount is acq_rel, because:
3341:/usr/include/c++/11/bits/basic_string.h ****               // - all but last decrements need to release to synchronize with
3342:/usr/include/c++/11/bits/basic_string.h ****               //   the last decrement that will delete the object.
3343:/usr/include/c++/11/bits/basic_string.h ****               // - the last decrement needs to acquire to synchronize with
3344:/usr/include/c++/11/bits/basic_string.h ****               //   all the previous decrements.
3345:/usr/include/c++/11/bits/basic_string.h ****               // - last but one decrement needs to release to synchronize with
3346:/usr/include/c++/11/bits/basic_string.h ****               //   the acquire load in _M_is_shared that will conclude that
3347:/usr/include/c++/11/bits/basic_string.h ****               //   the object is not shared anymore.
3348:/usr/include/c++/11/bits/basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
3349:/usr/include/c++/11/bits/basic_string.h **** 							 -1) <= 0)
3350:/usr/include/c++/11/bits/basic_string.h **** 		{
3351:/usr/include/c++/11/bits/basic_string.h **** 		  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
3352:/usr/include/c++/11/bits/basic_string.h **** 		  _M_destroy(__a);
3353:/usr/include/c++/11/bits/basic_string.h **** 		}
3354:/usr/include/c++/11/bits/basic_string.h **** 	    }
3355:/usr/include/c++/11/bits/basic_string.h **** 	}  // XXX MT
3356:/usr/include/c++/11/bits/basic_string.h **** 
3357:/usr/include/c++/11/bits/basic_string.h **** 	void
3358:/usr/include/c++/11/bits/basic_string.h **** 	_M_destroy(const _Alloc&) throw();
3359:/usr/include/c++/11/bits/basic_string.h **** 
3360:/usr/include/c++/11/bits/basic_string.h **** 	_CharT*
3361:/usr/include/c++/11/bits/basic_string.h **** 	_M_refcopy() throw()
3362:/usr/include/c++/11/bits/basic_string.h **** 	{
3363:/usr/include/c++/11/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3364:/usr/include/c++/11/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3365:/usr/include/c++/11/bits/basic_string.h **** #endif
3366:/usr/include/c++/11/bits/basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
3367:/usr/include/c++/11/bits/basic_string.h **** 	  return _M_refdata();
3368:/usr/include/c++/11/bits/basic_string.h **** 	}  // XXX MT
3369:/usr/include/c++/11/bits/basic_string.h **** 
3370:/usr/include/c++/11/bits/basic_string.h **** 	_CharT*
3371:/usr/include/c++/11/bits/basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
3372:/usr/include/c++/11/bits/basic_string.h ****       };
3373:/usr/include/c++/11/bits/basic_string.h **** 
3374:/usr/include/c++/11/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
3375:/usr/include/c++/11/bits/basic_string.h ****       struct _Alloc_hider : _Alloc
3376:/usr/include/c++/11/bits/basic_string.h ****       {
3377:/usr/include/c++/11/bits/basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a) _GLIBCXX_NOEXCEPT
3378:/usr/include/c++/11/bits/basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
3379:/usr/include/c++/11/bits/basic_string.h **** 
3380:/usr/include/c++/11/bits/basic_string.h **** 	_CharT* _M_p; // The actual data.
3381:/usr/include/c++/11/bits/basic_string.h ****       };
3382:/usr/include/c++/11/bits/basic_string.h **** 
3383:/usr/include/c++/11/bits/basic_string.h ****     public:
3384:/usr/include/c++/11/bits/basic_string.h ****       // Data Members (public):
3385:/usr/include/c++/11/bits/basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
3386:/usr/include/c++/11/bits/basic_string.h ****       // size that the allocator can hold.
3387:/usr/include/c++/11/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
3388:/usr/include/c++/11/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
3389:/usr/include/c++/11/bits/basic_string.h **** 
3390:/usr/include/c++/11/bits/basic_string.h ****     private:
3391:/usr/include/c++/11/bits/basic_string.h ****       // Data Members (private):
3392:/usr/include/c++/11/bits/basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
3393:/usr/include/c++/11/bits/basic_string.h **** 
3394:/usr/include/c++/11/bits/basic_string.h ****       _CharT*
3395:/usr/include/c++/11/bits/basic_string.h ****       _M_data() const _GLIBCXX_NOEXCEPT
3396:/usr/include/c++/11/bits/basic_string.h ****       { return  _M_dataplus._M_p; }
3397:/usr/include/c++/11/bits/basic_string.h **** 
3398:/usr/include/c++/11/bits/basic_string.h ****       _CharT*
3399:/usr/include/c++/11/bits/basic_string.h ****       _M_data(_CharT* __p) _GLIBCXX_NOEXCEPT
3400:/usr/include/c++/11/bits/basic_string.h ****       { return (_M_dataplus._M_p = __p); }
3401:/usr/include/c++/11/bits/basic_string.h **** 
3402:/usr/include/c++/11/bits/basic_string.h ****       _Rep*
3403:/usr/include/c++/11/bits/basic_string.h ****       _M_rep() const _GLIBCXX_NOEXCEPT
3404:/usr/include/c++/11/bits/basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
3405:/usr/include/c++/11/bits/basic_string.h **** 
3406:/usr/include/c++/11/bits/basic_string.h ****       // For the internal use we have functions similar to `begin'/`end'
3407:/usr/include/c++/11/bits/basic_string.h ****       // but they do not call _M_leak.
3408:/usr/include/c++/11/bits/basic_string.h ****       iterator
3409:/usr/include/c++/11/bits/basic_string.h ****       _M_ibegin() const _GLIBCXX_NOEXCEPT
3410:/usr/include/c++/11/bits/basic_string.h ****       { return iterator(_M_data()); }
3411:/usr/include/c++/11/bits/basic_string.h **** 
3412:/usr/include/c++/11/bits/basic_string.h ****       iterator
3413:/usr/include/c++/11/bits/basic_string.h ****       _M_iend() const _GLIBCXX_NOEXCEPT
3414:/usr/include/c++/11/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
3415:/usr/include/c++/11/bits/basic_string.h **** 
3416:/usr/include/c++/11/bits/basic_string.h ****       void
3417:/usr/include/c++/11/bits/basic_string.h ****       _M_leak()    // for use in begin() & non-const op[]
3418:/usr/include/c++/11/bits/basic_string.h ****       {
3419:/usr/include/c++/11/bits/basic_string.h **** 	if (!_M_rep()->_M_is_leaked())
3420:/usr/include/c++/11/bits/basic_string.h **** 	  _M_leak_hard();
3421:/usr/include/c++/11/bits/basic_string.h ****       }
3422:/usr/include/c++/11/bits/basic_string.h **** 
3423:/usr/include/c++/11/bits/basic_string.h ****       size_type
3424:/usr/include/c++/11/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
3425:/usr/include/c++/11/bits/basic_string.h ****       {
3426:/usr/include/c++/11/bits/basic_string.h **** 	if (__pos > this->size())
3427:/usr/include/c++/11/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
3428:/usr/include/c++/11/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
3429:/usr/include/c++/11/bits/basic_string.h **** 				   __s, __pos, this->size());
3430:/usr/include/c++/11/bits/basic_string.h **** 	return __pos;
3431:/usr/include/c++/11/bits/basic_string.h ****       }
3432:/usr/include/c++/11/bits/basic_string.h **** 
3433:/usr/include/c++/11/bits/basic_string.h ****       void
3434:/usr/include/c++/11/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
3435:/usr/include/c++/11/bits/basic_string.h ****       {
3436:/usr/include/c++/11/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
3437:/usr/include/c++/11/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
3438:/usr/include/c++/11/bits/basic_string.h ****       }
3439:/usr/include/c++/11/bits/basic_string.h **** 
3440:/usr/include/c++/11/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
3441:/usr/include/c++/11/bits/basic_string.h ****       size_type
3442:/usr/include/c++/11/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
3443:/usr/include/c++/11/bits/basic_string.h ****       {
3444:/usr/include/c++/11/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
3445:/usr/include/c++/11/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
3446:/usr/include/c++/11/bits/basic_string.h ****       }
3447:/usr/include/c++/11/bits/basic_string.h **** 
3448:/usr/include/c++/11/bits/basic_string.h ****       // True if _Rep and source do not overlap.
3449:/usr/include/c++/11/bits/basic_string.h ****       bool
3450:/usr/include/c++/11/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
3451:/usr/include/c++/11/bits/basic_string.h ****       {
3452:/usr/include/c++/11/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
3453:/usr/include/c++/11/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
3454:/usr/include/c++/11/bits/basic_string.h ****       }
3455:/usr/include/c++/11/bits/basic_string.h **** 
3456:/usr/include/c++/11/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
3457:/usr/include/c++/11/bits/basic_string.h ****       // traits_type::copy/move/assign.
3458:/usr/include/c++/11/bits/basic_string.h ****       static void
3459:/usr/include/c++/11/bits/basic_string.h ****       _M_copy(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3460:/usr/include/c++/11/bits/basic_string.h ****       {
3461:/usr/include/c++/11/bits/basic_string.h **** 	if (__n == 1)
3462:/usr/include/c++/11/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
3463:/usr/include/c++/11/bits/basic_string.h **** 	else
3464:/usr/include/c++/11/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
3465:/usr/include/c++/11/bits/basic_string.h ****       }
3466:/usr/include/c++/11/bits/basic_string.h **** 
3467:/usr/include/c++/11/bits/basic_string.h ****       static void
3468:/usr/include/c++/11/bits/basic_string.h ****       _M_move(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3469:/usr/include/c++/11/bits/basic_string.h ****       {
3470:/usr/include/c++/11/bits/basic_string.h **** 	if (__n == 1)
3471:/usr/include/c++/11/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
3472:/usr/include/c++/11/bits/basic_string.h **** 	else
3473:/usr/include/c++/11/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);	  
3474:/usr/include/c++/11/bits/basic_string.h ****       }
3475:/usr/include/c++/11/bits/basic_string.h **** 
3476:/usr/include/c++/11/bits/basic_string.h ****       static void
3477:/usr/include/c++/11/bits/basic_string.h ****       _M_assign(_CharT* __d, size_type __n, _CharT __c) _GLIBCXX_NOEXCEPT
3478:/usr/include/c++/11/bits/basic_string.h ****       {
3479:/usr/include/c++/11/bits/basic_string.h **** 	if (__n == 1)
3480:/usr/include/c++/11/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
3481:/usr/include/c++/11/bits/basic_string.h **** 	else
3482:/usr/include/c++/11/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);	  
3483:/usr/include/c++/11/bits/basic_string.h ****       }
3484:/usr/include/c++/11/bits/basic_string.h **** 
3485:/usr/include/c++/11/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
3486:/usr/include/c++/11/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
3487:/usr/include/c++/11/bits/basic_string.h ****       template<class _Iterator>
3488:/usr/include/c++/11/bits/basic_string.h ****         static void
3489:/usr/include/c++/11/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
3490:/usr/include/c++/11/bits/basic_string.h ****         {
3491:/usr/include/c++/11/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
3492:/usr/include/c++/11/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
3493:/usr/include/c++/11/bits/basic_string.h **** 	}
3494:/usr/include/c++/11/bits/basic_string.h **** 
3495:/usr/include/c++/11/bits/basic_string.h ****       static void
3496:/usr/include/c++/11/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
3497:/usr/include/c++/11/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3498:/usr/include/c++/11/bits/basic_string.h **** 
3499:/usr/include/c++/11/bits/basic_string.h ****       static void
3500:/usr/include/c++/11/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
3501:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3502:/usr/include/c++/11/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3503:/usr/include/c++/11/bits/basic_string.h **** 
3504:/usr/include/c++/11/bits/basic_string.h ****       static void
3505:/usr/include/c++/11/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
3506:/usr/include/c++/11/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3507:/usr/include/c++/11/bits/basic_string.h **** 
3508:/usr/include/c++/11/bits/basic_string.h ****       static void
3509:/usr/include/c++/11/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
3510:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3511:/usr/include/c++/11/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3512:/usr/include/c++/11/bits/basic_string.h **** 
3513:/usr/include/c++/11/bits/basic_string.h ****       static int
3514:/usr/include/c++/11/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
3515:/usr/include/c++/11/bits/basic_string.h ****       {
3516:/usr/include/c++/11/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
3517:/usr/include/c++/11/bits/basic_string.h **** 
3518:/usr/include/c++/11/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
3519:/usr/include/c++/11/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
3520:/usr/include/c++/11/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
3521:/usr/include/c++/11/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
3522:/usr/include/c++/11/bits/basic_string.h **** 	else
3523:/usr/include/c++/11/bits/basic_string.h **** 	  return int(__d);
3524:/usr/include/c++/11/bits/basic_string.h ****       }
3525:/usr/include/c++/11/bits/basic_string.h **** 
3526:/usr/include/c++/11/bits/basic_string.h ****       void
3527:/usr/include/c++/11/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, size_type __len2);
3528:/usr/include/c++/11/bits/basic_string.h **** 
3529:/usr/include/c++/11/bits/basic_string.h ****       void
3530:/usr/include/c++/11/bits/basic_string.h ****       _M_leak_hard();
3531:/usr/include/c++/11/bits/basic_string.h **** 
3532:/usr/include/c++/11/bits/basic_string.h ****       static _Rep&
3533:/usr/include/c++/11/bits/basic_string.h ****       _S_empty_rep() _GLIBCXX_NOEXCEPT
3534:/usr/include/c++/11/bits/basic_string.h ****       { return _Rep::_S_empty_rep(); }
3535:/usr/include/c++/11/bits/basic_string.h **** 
3536:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
3537:/usr/include/c++/11/bits/basic_string.h ****       // A helper type for avoiding boiler-plate.
3538:/usr/include/c++/11/bits/basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
3539:/usr/include/c++/11/bits/basic_string.h **** 
3540:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp, typename _Res>
3541:/usr/include/c++/11/bits/basic_string.h **** 	using _If_sv = enable_if_t<
3542:/usr/include/c++/11/bits/basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
3543:/usr/include/c++/11/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
3544:/usr/include/c++/11/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
3545:/usr/include/c++/11/bits/basic_string.h **** 	  _Res>;
3546:/usr/include/c++/11/bits/basic_string.h **** 
3547:/usr/include/c++/11/bits/basic_string.h ****       // Allows an implicit conversion to __sv_type.
3548:/usr/include/c++/11/bits/basic_string.h ****       static __sv_type
3549:/usr/include/c++/11/bits/basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
3550:/usr/include/c++/11/bits/basic_string.h ****       { return __svt; }
3551:/usr/include/c++/11/bits/basic_string.h **** 
3552:/usr/include/c++/11/bits/basic_string.h ****       // Wraps a string_view by explicit conversion and thus
3553:/usr/include/c++/11/bits/basic_string.h ****       // allows to add an internal constructor that does not
3554:/usr/include/c++/11/bits/basic_string.h ****       // participate in overload resolution when a string_view
3555:/usr/include/c++/11/bits/basic_string.h ****       // is provided.
3556:/usr/include/c++/11/bits/basic_string.h ****       struct __sv_wrapper
3557:/usr/include/c++/11/bits/basic_string.h ****       {
3558:/usr/include/c++/11/bits/basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
3559:/usr/include/c++/11/bits/basic_string.h **** 	__sv_type _M_sv;
3560:/usr/include/c++/11/bits/basic_string.h ****       };
3561:/usr/include/c++/11/bits/basic_string.h **** 
3562:/usr/include/c++/11/bits/basic_string.h ****       /**
3563:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
3564:/usr/include/c++/11/bits/basic_string.h ****        *          wrapper.
3565:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __svw  string view wrapper.
3566:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3567:/usr/include/c++/11/bits/basic_string.h ****        */
3568:/usr/include/c++/11/bits/basic_string.h ****       explicit
3569:/usr/include/c++/11/bits/basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
3570:/usr/include/c++/11/bits/basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
3571:/usr/include/c++/11/bits/basic_string.h **** #endif
3572:/usr/include/c++/11/bits/basic_string.h **** 
3573:/usr/include/c++/11/bits/basic_string.h ****     public:
3574:/usr/include/c++/11/bits/basic_string.h ****       // Construct/copy/destroy:
3575:/usr/include/c++/11/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
3576:/usr/include/c++/11/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
3577:/usr/include/c++/11/bits/basic_string.h **** 
3578:/usr/include/c++/11/bits/basic_string.h ****       /**
3579:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
3580:/usr/include/c++/11/bits/basic_string.h ****        */
3581:/usr/include/c++/11/bits/basic_string.h ****       basic_string()
3582:/usr/include/c++/11/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3583:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3584:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_S_empty_rep()._M_refdata(), _Alloc())
3585:/usr/include/c++/11/bits/basic_string.h **** #else
3586:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_S_construct(size_type(), _CharT(), _Alloc()), _Alloc())
3587:/usr/include/c++/11/bits/basic_string.h **** #endif
3588:/usr/include/c++/11/bits/basic_string.h ****       { }
3589:/usr/include/c++/11/bits/basic_string.h **** 
3590:/usr/include/c++/11/bits/basic_string.h ****       /**
3591:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
3592:/usr/include/c++/11/bits/basic_string.h ****        */
3593:/usr/include/c++/11/bits/basic_string.h ****       explicit
3594:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const _Alloc& __a)
3595:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_S_construct(size_type(), _CharT(), __a), __a)
3596:/usr/include/c++/11/bits/basic_string.h ****       { }
3597:/usr/include/c++/11/bits/basic_string.h **** 
3598:/usr/include/c++/11/bits/basic_string.h ****       // NB: per LWG issue 42, semantics different from IS:
3599:/usr/include/c++/11/bits/basic_string.h ****       /**
3600:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a str.
3601:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string.
3602:/usr/include/c++/11/bits/basic_string.h ****        */
3603:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const basic_string& __str)
3604:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(__str._M_rep()->_M_grab(_Alloc(__str.get_allocator()),
3605:/usr/include/c++/11/bits/basic_string.h **** 					    __str.get_allocator()),
3606:/usr/include/c++/11/bits/basic_string.h **** 		    __str.get_allocator())
3607:/usr/include/c++/11/bits/basic_string.h ****       { }
3608:/usr/include/c++/11/bits/basic_string.h **** 
3609:/usr/include/c++/11/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
3610:/usr/include/c++/11/bits/basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
3611:/usr/include/c++/11/bits/basic_string.h ****       /**
3612:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3613:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string.
3614:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3615:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3616:/usr/include/c++/11/bits/basic_string.h ****        */
3617:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3618:/usr/include/c++/11/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc());
3619:/usr/include/c++/11/bits/basic_string.h **** 
3620:/usr/include/c++/11/bits/basic_string.h ****       /**
3621:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3622:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string.
3623:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3624:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3625:/usr/include/c++/11/bits/basic_string.h ****        */
3626:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3627:/usr/include/c++/11/bits/basic_string.h **** 		   size_type __n);
3628:/usr/include/c++/11/bits/basic_string.h ****       /**
3629:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3630:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string.
3631:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3632:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3633:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3634:/usr/include/c++/11/bits/basic_string.h ****        */
3635:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3636:/usr/include/c++/11/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a);
3637:/usr/include/c++/11/bits/basic_string.h **** 
3638:/usr/include/c++/11/bits/basic_string.h ****       /**
3639:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
3640:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __s  Source character %array.
3641:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3642:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3643:/usr/include/c++/11/bits/basic_string.h ****        *
3644:/usr/include/c++/11/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
3645:/usr/include/c++/11/bits/basic_string.h ****        *  has no special meaning.
3646:/usr/include/c++/11/bits/basic_string.h ****        */
3647:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
3648:/usr/include/c++/11/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
3649:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_S_construct(__s, __s + __n, __a), __a)
3650:/usr/include/c++/11/bits/basic_string.h ****       { }
3651:/usr/include/c++/11/bits/basic_string.h **** 
3652:/usr/include/c++/11/bits/basic_string.h ****       /**
3653:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
3654:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __s  Source C string.
3655:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3656:/usr/include/c++/11/bits/basic_string.h ****        */
3657:/usr/include/c++/11/bits/basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
3658:/usr/include/c++/11/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
3659:/usr/include/c++/11/bits/basic_string.h ****       // 3076. basic_string CTAD ambiguity
3660:/usr/include/c++/11/bits/basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
3661:/usr/include/c++/11/bits/basic_string.h **** #endif
3662:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
3663:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_S_construct(__s, __s ? __s + traits_type::length(__s) :
3664:/usr/include/c++/11/bits/basic_string.h **** 				 __s + npos, __a), __a)
3665:/usr/include/c++/11/bits/basic_string.h ****       { }
3666:/usr/include/c++/11/bits/basic_string.h **** 
3667:/usr/include/c++/11/bits/basic_string.h ****       /**
3668:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
3669:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __n  Number of characters.
3670:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __c  Character to use.
3671:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3672:/usr/include/c++/11/bits/basic_string.h ****        */
3673:/usr/include/c++/11/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
3674:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_S_construct(__n, __c, __a), __a)
3675:/usr/include/c++/11/bits/basic_string.h ****       { }
3676:/usr/include/c++/11/bits/basic_string.h **** 
3677:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
3678:/usr/include/c++/11/bits/basic_string.h ****       /**
3679:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Move construct string.
3680:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string.
3681:/usr/include/c++/11/bits/basic_string.h ****        *
3682:/usr/include/c++/11/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
3683:/usr/include/c++/11/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
3684:/usr/include/c++/11/bits/basic_string.h ****        */
3685:/usr/include/c++/11/bits/basic_string.h ****       basic_string(basic_string&& __str)
3686:/usr/include/c++/11/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3687:/usr/include/c++/11/bits/basic_string.h ****       noexcept // FIXME C++11: should always be noexcept.
3688:/usr/include/c++/11/bits/basic_string.h **** #endif
3689:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(std::move(__str._M_dataplus))
3690:/usr/include/c++/11/bits/basic_string.h ****       {
3691:/usr/include/c++/11/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3692:/usr/include/c++/11/bits/basic_string.h **** 	__str._M_data(_S_empty_rep()._M_refdata());
3693:/usr/include/c++/11/bits/basic_string.h **** #else
3694:/usr/include/c++/11/bits/basic_string.h **** 	__str._M_data(_S_construct(size_type(), _CharT(), get_allocator()));
3695:/usr/include/c++/11/bits/basic_string.h **** #endif
3696:/usr/include/c++/11/bits/basic_string.h ****       }
3697:/usr/include/c++/11/bits/basic_string.h **** 
3698:/usr/include/c++/11/bits/basic_string.h ****       /**
3699:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
3700:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
3701:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3702:/usr/include/c++/11/bits/basic_string.h ****        */
3703:/usr/include/c++/11/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
3704:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_S_construct(__l.begin(), __l.end(), __a), __a)
3705:/usr/include/c++/11/bits/basic_string.h ****       { }
3706:/usr/include/c++/11/bits/basic_string.h **** 
3707:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
3708:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(__str._M_rep()->_M_grab(__a, __str.get_allocator()), __a)
3709:/usr/include/c++/11/bits/basic_string.h ****       { }
3710:/usr/include/c++/11/bits/basic_string.h **** 
3711:/usr/include/c++/11/bits/basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
3712:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(__str._M_data(), __a)
3713:/usr/include/c++/11/bits/basic_string.h ****       {
3714:/usr/include/c++/11/bits/basic_string.h **** 	if (__a == __str.get_allocator())
3715:/usr/include/c++/11/bits/basic_string.h **** 	  {
3716:/usr/include/c++/11/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3717:/usr/include/c++/11/bits/basic_string.h **** 	    __str._M_data(_S_empty_rep()._M_refdata());
3718:/usr/include/c++/11/bits/basic_string.h **** #else
3719:/usr/include/c++/11/bits/basic_string.h **** 	    __str._M_data(_S_construct(size_type(), _CharT(), __a));
3720:/usr/include/c++/11/bits/basic_string.h **** #endif
3721:/usr/include/c++/11/bits/basic_string.h **** 	  }
3722:/usr/include/c++/11/bits/basic_string.h **** 	else
3723:/usr/include/c++/11/bits/basic_string.h **** 	  _M_dataplus._M_p = _S_construct(__str.begin(), __str.end(), __a);
3724:/usr/include/c++/11/bits/basic_string.h ****       }
3725:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
3726:/usr/include/c++/11/bits/basic_string.h **** 
3727:/usr/include/c++/11/bits/basic_string.h ****       /**
3728:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
3729:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __beg  Start of range.
3730:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __end  End of range.
3731:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3732:/usr/include/c++/11/bits/basic_string.h ****        */
3733:/usr/include/c++/11/bits/basic_string.h ****       template<class _InputIterator>
3734:/usr/include/c++/11/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
3735:/usr/include/c++/11/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
3736:/usr/include/c++/11/bits/basic_string.h **** 	: _M_dataplus(_S_construct(__beg, __end, __a), __a)
3737:/usr/include/c++/11/bits/basic_string.h **** 	{ }
3738:/usr/include/c++/11/bits/basic_string.h **** 
3739:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
3740:/usr/include/c++/11/bits/basic_string.h ****       /**
3741:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
3742:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __t   Source object convertible to string view.
3743:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
3744:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
3745:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a   Allocator to use.
3746:/usr/include/c++/11/bits/basic_string.h ****        */
3747:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp,
3748:/usr/include/c++/11/bits/basic_string.h **** 	       typename = enable_if_t<is_convertible_v<const _Tp&, __sv_type>>>
3749:/usr/include/c++/11/bits/basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
3750:/usr/include/c++/11/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
3751:/usr/include/c++/11/bits/basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
3752:/usr/include/c++/11/bits/basic_string.h **** 
3753:/usr/include/c++/11/bits/basic_string.h ****       /**
3754:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string from a string_view.
3755:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __t  Source object convertible to string view.
3756:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3757:/usr/include/c++/11/bits/basic_string.h ****        */
3758:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3759:/usr/include/c++/11/bits/basic_string.h **** 	explicit
3760:/usr/include/c++/11/bits/basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
3761:/usr/include/c++/11/bits/basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
3762:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
3763:/usr/include/c++/11/bits/basic_string.h **** 
3764:/usr/include/c++/11/bits/basic_string.h ****       /**
3765:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Destroy the string instance.
3766:/usr/include/c++/11/bits/basic_string.h ****        */
3767:/usr/include/c++/11/bits/basic_string.h ****       ~basic_string() _GLIBCXX_NOEXCEPT
3768:/usr/include/c++/11/bits/basic_string.h ****       { _M_rep()->_M_dispose(this->get_allocator()); }
3769:/usr/include/c++/11/bits/basic_string.h **** 
3770:/usr/include/c++/11/bits/basic_string.h ****       /**
3771:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
3772:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string.
3773:/usr/include/c++/11/bits/basic_string.h ****        */
3774:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
3775:/usr/include/c++/11/bits/basic_string.h ****       operator=(const basic_string& __str)
3776:/usr/include/c++/11/bits/basic_string.h ****       { return this->assign(__str); }
3777:/usr/include/c++/11/bits/basic_string.h **** 
3778:/usr/include/c++/11/bits/basic_string.h ****       /**
3779:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
3780:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
3781:/usr/include/c++/11/bits/basic_string.h ****        */
3782:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
3783:/usr/include/c++/11/bits/basic_string.h ****       operator=(const _CharT* __s) 
3784:/usr/include/c++/11/bits/basic_string.h ****       { return this->assign(__s); }
3785:/usr/include/c++/11/bits/basic_string.h **** 
3786:/usr/include/c++/11/bits/basic_string.h ****       /**
3787:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
3788:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __c  Source character.
3789:/usr/include/c++/11/bits/basic_string.h ****        *
3790:/usr/include/c++/11/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
3791:/usr/include/c++/11/bits/basic_string.h ****        *  (*this)[0] == @a c.
3792:/usr/include/c++/11/bits/basic_string.h ****        */
3793:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
3794:/usr/include/c++/11/bits/basic_string.h ****       operator=(_CharT __c) 
3795:/usr/include/c++/11/bits/basic_string.h ****       { 
3796:/usr/include/c++/11/bits/basic_string.h **** 	this->assign(1, __c); 
3797:/usr/include/c++/11/bits/basic_string.h **** 	return *this;
3798:/usr/include/c++/11/bits/basic_string.h ****       }
3799:/usr/include/c++/11/bits/basic_string.h **** 
3800:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
3801:/usr/include/c++/11/bits/basic_string.h ****       /**
3802:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
3803:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string.
3804:/usr/include/c++/11/bits/basic_string.h ****        *
3805:/usr/include/c++/11/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
3806:/usr/include/c++/11/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
3807:/usr/include/c++/11/bits/basic_string.h ****        */
3808:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
3809:/usr/include/c++/11/bits/basic_string.h ****       operator=(basic_string&& __str)
3810:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value)
3811:/usr/include/c++/11/bits/basic_string.h ****       {
3812:/usr/include/c++/11/bits/basic_string.h **** 	// NB: DR 1204.
3813:/usr/include/c++/11/bits/basic_string.h **** 	this->swap(__str);
3814:/usr/include/c++/11/bits/basic_string.h **** 	return *this;
3815:/usr/include/c++/11/bits/basic_string.h ****       }
3816:/usr/include/c++/11/bits/basic_string.h **** 
3817:/usr/include/c++/11/bits/basic_string.h ****       /**
3818:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
3819:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
3820:/usr/include/c++/11/bits/basic_string.h ****        */
3821:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
3822:/usr/include/c++/11/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
3823:/usr/include/c++/11/bits/basic_string.h ****       {
3824:/usr/include/c++/11/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
3825:/usr/include/c++/11/bits/basic_string.h **** 	return *this;
3826:/usr/include/c++/11/bits/basic_string.h ****       }
3827:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
3828:/usr/include/c++/11/bits/basic_string.h **** 
3829:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
3830:/usr/include/c++/11/bits/basic_string.h ****       /**
3831:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
3832:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __svt An object convertible to  string_view.
3833:/usr/include/c++/11/bits/basic_string.h ****        */
3834:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
3835:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
3836:/usr/include/c++/11/bits/basic_string.h **** 	operator=(const _Tp& __svt)
3837:/usr/include/c++/11/bits/basic_string.h **** 	{ return this->assign(__svt); }
3838:/usr/include/c++/11/bits/basic_string.h **** 
3839:/usr/include/c++/11/bits/basic_string.h ****       /**
3840:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Convert to a string_view.
3841:/usr/include/c++/11/bits/basic_string.h ****        *  @return A string_view.
3842:/usr/include/c++/11/bits/basic_string.h ****        */
3843:/usr/include/c++/11/bits/basic_string.h ****       operator __sv_type() const noexcept
3844:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(data(), size()); }
3845:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
3846:/usr/include/c++/11/bits/basic_string.h **** 
3847:/usr/include/c++/11/bits/basic_string.h ****       // Iterators:
3848:/usr/include/c++/11/bits/basic_string.h ****       /**
3849:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
3850:/usr/include/c++/11/bits/basic_string.h ****        *  the %string.  Unshares the string.
3851:/usr/include/c++/11/bits/basic_string.h ****        */
3852:/usr/include/c++/11/bits/basic_string.h ****       iterator
3853:/usr/include/c++/11/bits/basic_string.h ****       begin() // FIXME C++11: should be noexcept.
3854:/usr/include/c++/11/bits/basic_string.h ****       {
3855:/usr/include/c++/11/bits/basic_string.h **** 	_M_leak();
3856:/usr/include/c++/11/bits/basic_string.h **** 	return iterator(_M_data());
3857:/usr/include/c++/11/bits/basic_string.h ****       }
3858:/usr/include/c++/11/bits/basic_string.h **** 
3859:/usr/include/c++/11/bits/basic_string.h ****       /**
3860:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3861:/usr/include/c++/11/bits/basic_string.h ****        *  character in the %string.
3862:/usr/include/c++/11/bits/basic_string.h ****        */
3863:/usr/include/c++/11/bits/basic_string.h ****       const_iterator
3864:/usr/include/c++/11/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
3865:/usr/include/c++/11/bits/basic_string.h ****       { return const_iterator(_M_data()); }
3866:/usr/include/c++/11/bits/basic_string.h **** 
3867:/usr/include/c++/11/bits/basic_string.h ****       /**
3868:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
3869:/usr/include/c++/11/bits/basic_string.h ****        *  character in the %string.  Unshares the string.
3870:/usr/include/c++/11/bits/basic_string.h ****        */
3871:/usr/include/c++/11/bits/basic_string.h ****       iterator
3872:/usr/include/c++/11/bits/basic_string.h ****       end() // FIXME C++11: should be noexcept.
3873:/usr/include/c++/11/bits/basic_string.h ****       {
3874:/usr/include/c++/11/bits/basic_string.h **** 	_M_leak();
3875:/usr/include/c++/11/bits/basic_string.h **** 	return iterator(_M_data() + this->size());
3876:/usr/include/c++/11/bits/basic_string.h ****       }
3877:/usr/include/c++/11/bits/basic_string.h **** 
3878:/usr/include/c++/11/bits/basic_string.h ****       /**
3879:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3880:/usr/include/c++/11/bits/basic_string.h ****        *  last character in the %string.
3881:/usr/include/c++/11/bits/basic_string.h ****        */
3882:/usr/include/c++/11/bits/basic_string.h ****       const_iterator
3883:/usr/include/c++/11/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
3884:/usr/include/c++/11/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
3885:/usr/include/c++/11/bits/basic_string.h **** 
3886:/usr/include/c++/11/bits/basic_string.h ****       /**
3887:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
3888:/usr/include/c++/11/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
3889:/usr/include/c++/11/bits/basic_string.h ****        *  order.  Unshares the string.
3890:/usr/include/c++/11/bits/basic_string.h ****        */
3891:/usr/include/c++/11/bits/basic_string.h ****       reverse_iterator
3892:/usr/include/c++/11/bits/basic_string.h ****       rbegin() // FIXME C++11: should be noexcept.
3893:/usr/include/c++/11/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
3894:/usr/include/c++/11/bits/basic_string.h **** 
3895:/usr/include/c++/11/bits/basic_string.h ****       /**
3896:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3897:/usr/include/c++/11/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3898:/usr/include/c++/11/bits/basic_string.h ****        *  reverse element order.
3899:/usr/include/c++/11/bits/basic_string.h ****        */
3900:/usr/include/c++/11/bits/basic_string.h ****       const_reverse_iterator
3901:/usr/include/c++/11/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
3902:/usr/include/c++/11/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3903:/usr/include/c++/11/bits/basic_string.h **** 
3904:/usr/include/c++/11/bits/basic_string.h ****       /**
3905:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
3906:/usr/include/c++/11/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
3907:/usr/include/c++/11/bits/basic_string.h ****        *  element order.  Unshares the string.
3908:/usr/include/c++/11/bits/basic_string.h ****        */
3909:/usr/include/c++/11/bits/basic_string.h ****       reverse_iterator
3910:/usr/include/c++/11/bits/basic_string.h ****       rend() // FIXME C++11: should be noexcept.
3911:/usr/include/c++/11/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
3912:/usr/include/c++/11/bits/basic_string.h **** 
3913:/usr/include/c++/11/bits/basic_string.h ****       /**
3914:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3915:/usr/include/c++/11/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
3916:/usr/include/c++/11/bits/basic_string.h ****        *  is done in reverse element order.
3917:/usr/include/c++/11/bits/basic_string.h ****        */
3918:/usr/include/c++/11/bits/basic_string.h ****       const_reverse_iterator
3919:/usr/include/c++/11/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
3920:/usr/include/c++/11/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3921:/usr/include/c++/11/bits/basic_string.h **** 
3922:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
3923:/usr/include/c++/11/bits/basic_string.h ****       /**
3924:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3925:/usr/include/c++/11/bits/basic_string.h ****        *  character in the %string.
3926:/usr/include/c++/11/bits/basic_string.h ****        */
3927:/usr/include/c++/11/bits/basic_string.h ****       const_iterator
3928:/usr/include/c++/11/bits/basic_string.h ****       cbegin() const noexcept
3929:/usr/include/c++/11/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
3930:/usr/include/c++/11/bits/basic_string.h **** 
3931:/usr/include/c++/11/bits/basic_string.h ****       /**
3932:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3933:/usr/include/c++/11/bits/basic_string.h ****        *  last character in the %string.
3934:/usr/include/c++/11/bits/basic_string.h ****        */
3935:/usr/include/c++/11/bits/basic_string.h ****       const_iterator
3936:/usr/include/c++/11/bits/basic_string.h ****       cend() const noexcept
3937:/usr/include/c++/11/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
3938:/usr/include/c++/11/bits/basic_string.h **** 
3939:/usr/include/c++/11/bits/basic_string.h ****       /**
3940:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3941:/usr/include/c++/11/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3942:/usr/include/c++/11/bits/basic_string.h ****        *  reverse element order.
3943:/usr/include/c++/11/bits/basic_string.h ****        */
3944:/usr/include/c++/11/bits/basic_string.h ****       const_reverse_iterator
3945:/usr/include/c++/11/bits/basic_string.h ****       crbegin() const noexcept
3946:/usr/include/c++/11/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3947:/usr/include/c++/11/bits/basic_string.h **** 
3948:/usr/include/c++/11/bits/basic_string.h ****       /**
3949:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3950:/usr/include/c++/11/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
3951:/usr/include/c++/11/bits/basic_string.h ****        *  is done in reverse element order.
3952:/usr/include/c++/11/bits/basic_string.h ****        */
3953:/usr/include/c++/11/bits/basic_string.h ****       const_reverse_iterator
3954:/usr/include/c++/11/bits/basic_string.h ****       crend() const noexcept
3955:/usr/include/c++/11/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3956:/usr/include/c++/11/bits/basic_string.h **** #endif
3957:/usr/include/c++/11/bits/basic_string.h **** 
3958:/usr/include/c++/11/bits/basic_string.h ****     public:
3959:/usr/include/c++/11/bits/basic_string.h ****       // Capacity:
3960:/usr/include/c++/11/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
3961:/usr/include/c++/11/bits/basic_string.h ****       ///  null-termination.
3962:/usr/include/c++/11/bits/basic_string.h ****       size_type
3963:/usr/include/c++/11/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
3964:/usr/include/c++/11/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3965:/usr/include/c++/11/bits/basic_string.h **** 
3966:/usr/include/c++/11/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
3967:/usr/include/c++/11/bits/basic_string.h ****       ///  null-termination.
3968:/usr/include/c++/11/bits/basic_string.h ****       size_type
3969:/usr/include/c++/11/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
3970:/usr/include/c++/11/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3971:/usr/include/c++/11/bits/basic_string.h **** 
3972:/usr/include/c++/11/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
3973:/usr/include/c++/11/bits/basic_string.h ****       size_type
3974:/usr/include/c++/11/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
3975:/usr/include/c++/11/bits/basic_string.h ****       { return _Rep::_S_max_size; }
3976:/usr/include/c++/11/bits/basic_string.h **** 
3977:/usr/include/c++/11/bits/basic_string.h ****       /**
3978:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3979:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3980:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
3981:/usr/include/c++/11/bits/basic_string.h ****        *
3982:/usr/include/c++/11/bits/basic_string.h ****        *  This function will %resize the %string to the specified
3983:/usr/include/c++/11/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
3984:/usr/include/c++/11/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
3985:/usr/include/c++/11/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
3986:/usr/include/c++/11/bits/basic_string.h ****        */
3987:/usr/include/c++/11/bits/basic_string.h ****       void
3988:/usr/include/c++/11/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
3989:/usr/include/c++/11/bits/basic_string.h **** 
3990:/usr/include/c++/11/bits/basic_string.h ****       /**
3991:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3992:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3993:/usr/include/c++/11/bits/basic_string.h ****        *
3994:/usr/include/c++/11/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
3995:/usr/include/c++/11/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
3996:/usr/include/c++/11/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
3997:/usr/include/c++/11/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
3998:/usr/include/c++/11/bits/basic_string.h ****        *  setting them to 0.
3999:/usr/include/c++/11/bits/basic_string.h ****        */
4000:/usr/include/c++/11/bits/basic_string.h ****       void
4001:/usr/include/c++/11/bits/basic_string.h ****       resize(size_type __n)
4002:/usr/include/c++/11/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
4003:/usr/include/c++/11/bits/basic_string.h **** 
4004:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
4005:/usr/include/c++/11/bits/basic_string.h **** #pragma GCC diagnostic push
4006:/usr/include/c++/11/bits/basic_string.h **** #pragma GCC diagnostic ignored "-Wdeprecated-declarations"
4007:/usr/include/c++/11/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
4008:/usr/include/c++/11/bits/basic_string.h ****       void
4009:/usr/include/c++/11/bits/basic_string.h ****       shrink_to_fit() noexcept
4010:/usr/include/c++/11/bits/basic_string.h ****       { reserve(); }
4011:/usr/include/c++/11/bits/basic_string.h **** #pragma GCC diagnostic pop
4012:/usr/include/c++/11/bits/basic_string.h **** #endif
4013:/usr/include/c++/11/bits/basic_string.h **** 
4014:/usr/include/c++/11/bits/basic_string.h ****       /**
4015:/usr/include/c++/11/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
4016:/usr/include/c++/11/bits/basic_string.h ****        *  before needing to allocate more memory.
4017:/usr/include/c++/11/bits/basic_string.h ****        */
4018:/usr/include/c++/11/bits/basic_string.h ****       size_type
4019:/usr/include/c++/11/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
4020:/usr/include/c++/11/bits/basic_string.h ****       { return _M_rep()->_M_capacity; }
4021:/usr/include/c++/11/bits/basic_string.h **** 
4022:/usr/include/c++/11/bits/basic_string.h ****       /**
4023:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
4024:/usr/include/c++/11/bits/basic_string.h ****        *          characters.
4025:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
4026:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
4027:/usr/include/c++/11/bits/basic_string.h ****        *
4028:/usr/include/c++/11/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
4029:/usr/include/c++/11/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
4030:/usr/include/c++/11/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
4031:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.
4032:/usr/include/c++/11/bits/basic_string.h ****        *
4033:/usr/include/c++/11/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
4034:/usr/include/c++/11/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
4035:/usr/include/c++/11/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
4036:/usr/include/c++/11/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
4037:/usr/include/c++/11/bits/basic_string.h ****        *  data.
4038:/usr/include/c++/11/bits/basic_string.h ****        */
4039:/usr/include/c++/11/bits/basic_string.h ****       void
4040:/usr/include/c++/11/bits/basic_string.h ****       reserve(size_type __res_arg);
4041:/usr/include/c++/11/bits/basic_string.h **** 
4042:/usr/include/c++/11/bits/basic_string.h ****       /// Equivalent to shrink_to_fit().
4043:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus > 201703L
4044:/usr/include/c++/11/bits/basic_string.h ****       [[deprecated("use shrink_to_fit() instead")]]
4045:/usr/include/c++/11/bits/basic_string.h **** #endif
4046:/usr/include/c++/11/bits/basic_string.h ****       void
4047:/usr/include/c++/11/bits/basic_string.h ****       reserve();
4048:/usr/include/c++/11/bits/basic_string.h **** 
4049:/usr/include/c++/11/bits/basic_string.h ****       /**
4050:/usr/include/c++/11/bits/basic_string.h ****        *  Erases the string, making it empty.
4051:/usr/include/c++/11/bits/basic_string.h ****        */
4052:/usr/include/c++/11/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
4053:/usr/include/c++/11/bits/basic_string.h ****       void
4054:/usr/include/c++/11/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
4055:/usr/include/c++/11/bits/basic_string.h ****       {
4056:/usr/include/c++/11/bits/basic_string.h **** 	if (_M_rep()->_M_is_shared())
4057:/usr/include/c++/11/bits/basic_string.h **** 	  {
4058:/usr/include/c++/11/bits/basic_string.h **** 	    _M_rep()->_M_dispose(this->get_allocator());
4059:/usr/include/c++/11/bits/basic_string.h **** 	    _M_data(_S_empty_rep()._M_refdata());
4060:/usr/include/c++/11/bits/basic_string.h **** 	  }
4061:/usr/include/c++/11/bits/basic_string.h **** 	else
4062:/usr/include/c++/11/bits/basic_string.h **** 	  _M_rep()->_M_set_length_and_sharable(0);
4063:/usr/include/c++/11/bits/basic_string.h ****       }
4064:/usr/include/c++/11/bits/basic_string.h **** #else
4065:/usr/include/c++/11/bits/basic_string.h ****       // PR 56166: this should not throw.
4066:/usr/include/c++/11/bits/basic_string.h ****       void
4067:/usr/include/c++/11/bits/basic_string.h ****       clear()
4068:/usr/include/c++/11/bits/basic_string.h ****       { _M_mutate(0, this->size(), 0); }
4069:/usr/include/c++/11/bits/basic_string.h **** #endif
4070:/usr/include/c++/11/bits/basic_string.h **** 
4071:/usr/include/c++/11/bits/basic_string.h ****       /**
4072:/usr/include/c++/11/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
4073:/usr/include/c++/11/bits/basic_string.h ****        *  <code>*this == ""</code>.
4074:/usr/include/c++/11/bits/basic_string.h ****        */
4075:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NODISCARD bool
4076:/usr/include/c++/11/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
4077:/usr/include/c++/11/bits/basic_string.h ****       { return this->size() == 0; }
4078:/usr/include/c++/11/bits/basic_string.h **** 
4079:/usr/include/c++/11/bits/basic_string.h ****       // Element access:
4080:/usr/include/c++/11/bits/basic_string.h ****       /**
4081:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4082:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
4083:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
4084:/usr/include/c++/11/bits/basic_string.h ****        *
4085:/usr/include/c++/11/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
4086:/usr/include/c++/11/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
4087:/usr/include/c++/11/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4088:/usr/include/c++/11/bits/basic_string.h ****        *  see at().)
4089:/usr/include/c++/11/bits/basic_string.h ****        */
4090:/usr/include/c++/11/bits/basic_string.h ****       const_reference
4091:/usr/include/c++/11/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
4092:/usr/include/c++/11/bits/basic_string.h ****       {
4093:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
4094:/usr/include/c++/11/bits/basic_string.h **** 	return _M_data()[__pos];
4095:/usr/include/c++/11/bits/basic_string.h ****       }
4096:/usr/include/c++/11/bits/basic_string.h **** 
4097:/usr/include/c++/11/bits/basic_string.h ****       /**
4098:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4099:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
4100:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Read/write reference to the character.
4101:/usr/include/c++/11/bits/basic_string.h ****        *
4102:/usr/include/c++/11/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
4103:/usr/include/c++/11/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
4104:/usr/include/c++/11/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4105:/usr/include/c++/11/bits/basic_string.h ****        *  see at().)  Unshares the string.
4106:/usr/include/c++/11/bits/basic_string.h ****        */
4107:/usr/include/c++/11/bits/basic_string.h ****       reference
4108:/usr/include/c++/11/bits/basic_string.h ****       operator[](size_type __pos)
4109:/usr/include/c++/11/bits/basic_string.h ****       {
4110:/usr/include/c++/11/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
4111:/usr/include/c++/11/bits/basic_string.h **** 	// and in C++11 mode.
4112:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
4113:/usr/include/c++/11/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
4114:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
4115:/usr/include/c++/11/bits/basic_string.h **** 	_M_leak();
4116:/usr/include/c++/11/bits/basic_string.h **** 	return _M_data()[__pos];
4117:/usr/include/c++/11/bits/basic_string.h ****       }
4118:/usr/include/c++/11/bits/basic_string.h **** 
4119:/usr/include/c++/11/bits/basic_string.h ****       /**
4120:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4121:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n The index of the character to access.
4122:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
4123:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4124:/usr/include/c++/11/bits/basic_string.h ****        *
4125:/usr/include/c++/11/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
4126:/usr/include/c++/11/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
4127:/usr/include/c++/11/bits/basic_string.h ****        *  throws out_of_range if the check fails.
4128:/usr/include/c++/11/bits/basic_string.h ****        */
4129:/usr/include/c++/11/bits/basic_string.h ****       const_reference
4130:/usr/include/c++/11/bits/basic_string.h ****       at(size_type __n) const
4131:/usr/include/c++/11/bits/basic_string.h ****       {
4132:/usr/include/c++/11/bits/basic_string.h **** 	if (__n >= this->size())
4133:/usr/include/c++/11/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4134:/usr/include/c++/11/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
4135:/usr/include/c++/11/bits/basic_string.h **** 				       "(which is %zu)"),
4136:/usr/include/c++/11/bits/basic_string.h **** 				   __n, this->size());
4137:/usr/include/c++/11/bits/basic_string.h **** 	return _M_data()[__n];
4138:/usr/include/c++/11/bits/basic_string.h ****       }
4139:/usr/include/c++/11/bits/basic_string.h **** 
4140:/usr/include/c++/11/bits/basic_string.h ****       /**
4141:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4142:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n The index of the character to access.
4143:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Read/write reference to the character.
4144:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4145:/usr/include/c++/11/bits/basic_string.h ****        *
4146:/usr/include/c++/11/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
4147:/usr/include/c++/11/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
4148:/usr/include/c++/11/bits/basic_string.h ****        *  throws out_of_range if the check fails.  Success results in
4149:/usr/include/c++/11/bits/basic_string.h ****        *  unsharing the string.
4150:/usr/include/c++/11/bits/basic_string.h ****        */
4151:/usr/include/c++/11/bits/basic_string.h ****       reference
4152:/usr/include/c++/11/bits/basic_string.h ****       at(size_type __n)
4153:/usr/include/c++/11/bits/basic_string.h ****       {
4154:/usr/include/c++/11/bits/basic_string.h **** 	if (__n >= size())
4155:/usr/include/c++/11/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4156:/usr/include/c++/11/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
4157:/usr/include/c++/11/bits/basic_string.h **** 				       "(which is %zu)"),
4158:/usr/include/c++/11/bits/basic_string.h **** 				   __n, this->size());
4159:/usr/include/c++/11/bits/basic_string.h **** 	_M_leak();
4160:/usr/include/c++/11/bits/basic_string.h **** 	return _M_data()[__n];
4161:/usr/include/c++/11/bits/basic_string.h ****       }
4162:/usr/include/c++/11/bits/basic_string.h **** 
4163:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
4164:/usr/include/c++/11/bits/basic_string.h ****       /**
4165:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
4166:/usr/include/c++/11/bits/basic_string.h ****        *  element of the %string.
4167:/usr/include/c++/11/bits/basic_string.h ****        */
4168:/usr/include/c++/11/bits/basic_string.h ****       reference
4169:/usr/include/c++/11/bits/basic_string.h ****       front()
4170:/usr/include/c++/11/bits/basic_string.h ****       {
4171:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4172:/usr/include/c++/11/bits/basic_string.h **** 	return operator[](0);
4173:/usr/include/c++/11/bits/basic_string.h ****       }
4174:/usr/include/c++/11/bits/basic_string.h **** 
4175:/usr/include/c++/11/bits/basic_string.h ****       /**
4176:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
4177:/usr/include/c++/11/bits/basic_string.h ****        *  element of the %string.
4178:/usr/include/c++/11/bits/basic_string.h ****        */
4179:/usr/include/c++/11/bits/basic_string.h ****       const_reference
4180:/usr/include/c++/11/bits/basic_string.h ****       front() const noexcept
4181:/usr/include/c++/11/bits/basic_string.h ****       {
4182:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4183:/usr/include/c++/11/bits/basic_string.h **** 	return operator[](0);
4184:/usr/include/c++/11/bits/basic_string.h ****       }
4185:/usr/include/c++/11/bits/basic_string.h **** 
4186:/usr/include/c++/11/bits/basic_string.h ****       /**
4187:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
4188:/usr/include/c++/11/bits/basic_string.h ****        *  element of the %string.
4189:/usr/include/c++/11/bits/basic_string.h ****        */
4190:/usr/include/c++/11/bits/basic_string.h ****       reference
4191:/usr/include/c++/11/bits/basic_string.h ****       back()
4192:/usr/include/c++/11/bits/basic_string.h ****       {
4193:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4194:/usr/include/c++/11/bits/basic_string.h **** 	return operator[](this->size() - 1);
4195:/usr/include/c++/11/bits/basic_string.h ****       }
4196:/usr/include/c++/11/bits/basic_string.h **** 
4197:/usr/include/c++/11/bits/basic_string.h ****       /**
4198:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
4199:/usr/include/c++/11/bits/basic_string.h ****        *  last element of the %string.
4200:/usr/include/c++/11/bits/basic_string.h ****        */
4201:/usr/include/c++/11/bits/basic_string.h ****       const_reference
4202:/usr/include/c++/11/bits/basic_string.h ****       back() const noexcept
4203:/usr/include/c++/11/bits/basic_string.h ****       {
4204:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4205:/usr/include/c++/11/bits/basic_string.h **** 	return operator[](this->size() - 1);
4206:/usr/include/c++/11/bits/basic_string.h ****       }
4207:/usr/include/c++/11/bits/basic_string.h **** #endif
4208:/usr/include/c++/11/bits/basic_string.h **** 
4209:/usr/include/c++/11/bits/basic_string.h ****       // Modifiers:
4210:/usr/include/c++/11/bits/basic_string.h ****       /**
4211:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a string to this string.
4212:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  The string to append.
4213:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4214:/usr/include/c++/11/bits/basic_string.h ****        */
4215:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4216:/usr/include/c++/11/bits/basic_string.h ****       operator+=(const basic_string& __str)
4217:/usr/include/c++/11/bits/basic_string.h ****       { return this->append(__str); }
4218:/usr/include/c++/11/bits/basic_string.h **** 
4219:/usr/include/c++/11/bits/basic_string.h ****       /**
4220:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a C string.
4221:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  The C string to append.
4222:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4223:/usr/include/c++/11/bits/basic_string.h ****        */
4224:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4225:/usr/include/c++/11/bits/basic_string.h ****       operator+=(const _CharT* __s)
4226:/usr/include/c++/11/bits/basic_string.h ****       { return this->append(__s); }
4227:/usr/include/c++/11/bits/basic_string.h **** 
4228:/usr/include/c++/11/bits/basic_string.h ****       /**
4229:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a character.
4230:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  The character to append.
4231:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4232:/usr/include/c++/11/bits/basic_string.h ****        */
4233:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4234:/usr/include/c++/11/bits/basic_string.h ****       operator+=(_CharT __c)
4235:/usr/include/c++/11/bits/basic_string.h ****       { 
4236:/usr/include/c++/11/bits/basic_string.h **** 	this->push_back(__c);
4237:/usr/include/c++/11/bits/basic_string.h **** 	return *this;
4238:/usr/include/c++/11/bits/basic_string.h ****       }
4239:/usr/include/c++/11/bits/basic_string.h **** 
4240:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
4241:/usr/include/c++/11/bits/basic_string.h ****       /**
4242:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
4243:/usr/include/c++/11/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
4244:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4245:/usr/include/c++/11/bits/basic_string.h ****        */
4246:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4247:/usr/include/c++/11/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
4248:/usr/include/c++/11/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4249:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
4250:/usr/include/c++/11/bits/basic_string.h **** 
4251:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
4252:/usr/include/c++/11/bits/basic_string.h ****       /**
4253:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a string_view.
4254:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4255:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4256:/usr/include/c++/11/bits/basic_string.h ****        */
4257:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
4258:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4259:/usr/include/c++/11/bits/basic_string.h **** 	operator+=(const _Tp& __svt)
4260:/usr/include/c++/11/bits/basic_string.h **** 	{ return this->append(__svt); }
4261:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
4262:/usr/include/c++/11/bits/basic_string.h **** 
4263:/usr/include/c++/11/bits/basic_string.h ****       /**
4264:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a string to this string.
4265:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  The string to append.
4266:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4267:/usr/include/c++/11/bits/basic_string.h ****        */
4268:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4269:/usr/include/c++/11/bits/basic_string.h ****       append(const basic_string& __str);
4270:/usr/include/c++/11/bits/basic_string.h **** 
4271:/usr/include/c++/11/bits/basic_string.h ****       /**
4272:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a substring.
4273:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  The string to append.
4274:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
4275:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4276:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4277:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
4278:/usr/include/c++/11/bits/basic_string.h ****        *
4279:/usr/include/c++/11/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
4280:/usr/include/c++/11/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
4281:/usr/include/c++/11/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
4282:/usr/include/c++/11/bits/basic_string.h ****        *  remainder of @a __str is appended.
4283:/usr/include/c++/11/bits/basic_string.h ****        */
4284:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4285:/usr/include/c++/11/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos);
4286:/usr/include/c++/11/bits/basic_string.h **** 
4287:/usr/include/c++/11/bits/basic_string.h ****       /**
4288:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a C substring.
4289:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  The C string to append.
4290:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4291:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4292:/usr/include/c++/11/bits/basic_string.h ****        */
4293:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4294:/usr/include/c++/11/bits/basic_string.h ****       append(const _CharT* __s, size_type __n);
4295:/usr/include/c++/11/bits/basic_string.h **** 
4296:/usr/include/c++/11/bits/basic_string.h ****       /**
4297:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a C string.
4298:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  The C string to append.
4299:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4300:/usr/include/c++/11/bits/basic_string.h ****        */
4301:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4302:/usr/include/c++/11/bits/basic_string.h ****       append(const _CharT* __s)
4303:/usr/include/c++/11/bits/basic_string.h ****       {
4304:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4305:/usr/include/c++/11/bits/basic_string.h **** 	return this->append(__s, traits_type::length(__s));
4306:/usr/include/c++/11/bits/basic_string.h ****       }
4307:/usr/include/c++/11/bits/basic_string.h **** 
4308:/usr/include/c++/11/bits/basic_string.h ****       /**
4309:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append multiple characters.
4310:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4311:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  The character to use.
4312:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4313:/usr/include/c++/11/bits/basic_string.h ****        *
4314:/usr/include/c++/11/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
4315:/usr/include/c++/11/bits/basic_string.h ****        */
4316:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4317:/usr/include/c++/11/bits/basic_string.h ****       append(size_type __n, _CharT __c);
4318:/usr/include/c++/11/bits/basic_string.h **** 
4319:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
4320:/usr/include/c++/11/bits/basic_string.h ****       /**
4321:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
4322:/usr/include/c++/11/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
4323:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4324:/usr/include/c++/11/bits/basic_string.h ****        */
4325:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4326:/usr/include/c++/11/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
4327:/usr/include/c++/11/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4328:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
4329:/usr/include/c++/11/bits/basic_string.h **** 
4330:/usr/include/c++/11/bits/basic_string.h ****       /**
4331:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a range of characters.
4332:/usr/include/c++/11/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4333:/usr/include/c++/11/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4334:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4335:/usr/include/c++/11/bits/basic_string.h ****        *
4336:/usr/include/c++/11/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
4337:/usr/include/c++/11/bits/basic_string.h ****        */
4338:/usr/include/c++/11/bits/basic_string.h ****       template<class _InputIterator>
4339:/usr/include/c++/11/bits/basic_string.h ****         basic_string&
4340:/usr/include/c++/11/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
4341:/usr/include/c++/11/bits/basic_string.h ****         { return this->replace(_M_iend(), _M_iend(), __first, __last); }
4342:/usr/include/c++/11/bits/basic_string.h **** 
4343:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
4344:/usr/include/c++/11/bits/basic_string.h ****       /**
4345:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a string_view.
4346:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4347:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4348:/usr/include/c++/11/bits/basic_string.h ****        */
4349:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
4350:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4351:/usr/include/c++/11/bits/basic_string.h **** 	append(const _Tp& __svt)
4352:/usr/include/c++/11/bits/basic_string.h **** 	{
4353:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4354:/usr/include/c++/11/bits/basic_string.h **** 	  return this->append(__sv.data(), __sv.size());
4355:/usr/include/c++/11/bits/basic_string.h **** 	}
4356:/usr/include/c++/11/bits/basic_string.h **** 
4357:/usr/include/c++/11/bits/basic_string.h ****       /**
4358:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a range of characters from a string_view.
4359:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended
4360:/usr/include/c++/11/bits/basic_string.h ****        *               from.
4361:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos The position in the string_view to append from.
4362:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
4363:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4364:/usr/include/c++/11/bits/basic_string.h ****        */
4365:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
4366:/usr/include/c++/11/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4367:/usr/include/c++/11/bits/basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
4368:/usr/include/c++/11/bits/basic_string.h **** 	{
4369:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4370:/usr/include/c++/11/bits/basic_string.h **** 	  return append(__sv.data()
4371:/usr/include/c++/11/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
4372:/usr/include/c++/11/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4373:/usr/include/c++/11/bits/basic_string.h **** 	}
4374:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
4375:/usr/include/c++/11/bits/basic_string.h **** 
4376:/usr/include/c++/11/bits/basic_string.h ****       /**
4377:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a single character.
4378:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to append.
4379:/usr/include/c++/11/bits/basic_string.h ****        */
4380:/usr/include/c++/11/bits/basic_string.h ****       void
4381:/usr/include/c++/11/bits/basic_string.h ****       push_back(_CharT __c)
4382:/usr/include/c++/11/bits/basic_string.h ****       { 
4383:/usr/include/c++/11/bits/basic_string.h **** 	const size_type __len = 1 + this->size();
4384:/usr/include/c++/11/bits/basic_string.h **** 	if (__len > this->capacity() || _M_rep()->_M_is_shared())
4385:/usr/include/c++/11/bits/basic_string.h **** 	  this->reserve(__len);
4386:/usr/include/c++/11/bits/basic_string.h **** 	traits_type::assign(_M_data()[this->size()], __c);
4387:/usr/include/c++/11/bits/basic_string.h **** 	_M_rep()->_M_set_length_and_sharable(__len);
4388:/usr/include/c++/11/bits/basic_string.h ****       }
4389:/usr/include/c++/11/bits/basic_string.h **** 
4390:/usr/include/c++/11/bits/basic_string.h ****       /**
4391:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
4392:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string to use.
4393:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4394:/usr/include/c++/11/bits/basic_string.h ****        */
4395:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4396:/usr/include/c++/11/bits/basic_string.h ****       assign(const basic_string& __str);
4397:/usr/include/c++/11/bits/basic_string.h **** 
4398:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
4399:/usr/include/c++/11/bits/basic_string.h ****       /**
4400:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
4401:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string to use.
4402:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4403:/usr/include/c++/11/bits/basic_string.h ****        *
4404:/usr/include/c++/11/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
4405:/usr/include/c++/11/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
4406:/usr/include/c++/11/bits/basic_string.h ****        */
4407:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4408:/usr/include/c++/11/bits/basic_string.h ****       assign(basic_string&& __str)
4409:/usr/include/c++/11/bits/basic_string.h ****       noexcept(allocator_traits<_Alloc>::is_always_equal::value)
4410:/usr/include/c++/11/bits/basic_string.h ****       {
4411:/usr/include/c++/11/bits/basic_string.h **** 	this->swap(__str);
4412:/usr/include/c++/11/bits/basic_string.h **** 	return *this;
4413:/usr/include/c++/11/bits/basic_string.h ****       }
4414:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
4415:/usr/include/c++/11/bits/basic_string.h **** 
4416:/usr/include/c++/11/bits/basic_string.h ****       /**
4417:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
4418:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  The string to use.
4419:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
4420:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to use.
4421:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4422:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
4423:/usr/include/c++/11/bits/basic_string.h ****        *
4424:/usr/include/c++/11/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
4425:/usr/include/c++/11/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
4426:/usr/include/c++/11/bits/basic_string.h ****        *  is larger than the number of available characters in @a
4427:/usr/include/c++/11/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
4428:/usr/include/c++/11/bits/basic_string.h ****        */
4429:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4430:/usr/include/c++/11/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
4431:/usr/include/c++/11/bits/basic_string.h ****       { return this->assign(__str._M_data()
4432:/usr/include/c++/11/bits/basic_string.h **** 			    + __str._M_check(__pos, "basic_string::assign"),
4433:/usr/include/c++/11/bits/basic_string.h **** 			    __str._M_limit(__pos, __n)); }
4434:/usr/include/c++/11/bits/basic_string.h **** 
4435:/usr/include/c++/11/bits/basic_string.h ****       /**
4436:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to a C substring.
4437:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  The C string to use.
4438:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to use.
4439:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4440:/usr/include/c++/11/bits/basic_string.h ****        *
4441:/usr/include/c++/11/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
4442:/usr/include/c++/11/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
4443:/usr/include/c++/11/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
4444:/usr/include/c++/11/bits/basic_string.h ****        */
4445:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4446:/usr/include/c++/11/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n);
4447:/usr/include/c++/11/bits/basic_string.h **** 
4448:/usr/include/c++/11/bits/basic_string.h ****       /**
4449:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
4450:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  The C string to use.
4451:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4452:/usr/include/c++/11/bits/basic_string.h ****        *
4453:/usr/include/c++/11/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
4454:/usr/include/c++/11/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
4455:/usr/include/c++/11/bits/basic_string.h ****        *  function returns.
4456:/usr/include/c++/11/bits/basic_string.h ****        */
4457:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4458:/usr/include/c++/11/bits/basic_string.h ****       assign(const _CharT* __s)
4459:/usr/include/c++/11/bits/basic_string.h ****       {
4460:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4461:/usr/include/c++/11/bits/basic_string.h **** 	return this->assign(__s, traits_type::length(__s));
4462:/usr/include/c++/11/bits/basic_string.h ****       }
4463:/usr/include/c++/11/bits/basic_string.h **** 
4464:/usr/include/c++/11/bits/basic_string.h ****       /**
4465:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
4466:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
4467:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  The character to use.
4468:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4469:/usr/include/c++/11/bits/basic_string.h ****        *
4470:/usr/include/c++/11/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
4471:/usr/include/c++/11/bits/basic_string.h ****        *  character @a __c.
4472:/usr/include/c++/11/bits/basic_string.h ****        */
4473:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4474:/usr/include/c++/11/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
4475:/usr/include/c++/11/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
4476:/usr/include/c++/11/bits/basic_string.h **** 
4477:/usr/include/c++/11/bits/basic_string.h ****       /**
4478:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
4479:/usr/include/c++/11/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4480:/usr/include/c++/11/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4481:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4482:/usr/include/c++/11/bits/basic_string.h ****        *
4483:/usr/include/c++/11/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
4484:/usr/include/c++/11/bits/basic_string.h ****       */
4485:/usr/include/c++/11/bits/basic_string.h ****       template<class _InputIterator>
4486:/usr/include/c++/11/bits/basic_string.h ****         basic_string&
4487:/usr/include/c++/11/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
4488:/usr/include/c++/11/bits/basic_string.h ****         { return this->replace(_M_ibegin(), _M_iend(), __first, __last); }
4489:/usr/include/c++/11/bits/basic_string.h **** 
4490:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
4491:/usr/include/c++/11/bits/basic_string.h ****       /**
4492:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
4493:/usr/include/c++/11/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
4494:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4495:/usr/include/c++/11/bits/basic_string.h ****        */
4496:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4497:/usr/include/c++/11/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
4498:/usr/include/c++/11/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
4499:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
4500:/usr/include/c++/11/bits/basic_string.h **** 
4501:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
4502:/usr/include/c++/11/bits/basic_string.h ****       /**
4503:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value from a string_view.
4504:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt The source object convertible to string_view.
4505:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4506:/usr/include/c++/11/bits/basic_string.h ****        */
4507:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
4508:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4509:/usr/include/c++/11/bits/basic_string.h **** 	assign(const _Tp& __svt)
4510:/usr/include/c++/11/bits/basic_string.h **** 	{
4511:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4512:/usr/include/c++/11/bits/basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
4513:/usr/include/c++/11/bits/basic_string.h **** 	}
4514:/usr/include/c++/11/bits/basic_string.h **** 
4515:/usr/include/c++/11/bits/basic_string.h ****       /**
4516:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
4517:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
4518:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
4519:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  The number of characters to assign.
4520:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4521:/usr/include/c++/11/bits/basic_string.h ****        */
4522:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
4523:/usr/include/c++/11/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4524:/usr/include/c++/11/bits/basic_string.h ****         assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
4525:/usr/include/c++/11/bits/basic_string.h **** 	{
4526:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4527:/usr/include/c++/11/bits/basic_string.h **** 	  return assign(__sv.data()
4528:/usr/include/c++/11/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
4529:/usr/include/c++/11/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4530:/usr/include/c++/11/bits/basic_string.h **** 	}
4531:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
4532:/usr/include/c++/11/bits/basic_string.h **** 
4533:/usr/include/c++/11/bits/basic_string.h ****       /**
4534:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert multiple characters.
4535:/usr/include/c++/11/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4536:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to insert
4537:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  The character to insert.
4538:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4539:/usr/include/c++/11/bits/basic_string.h ****        *
4540:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
4541:/usr/include/c++/11/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
4542:/usr/include/c++/11/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4543:/usr/include/c++/11/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4544:/usr/include/c++/11/bits/basic_string.h ****        *  change if an error is thrown.
4545:/usr/include/c++/11/bits/basic_string.h ****       */
4546:/usr/include/c++/11/bits/basic_string.h ****       void
4547:/usr/include/c++/11/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
4548:/usr/include/c++/11/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
4549:/usr/include/c++/11/bits/basic_string.h **** 
4550:/usr/include/c++/11/bits/basic_string.h ****       /**
4551:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert a range of characters.
4552:/usr/include/c++/11/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4553:/usr/include/c++/11/bits/basic_string.h ****        *  @param __beg  Start of range.
4554:/usr/include/c++/11/bits/basic_string.h ****        *  @param __end  End of range.
4555:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4556:/usr/include/c++/11/bits/basic_string.h ****        *
4557:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
4558:/usr/include/c++/11/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4559:/usr/include/c++/11/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4560:/usr/include/c++/11/bits/basic_string.h ****        *  change if an error is thrown.
4561:/usr/include/c++/11/bits/basic_string.h ****       */
4562:/usr/include/c++/11/bits/basic_string.h ****       template<class _InputIterator>
4563:/usr/include/c++/11/bits/basic_string.h ****         void
4564:/usr/include/c++/11/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
4565:/usr/include/c++/11/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
4566:/usr/include/c++/11/bits/basic_string.h **** 
4567:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
4568:/usr/include/c++/11/bits/basic_string.h ****       /**
4569:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
4570:/usr/include/c++/11/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4571:/usr/include/c++/11/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
4572:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4573:/usr/include/c++/11/bits/basic_string.h ****        */
4574:/usr/include/c++/11/bits/basic_string.h ****       void
4575:/usr/include/c++/11/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
4576:/usr/include/c++/11/bits/basic_string.h ****       {
4577:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4578:/usr/include/c++/11/bits/basic_string.h **** 	this->insert(__p - _M_ibegin(), __l.begin(), __l.size());
4579:/usr/include/c++/11/bits/basic_string.h ****       }
4580:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
4581:/usr/include/c++/11/bits/basic_string.h **** 
4582:/usr/include/c++/11/bits/basic_string.h ****       /**
4583:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert value of a string.
4584:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos1  Position in string to insert at.
4585:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  The string to insert.
4586:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4587:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4588:/usr/include/c++/11/bits/basic_string.h ****        *
4589:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
4590:/usr/include/c++/11/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4591:/usr/include/c++/11/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4592:/usr/include/c++/11/bits/basic_string.h ****        *  change if an error is thrown.
4593:/usr/include/c++/11/bits/basic_string.h ****       */
4594:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4595:/usr/include/c++/11/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
4596:/usr/include/c++/11/bits/basic_string.h ****       { return this->insert(__pos1, __str, size_type(0), __str.size()); }
4597:/usr/include/c++/11/bits/basic_string.h **** 
4598:/usr/include/c++/11/bits/basic_string.h ****       /**
4599:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert a substring.
4600:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos1  Position in string to insert at.
4601:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  The string to insert.
4602:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
4603:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
4604:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4605:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4606:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
4607:/usr/include/c++/11/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
4608:/usr/include/c++/11/bits/basic_string.h ****        *
4609:/usr/include/c++/11/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
4610:/usr/include/c++/11/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
4611:/usr/include/c++/11/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
4612:/usr/include/c++/11/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
4613:/usr/include/c++/11/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
4614:/usr/include/c++/11/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4615:/usr/include/c++/11/bits/basic_string.h ****       */
4616:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4617:/usr/include/c++/11/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
4618:/usr/include/c++/11/bits/basic_string.h **** 	     size_type __pos2, size_type __n = npos)
4619:/usr/include/c++/11/bits/basic_string.h ****       { return this->insert(__pos1, __str._M_data()
4620:/usr/include/c++/11/bits/basic_string.h **** 			    + __str._M_check(__pos2, "basic_string::insert"),
4621:/usr/include/c++/11/bits/basic_string.h **** 			    __str._M_limit(__pos2, __n)); }
4622:/usr/include/c++/11/bits/basic_string.h **** 
4623:/usr/include/c++/11/bits/basic_string.h ****       /**
4624:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert a C substring.
4625:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Position in string to insert at.
4626:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  The C string to insert.
4627:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
4628:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4629:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4630:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4631:/usr/include/c++/11/bits/basic_string.h ****        *  string.
4632:/usr/include/c++/11/bits/basic_string.h ****        *
4633:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
4634:/usr/include/c++/11/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
4635:/usr/include/c++/11/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
4636:/usr/include/c++/11/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
4637:/usr/include/c++/11/bits/basic_string.h ****        *  doesn't change if an error is thrown.
4638:/usr/include/c++/11/bits/basic_string.h ****       */
4639:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4640:/usr/include/c++/11/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n);
4641:/usr/include/c++/11/bits/basic_string.h **** 
4642:/usr/include/c++/11/bits/basic_string.h ****       /**
4643:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert a C string.
4644:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Position in string to insert at.
4645:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  The C string to insert.
4646:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4647:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4648:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4649:/usr/include/c++/11/bits/basic_string.h ****        *  string.
4650:/usr/include/c++/11/bits/basic_string.h ****        *
4651:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
4652:/usr/include/c++/11/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
4653:/usr/include/c++/11/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
4654:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
4655:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.
4656:/usr/include/c++/11/bits/basic_string.h ****       */
4657:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4658:/usr/include/c++/11/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
4659:/usr/include/c++/11/bits/basic_string.h ****       {
4660:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4661:/usr/include/c++/11/bits/basic_string.h **** 	return this->insert(__pos, __s, traits_type::length(__s));
4662:/usr/include/c++/11/bits/basic_string.h ****       }
4663:/usr/include/c++/11/bits/basic_string.h **** 
4664:/usr/include/c++/11/bits/basic_string.h ****       /**
4665:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert multiple characters.
4666:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
4667:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to insert
4668:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  The character to insert.
4669:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4670:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4671:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4672:/usr/include/c++/11/bits/basic_string.h ****        *  string.
4673:/usr/include/c++/11/bits/basic_string.h ****        *
4674:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
4675:/usr/include/c++/11/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
4676:/usr/include/c++/11/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
4677:/usr/include/c++/11/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4678:/usr/include/c++/11/bits/basic_string.h ****        *  change if an error is thrown.
4679:/usr/include/c++/11/bits/basic_string.h ****       */
4680:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4681:/usr/include/c++/11/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
4682:/usr/include/c++/11/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
4683:/usr/include/c++/11/bits/basic_string.h **** 			      size_type(0), __n, __c); }
4684:/usr/include/c++/11/bits/basic_string.h **** 
4685:/usr/include/c++/11/bits/basic_string.h ****       /**
4686:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert one character.
4687:/usr/include/c++/11/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
4688:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  The character to insert.
4689:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
4690:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4691:/usr/include/c++/11/bits/basic_string.h ****        *
4692:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
4693:/usr/include/c++/11/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
4694:/usr/include/c++/11/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
4695:/usr/include/c++/11/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4696:/usr/include/c++/11/bits/basic_string.h ****        *  change if an error is thrown.
4697:/usr/include/c++/11/bits/basic_string.h ****       */
4698:/usr/include/c++/11/bits/basic_string.h ****       iterator
4699:/usr/include/c++/11/bits/basic_string.h ****       insert(iterator __p, _CharT __c)
4700:/usr/include/c++/11/bits/basic_string.h ****       {
4701:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4702:/usr/include/c++/11/bits/basic_string.h **** 	const size_type __pos = __p - _M_ibegin();
4703:/usr/include/c++/11/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
4704:/usr/include/c++/11/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
4705:/usr/include/c++/11/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
4706:/usr/include/c++/11/bits/basic_string.h ****       }
4707:/usr/include/c++/11/bits/basic_string.h **** 
4708:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
4709:/usr/include/c++/11/bits/basic_string.h ****       /**
4710:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert a string_view.
4711:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Position in string to insert at.
4712:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
4713:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4714:/usr/include/c++/11/bits/basic_string.h ****       */
4715:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
4716:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4717:/usr/include/c++/11/bits/basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
4718:/usr/include/c++/11/bits/basic_string.h **** 	{
4719:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4720:/usr/include/c++/11/bits/basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
4721:/usr/include/c++/11/bits/basic_string.h **** 	}
4722:/usr/include/c++/11/bits/basic_string.h **** 
4723:/usr/include/c++/11/bits/basic_string.h ****       /**
4724:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert a string_view.
4725:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos1  Position in string to insert at.
4726:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
4727:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos2  Position in string_view to insert from.
4728:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n    The number of characters to insert.
4729:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4730:/usr/include/c++/11/bits/basic_string.h ****       */
4731:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
4732:/usr/include/c++/11/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4733:/usr/include/c++/11/bits/basic_string.h ****         insert(size_type __pos1, const _Tp& __svt,
4734:/usr/include/c++/11/bits/basic_string.h **** 	       size_type __pos2, size_type __n = npos)
4735:/usr/include/c++/11/bits/basic_string.h **** 	{
4736:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4737:/usr/include/c++/11/bits/basic_string.h **** 	  return this->replace(__pos1, size_type(0), __sv.data()
4738:/usr/include/c++/11/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
4739:/usr/include/c++/11/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
4740:/usr/include/c++/11/bits/basic_string.h **** 	}
4741:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
4742:/usr/include/c++/11/bits/basic_string.h **** 
4743:/usr/include/c++/11/bits/basic_string.h ****       /**
4744:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Remove characters.
4745:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
4746:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
4747:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4748:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4749:/usr/include/c++/11/bits/basic_string.h ****        *  string.
4750:/usr/include/c++/11/bits/basic_string.h ****        *
4751:/usr/include/c++/11/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
4752:/usr/include/c++/11/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
4753:/usr/include/c++/11/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
4754:/usr/include/c++/11/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
4755:/usr/include/c++/11/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4756:/usr/include/c++/11/bits/basic_string.h ****        *  change if an error is thrown.
4757:/usr/include/c++/11/bits/basic_string.h ****       */
4758:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4759:/usr/include/c++/11/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
4760:/usr/include/c++/11/bits/basic_string.h ****       { 
4761:/usr/include/c++/11/bits/basic_string.h **** 	_M_mutate(_M_check(__pos, "basic_string::erase"),
4762:/usr/include/c++/11/bits/basic_string.h **** 		  _M_limit(__pos, __n), size_type(0));
4763:/usr/include/c++/11/bits/basic_string.h **** 	return *this;
4764:/usr/include/c++/11/bits/basic_string.h ****       }
4765:/usr/include/c++/11/bits/basic_string.h **** 
4766:/usr/include/c++/11/bits/basic_string.h ****       /**
4767:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Remove one character.
4768:/usr/include/c++/11/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
4769:/usr/include/c++/11/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
4770:/usr/include/c++/11/bits/basic_string.h ****        *
4771:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
4772:/usr/include/c++/11/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
4773:/usr/include/c++/11/bits/basic_string.h ****       */
4774:/usr/include/c++/11/bits/basic_string.h ****       iterator
4775:/usr/include/c++/11/bits/basic_string.h ****       erase(iterator __position)
4776:/usr/include/c++/11/bits/basic_string.h ****       {
4777:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= _M_ibegin()
4778:/usr/include/c++/11/bits/basic_string.h **** 				 && __position < _M_iend());
4779:/usr/include/c++/11/bits/basic_string.h **** 	const size_type __pos = __position - _M_ibegin();
4780:/usr/include/c++/11/bits/basic_string.h **** 	_M_mutate(__pos, size_type(1), size_type(0));
4781:/usr/include/c++/11/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
4782:/usr/include/c++/11/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
4783:/usr/include/c++/11/bits/basic_string.h ****       }
4784:/usr/include/c++/11/bits/basic_string.h **** 
4785:/usr/include/c++/11/bits/basic_string.h ****       /**
4786:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Remove a range of characters.
4787:/usr/include/c++/11/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
4788:/usr/include/c++/11/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
4789:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
4790:/usr/include/c++/11/bits/basic_string.h ****        *
4791:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
4792:/usr/include/c++/11/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
4793:/usr/include/c++/11/bits/basic_string.h ****       */
4794:/usr/include/c++/11/bits/basic_string.h ****       iterator
4795:/usr/include/c++/11/bits/basic_string.h ****       erase(iterator __first, iterator __last);
4796:/usr/include/c++/11/bits/basic_string.h ****  
4797:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
4798:/usr/include/c++/11/bits/basic_string.h ****       /**
4799:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Remove the last character.
4800:/usr/include/c++/11/bits/basic_string.h ****        *
4801:/usr/include/c++/11/bits/basic_string.h ****        *  The string must be non-empty.
4802:/usr/include/c++/11/bits/basic_string.h ****        */
4803:/usr/include/c++/11/bits/basic_string.h ****       void
4804:/usr/include/c++/11/bits/basic_string.h ****       pop_back() // FIXME C++11: should be noexcept.
4805:/usr/include/c++/11/bits/basic_string.h ****       {
4806:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4807:/usr/include/c++/11/bits/basic_string.h **** 	erase(size() - 1, 1);
4808:/usr/include/c++/11/bits/basic_string.h ****       }
4809:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
4810:/usr/include/c++/11/bits/basic_string.h **** 
4811:/usr/include/c++/11/bits/basic_string.h ****       /**
4812:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
4813:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4814:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
4815:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String to insert.
4816:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4817:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4818:/usr/include/c++/11/bits/basic_string.h ****        *  string.
4819:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4820:/usr/include/c++/11/bits/basic_string.h ****        *
4821:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
4822:/usr/include/c++/11/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
4823:/usr/include/c++/11/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4824:/usr/include/c++/11/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
4825:/usr/include/c++/11/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
4826:/usr/include/c++/11/bits/basic_string.h ****        *  error is thrown.
4827:/usr/include/c++/11/bits/basic_string.h ****       */
4828:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4829:/usr/include/c++/11/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
4830:/usr/include/c++/11/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
4831:/usr/include/c++/11/bits/basic_string.h **** 
4832:/usr/include/c++/11/bits/basic_string.h ****       /**
4833:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
4834:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
4835:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4836:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String to insert.
4837:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
4838:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
4839:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4840:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
4841:/usr/include/c++/11/bits/basic_string.h ****        *  __str.size().
4842:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4843:/usr/include/c++/11/bits/basic_string.h ****        *
4844:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
4845:/usr/include/c++/11/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
4846:/usr/include/c++/11/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
4847:/usr/include/c++/11/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
4848:/usr/include/c++/11/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
4849:/usr/include/c++/11/bits/basic_string.h ****       */
4850:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4851:/usr/include/c++/11/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
4852:/usr/include/c++/11/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
4853:/usr/include/c++/11/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
4854:/usr/include/c++/11/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
4855:/usr/include/c++/11/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
4856:/usr/include/c++/11/bits/basic_string.h **** 
4857:/usr/include/c++/11/bits/basic_string.h ****       /**
4858:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
4859:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4860:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4861:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to insert.
4862:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
4863:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4864:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
4865:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4866:/usr/include/c++/11/bits/basic_string.h ****        *
4867:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4868:/usr/include/c++/11/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
4869:/usr/include/c++/11/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
4870:/usr/include/c++/11/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
4871:/usr/include/c++/11/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
4872:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4873:/usr/include/c++/11/bits/basic_string.h ****        *  is thrown.
4874:/usr/include/c++/11/bits/basic_string.h ****       */
4875:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4876:/usr/include/c++/11/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
4877:/usr/include/c++/11/bits/basic_string.h **** 	      size_type __n2);
4878:/usr/include/c++/11/bits/basic_string.h **** 
4879:/usr/include/c++/11/bits/basic_string.h ****       /**
4880:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
4881:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4882:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4883:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to insert.
4884:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4885:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
4886:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4887:/usr/include/c++/11/bits/basic_string.h ****        *
4888:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4889:/usr/include/c++/11/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
4890:/usr/include/c++/11/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
4891:/usr/include/c++/11/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
4892:/usr/include/c++/11/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4893:/usr/include/c++/11/bits/basic_string.h ****        *  change if an error is thrown.
4894:/usr/include/c++/11/bits/basic_string.h ****       */
4895:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4896:/usr/include/c++/11/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
4897:/usr/include/c++/11/bits/basic_string.h ****       {
4898:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4899:/usr/include/c++/11/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
4900:/usr/include/c++/11/bits/basic_string.h ****       }
4901:/usr/include/c++/11/bits/basic_string.h **** 
4902:/usr/include/c++/11/bits/basic_string.h ****       /**
4903:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
4904:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4905:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4906:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
4907:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to insert.
4908:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4909:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
4910:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4911:/usr/include/c++/11/bits/basic_string.h ****        *
4912:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
4913:/usr/include/c++/11/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
4914:/usr/include/c++/11/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4915:/usr/include/c++/11/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
4916:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4917:/usr/include/c++/11/bits/basic_string.h ****        *  is thrown.
4918:/usr/include/c++/11/bits/basic_string.h ****       */
4919:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4920:/usr/include/c++/11/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
4921:/usr/include/c++/11/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
4922:/usr/include/c++/11/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
4923:/usr/include/c++/11/bits/basic_string.h **** 
4924:/usr/include/c++/11/bits/basic_string.h ****       /**
4925:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
4926:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4927:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4928:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String value to insert.
4929:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4930:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4931:/usr/include/c++/11/bits/basic_string.h ****        *
4932:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4933:/usr/include/c++/11/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
4934:/usr/include/c++/11/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
4935:/usr/include/c++/11/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
4936:/usr/include/c++/11/bits/basic_string.h ****       */
4937:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4938:/usr/include/c++/11/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const basic_string& __str)
4939:/usr/include/c++/11/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
4940:/usr/include/c++/11/bits/basic_string.h **** 
4941:/usr/include/c++/11/bits/basic_string.h ****       /**
4942:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
4943:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4944:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4945:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string value to insert.
4946:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
4947:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4948:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4949:/usr/include/c++/11/bits/basic_string.h ****        *
4950:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4951:/usr/include/c++/11/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
4952:/usr/include/c++/11/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4953:/usr/include/c++/11/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4954:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.
4955:/usr/include/c++/11/bits/basic_string.h ****       */
4956:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4957:/usr/include/c++/11/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
4958:/usr/include/c++/11/bits/basic_string.h ****       {
4959:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4960:/usr/include/c++/11/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4961:/usr/include/c++/11/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1, __s, __n);
4962:/usr/include/c++/11/bits/basic_string.h ****       }
4963:/usr/include/c++/11/bits/basic_string.h **** 
4964:/usr/include/c++/11/bits/basic_string.h ****       /**
4965:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
4966:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4967:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4968:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string value to insert.
4969:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4970:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4971:/usr/include/c++/11/bits/basic_string.h ****        *
4972:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4973:/usr/include/c++/11/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
4974:/usr/include/c++/11/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4975:/usr/include/c++/11/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4976:/usr/include/c++/11/bits/basic_string.h ****       */
4977:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4978:/usr/include/c++/11/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s)
4979:/usr/include/c++/11/bits/basic_string.h ****       {
4980:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4981:/usr/include/c++/11/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
4982:/usr/include/c++/11/bits/basic_string.h ****       }
4983:/usr/include/c++/11/bits/basic_string.h **** 
4984:/usr/include/c++/11/bits/basic_string.h ****       /**
4985:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
4986:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4987:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4988:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
4989:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to insert.
4990:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4991:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4992:/usr/include/c++/11/bits/basic_string.h ****        *
4993:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4994:/usr/include/c++/11/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
4995:/usr/include/c++/11/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4996:/usr/include/c++/11/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4997:/usr/include/c++/11/bits/basic_string.h ****       */
4998:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4999:/usr/include/c++/11/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)
5000:/usr/include/c++/11/bits/basic_string.h ****       {
5001:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5002:/usr/include/c++/11/bits/basic_string.h **** 				 && __i2 <= _M_iend());
5003:/usr/include/c++/11/bits/basic_string.h **** 	return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __c);
5004:/usr/include/c++/11/bits/basic_string.h ****       }
5005:/usr/include/c++/11/bits/basic_string.h **** 
5006:/usr/include/c++/11/bits/basic_string.h ****       /**
5007:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
5008:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
5009:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
5010:/usr/include/c++/11/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
5011:/usr/include/c++/11/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
5012:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
5013:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
5014:/usr/include/c++/11/bits/basic_string.h ****        *
5015:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
5016:/usr/include/c++/11/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
5017:/usr/include/c++/11/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
5018:/usr/include/c++/11/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
5019:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.
5020:/usr/include/c++/11/bits/basic_string.h ****       */
5021:/usr/include/c++/11/bits/basic_string.h ****       template<class _InputIterator>
5022:/usr/include/c++/11/bits/basic_string.h ****         basic_string&
5023:/usr/include/c++/11/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
5024:/usr/include/c++/11/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
5025:/usr/include/c++/11/bits/basic_string.h ****         {
5026:/usr/include/c++/11/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5027:/usr/include/c++/11/bits/basic_string.h **** 				   && __i2 <= _M_iend());
5028:/usr/include/c++/11/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
5029:/usr/include/c++/11/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
5030:/usr/include/c++/11/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
5031:/usr/include/c++/11/bits/basic_string.h **** 	}
5032:/usr/include/c++/11/bits/basic_string.h **** 
5033:/usr/include/c++/11/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
5034:/usr/include/c++/11/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
5035:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
5036:/usr/include/c++/11/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
5037:/usr/include/c++/11/bits/basic_string.h ****       {
5038:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5039:/usr/include/c++/11/bits/basic_string.h **** 				 && __i2 <= _M_iend());
5040:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5041:/usr/include/c++/11/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5042:/usr/include/c++/11/bits/basic_string.h **** 			     __k1, __k2 - __k1);
5043:/usr/include/c++/11/bits/basic_string.h ****       }
5044:/usr/include/c++/11/bits/basic_string.h **** 
5045:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
5046:/usr/include/c++/11/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
5047:/usr/include/c++/11/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
5048:/usr/include/c++/11/bits/basic_string.h ****       {
5049:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5050:/usr/include/c++/11/bits/basic_string.h **** 				 && __i2 <= _M_iend());
5051:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5052:/usr/include/c++/11/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5053:/usr/include/c++/11/bits/basic_string.h **** 			     __k1, __k2 - __k1);
5054:/usr/include/c++/11/bits/basic_string.h ****       }
5055:/usr/include/c++/11/bits/basic_string.h **** 
5056:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
5057:/usr/include/c++/11/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
5058:/usr/include/c++/11/bits/basic_string.h ****       {
5059:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5060:/usr/include/c++/11/bits/basic_string.h **** 				 && __i2 <= _M_iend());
5061:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5062:/usr/include/c++/11/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5063:/usr/include/c++/11/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
5064:/usr/include/c++/11/bits/basic_string.h ****       }
5065:/usr/include/c++/11/bits/basic_string.h **** 
5066:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
5067:/usr/include/c++/11/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
5068:/usr/include/c++/11/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
5069:/usr/include/c++/11/bits/basic_string.h ****       {
5070:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5071:/usr/include/c++/11/bits/basic_string.h **** 				 && __i2 <= _M_iend());
5072:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5073:/usr/include/c++/11/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5074:/usr/include/c++/11/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
5075:/usr/include/c++/11/bits/basic_string.h ****       }
5076:/usr/include/c++/11/bits/basic_string.h **** 
5077:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
5078:/usr/include/c++/11/bits/basic_string.h ****       /**
5079:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
5080:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
5081:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
5082:/usr/include/c++/11/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
5083:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
5084:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
5085:/usr/include/c++/11/bits/basic_string.h ****        *
5086:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
5087:/usr/include/c++/11/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
5088:/usr/include/c++/11/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
5089:/usr/include/c++/11/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
5090:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.
5091:/usr/include/c++/11/bits/basic_string.h ****       */
5092:/usr/include/c++/11/bits/basic_string.h ****       basic_string& replace(iterator __i1, iterator __i2,
5093:/usr/include/c++/11/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
5094:/usr/include/c++/11/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
5095:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
5096:/usr/include/c++/11/bits/basic_string.h **** 
5097:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
5098:/usr/include/c++/11/bits/basic_string.h ****       /**
5099:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
5100:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  The position to replace at.
5101:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n    The number of characters to replace.
5102:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
5103:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
5104:/usr/include/c++/11/bits/basic_string.h ****       */
5105:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
5106:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
5107:/usr/include/c++/11/bits/basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
5108:/usr/include/c++/11/bits/basic_string.h **** 	{
5109:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5110:/usr/include/c++/11/bits/basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
5111:/usr/include/c++/11/bits/basic_string.h **** 	}
5112:/usr/include/c++/11/bits/basic_string.h **** 
5113:/usr/include/c++/11/bits/basic_string.h ****       /**
5114:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
5115:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos1  The position to replace at.
5116:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1    The number of characters to replace.
5117:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5118:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
5119:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n2    The number of characters to insert.
5120:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
5121:/usr/include/c++/11/bits/basic_string.h ****       */
5122:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
5123:/usr/include/c++/11/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
5124:/usr/include/c++/11/bits/basic_string.h ****         replace(size_type __pos1, size_type __n1, const _Tp& __svt,
5125:/usr/include/c++/11/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
5126:/usr/include/c++/11/bits/basic_string.h **** 	{
5127:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5128:/usr/include/c++/11/bits/basic_string.h **** 	  return this->replace(__pos1, __n1,
5129:/usr/include/c++/11/bits/basic_string.h **** 	      __sv.data()
5130:/usr/include/c++/11/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
5131:/usr/include/c++/11/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
5132:/usr/include/c++/11/bits/basic_string.h **** 	}
5133:/usr/include/c++/11/bits/basic_string.h **** 
5134:/usr/include/c++/11/bits/basic_string.h ****       /**
5135:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
5136:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i1    An iterator referencing the start position
5137:/usr/include/c++/11/bits/basic_string.h ****           to replace at.
5138:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i2    An iterator referencing the end position
5139:/usr/include/c++/11/bits/basic_string.h ****           for the replace.
5140:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5141:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
5142:/usr/include/c++/11/bits/basic_string.h ****       */
5143:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
5144:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
5145:/usr/include/c++/11/bits/basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
5146:/usr/include/c++/11/bits/basic_string.h **** 	{
5147:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5148:/usr/include/c++/11/bits/basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
5149:/usr/include/c++/11/bits/basic_string.h **** 	}
5150:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
5151:/usr/include/c++/11/bits/basic_string.h **** 
5152:/usr/include/c++/11/bits/basic_string.h ****     private:
5153:/usr/include/c++/11/bits/basic_string.h ****       template<class _Integer>
5154:/usr/include/c++/11/bits/basic_string.h **** 	basic_string&
5155:/usr/include/c++/11/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,
5156:/usr/include/c++/11/bits/basic_string.h **** 			    _Integer __val, __true_type)
5157:/usr/include/c++/11/bits/basic_string.h ****         { return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __val); }
5158:/usr/include/c++/11/bits/basic_string.h **** 
5159:/usr/include/c++/11/bits/basic_string.h ****       template<class _InputIterator>
5160:/usr/include/c++/11/bits/basic_string.h **** 	basic_string&
5161:/usr/include/c++/11/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
5162:/usr/include/c++/11/bits/basic_string.h **** 			    _InputIterator __k2, __false_type);
5163:/usr/include/c++/11/bits/basic_string.h **** 
5164:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
5165:/usr/include/c++/11/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
5166:/usr/include/c++/11/bits/basic_string.h **** 		     _CharT __c);
5167:/usr/include/c++/11/bits/basic_string.h **** 
5168:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
5169:/usr/include/c++/11/bits/basic_string.h ****       _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
5170:/usr/include/c++/11/bits/basic_string.h **** 		      size_type __n2);
5171:/usr/include/c++/11/bits/basic_string.h **** 
5172:/usr/include/c++/11/bits/basic_string.h ****       // _S_construct_aux is used to implement the 21.3.1 para 15 which
5173:/usr/include/c++/11/bits/basic_string.h ****       // requires special behaviour if _InIter is an integral type
5174:/usr/include/c++/11/bits/basic_string.h ****       template<class _InIterator>
5175:/usr/include/c++/11/bits/basic_string.h ****         static _CharT*
5176:/usr/include/c++/11/bits/basic_string.h ****         _S_construct_aux(_InIterator __beg, _InIterator __end,
5177:/usr/include/c++/11/bits/basic_string.h **** 			 const _Alloc& __a, __false_type)
5178:/usr/include/c++/11/bits/basic_string.h **** 	{
5179:/usr/include/c++/11/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
5180:/usr/include/c++/11/bits/basic_string.h ****           return _S_construct(__beg, __end, __a, _Tag());
5181:/usr/include/c++/11/bits/basic_string.h **** 	}
5182:/usr/include/c++/11/bits/basic_string.h **** 
5183:/usr/include/c++/11/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5184:/usr/include/c++/11/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
5185:/usr/include/c++/11/bits/basic_string.h ****       template<class _Integer>
5186:/usr/include/c++/11/bits/basic_string.h ****         static _CharT*
5187:/usr/include/c++/11/bits/basic_string.h ****         _S_construct_aux(_Integer __beg, _Integer __end,
5188:/usr/include/c++/11/bits/basic_string.h **** 			 const _Alloc& __a, __true_type)
5189:/usr/include/c++/11/bits/basic_string.h ****         { return _S_construct_aux_2(static_cast<size_type>(__beg),
5190:/usr/include/c++/11/bits/basic_string.h **** 				    __end, __a); }
5191:/usr/include/c++/11/bits/basic_string.h **** 
5192:/usr/include/c++/11/bits/basic_string.h ****       static _CharT*
5193:/usr/include/c++/11/bits/basic_string.h ****       _S_construct_aux_2(size_type __req, _CharT __c, const _Alloc& __a)
5194:/usr/include/c++/11/bits/basic_string.h ****       { return _S_construct(__req, __c, __a); }
5195:/usr/include/c++/11/bits/basic_string.h **** 
5196:/usr/include/c++/11/bits/basic_string.h ****       template<class _InIterator>
5197:/usr/include/c++/11/bits/basic_string.h ****         static _CharT*
5198:/usr/include/c++/11/bits/basic_string.h ****         _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)
5199:/usr/include/c++/11/bits/basic_string.h **** 	{
5200:/usr/include/c++/11/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
5201:/usr/include/c++/11/bits/basic_string.h **** 	  return _S_construct_aux(__beg, __end, __a, _Integral());
5202:/usr/include/c++/11/bits/basic_string.h ****         }
5203:/usr/include/c++/11/bits/basic_string.h **** 
5204:/usr/include/c++/11/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
5205:/usr/include/c++/11/bits/basic_string.h ****       template<class _InIterator>
5206:/usr/include/c++/11/bits/basic_string.h ****         static _CharT*
5207:/usr/include/c++/11/bits/basic_string.h ****          _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
5208:/usr/include/c++/11/bits/basic_string.h **** 		      input_iterator_tag);
5209:/usr/include/c++/11/bits/basic_string.h **** 
5210:/usr/include/c++/11/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
5211:/usr/include/c++/11/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
5212:/usr/include/c++/11/bits/basic_string.h ****       template<class _FwdIterator>
5213:/usr/include/c++/11/bits/basic_string.h ****         static _CharT*
5214:/usr/include/c++/11/bits/basic_string.h ****         _S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc& __a,
5215:/usr/include/c++/11/bits/basic_string.h **** 		     forward_iterator_tag);
5216:/usr/include/c++/11/bits/basic_string.h **** 
5217:/usr/include/c++/11/bits/basic_string.h ****       static _CharT*
5218:/usr/include/c++/11/bits/basic_string.h ****       _S_construct(size_type __req, _CharT __c, const _Alloc& __a);
5219:/usr/include/c++/11/bits/basic_string.h **** 
5220:/usr/include/c++/11/bits/basic_string.h ****     public:
5221:/usr/include/c++/11/bits/basic_string.h **** 
5222:/usr/include/c++/11/bits/basic_string.h ****       /**
5223:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Copy substring into C string.
5224:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to copy value into.
5225:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
5226:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
5227:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Number of characters actually copied
5228:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5229:/usr/include/c++/11/bits/basic_string.h ****        *
5230:/usr/include/c++/11/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
5231:/usr/include/c++/11/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
5232:/usr/include/c++/11/bits/basic_string.h ****        *  out_of_range is thrown.
5233:/usr/include/c++/11/bits/basic_string.h ****       */
5234:/usr/include/c++/11/bits/basic_string.h ****       size_type
5235:/usr/include/c++/11/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
5236:/usr/include/c++/11/bits/basic_string.h **** 
5237:/usr/include/c++/11/bits/basic_string.h ****       /**
5238:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Swap contents with another string.
5239:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  String to swap with.
5240:/usr/include/c++/11/bits/basic_string.h ****        *
5241:/usr/include/c++/11/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
5242:/usr/include/c++/11/bits/basic_string.h ****        *  time.
5243:/usr/include/c++/11/bits/basic_string.h ****       */
5244:/usr/include/c++/11/bits/basic_string.h ****       void
5245:/usr/include/c++/11/bits/basic_string.h ****       swap(basic_string& __s)
5246:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value);
5247:/usr/include/c++/11/bits/basic_string.h **** 
5248:/usr/include/c++/11/bits/basic_string.h ****       // String operations:
5249:/usr/include/c++/11/bits/basic_string.h ****       /**
5250:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
5251:/usr/include/c++/11/bits/basic_string.h ****        *
5252:/usr/include/c++/11/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
5253:/usr/include/c++/11/bits/basic_string.h ****        *  happen.
5254:/usr/include/c++/11/bits/basic_string.h ****       */
5255:/usr/include/c++/11/bits/basic_string.h ****       const _CharT*
5256:/usr/include/c++/11/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
5257:/usr/include/c++/11/bits/basic_string.h ****       { return _M_data(); }
5258:/usr/include/c++/11/bits/basic_string.h **** 
5259:/usr/include/c++/11/bits/basic_string.h ****       /**
5260:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
5261:/usr/include/c++/11/bits/basic_string.h ****        *
5262:/usr/include/c++/11/bits/basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
5263:/usr/include/c++/11/bits/basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
5264:/usr/include/c++/11/bits/basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
5265:/usr/include/c++/11/bits/basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
5266:/usr/include/c++/11/bits/basic_string.h ****       */
5267:/usr/include/c++/11/bits/basic_string.h ****       const _CharT*
5268:/usr/include/c++/11/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
5269:/usr/include/c++/11/bits/basic_string.h ****       { return _M_data(); }
5270:/usr/include/c++/11/bits/basic_string.h **** 
5271:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
5272:/usr/include/c++/11/bits/basic_string.h ****       /**
5273:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Return non-const pointer to contents.
5274:/usr/include/c++/11/bits/basic_string.h ****        *
5275:/usr/include/c++/11/bits/basic_string.h ****        *  This is a pointer to the character sequence held by the string.
5276:/usr/include/c++/11/bits/basic_string.h ****        *  Modifying the characters in the sequence is allowed.
5277:/usr/include/c++/11/bits/basic_string.h ****       */
5278:/usr/include/c++/11/bits/basic_string.h ****       _CharT*
5279:/usr/include/c++/11/bits/basic_string.h ****       data() noexcept
5280:/usr/include/c++/11/bits/basic_string.h ****       {
5281:/usr/include/c++/11/bits/basic_string.h **** 	_M_leak();
5282:/usr/include/c++/11/bits/basic_string.h **** 	return _M_data();
5283:/usr/include/c++/11/bits/basic_string.h ****       }
5284:/usr/include/c++/11/bits/basic_string.h **** #endif
5285:/usr/include/c++/11/bits/basic_string.h **** 
5286:/usr/include/c++/11/bits/basic_string.h ****       /**
5287:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
5288:/usr/include/c++/11/bits/basic_string.h ****       */
5289:/usr/include/c++/11/bits/basic_string.h ****       allocator_type
5290:/usr/include/c++/11/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
5291:/usr/include/c++/11/bits/basic_string.h ****       { return _M_dataplus; }
5292:/usr/include/c++/11/bits/basic_string.h **** 
5293:/usr/include/c++/11/bits/basic_string.h ****       /**
5294:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a C substring.
5295:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to locate.
5296:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5297:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
5298:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5299:/usr/include/c++/11/bits/basic_string.h ****        *
5300:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
5301:/usr/include/c++/11/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5302:/usr/include/c++/11/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
5303:/usr/include/c++/11/bits/basic_string.h ****        *  npos.
5304:/usr/include/c++/11/bits/basic_string.h ****       */
5305:/usr/include/c++/11/bits/basic_string.h ****       size_type
5306:/usr/include/c++/11/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
5307:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5308:/usr/include/c++/11/bits/basic_string.h **** 
5309:/usr/include/c++/11/bits/basic_string.h ****       /**
5310:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a string.
5311:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String to locate.
5312:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5313:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5314:/usr/include/c++/11/bits/basic_string.h ****        *
5315:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
5316:/usr/include/c++/11/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
5317:/usr/include/c++/11/bits/basic_string.h ****        *  found, returns npos.
5318:/usr/include/c++/11/bits/basic_string.h ****       */
5319:/usr/include/c++/11/bits/basic_string.h ****       size_type
5320:/usr/include/c++/11/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
5321:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5322:/usr/include/c++/11/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
5323:/usr/include/c++/11/bits/basic_string.h **** 
5324:/usr/include/c++/11/bits/basic_string.h ****       /**
5325:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a C string.
5326:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to locate.
5327:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5328:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5329:/usr/include/c++/11/bits/basic_string.h ****        *
5330:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
5331:/usr/include/c++/11/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
5332:/usr/include/c++/11/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
5333:/usr/include/c++/11/bits/basic_string.h ****       */
5334:/usr/include/c++/11/bits/basic_string.h ****       size_type
5335:/usr/include/c++/11/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5336:/usr/include/c++/11/bits/basic_string.h ****       {
5337:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5338:/usr/include/c++/11/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
5339:/usr/include/c++/11/bits/basic_string.h ****       }
5340:/usr/include/c++/11/bits/basic_string.h **** 
5341:/usr/include/c++/11/bits/basic_string.h ****       /**
5342:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character.
5343:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to locate.
5344:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5345:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
5346:/usr/include/c++/11/bits/basic_string.h ****        *
5347:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
5348:/usr/include/c++/11/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5349:/usr/include/c++/11/bits/basic_string.h ****        *  found.  If not found, returns npos.
5350:/usr/include/c++/11/bits/basic_string.h ****       */
5351:/usr/include/c++/11/bits/basic_string.h ****       size_type
5352:/usr/include/c++/11/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
5353:/usr/include/c++/11/bits/basic_string.h **** 
5354:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
5355:/usr/include/c++/11/bits/basic_string.h ****       /**
5356:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a string_view.
5357:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5358:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5359:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5360:/usr/include/c++/11/bits/basic_string.h ****       */
5361:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
5362:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5363:/usr/include/c++/11/bits/basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
5364:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5365:/usr/include/c++/11/bits/basic_string.h **** 	{
5366:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5367:/usr/include/c++/11/bits/basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
5368:/usr/include/c++/11/bits/basic_string.h **** 	}
5369:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
5370:/usr/include/c++/11/bits/basic_string.h **** 
5371:/usr/include/c++/11/bits/basic_string.h ****       /**
5372:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a string.
5373:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String to locate.
5374:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5375:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5376:/usr/include/c++/11/bits/basic_string.h ****        *
5377:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
5378:/usr/include/c++/11/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
5379:/usr/include/c++/11/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
5380:/usr/include/c++/11/bits/basic_string.h ****       */
5381:/usr/include/c++/11/bits/basic_string.h ****       size_type
5382:/usr/include/c++/11/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
5383:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5384:/usr/include/c++/11/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
5385:/usr/include/c++/11/bits/basic_string.h **** 
5386:/usr/include/c++/11/bits/basic_string.h ****       /**
5387:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
5388:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to locate.
5389:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5390:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5391:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5392:/usr/include/c++/11/bits/basic_string.h ****        *
5393:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
5394:/usr/include/c++/11/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5395:/usr/include/c++/11/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
5396:/usr/include/c++/11/bits/basic_string.h ****        *  npos.
5397:/usr/include/c++/11/bits/basic_string.h ****       */
5398:/usr/include/c++/11/bits/basic_string.h ****       size_type
5399:/usr/include/c++/11/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
5400:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5401:/usr/include/c++/11/bits/basic_string.h **** 
5402:/usr/include/c++/11/bits/basic_string.h ****       /**
5403:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a C string.
5404:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to locate.
5405:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
5406:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
5407:/usr/include/c++/11/bits/basic_string.h ****        *
5408:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
5409:/usr/include/c++/11/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
5410:/usr/include/c++/11/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
5411:/usr/include/c++/11/bits/basic_string.h ****       */
5412:/usr/include/c++/11/bits/basic_string.h ****       size_type
5413:/usr/include/c++/11/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5414:/usr/include/c++/11/bits/basic_string.h ****       {
5415:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5416:/usr/include/c++/11/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
5417:/usr/include/c++/11/bits/basic_string.h ****       }
5418:/usr/include/c++/11/bits/basic_string.h **** 
5419:/usr/include/c++/11/bits/basic_string.h ****       /**
5420:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character.
5421:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to locate.
5422:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5423:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
5424:/usr/include/c++/11/bits/basic_string.h ****        *
5425:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5426:/usr/include/c++/11/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5427:/usr/include/c++/11/bits/basic_string.h ****        *  found.  If not found, returns npos.
5428:/usr/include/c++/11/bits/basic_string.h ****       */
5429:/usr/include/c++/11/bits/basic_string.h ****       size_type
5430:/usr/include/c++/11/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
5431:/usr/include/c++/11/bits/basic_string.h **** 
5432:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
5433:/usr/include/c++/11/bits/basic_string.h ****       /**
5434:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a string_view.
5435:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5436:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5437:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5438:/usr/include/c++/11/bits/basic_string.h ****       */
5439:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
5440:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5441:/usr/include/c++/11/bits/basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
5442:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5443:/usr/include/c++/11/bits/basic_string.h **** 	{
5444:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5445:/usr/include/c++/11/bits/basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
5446:/usr/include/c++/11/bits/basic_string.h **** 	}
5447:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
5448:/usr/include/c++/11/bits/basic_string.h **** 
5449:/usr/include/c++/11/bits/basic_string.h ****       /**
5450:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character of string.
5451:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
5452:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5453:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
5454:/usr/include/c++/11/bits/basic_string.h ****        *
5455:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5456:/usr/include/c++/11/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
5457:/usr/include/c++/11/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5458:/usr/include/c++/11/bits/basic_string.h ****        *  npos.
5459:/usr/include/c++/11/bits/basic_string.h ****       */
5460:/usr/include/c++/11/bits/basic_string.h ****       size_type
5461:/usr/include/c++/11/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
5462:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5463:/usr/include/c++/11/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
5464:/usr/include/c++/11/bits/basic_string.h **** 
5465:/usr/include/c++/11/bits/basic_string.h ****       /**
5466:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
5467:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
5468:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5469:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5470:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
5471:/usr/include/c++/11/bits/basic_string.h ****        *
5472:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5473:/usr/include/c++/11/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5474:/usr/include/c++/11/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
5475:/usr/include/c++/11/bits/basic_string.h ****        *  returns npos.
5476:/usr/include/c++/11/bits/basic_string.h ****       */
5477:/usr/include/c++/11/bits/basic_string.h ****       size_type
5478:/usr/include/c++/11/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
5479:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5480:/usr/include/c++/11/bits/basic_string.h **** 
5481:/usr/include/c++/11/bits/basic_string.h ****       /**
5482:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
5483:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
5484:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5485:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
5486:/usr/include/c++/11/bits/basic_string.h ****        *
5487:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5488:/usr/include/c++/11/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5489:/usr/include/c++/11/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5490:/usr/include/c++/11/bits/basic_string.h ****       */
5491:/usr/include/c++/11/bits/basic_string.h ****       size_type
5492:/usr/include/c++/11/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
5493:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5494:/usr/include/c++/11/bits/basic_string.h ****       {
5495:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5496:/usr/include/c++/11/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
5497:/usr/include/c++/11/bits/basic_string.h ****       }
5498:/usr/include/c++/11/bits/basic_string.h **** 
5499:/usr/include/c++/11/bits/basic_string.h ****       /**
5500:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character.
5501:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to locate.
5502:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5503:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
5504:/usr/include/c++/11/bits/basic_string.h ****        *
5505:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
5506:/usr/include/c++/11/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
5507:/usr/include/c++/11/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
5508:/usr/include/c++/11/bits/basic_string.h ****        *
5509:/usr/include/c++/11/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
5510:/usr/include/c++/11/bits/basic_string.h ****       */
5511:/usr/include/c++/11/bits/basic_string.h ****       size_type
5512:/usr/include/c++/11/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5513:/usr/include/c++/11/bits/basic_string.h ****       { return this->find(__c, __pos); }
5514:/usr/include/c++/11/bits/basic_string.h **** 
5515:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
5516:/usr/include/c++/11/bits/basic_string.h ****       /**
5517:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character of a string_view.
5518:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5519:/usr/include/c++/11/bits/basic_string.h ****        *                characters to locate.
5520:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5521:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
5522:/usr/include/c++/11/bits/basic_string.h ****       */
5523:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
5524:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5525:/usr/include/c++/11/bits/basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
5526:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5527:/usr/include/c++/11/bits/basic_string.h **** 	{
5528:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5529:/usr/include/c++/11/bits/basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
5530:/usr/include/c++/11/bits/basic_string.h **** 	}
5531:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
5532:/usr/include/c++/11/bits/basic_string.h **** 
5533:/usr/include/c++/11/bits/basic_string.h ****       /**
5534:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
5535:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
5536:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5537:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
5538:/usr/include/c++/11/bits/basic_string.h ****        *
5539:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5540:/usr/include/c++/11/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
5541:/usr/include/c++/11/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5542:/usr/include/c++/11/bits/basic_string.h ****        *  npos.
5543:/usr/include/c++/11/bits/basic_string.h ****       */
5544:/usr/include/c++/11/bits/basic_string.h ****       size_type
5545:/usr/include/c++/11/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
5546:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5547:/usr/include/c++/11/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
5548:/usr/include/c++/11/bits/basic_string.h **** 
5549:/usr/include/c++/11/bits/basic_string.h ****       /**
5550:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
5551:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
5552:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5553:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5554:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
5555:/usr/include/c++/11/bits/basic_string.h ****        *
5556:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5557:/usr/include/c++/11/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5558:/usr/include/c++/11/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
5559:/usr/include/c++/11/bits/basic_string.h ****        *  returns npos.
5560:/usr/include/c++/11/bits/basic_string.h ****       */
5561:/usr/include/c++/11/bits/basic_string.h ****       size_type
5562:/usr/include/c++/11/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
5563:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5564:/usr/include/c++/11/bits/basic_string.h **** 
5565:/usr/include/c++/11/bits/basic_string.h ****       /**
5566:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
5567:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
5568:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5569:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
5570:/usr/include/c++/11/bits/basic_string.h ****        *
5571:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5572:/usr/include/c++/11/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5573:/usr/include/c++/11/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5574:/usr/include/c++/11/bits/basic_string.h ****       */
5575:/usr/include/c++/11/bits/basic_string.h ****       size_type
5576:/usr/include/c++/11/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
5577:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5578:/usr/include/c++/11/bits/basic_string.h ****       {
5579:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5580:/usr/include/c++/11/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
5581:/usr/include/c++/11/bits/basic_string.h ****       }
5582:/usr/include/c++/11/bits/basic_string.h **** 
5583:/usr/include/c++/11/bits/basic_string.h ****       /**
5584:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character.
5585:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to locate.
5586:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5587:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
5588:/usr/include/c++/11/bits/basic_string.h ****        *
5589:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5590:/usr/include/c++/11/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5591:/usr/include/c++/11/bits/basic_string.h ****        *  found.  If not found, returns npos.
5592:/usr/include/c++/11/bits/basic_string.h ****        *
5593:/usr/include/c++/11/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
5594:/usr/include/c++/11/bits/basic_string.h ****       */
5595:/usr/include/c++/11/bits/basic_string.h ****       size_type
5596:/usr/include/c++/11/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5597:/usr/include/c++/11/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
5598:/usr/include/c++/11/bits/basic_string.h **** 
5599:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
5600:/usr/include/c++/11/bits/basic_string.h ****       /**
5601:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
5602:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5603:/usr/include/c++/11/bits/basic_string.h ****        *                characters to locate.
5604:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5605:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
5606:/usr/include/c++/11/bits/basic_string.h ****       */
5607:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
5608:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5609:/usr/include/c++/11/bits/basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
5610:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5611:/usr/include/c++/11/bits/basic_string.h **** 	{
5612:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5613:/usr/include/c++/11/bits/basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
5614:/usr/include/c++/11/bits/basic_string.h **** 	}
5615:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
5616:/usr/include/c++/11/bits/basic_string.h **** 
5617:/usr/include/c++/11/bits/basic_string.h ****       /**
5618:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
5619:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
5620:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5621:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
5622:/usr/include/c++/11/bits/basic_string.h ****        *
5623:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
5624:/usr/include/c++/11/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
5625:/usr/include/c++/11/bits/basic_string.h ****        *  was found.  If not found, returns npos.
5626:/usr/include/c++/11/bits/basic_string.h ****       */
5627:/usr/include/c++/11/bits/basic_string.h ****       size_type
5628:/usr/include/c++/11/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
5629:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5630:/usr/include/c++/11/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
5631:/usr/include/c++/11/bits/basic_string.h **** 
5632:/usr/include/c++/11/bits/basic_string.h ****       /**
5633:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
5634:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5635:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5636:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
5637:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
5638:/usr/include/c++/11/bits/basic_string.h ****        *
5639:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5640:/usr/include/c++/11/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
5641:/usr/include/c++/11/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5642:/usr/include/c++/11/bits/basic_string.h ****        *  found.  If not found, returns npos.
5643:/usr/include/c++/11/bits/basic_string.h ****       */
5644:/usr/include/c++/11/bits/basic_string.h ****       size_type
5645:/usr/include/c++/11/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
5646:/usr/include/c++/11/bits/basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
5647:/usr/include/c++/11/bits/basic_string.h **** 
5648:/usr/include/c++/11/bits/basic_string.h ****       /**
5649:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
5650:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5651:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5652:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
5653:/usr/include/c++/11/bits/basic_string.h ****        *
5654:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5655:/usr/include/c++/11/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
5656:/usr/include/c++/11/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5657:/usr/include/c++/11/bits/basic_string.h ****       */
5658:/usr/include/c++/11/bits/basic_string.h ****       size_type
5659:/usr/include/c++/11/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
5660:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5661:/usr/include/c++/11/bits/basic_string.h ****       {
5662:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5663:/usr/include/c++/11/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
5664:/usr/include/c++/11/bits/basic_string.h ****       }
5665:/usr/include/c++/11/bits/basic_string.h **** 
5666:/usr/include/c++/11/bits/basic_string.h ****       /**
5667:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a different character.
5668:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to avoid.
5669:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5670:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
5671:/usr/include/c++/11/bits/basic_string.h ****        *
5672:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
5673:/usr/include/c++/11/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
5674:/usr/include/c++/11/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
5675:/usr/include/c++/11/bits/basic_string.h ****       */
5676:/usr/include/c++/11/bits/basic_string.h ****       size_type
5677:/usr/include/c++/11/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
5678:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5679:/usr/include/c++/11/bits/basic_string.h **** 
5680:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
5681:/usr/include/c++/11/bits/basic_string.h ****       /**
5682:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character not in a string_view.
5683:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5684:/usr/include/c++/11/bits/basic_string.h ****        *                characters to avoid.
5685:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5686:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
5687:/usr/include/c++/11/bits/basic_string.h ****        */
5688:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
5689:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5690:/usr/include/c++/11/bits/basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
5691:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5692:/usr/include/c++/11/bits/basic_string.h **** 	{
5693:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5694:/usr/include/c++/11/bits/basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
5695:/usr/include/c++/11/bits/basic_string.h **** 	}
5696:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
5697:/usr/include/c++/11/bits/basic_string.h **** 
5698:/usr/include/c++/11/bits/basic_string.h ****       /**
5699:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
5700:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
5701:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5702:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
5703:/usr/include/c++/11/bits/basic_string.h ****        *
5704:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5705:/usr/include/c++/11/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
5706:/usr/include/c++/11/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5707:/usr/include/c++/11/bits/basic_string.h ****        *  npos.
5708:/usr/include/c++/11/bits/basic_string.h ****       */
5709:/usr/include/c++/11/bits/basic_string.h ****       size_type
5710:/usr/include/c++/11/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
5711:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5712:/usr/include/c++/11/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
5713:/usr/include/c++/11/bits/basic_string.h **** 
5714:/usr/include/c++/11/bits/basic_string.h ****       /**
5715:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
5716:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5717:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5718:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
5719:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
5720:/usr/include/c++/11/bits/basic_string.h ****        *
5721:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
5722:/usr/include/c++/11/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
5723:/usr/include/c++/11/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
5724:/usr/include/c++/11/bits/basic_string.h ****        *  returns npos.
5725:/usr/include/c++/11/bits/basic_string.h ****       */
5726:/usr/include/c++/11/bits/basic_string.h ****       size_type
5727:/usr/include/c++/11/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
5728:/usr/include/c++/11/bits/basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
5729:/usr/include/c++/11/bits/basic_string.h ****       /**
5730:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
5731:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5732:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5733:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
5734:/usr/include/c++/11/bits/basic_string.h ****        *
5735:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5736:/usr/include/c++/11/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
5737:/usr/include/c++/11/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5738:/usr/include/c++/11/bits/basic_string.h ****        *  npos.
5739:/usr/include/c++/11/bits/basic_string.h ****       */
5740:/usr/include/c++/11/bits/basic_string.h ****       size_type
5741:/usr/include/c++/11/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
5742:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5743:/usr/include/c++/11/bits/basic_string.h ****       {
5744:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5745:/usr/include/c++/11/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
5746:/usr/include/c++/11/bits/basic_string.h ****       }
5747:/usr/include/c++/11/bits/basic_string.h **** 
5748:/usr/include/c++/11/bits/basic_string.h ****       /**
5749:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a different character.
5750:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to avoid.
5751:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5752:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
5753:/usr/include/c++/11/bits/basic_string.h ****        *
5754:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
5755:/usr/include/c++/11/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
5756:/usr/include/c++/11/bits/basic_string.h ****        *  found.  If not found, returns npos.
5757:/usr/include/c++/11/bits/basic_string.h ****       */
5758:/usr/include/c++/11/bits/basic_string.h ****       size_type
5759:/usr/include/c++/11/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
5760:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5761:/usr/include/c++/11/bits/basic_string.h **** 
5762:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
5763:/usr/include/c++/11/bits/basic_string.h ****       /**
5764:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
5765:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5766:/usr/include/c++/11/bits/basic_string.h ****        *                characters to avoid.
5767:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5768:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
5769:/usr/include/c++/11/bits/basic_string.h ****        */
5770:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
5771:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5772:/usr/include/c++/11/bits/basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
5773:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5774:/usr/include/c++/11/bits/basic_string.h **** 	{
5775:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5776:/usr/include/c++/11/bits/basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
5777:/usr/include/c++/11/bits/basic_string.h **** 	}
5778:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
5779:/usr/include/c++/11/bits/basic_string.h **** 
5780:/usr/include/c++/11/bits/basic_string.h ****       /**
5781:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Get a substring.
5782:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
5783:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
5784:/usr/include/c++/11/bits/basic_string.h ****        *  @return  The new string.
5785:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5786:/usr/include/c++/11/bits/basic_string.h ****        *
5787:/usr/include/c++/11/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
5788:/usr/include/c++/11/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
5789:/usr/include/c++/11/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
5790:/usr/include/c++/11/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
5791:/usr/include/c++/11/bits/basic_string.h ****       */
5792:/usr/include/c++/11/bits/basic_string.h ****       basic_string
5793:/usr/include/c++/11/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
5794:/usr/include/c++/11/bits/basic_string.h ****       { return basic_string(*this,
5795:/usr/include/c++/11/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
5796:/usr/include/c++/11/bits/basic_string.h **** 
5797:/usr/include/c++/11/bits/basic_string.h ****       /**
5798:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare to a string.
5799:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String to compare against.
5800:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5801:/usr/include/c++/11/bits/basic_string.h ****        *
5802:/usr/include/c++/11/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
5803:/usr/include/c++/11/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
5804:/usr/include/c++/11/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
5805:/usr/include/c++/11/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
5806:/usr/include/c++/11/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
5807:/usr/include/c++/11/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
5808:/usr/include/c++/11/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5809:/usr/include/c++/11/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
5810:/usr/include/c++/11/bits/basic_string.h ****       */
5811:/usr/include/c++/11/bits/basic_string.h ****       int
5812:/usr/include/c++/11/bits/basic_string.h ****       compare(const basic_string& __str) const
5813:/usr/include/c++/11/bits/basic_string.h ****       {
5814:/usr/include/c++/11/bits/basic_string.h **** 	const size_type __size = this->size();
5815:/usr/include/c++/11/bits/basic_string.h **** 	const size_type __osize = __str.size();
5816:/usr/include/c++/11/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
5817:/usr/include/c++/11/bits/basic_string.h **** 
5818:/usr/include/c++/11/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
5819:/usr/include/c++/11/bits/basic_string.h **** 	if (!__r)
5820:/usr/include/c++/11/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
5821:/usr/include/c++/11/bits/basic_string.h **** 	return __r;
5822:/usr/include/c++/11/bits/basic_string.h ****       }
5823:/usr/include/c++/11/bits/basic_string.h **** 
5824:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
5825:/usr/include/c++/11/bits/basic_string.h ****       /**
5826:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5827:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
5828:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5829:/usr/include/c++/11/bits/basic_string.h ****        */
5830:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
5831:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, int>
5832:/usr/include/c++/11/bits/basic_string.h **** 	compare(const _Tp& __svt) const
5833:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5834:/usr/include/c++/11/bits/basic_string.h **** 	{
5835:/usr/include/c++/11/bits/basic_string.h **** 	   __sv_type __sv = __svt;
5836:/usr/include/c++/11/bits/basic_string.h **** 	  const size_type __size = this->size();
5837:/usr/include/c++/11/bits/basic_string.h **** 	  const size_type __osize = __sv.size();
5838:/usr/include/c++/11/bits/basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
5839:/usr/include/c++/11/bits/basic_string.h **** 
5840:/usr/include/c++/11/bits/basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
5841:/usr/include/c++/11/bits/basic_string.h **** 	  if (!__r)
5842:/usr/include/c++/11/bits/basic_string.h **** 	    __r = _S_compare(__size, __osize);
5843:/usr/include/c++/11/bits/basic_string.h **** 	  return __r;
5844:/usr/include/c++/11/bits/basic_string.h **** 	}
5845:/usr/include/c++/11/bits/basic_string.h **** 
5846:/usr/include/c++/11/bits/basic_string.h ****       /**
5847:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5848:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
5849:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  The number of characters to compare.
5850:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
5851:/usr/include/c++/11/bits/basic_string.h ****        *                against.
5852:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5853:/usr/include/c++/11/bits/basic_string.h ****        */
5854:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
5855:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, int>
5856:/usr/include/c++/11/bits/basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
5857:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5858:/usr/include/c++/11/bits/basic_string.h **** 	{
5859:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5860:/usr/include/c++/11/bits/basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
5861:/usr/include/c++/11/bits/basic_string.h **** 	}
5862:/usr/include/c++/11/bits/basic_string.h **** 
5863:/usr/include/c++/11/bits/basic_string.h ****       /**
5864:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5865:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
5866:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  The number of characters to compare.
5867:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt   An object convertible to string_view to compare
5868:/usr/include/c++/11/bits/basic_string.h ****        *                 against.
5869:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
5870:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n2  The number of characters to compare.
5871:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5872:/usr/include/c++/11/bits/basic_string.h ****        */
5873:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
5874:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, int>
5875:/usr/include/c++/11/bits/basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
5876:/usr/include/c++/11/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
5877:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5878:/usr/include/c++/11/bits/basic_string.h **** 	{
5879:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5880:/usr/include/c++/11/bits/basic_string.h **** 	  return __sv_type(*this)
5881:/usr/include/c++/11/bits/basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
5882:/usr/include/c++/11/bits/basic_string.h **** 	}
5883:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
5884:/usr/include/c++/11/bits/basic_string.h **** 
5885:/usr/include/c++/11/bits/basic_string.h ****       /**
5886:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare substring to a string.
5887:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5888:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
5889:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String to compare against.
5890:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5891:/usr/include/c++/11/bits/basic_string.h ****        *
5892:/usr/include/c++/11/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
5893:/usr/include/c++/11/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
5894:/usr/include/c++/11/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
5895:/usr/include/c++/11/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
5896:/usr/include/c++/11/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
5897:/usr/include/c++/11/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
5898:/usr/include/c++/11/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
5899:/usr/include/c++/11/bits/basic_string.h ****        *  strings by calling
5900:/usr/include/c++/11/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
5901:/usr/include/c++/11/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
5902:/usr/include/c++/11/bits/basic_string.h ****        *  the shorter one is ordered first.
5903:/usr/include/c++/11/bits/basic_string.h ****       */
5904:/usr/include/c++/11/bits/basic_string.h ****       int
5905:/usr/include/c++/11/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
5906:/usr/include/c++/11/bits/basic_string.h **** 
5907:/usr/include/c++/11/bits/basic_string.h ****       /**
5908:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
5909:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
5910:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5911:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String to compare against.
5912:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
5913:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
5914:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5915:/usr/include/c++/11/bits/basic_string.h ****        *
5916:/usr/include/c++/11/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5917:/usr/include/c++/11/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
5918:/usr/include/c++/11/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
5919:/usr/include/c++/11/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
5920:/usr/include/c++/11/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
5921:/usr/include/c++/11/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
5922:/usr/include/c++/11/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
5923:/usr/include/c++/11/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
5924:/usr/include/c++/11/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
5925:/usr/include/c++/11/bits/basic_string.h ****        *  calling
5926:/usr/include/c++/11/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
5927:/usr/include/c++/11/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5928:/usr/include/c++/11/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
5929:/usr/include/c++/11/bits/basic_string.h ****       */
5930:/usr/include/c++/11/bits/basic_string.h ****       int
5931:/usr/include/c++/11/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
5932:/usr/include/c++/11/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
5933:/usr/include/c++/11/bits/basic_string.h **** 
5934:/usr/include/c++/11/bits/basic_string.h ****       /**
5935:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare to a C string.
5936:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to compare against.
5937:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5938:/usr/include/c++/11/bits/basic_string.h ****        *
5939:/usr/include/c++/11/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
5940:/usr/include/c++/11/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
5941:/usr/include/c++/11/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
5942:/usr/include/c++/11/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
5943:/usr/include/c++/11/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
5944:/usr/include/c++/11/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
5945:/usr/include/c++/11/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
5946:/usr/include/c++/11/bits/basic_string.h ****        *  ordered first.
5947:/usr/include/c++/11/bits/basic_string.h ****       */
5948:/usr/include/c++/11/bits/basic_string.h ****       int
5949:/usr/include/c++/11/bits/basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
5950:/usr/include/c++/11/bits/basic_string.h **** 
5951:/usr/include/c++/11/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5952:/usr/include/c++/11/bits/basic_string.h ****       // 5 String::compare specification questionable
5953:/usr/include/c++/11/bits/basic_string.h ****       /**
5954:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
5955:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5956:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5957:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to compare against.
5958:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5959:/usr/include/c++/11/bits/basic_string.h ****        *
5960:/usr/include/c++/11/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5961:/usr/include/c++/11/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
5962:/usr/include/c++/11/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
5963:/usr/include/c++/11/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
5964:/usr/include/c++/11/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
5965:/usr/include/c++/11/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
5966:/usr/include/c++/11/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
5967:/usr/include/c++/11/bits/basic_string.h ****        *  function then compares the two string by calling
5968:/usr/include/c++/11/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
5969:/usr/include/c++/11/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5970:/usr/include/c++/11/bits/basic_string.h ****        *  one is ordered first.
5971:/usr/include/c++/11/bits/basic_string.h ****       */
5972:/usr/include/c++/11/bits/basic_string.h ****       int
5973:/usr/include/c++/11/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
5974:/usr/include/c++/11/bits/basic_string.h **** 
5975:/usr/include/c++/11/bits/basic_string.h ****       /**
5976:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
5977:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5978:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5979:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  character %array to compare against.
5980:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
5981:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5982:/usr/include/c++/11/bits/basic_string.h ****        *
5983:/usr/include/c++/11/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5984:/usr/include/c++/11/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
5985:/usr/include/c++/11/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
5986:/usr/include/c++/11/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
5987:/usr/include/c++/11/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
5988:/usr/include/c++/11/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
5989:/usr/include/c++/11/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
5990:/usr/include/c++/11/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
5991:/usr/include/c++/11/bits/basic_string.h ****        *  function then compares the two strings by calling
5992:/usr/include/c++/11/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
5993:/usr/include/c++/11/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5994:/usr/include/c++/11/bits/basic_string.h ****        *  one is ordered first.
5995:/usr/include/c++/11/bits/basic_string.h ****        *
5996:/usr/include/c++/11/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
5997:/usr/include/c++/11/bits/basic_string.h ****        *  no special meaning.
5998:/usr/include/c++/11/bits/basic_string.h ****       */
5999:/usr/include/c++/11/bits/basic_string.h ****       int
6000:/usr/include/c++/11/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
6001:/usr/include/c++/11/bits/basic_string.h **** 	      size_type __n2) const;
6002:/usr/include/c++/11/bits/basic_string.h **** 
6003:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus > 201703L
6004:/usr/include/c++/11/bits/basic_string.h ****       bool
6005:/usr/include/c++/11/bits/basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
6006:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
6007:/usr/include/c++/11/bits/basic_string.h **** 
6008:/usr/include/c++/11/bits/basic_string.h ****       bool
6009:/usr/include/c++/11/bits/basic_string.h ****       starts_with(_CharT __x) const noexcept
6010:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
6011:/usr/include/c++/11/bits/basic_string.h **** 
6012:/usr/include/c++/11/bits/basic_string.h ****       bool
6013:/usr/include/c++/11/bits/basic_string.h ****       starts_with(const _CharT* __x) const noexcept
6014:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
6015:/usr/include/c++/11/bits/basic_string.h **** 
6016:/usr/include/c++/11/bits/basic_string.h ****       bool
6017:/usr/include/c++/11/bits/basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
6018:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
6019:/usr/include/c++/11/bits/basic_string.h **** 
6020:/usr/include/c++/11/bits/basic_string.h ****       bool
6021:/usr/include/c++/11/bits/basic_string.h ****       ends_with(_CharT __x) const noexcept
6022:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
6023:/usr/include/c++/11/bits/basic_string.h **** 
6024:/usr/include/c++/11/bits/basic_string.h ****       bool
6025:/usr/include/c++/11/bits/basic_string.h ****       ends_with(const _CharT* __x) const noexcept
6026:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
6027:/usr/include/c++/11/bits/basic_string.h **** #endif // C++20
6028:/usr/include/c++/11/bits/basic_string.h **** 
6029:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus > 202011L
6030:/usr/include/c++/11/bits/basic_string.h ****       bool
6031:/usr/include/c++/11/bits/basic_string.h ****       contains(basic_string_view<_CharT, _Traits> __x) const noexcept
6032:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).contains(__x); }
6033:/usr/include/c++/11/bits/basic_string.h **** 
6034:/usr/include/c++/11/bits/basic_string.h ****       bool
6035:/usr/include/c++/11/bits/basic_string.h ****       contains(_CharT __x) const noexcept
6036:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).contains(__x); }
6037:/usr/include/c++/11/bits/basic_string.h **** 
6038:/usr/include/c++/11/bits/basic_string.h ****       bool
6039:/usr/include/c++/11/bits/basic_string.h ****       contains(const _CharT* __x) const noexcept
6040:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).contains(__x); }
6041:/usr/include/c++/11/bits/basic_string.h **** #endif // C++23
6042:/usr/include/c++/11/bits/basic_string.h **** 
6043:/usr/include/c++/11/bits/basic_string.h **** # ifdef _GLIBCXX_TM_TS_INTERNAL
6044:/usr/include/c++/11/bits/basic_string.h ****       friend void
6045:/usr/include/c++/11/bits/basic_string.h ****       ::_txnal_cow_string_C1_for_exceptions(void* that, const char* s,
6046:/usr/include/c++/11/bits/basic_string.h **** 					    void* exc);
6047:/usr/include/c++/11/bits/basic_string.h ****       friend const char*
6048:/usr/include/c++/11/bits/basic_string.h ****       ::_txnal_cow_string_c_str(const void *that);
6049:/usr/include/c++/11/bits/basic_string.h ****       friend void
6050:/usr/include/c++/11/bits/basic_string.h ****       ::_txnal_cow_string_D1(void *that);
6051:/usr/include/c++/11/bits/basic_string.h ****       friend void
6052:/usr/include/c++/11/bits/basic_string.h ****       ::_txnal_cow_string_D1_commit(void *that);
6053:/usr/include/c++/11/bits/basic_string.h **** # endif
6054:/usr/include/c++/11/bits/basic_string.h ****   };
6055:/usr/include/c++/11/bits/basic_string.h **** #endif  // !_GLIBCXX_USE_CXX11_ABI
6056:/usr/include/c++/11/bits/basic_string.h **** 
6057:/usr/include/c++/11/bits/basic_string.h **** #if __cpp_deduction_guides >= 201606
6058:/usr/include/c++/11/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
6059:/usr/include/c++/11/bits/basic_string.h ****   template<typename _InputIterator, typename _CharT
6060:/usr/include/c++/11/bits/basic_string.h **** 	     = typename iterator_traits<_InputIterator>::value_type,
6061:/usr/include/c++/11/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
6062:/usr/include/c++/11/bits/basic_string.h **** 	   typename = _RequireInputIter<_InputIterator>,
6063:/usr/include/c++/11/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6064:/usr/include/c++/11/bits/basic_string.h ****     basic_string(_InputIterator, _InputIterator, _Allocator = _Allocator())
6065:/usr/include/c++/11/bits/basic_string.h ****       -> basic_string<_CharT, char_traits<_CharT>, _Allocator>;
6066:/usr/include/c++/11/bits/basic_string.h **** 
6067:/usr/include/c++/11/bits/basic_string.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
6068:/usr/include/c++/11/bits/basic_string.h ****   // 3075. basic_string needs deduction guides from basic_string_view
6069:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits,
6070:/usr/include/c++/11/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
6071:/usr/include/c++/11/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6072:/usr/include/c++/11/bits/basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>, const _Allocator& = _Allocator())
6073:/usr/include/c++/11/bits/basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
6074:/usr/include/c++/11/bits/basic_string.h **** 
6075:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits,
6076:/usr/include/c++/11/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
6077:/usr/include/c++/11/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6078:/usr/include/c++/11/bits/basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>,
6079:/usr/include/c++/11/bits/basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6080:/usr/include/c++/11/bits/basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6081:/usr/include/c++/11/bits/basic_string.h **** 		 const _Allocator& = _Allocator())
6082:/usr/include/c++/11/bits/basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
6083:/usr/include/c++/11/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
6084:/usr/include/c++/11/bits/basic_string.h **** #endif
6085:/usr/include/c++/11/bits/basic_string.h **** 
6086:/usr/include/c++/11/bits/basic_string.h ****   // operator+
6087:/usr/include/c++/11/bits/basic_string.h ****   /**
6088:/usr/include/c++/11/bits/basic_string.h ****    *  @brief  Concatenate two strings.
6089:/usr/include/c++/11/bits/basic_string.h ****    *  @param __lhs  First string.
6090:/usr/include/c++/11/bits/basic_string.h ****    *  @param __rhs  Last string.
6091:/usr/include/c++/11/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6092:/usr/include/c++/11/bits/basic_string.h ****    */
6093:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6094:/usr/include/c++/11/bits/basic_string.h ****     basic_string<_CharT, _Traits, _Alloc>
6095:/usr/include/c++/11/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6096:/usr/include/c++/11/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6097:/usr/include/c++/11/bits/basic_string.h ****     {
6098:/usr/include/c++/11/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6099:/usr/include/c++/11/bits/basic_string.h ****       __str.append(__rhs);
6100:/usr/include/c++/11/bits/basic_string.h ****       return __str;
6101:/usr/include/c++/11/bits/basic_string.h ****     }
6102:/usr/include/c++/11/bits/basic_string.h **** 
6103:/usr/include/c++/11/bits/basic_string.h ****   /**
6104:/usr/include/c++/11/bits/basic_string.h ****    *  @brief  Concatenate C string and string.
6105:/usr/include/c++/11/bits/basic_string.h ****    *  @param __lhs  First string.
6106:/usr/include/c++/11/bits/basic_string.h ****    *  @param __rhs  Last string.
6107:/usr/include/c++/11/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6108:/usr/include/c++/11/bits/basic_string.h ****    */
6109:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6110:/usr/include/c++/11/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6111:/usr/include/c++/11/bits/basic_string.h ****     operator+(const _CharT* __lhs,
6112:/usr/include/c++/11/bits/basic_string.h **** 	      const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6113:/usr/include/c++/11/bits/basic_string.h **** 
6114:/usr/include/c++/11/bits/basic_string.h ****   /**
6115:/usr/include/c++/11/bits/basic_string.h ****    *  @brief  Concatenate character and string.
6116:/usr/include/c++/11/bits/basic_string.h ****    *  @param __lhs  First string.
6117:/usr/include/c++/11/bits/basic_string.h ****    *  @param __rhs  Last string.
6118:/usr/include/c++/11/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6119:/usr/include/c++/11/bits/basic_string.h ****    */
6120:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6121:/usr/include/c++/11/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6122:/usr/include/c++/11/bits/basic_string.h ****     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6123:/usr/include/c++/11/bits/basic_string.h **** 
6124:/usr/include/c++/11/bits/basic_string.h ****   /**
6125:/usr/include/c++/11/bits/basic_string.h ****    *  @brief  Concatenate string and C string.
6126:/usr/include/c++/11/bits/basic_string.h ****    *  @param __lhs  First string.
6127:/usr/include/c++/11/bits/basic_string.h ****    *  @param __rhs  Last string.
6128:/usr/include/c++/11/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6129:/usr/include/c++/11/bits/basic_string.h ****    */
6130:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6131:/usr/include/c++/11/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6132:/usr/include/c++/11/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6133:/usr/include/c++/11/bits/basic_string.h **** 	      const _CharT* __rhs)
6134:/usr/include/c++/11/bits/basic_string.h ****     {
6135:/usr/include/c++/11/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6136:/usr/include/c++/11/bits/basic_string.h ****       __str.append(__rhs);
6137:/usr/include/c++/11/bits/basic_string.h ****       return __str;
6138:/usr/include/c++/11/bits/basic_string.h ****     }
6139:/usr/include/c++/11/bits/basic_string.h **** 
6140:/usr/include/c++/11/bits/basic_string.h ****   /**
6141:/usr/include/c++/11/bits/basic_string.h ****    *  @brief  Concatenate string and character.
6142:/usr/include/c++/11/bits/basic_string.h ****    *  @param __lhs  First string.
6143:/usr/include/c++/11/bits/basic_string.h ****    *  @param __rhs  Last string.
6144:/usr/include/c++/11/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6145:/usr/include/c++/11/bits/basic_string.h ****    */
6146:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6147:/usr/include/c++/11/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6148:/usr/include/c++/11/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
6149:/usr/include/c++/11/bits/basic_string.h ****     {
6150:/usr/include/c++/11/bits/basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;
6151:/usr/include/c++/11/bits/basic_string.h ****       typedef typename __string_type::size_type		__size_type;
6152:/usr/include/c++/11/bits/basic_string.h ****       __string_type __str(__lhs);
6153:/usr/include/c++/11/bits/basic_string.h ****       __str.append(__size_type(1), __rhs);
6154:/usr/include/c++/11/bits/basic_string.h ****       return __str;
6155:/usr/include/c++/11/bits/basic_string.h ****     }
6156:/usr/include/c++/11/bits/basic_string.h **** 
6157:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
6158:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6159:/usr/include/c++/11/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6160:/usr/include/c++/11/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6161:/usr/include/c++/11/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6162:/usr/include/c++/11/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6163:/usr/include/c++/11/bits/basic_string.h **** 
6164:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6165:/usr/include/c++/11/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6166:/usr/include/c++/11/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6167:/usr/include/c++/11/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6168:/usr/include/c++/11/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6169:/usr/include/c++/11/bits/basic_string.h **** 
6170:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6171:/usr/include/c++/11/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6172:/usr/include/c++/11/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6173:/usr/include/c++/11/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6174:/usr/include/c++/11/bits/basic_string.h ****     {
6175:/usr/include/c++/11/bits/basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
6176:/usr/include/c++/11/bits/basic_string.h ****       using _Alloc_traits = allocator_traits<_Alloc>;
6177:/usr/include/c++/11/bits/basic_string.h ****       bool __use_rhs = false;
6178:/usr/include/c++/11/bits/basic_string.h ****       if _GLIBCXX17_CONSTEXPR (typename _Alloc_traits::is_always_equal{})
6179:/usr/include/c++/11/bits/basic_string.h **** 	__use_rhs = true;
6180:/usr/include/c++/11/bits/basic_string.h ****       else if (__lhs.get_allocator() == __rhs.get_allocator())
6181:/usr/include/c++/11/bits/basic_string.h **** 	__use_rhs = true;
6182:/usr/include/c++/11/bits/basic_string.h ****       if (__use_rhs)
6183:/usr/include/c++/11/bits/basic_string.h **** #endif
6184:/usr/include/c++/11/bits/basic_string.h **** 	{
6185:/usr/include/c++/11/bits/basic_string.h **** 	  const auto __size = __lhs.size() + __rhs.size();
6186:/usr/include/c++/11/bits/basic_string.h **** 	  if (__size > __lhs.capacity() && __size <= __rhs.capacity())
6187:/usr/include/c++/11/bits/basic_string.h **** 	    return std::move(__rhs.insert(0, __lhs));
6188:/usr/include/c++/11/bits/basic_string.h **** 	}
6189:/usr/include/c++/11/bits/basic_string.h ****       return std::move(__lhs.append(__rhs));
6190:/usr/include/c++/11/bits/basic_string.h ****     }
6191:/usr/include/c++/11/bits/basic_string.h **** 
6192:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6193:/usr/include/c++/11/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6194:/usr/include/c++/11/bits/basic_string.h ****     operator+(const _CharT* __lhs,
6195:/usr/include/c++/11/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6196:/usr/include/c++/11/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6197:/usr/include/c++/11/bits/basic_string.h **** 
6198:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6199:/usr/include/c++/11/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6200:/usr/include/c++/11/bits/basic_string.h ****     operator+(_CharT __lhs,
6201:/usr/include/c++/11/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6202:/usr/include/c++/11/bits/basic_string.h ****     { return std::move(__rhs.insert(0, 1, __lhs)); }
6203:/usr/include/c++/11/bits/basic_string.h **** 
6204:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6205:/usr/include/c++/11/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6206:/usr/include/c++/11/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6207:/usr/include/c++/11/bits/basic_string.h **** 	      const _CharT* __rhs)
6208:/usr/include/c++/11/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6209:/usr/include/c++/11/bits/basic_string.h **** 
6210:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6211:/usr/include/c++/11/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6212:/usr/include/c++/11/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6213:/usr/include/c++/11/bits/basic_string.h **** 	      _CharT __rhs)
6214:/usr/include/c++/11/bits/basic_string.h ****     { return std::move(__lhs.append(1, __rhs)); }
6215:/usr/include/c++/11/bits/basic_string.h **** #endif
6216:/usr/include/c++/11/bits/basic_string.h **** 
6217:/usr/include/c++/11/bits/basic_string.h ****   // operator ==
6218:/usr/include/c++/11/bits/basic_string.h ****   /**
6219:/usr/include/c++/11/bits/basic_string.h ****    *  @brief  Test equivalence of two strings.
6220:/usr/include/c++/11/bits/basic_string.h ****    *  @param __lhs  First string.
6221:/usr/include/c++/11/bits/basic_string.h ****    *  @param __rhs  Second string.
6222:/usr/include/c++/11/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6223:/usr/include/c++/11/bits/basic_string.h ****    */
6224:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6225:/usr/include/c++/11/bits/basic_string.h ****     inline bool
6226:/usr/include/c++/11/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6227:/usr/include/c++/11/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6228:/usr/include/c++/11/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6229:/usr/include/c++/11/bits/basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6230:/usr/include/c++/11/bits/basic_string.h **** 
6231:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT>
6232:/usr/include/c++/11/bits/basic_string.h ****     inline
6233:/usr/include/c++/11/bits/basic_string.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type
6234:/usr/include/c++/11/bits/basic_string.h ****     operator==(const basic_string<_CharT>& __lhs,
6235:/usr/include/c++/11/bits/basic_string.h **** 	       const basic_string<_CharT>& __rhs) _GLIBCXX_NOEXCEPT
6236:/usr/include/c++/11/bits/basic_string.h ****     { return (__lhs.size() == __rhs.size()
6237:/usr/include/c++/11/bits/basic_string.h **** 	      && !std::char_traits<_CharT>::compare(__lhs.data(), __rhs.data(),
6238:/usr/include/c++/11/bits/basic_string.h **** 						    __lhs.size())); }
6239:/usr/include/c++/11/bits/basic_string.h **** 
6240:/usr/include/c++/11/bits/basic_string.h ****   /**
6241:/usr/include/c++/11/bits/basic_string.h ****    *  @brief  Test equivalence of string and C string.
6242:/usr/include/c++/11/bits/basic_string.h ****    *  @param __lhs  String.
6243:/usr/include/c++/11/bits/basic_string.h ****    *  @param __rhs  C string.
6244:/usr/include/c++/11/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6245:/usr/include/c++/11/bits/basic_string.h ****    */
6246:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6247:/usr/include/c++/11/bits/basic_string.h ****     inline bool
6248:/usr/include/c++/11/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6249:/usr/include/c++/11/bits/basic_string.h **** 	       const _CharT* __rhs)
6250:/usr/include/c++/11/bits/basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6251:/usr/include/c++/11/bits/basic_string.h **** 
6252:/usr/include/c++/11/bits/basic_string.h **** #if __cpp_lib_three_way_comparison
6253:/usr/include/c++/11/bits/basic_string.h ****   /**
6254:/usr/include/c++/11/bits/basic_string.h ****    *  @brief  Three-way comparison of a string and a C string.
6255:/usr/include/c++/11/bits/basic_string.h ****    *  @param __lhs  A string.
6256:/usr/include/c++/11/bits/basic_string.h ****    *  @param __rhs  A null-terminated string.
6257:/usr/include/c++/11/bits/basic_string.h ****    *  @return  A value indicating whether `__lhs` is less than, equal to,
6258:/usr/include/c++/11/bits/basic_string.h ****    *	       greater than, or incomparable with `__rhs`.
6259:/usr/include/c++/11/bits/basic_string.h ****    */
6260:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6261:/usr/include/c++/11/bits/basic_string.h ****     inline auto
6262:/usr/include/c++/11/bits/basic_string.h ****     operator<=>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6263:/usr/include/c++/11/bits/basic_string.h **** 		const basic_string<_CharT, _Traits, _Alloc>& __rhs) noexcept
6264:/usr/include/c++/11/bits/basic_string.h ****     -> decltype(__detail::__char_traits_cmp_cat<_Traits>(0))
6265:/usr/include/c++/11/bits/basic_string.h ****     { return __detail::__char_traits_cmp_cat<_Traits>(__lhs.compare(__rhs)); }
6266:/usr/include/c++/11/bits/basic_string.h **** 
6267:/usr/include/c++/11/bits/basic_string.h ****   /**
6268:/usr/include/c++/11/bits/basic_string.h ****    *  @brief  Three-way comparison of a string and a C string.
6269:/usr/include/c++/11/bits/basic_string.h ****    *  @param __lhs  A string.
6270:/usr/include/c++/11/bits/basic_string.h ****    *  @param __rhs  A null-terminated string.
6271:/usr/include/c++/11/bits/basic_string.h ****    *  @return  A value indicating whether `__lhs` is less than, equal to,
6272:/usr/include/c++/11/bits/basic_string.h ****    *	       greater than, or incomparable with `__rhs`.
6273:/usr/include/c++/11/bits/basic_string.h ****    */
6274:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6275:/usr/include/c++/11/bits/basic_string.h ****     inline auto
6276:/usr/include/c++/11/bits/basic_string.h ****     operator<=>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6277:/usr/include/c++/11/bits/basic_string.h **** 		const _CharT* __rhs) noexcept
6278:/usr/include/c++/11/bits/basic_string.h ****     -> decltype(__detail::__char_traits_cmp_cat<_Traits>(0))
6279:/usr/include/c++/11/bits/basic_string.h ****     { return __detail::__char_traits_cmp_cat<_Traits>(__lhs.compare(__rhs)); }
6280:/usr/include/c++/11/bits/basic_string.h **** #else
6281:/usr/include/c++/11/bits/basic_string.h ****   /**
6282:/usr/include/c++/11/bits/basic_string.h ****    *  @brief  Test equivalence of C string and string.
6283:/usr/include/c++/11/bits/basic_string.h ****    *  @param __lhs  C string.
6284:/usr/include/c++/11/bits/basic_string.h ****    *  @param __rhs  String.
6285:/usr/include/c++/11/bits/basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) == 0.  False otherwise.
6286:/usr/include/c++/11/bits/basic_string.h ****    */
6287:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6288:/usr/include/c++/11/bits/basic_string.h ****     inline bool
6289:/usr/include/c++/11/bits/basic_string.h ****     operator==(const _CharT* __lhs,
 8326              		.loc 10 6289 5
 8327              		.cfi_startproc
 8328 0000 F30F1EFA 		endbr64
 8329 0004 55       		pushq	%rbp
 8330              		.cfi_def_cfa_offset 16
 8331              		.cfi_offset 6, -16
 8332 0005 4889E5   		movq	%rsp, %rbp
 8333              		.cfi_def_cfa_register 6
 8334 0008 4883EC10 		subq	$16, %rsp
 8335 000c 48897DF8 		movq	%rdi, -8(%rbp)
 8336 0010 488975F0 		movq	%rsi, -16(%rbp)
6290:/usr/include/c++/11/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6291:/usr/include/c++/11/bits/basic_string.h ****     { return __rhs.compare(__lhs) == 0; }
 8337              		.loc 10 6291 27
 8338 0014 488B55F8 		movq	-8(%rbp), %rdx
 8339 0018 488B45F0 		movq	-16(%rbp), %rax
 8340 001c 4889D6   		movq	%rdx, %rsi
 8341 001f 4889C7   		movq	%rax, %rdi
 8342 0022 E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc@PLT
 8342      00
 8343              		.loc 10 6291 38
 8344 0027 85C0     		testl	%eax, %eax
 8345 0029 0F94C0   		sete	%al
 8346              		.loc 10 6291 41
 8347 002c C9       		leave
 8348              		.cfi_def_cfa 7, 8
 8349 002d C3       		ret
 8350              		.cfi_endproc
 8351              	.LFE1592:
 8353              		.section	.text._ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_,"axG",@progbits,_ZN8UnitTest8AreCloseIff
 8354              		.weak	_ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_
 8356              	_ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_:
 8357              	.LFB1594:
  39:../Checks.h   **** {
 8358              		.loc 8 39 6
 8359              		.cfi_startproc
 8360 0000 F30F1EFA 		endbr64
 8361 0004 55       		pushq	%rbp
 8362              		.cfi_def_cfa_offset 16
 8363              		.cfi_offset 6, -16
 8364 0005 4889E5   		movq	%rsp, %rbp
 8365              		.cfi_def_cfa_register 6
 8366 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8367 000c 488975F0 		movq	%rsi, -16(%rbp)
 8368 0010 488955E8 		movq	%rdx, -24(%rbp)
  41:../Checks.h   **** }
 8369              		.loc 8 41 20
 8370 0014 488B45F0 		movq	-16(%rbp), %rax
 8371 0018 F30F1000 		movss	(%rax), %xmm0
  41:../Checks.h   **** }
 8372              		.loc 8 41 33
 8373 001c 488B45F8 		movq	-8(%rbp), %rax
 8374 0020 F30F1008 		movss	(%rax), %xmm1
 8375 0024 488B45E8 		movq	-24(%rbp), %rax
 8376 0028 F30F1010 		movss	(%rax), %xmm2
 8377 002c F30F5CCA 		subss	%xmm2, %xmm1
  41:../Checks.h   **** }
 8378              		.loc 8 41 47
 8379 0030 0F2FC1   		comiss	%xmm1, %xmm0
 8380 0033 7228     		jb	.L430
  41:../Checks.h   **** }
 8381              		.loc 8 41 58 discriminator 1
 8382 0035 488B45F0 		movq	-16(%rbp), %rax
 8383 0039 F30F1008 		movss	(%rax), %xmm1
  41:../Checks.h   **** }
 8384              		.loc 8 41 71 discriminator 1
 8385 003d 488B45F8 		movq	-8(%rbp), %rax
 8386 0041 F30F1010 		movss	(%rax), %xmm2
 8387 0045 488B45E8 		movq	-24(%rbp), %rax
 8388 0049 F30F1000 		movss	(%rax), %xmm0
 8389 004d F30F58C2 		addss	%xmm2, %xmm0
  41:../Checks.h   **** }
 8390              		.loc 8 41 47 discriminator 1
 8391 0051 0F2FC1   		comiss	%xmm1, %xmm0
 8392 0054 7207     		jb	.L430
  41:../Checks.h   **** }
 8393              		.loc 8 41 47 is_stmt 0 discriminator 3
 8394 0056 B8010000 		movl	$1, %eax
 8394      00
 8395 005b EB05     		jmp	.L433
 8396              	.L430:
  41:../Checks.h   **** }
 8397              		.loc 8 41 47 discriminator 4
 8398 005d B8000000 		movl	$0, %eax
 8398      00
 8399              	.L433:
  42:../Checks.h   **** 
 8400              		.loc 8 42 1 is_stmt 1 discriminator 6
 8401 0062 5D       		popq	%rbp
 8402              		.cfi_def_cfa 7, 8
 8403 0063 C3       		ret
 8404              		.cfi_endproc
 8405              	.LFE1594:
 8407              		.section	.text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_E
 8408              		.align 2
 8409              		.weak	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE14_M_ran
 8411              	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE14_M_range_chec
 8412              	.LFB1596:
1070:/usr/include/c++/11/bits/stl_vector.h ****       {
 8413              		.loc 6 1070 7
 8414              		.cfi_startproc
 8415 0000 F30F1EFA 		endbr64
 8416 0004 55       		pushq	%rbp
 8417              		.cfi_def_cfa_offset 16
 8418              		.cfi_offset 6, -16
 8419 0005 4889E5   		movq	%rsp, %rbp
 8420              		.cfi_def_cfa_register 6
 8421 0008 4883EC10 		subq	$16, %rsp
 8422 000c 48897DF8 		movq	%rdi, -8(%rbp)
 8423 0010 488975F0 		movq	%rsi, -16(%rbp)
1072:/usr/include/c++/11/bits/stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
 8424              		.loc 6 1072 23
 8425 0014 488B45F8 		movq	-8(%rbp), %rax
 8426 0018 4889C7   		movq	%rax, %rdi
 8427 001b E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv
 8427      00
1072:/usr/include/c++/11/bits/stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
 8428              		.loc 6 1072 10
 8429 0020 483945F0 		cmpq	%rax, -16(%rbp)
 8430 0024 0F93C0   		setnb	%al
1072:/usr/include/c++/11/bits/stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
 8431              		.loc 6 1072 2
 8432 0027 84C0     		testb	%al, %al
 8433 0029 742A     		je	.L439
1073:/usr/include/c++/11/bits/stl_vector.h **** 				       "(which is %zu) >= this->size() "
 8434              		.loc 6 1073 28
 8435 002b 488B45F8 		movq	-8(%rbp), %rax
 8436 002f 4889C7   		movq	%rax, %rdi
 8437 0032 E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv
 8437      00
 8438 0037 4889C2   		movq	%rax, %rdx
 8439 003a 488B45F0 		movq	-16(%rbp), %rax
 8440 003e 4889C6   		movq	%rax, %rsi
 8441 0041 488D0500 		leaq	.LC37(%rip), %rax
 8441      000000
 8442 0048 4889C7   		movq	%rax, %rdi
 8443 004b B8000000 		movl	$0, %eax
 8443      00
 8444 0050 E8000000 		call	_ZSt24__throw_out_of_range_fmtPKcz@PLT
 8444      00
 8445              	.L439:
1077:/usr/include/c++/11/bits/stl_vector.h **** 
 8446              		.loc 6 1077 7
 8447 0055 90       		nop
 8448 0056 C9       		leave
 8449              		.cfi_def_cfa 7, 8
 8450 0057 C3       		ret
 8451              		.cfi_endproc
 8452              	.LFE1596:
 8454              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC2Ev,"axG"
 8455              		.align 2
 8456              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC2Ev
 8458              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC2Ev:
 8459              	.LFB1607:
 131:/usr/include/c++/11/bits/stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 8460              		.loc 6 131 2
 8461              		.cfi_startproc
 8462 0000 F30F1EFA 		endbr64
 8463 0004 55       		pushq	%rbp
 8464              		.cfi_def_cfa_offset 16
 8465              		.cfi_offset 6, -16
 8466 0005 4889E5   		movq	%rsp, %rbp
 8467              		.cfi_def_cfa_register 6
 8468 0008 4883EC10 		subq	$16, %rsp
 8469 000c 48897DF8 		movq	%rdi, -8(%rbp)
 8470              	.LBB147:
 133:/usr/include/c++/11/bits/stl_vector.h **** 	{ }
 8471              		.loc 6 133 19
 8472 0010 488B45F8 		movq	-8(%rbp), %rax
 8473 0014 4889C7   		movq	%rax, %rdi
 8474 0017 E8000000 		call	_ZNSaIN8UnitTest18DeferredTestResultEEC2Ev
 8474      00
 8475 001c 488B45F8 		movq	-8(%rbp), %rax
 8476 0020 4889C7   		movq	%rax, %rdi
 8477 0023 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE17_Vector_impl_dataC2Ev
 8477      00
 8478              	.LBE147:
 134:/usr/include/c++/11/bits/stl_vector.h **** 
 8479              		.loc 6 134 4
 8480 0028 90       		nop
 8481 0029 C9       		leave
 8482              		.cfi_def_cfa 7, 8
 8483 002a C3       		ret
 8484              		.cfi_endproc
 8485              	.LFE1607:
 8487              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC1Ev
 8488              		.set	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC1Ev,_ZNSt12_Vector_
 8489              		.section	.text._ZNSaIN8UnitTest18DeferredTestResultEED2Ev,"axG",@progbits,_ZNSaIN8UnitTest18Deferr
 8490              		.align 2
 8491              		.weak	_ZNSaIN8UnitTest18DeferredTestResultEED2Ev
 8493              	_ZNSaIN8UnitTest18DeferredTestResultEED2Ev:
 8494              	.LFB1610:
 8495              		.file 11 "/usr/include/c++/11/bits/allocator.h"
   1:/usr/include/c++/11/bits/allocator.h **** // Allocators -*- C++ -*-
   2:/usr/include/c++/11/bits/allocator.h **** 
   3:/usr/include/c++/11/bits/allocator.h **** // Copyright (C) 2001-2021 Free Software Foundation, Inc.
   4:/usr/include/c++/11/bits/allocator.h **** //
   5:/usr/include/c++/11/bits/allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/11/bits/allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/11/bits/allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/11/bits/allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/11/bits/allocator.h **** // any later version.
  10:/usr/include/c++/11/bits/allocator.h **** 
  11:/usr/include/c++/11/bits/allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/11/bits/allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/11/bits/allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/11/bits/allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/11/bits/allocator.h **** 
  16:/usr/include/c++/11/bits/allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/11/bits/allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/11/bits/allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/11/bits/allocator.h **** 
  20:/usr/include/c++/11/bits/allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/11/bits/allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/11/bits/allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/11/bits/allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/11/bits/allocator.h **** 
  25:/usr/include/c++/11/bits/allocator.h **** /*
  26:/usr/include/c++/11/bits/allocator.h ****  * Copyright (c) 1996-1997
  27:/usr/include/c++/11/bits/allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:/usr/include/c++/11/bits/allocator.h ****  *
  29:/usr/include/c++/11/bits/allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/usr/include/c++/11/bits/allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/usr/include/c++/11/bits/allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:/usr/include/c++/11/bits/allocator.h ****  * that both that copyright notice and this permission notice appear
  33:/usr/include/c++/11/bits/allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:/usr/include/c++/11/bits/allocator.h ****  * representations about the suitability of this software for any
  35:/usr/include/c++/11/bits/allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/usr/include/c++/11/bits/allocator.h ****  */
  37:/usr/include/c++/11/bits/allocator.h **** 
  38:/usr/include/c++/11/bits/allocator.h **** /** @file bits/allocator.h
  39:/usr/include/c++/11/bits/allocator.h ****  *  This is an internal header file, included by other library headers.
  40:/usr/include/c++/11/bits/allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:/usr/include/c++/11/bits/allocator.h ****  */
  42:/usr/include/c++/11/bits/allocator.h **** 
  43:/usr/include/c++/11/bits/allocator.h **** #ifndef _ALLOCATOR_H
  44:/usr/include/c++/11/bits/allocator.h **** #define _ALLOCATOR_H 1
  45:/usr/include/c++/11/bits/allocator.h **** 
  46:/usr/include/c++/11/bits/allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:/usr/include/c++/11/bits/allocator.h **** #include <bits/memoryfwd.h>
  48:/usr/include/c++/11/bits/allocator.h **** #if __cplusplus >= 201103L
  49:/usr/include/c++/11/bits/allocator.h **** #include <type_traits>
  50:/usr/include/c++/11/bits/allocator.h **** #endif
  51:/usr/include/c++/11/bits/allocator.h **** 
  52:/usr/include/c++/11/bits/allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:/usr/include/c++/11/bits/allocator.h **** 
  54:/usr/include/c++/11/bits/allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  55:/usr/include/c++/11/bits/allocator.h **** {
  56:/usr/include/c++/11/bits/allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  57:/usr/include/c++/11/bits/allocator.h **** 
  58:/usr/include/c++/11/bits/allocator.h ****   /**
  59:/usr/include/c++/11/bits/allocator.h ****    *  @addtogroup allocators
  60:/usr/include/c++/11/bits/allocator.h ****    *  @{
  61:/usr/include/c++/11/bits/allocator.h ****    */
  62:/usr/include/c++/11/bits/allocator.h **** 
  63:/usr/include/c++/11/bits/allocator.h ****   // Since C++20 the primary template should be used for allocator<void>,
  64:/usr/include/c++/11/bits/allocator.h ****   // but then it would have a non-trivial default ctor and dtor for C++20,
  65:/usr/include/c++/11/bits/allocator.h ****   // but trivial for C++98-17, which would be an ABI incompatibiliy between
  66:/usr/include/c++/11/bits/allocator.h ****   // different standard dialects. So C++20 still uses the allocator<void>
  67:/usr/include/c++/11/bits/allocator.h ****   // explicit specialization, with the historical ABI properties, but with
  68:/usr/include/c++/11/bits/allocator.h ****   // the same members that are present in the primary template.
  69:/usr/include/c++/11/bits/allocator.h **** 
  70:/usr/include/c++/11/bits/allocator.h ****   /// allocator<void> specialization.
  71:/usr/include/c++/11/bits/allocator.h ****   template<>
  72:/usr/include/c++/11/bits/allocator.h ****     class allocator<void>
  73:/usr/include/c++/11/bits/allocator.h ****     {
  74:/usr/include/c++/11/bits/allocator.h ****     public:
  75:/usr/include/c++/11/bits/allocator.h ****       typedef void        value_type;
  76:/usr/include/c++/11/bits/allocator.h ****       typedef size_t      size_type;
  77:/usr/include/c++/11/bits/allocator.h ****       typedef ptrdiff_t   difference_type;
  78:/usr/include/c++/11/bits/allocator.h **** 
  79:/usr/include/c++/11/bits/allocator.h **** #if __cplusplus <= 201703L
  80:/usr/include/c++/11/bits/allocator.h ****       // These were removed for C++20, allocator_traits does the right thing.
  81:/usr/include/c++/11/bits/allocator.h ****       typedef void*       pointer;
  82:/usr/include/c++/11/bits/allocator.h ****       typedef const void* const_pointer;
  83:/usr/include/c++/11/bits/allocator.h **** 
  84:/usr/include/c++/11/bits/allocator.h ****       template<typename _Tp1>
  85:/usr/include/c++/11/bits/allocator.h **** 	struct rebind
  86:/usr/include/c++/11/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
  87:/usr/include/c++/11/bits/allocator.h **** #endif
  88:/usr/include/c++/11/bits/allocator.h **** 
  89:/usr/include/c++/11/bits/allocator.h **** #if __cplusplus >= 201103L
  90:/usr/include/c++/11/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  91:/usr/include/c++/11/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  92:/usr/include/c++/11/bits/allocator.h ****       using propagate_on_container_move_assignment = true_type;
  93:/usr/include/c++/11/bits/allocator.h **** 
  94:/usr/include/c++/11/bits/allocator.h ****       using is_always_equal
  95:/usr/include/c++/11/bits/allocator.h **** 	_GLIBCXX20_DEPRECATED_SUGGEST("std::allocator_traits::is_always_equal")
  96:/usr/include/c++/11/bits/allocator.h **** 	= true_type;
  97:/usr/include/c++/11/bits/allocator.h **** 
  98:/usr/include/c++/11/bits/allocator.h **** #if __cplusplus >= 202002L
  99:/usr/include/c++/11/bits/allocator.h ****       // As noted above, these members are present for C++20 to provide the
 100:/usr/include/c++/11/bits/allocator.h ****       // same API as the primary template, but still trivial as in pre-C++20.
 101:/usr/include/c++/11/bits/allocator.h ****       allocator() = default;
 102:/usr/include/c++/11/bits/allocator.h ****       ~allocator() = default;
 103:/usr/include/c++/11/bits/allocator.h **** 
 104:/usr/include/c++/11/bits/allocator.h ****       template<typename _Up>
 105:/usr/include/c++/11/bits/allocator.h **** 	constexpr
 106:/usr/include/c++/11/bits/allocator.h **** 	allocator(const allocator<_Up>&) noexcept { }
 107:/usr/include/c++/11/bits/allocator.h **** 
 108:/usr/include/c++/11/bits/allocator.h ****       // No allocate member because it's ill-formed by LWG 3307.
 109:/usr/include/c++/11/bits/allocator.h ****       // No deallocate member because it would be undefined to call it
 110:/usr/include/c++/11/bits/allocator.h ****       // with any pointer which wasn't obtained from allocate.
 111:/usr/include/c++/11/bits/allocator.h **** #endif // C++20
 112:/usr/include/c++/11/bits/allocator.h **** #endif // C++11
 113:/usr/include/c++/11/bits/allocator.h ****     };
 114:/usr/include/c++/11/bits/allocator.h **** 
 115:/usr/include/c++/11/bits/allocator.h ****   /**
 116:/usr/include/c++/11/bits/allocator.h ****    * @brief  The @a standard allocator, as per C++03 [20.4.1].
 117:/usr/include/c++/11/bits/allocator.h ****    *
 118:/usr/include/c++/11/bits/allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 119:/usr/include/c++/11/bits/allocator.h ****    *  for further details.
 120:/usr/include/c++/11/bits/allocator.h ****    *
 121:/usr/include/c++/11/bits/allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 122:/usr/include/c++/11/bits/allocator.h ****    */
 123:/usr/include/c++/11/bits/allocator.h ****   template<typename _Tp>
 124:/usr/include/c++/11/bits/allocator.h ****     class allocator : public __allocator_base<_Tp>
 125:/usr/include/c++/11/bits/allocator.h ****     {
 126:/usr/include/c++/11/bits/allocator.h ****     public:
 127:/usr/include/c++/11/bits/allocator.h ****       typedef _Tp        value_type;
 128:/usr/include/c++/11/bits/allocator.h ****       typedef size_t     size_type;
 129:/usr/include/c++/11/bits/allocator.h ****       typedef ptrdiff_t  difference_type;
 130:/usr/include/c++/11/bits/allocator.h **** 
 131:/usr/include/c++/11/bits/allocator.h **** #if __cplusplus <= 201703L
 132:/usr/include/c++/11/bits/allocator.h ****       // These were removed for C++20.
 133:/usr/include/c++/11/bits/allocator.h ****       typedef _Tp*       pointer;
 134:/usr/include/c++/11/bits/allocator.h ****       typedef const _Tp* const_pointer;
 135:/usr/include/c++/11/bits/allocator.h ****       typedef _Tp&       reference;
 136:/usr/include/c++/11/bits/allocator.h ****       typedef const _Tp& const_reference;
 137:/usr/include/c++/11/bits/allocator.h **** 
 138:/usr/include/c++/11/bits/allocator.h ****       template<typename _Tp1>
 139:/usr/include/c++/11/bits/allocator.h **** 	struct rebind
 140:/usr/include/c++/11/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
 141:/usr/include/c++/11/bits/allocator.h **** #endif
 142:/usr/include/c++/11/bits/allocator.h **** 
 143:/usr/include/c++/11/bits/allocator.h **** #if __cplusplus >= 201103L
 144:/usr/include/c++/11/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 145:/usr/include/c++/11/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 146:/usr/include/c++/11/bits/allocator.h ****       using propagate_on_container_move_assignment = true_type;
 147:/usr/include/c++/11/bits/allocator.h **** 
 148:/usr/include/c++/11/bits/allocator.h ****       using is_always_equal
 149:/usr/include/c++/11/bits/allocator.h **** 	_GLIBCXX20_DEPRECATED_SUGGEST("std::allocator_traits::is_always_equal")
 150:/usr/include/c++/11/bits/allocator.h **** 	= true_type;
 151:/usr/include/c++/11/bits/allocator.h **** #endif
 152:/usr/include/c++/11/bits/allocator.h **** 
 153:/usr/include/c++/11/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 154:/usr/include/c++/11/bits/allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 155:/usr/include/c++/11/bits/allocator.h ****       _GLIBCXX20_CONSTEXPR
 156:/usr/include/c++/11/bits/allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
 157:/usr/include/c++/11/bits/allocator.h **** 
 158:/usr/include/c++/11/bits/allocator.h ****       _GLIBCXX20_CONSTEXPR
 159:/usr/include/c++/11/bits/allocator.h ****       allocator(const allocator& __a) _GLIBCXX_NOTHROW
 160:/usr/include/c++/11/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 161:/usr/include/c++/11/bits/allocator.h **** 
 162:/usr/include/c++/11/bits/allocator.h **** #if __cplusplus >= 201103L
 163:/usr/include/c++/11/bits/allocator.h ****       // Avoid implicit deprecation.
 164:/usr/include/c++/11/bits/allocator.h ****       allocator& operator=(const allocator&) = default;
 165:/usr/include/c++/11/bits/allocator.h **** #endif
 166:/usr/include/c++/11/bits/allocator.h **** 
 167:/usr/include/c++/11/bits/allocator.h ****       template<typename _Tp1>
 168:/usr/include/c++/11/bits/allocator.h **** 	_GLIBCXX20_CONSTEXPR
 169:/usr/include/c++/11/bits/allocator.h **** 	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 170:/usr/include/c++/11/bits/allocator.h **** 
 171:/usr/include/c++/11/bits/allocator.h **** #if __cpp_constexpr_dynamic_alloc
 172:/usr/include/c++/11/bits/allocator.h ****       constexpr
 173:/usr/include/c++/11/bits/allocator.h **** #endif
 174:/usr/include/c++/11/bits/allocator.h ****       ~allocator() _GLIBCXX_NOTHROW { }
 8496              		.loc 11 174 7
 8497              		.cfi_startproc
 8498 0000 F30F1EFA 		endbr64
 8499 0004 55       		pushq	%rbp
 8500              		.cfi_def_cfa_offset 16
 8501              		.cfi_offset 6, -16
 8502 0005 4889E5   		movq	%rsp, %rbp
 8503              		.cfi_def_cfa_register 6
 8504 0008 4883EC10 		subq	$16, %rsp
 8505 000c 48897DF8 		movq	%rdi, -8(%rbp)
 8506              	.LBB148:
 8507              		.loc 11 174 39
 8508 0010 488B45F8 		movq	-8(%rbp), %rax
 8509 0014 4889C7   		movq	%rax, %rdi
 8510 0017 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev
 8510      00
 8511              	.LBE148:
 8512 001c 90       		nop
 8513 001d C9       		leave
 8514              		.cfi_def_cfa 7, 8
 8515 001e C3       		ret
 8516              		.cfi_endproc
 8517              	.LFE1610:
 8519              		.weak	_ZNSaIN8UnitTest18DeferredTestResultEED1Ev
 8520              		.set	_ZNSaIN8UnitTest18DeferredTestResultEED1Ev,_ZNSaIN8UnitTest18DeferredTestResultEED2Ev
 8521              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m,"a
 8522              		.align 2
 8523              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m
 8525              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m:
 8526              	.LFB1612:
 350:/usr/include/c++/11/bits/stl_vector.h ****       {
 8527              		.loc 6 350 7
 8528              		.cfi_startproc
 8529 0000 F30F1EFA 		endbr64
 8530 0004 55       		pushq	%rbp
 8531              		.cfi_def_cfa_offset 16
 8532              		.cfi_offset 6, -16
 8533 0005 4889E5   		movq	%rsp, %rbp
 8534              		.cfi_def_cfa_register 6
 8535 0008 4883EC20 		subq	$32, %rsp
 8536 000c 48897DF8 		movq	%rdi, -8(%rbp)
 8537 0010 488975F0 		movq	%rsi, -16(%rbp)
 8538 0014 488955E8 		movq	%rdx, -24(%rbp)
 353:/usr/include/c++/11/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 8539              		.loc 6 353 2
 8540 0018 48837DF0 		cmpq	$0, -16(%rbp)
 8540      00
 8541 001d 7417     		je	.L444
 354:/usr/include/c++/11/bits/stl_vector.h ****       }
 8542              		.loc 6 354 20
 8543 001f 488B45F8 		movq	-8(%rbp), %rax
 354:/usr/include/c++/11/bits/stl_vector.h ****       }
 8544              		.loc 6 354 19
 8545 0023 488B55E8 		movq	-24(%rbp), %rdx
 8546 0027 488B4DF0 		movq	-16(%rbp), %rcx
 8547 002b 4889CE   		movq	%rcx, %rsi
 8548 002e 4889C7   		movq	%rax, %rdi
 8549 0031 E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEES2_E10deallocateERS3_PS2_m
 8549      00
 8550              	.L444:
 355:/usr/include/c++/11/bits/stl_vector.h **** 
 8551              		.loc 6 355 7
 8552 0036 90       		nop
 8553 0037 C9       		leave
 8554              		.cfi_def_cfa 7, 8
 8555 0038 C3       		ret
 8556              		.cfi_endproc
 8557              	.LFE1612:
 8559              		.section	.text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_,"axG",@progbits,_ZSt8_Destroy
 8560              		.weak	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_
 8562              	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_:
 8563              	.LFB1613:
 8564              		.file 12 "/usr/include/c++/11/bits/stl_construct.h"
   1:/usr/include/c++/11/bits/stl_construct.h **** // nonstandard construct and destroy functions -*- C++ -*-
   2:/usr/include/c++/11/bits/stl_construct.h **** 
   3:/usr/include/c++/11/bits/stl_construct.h **** // Copyright (C) 2001-2021 Free Software Foundation, Inc.
   4:/usr/include/c++/11/bits/stl_construct.h **** //
   5:/usr/include/c++/11/bits/stl_construct.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/11/bits/stl_construct.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/11/bits/stl_construct.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/11/bits/stl_construct.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/11/bits/stl_construct.h **** // any later version.
  10:/usr/include/c++/11/bits/stl_construct.h **** 
  11:/usr/include/c++/11/bits/stl_construct.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/11/bits/stl_construct.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/11/bits/stl_construct.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/11/bits/stl_construct.h **** // GNU General Public License for more details.
  15:/usr/include/c++/11/bits/stl_construct.h **** 
  16:/usr/include/c++/11/bits/stl_construct.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/11/bits/stl_construct.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/11/bits/stl_construct.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/11/bits/stl_construct.h **** 
  20:/usr/include/c++/11/bits/stl_construct.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/11/bits/stl_construct.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/11/bits/stl_construct.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/11/bits/stl_construct.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/11/bits/stl_construct.h **** 
  25:/usr/include/c++/11/bits/stl_construct.h **** /*
  26:/usr/include/c++/11/bits/stl_construct.h ****  *
  27:/usr/include/c++/11/bits/stl_construct.h ****  * Copyright (c) 1994
  28:/usr/include/c++/11/bits/stl_construct.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/11/bits/stl_construct.h ****  *
  30:/usr/include/c++/11/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/11/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/11/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/11/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/11/bits/stl_construct.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/11/bits/stl_construct.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/11/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/11/bits/stl_construct.h ****  *
  38:/usr/include/c++/11/bits/stl_construct.h ****  *
  39:/usr/include/c++/11/bits/stl_construct.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/11/bits/stl_construct.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/11/bits/stl_construct.h ****  *
  42:/usr/include/c++/11/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/11/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/11/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/11/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/11/bits/stl_construct.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/11/bits/stl_construct.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/11/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/11/bits/stl_construct.h ****  */
  50:/usr/include/c++/11/bits/stl_construct.h **** 
  51:/usr/include/c++/11/bits/stl_construct.h **** /** @file bits/stl_construct.h
  52:/usr/include/c++/11/bits/stl_construct.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/11/bits/stl_construct.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:/usr/include/c++/11/bits/stl_construct.h ****  */
  55:/usr/include/c++/11/bits/stl_construct.h **** 
  56:/usr/include/c++/11/bits/stl_construct.h **** #ifndef _STL_CONSTRUCT_H
  57:/usr/include/c++/11/bits/stl_construct.h **** #define _STL_CONSTRUCT_H 1
  58:/usr/include/c++/11/bits/stl_construct.h **** 
  59:/usr/include/c++/11/bits/stl_construct.h **** #include <new>
  60:/usr/include/c++/11/bits/stl_construct.h **** #include <bits/move.h>
  61:/usr/include/c++/11/bits/stl_construct.h **** #include <bits/stl_iterator_base_types.h> // for iterator_traits
  62:/usr/include/c++/11/bits/stl_construct.h **** #include <bits/stl_iterator_base_funcs.h> // for advance
  63:/usr/include/c++/11/bits/stl_construct.h **** 
  64:/usr/include/c++/11/bits/stl_construct.h **** /* This file provides the C++17 functions std::destroy_at, std::destroy, and
  65:/usr/include/c++/11/bits/stl_construct.h ****  * std::destroy_n, and the C++20 function std::construct_at.
  66:/usr/include/c++/11/bits/stl_construct.h ****  * It also provides std::_Construct, std::_Destroy,and std::_Destroy_n functions
  67:/usr/include/c++/11/bits/stl_construct.h ****  * which are defined in all standard modes and so can be used in C++98-14 code.
  68:/usr/include/c++/11/bits/stl_construct.h ****  * The _Destroy functions will dispatch to destroy_at during constant
  69:/usr/include/c++/11/bits/stl_construct.h ****  * evaluation, because calls to that function are intercepted by the compiler
  70:/usr/include/c++/11/bits/stl_construct.h ****  * to allow use in constant expressions.
  71:/usr/include/c++/11/bits/stl_construct.h ****  */
  72:/usr/include/c++/11/bits/stl_construct.h **** 
  73:/usr/include/c++/11/bits/stl_construct.h **** namespace std _GLIBCXX_VISIBILITY(default)
  74:/usr/include/c++/11/bits/stl_construct.h **** {
  75:/usr/include/c++/11/bits/stl_construct.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  76:/usr/include/c++/11/bits/stl_construct.h **** 
  77:/usr/include/c++/11/bits/stl_construct.h **** #if __cplusplus >= 201703L
  78:/usr/include/c++/11/bits/stl_construct.h ****   template <typename _Tp>
  79:/usr/include/c++/11/bits/stl_construct.h ****     _GLIBCXX20_CONSTEXPR inline void
  80:/usr/include/c++/11/bits/stl_construct.h ****     destroy_at(_Tp* __location)
  81:/usr/include/c++/11/bits/stl_construct.h ****     {
  82:/usr/include/c++/11/bits/stl_construct.h ****       if constexpr (__cplusplus > 201703L && is_array_v<_Tp>)
  83:/usr/include/c++/11/bits/stl_construct.h **** 	{
  84:/usr/include/c++/11/bits/stl_construct.h **** 	  for (auto& __x : *__location)
  85:/usr/include/c++/11/bits/stl_construct.h **** 	    std::destroy_at(std::__addressof(__x));
  86:/usr/include/c++/11/bits/stl_construct.h **** 	}
  87:/usr/include/c++/11/bits/stl_construct.h ****       else
  88:/usr/include/c++/11/bits/stl_construct.h **** 	__location->~_Tp();
  89:/usr/include/c++/11/bits/stl_construct.h ****     }
  90:/usr/include/c++/11/bits/stl_construct.h **** 
  91:/usr/include/c++/11/bits/stl_construct.h **** #if __cplusplus >= 202002L
  92:/usr/include/c++/11/bits/stl_construct.h ****   template<typename _Tp, typename... _Args>
  93:/usr/include/c++/11/bits/stl_construct.h ****     constexpr auto
  94:/usr/include/c++/11/bits/stl_construct.h ****     construct_at(_Tp* __location, _Args&&... __args)
  95:/usr/include/c++/11/bits/stl_construct.h ****     noexcept(noexcept(::new((void*)0) _Tp(std::declval<_Args>()...)))
  96:/usr/include/c++/11/bits/stl_construct.h ****     -> decltype(::new((void*)0) _Tp(std::declval<_Args>()...))
  97:/usr/include/c++/11/bits/stl_construct.h ****     { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
  98:/usr/include/c++/11/bits/stl_construct.h **** #endif // C++20
  99:/usr/include/c++/11/bits/stl_construct.h **** #endif// C++17
 100:/usr/include/c++/11/bits/stl_construct.h **** 
 101:/usr/include/c++/11/bits/stl_construct.h ****   /**
 102:/usr/include/c++/11/bits/stl_construct.h ****    * Constructs an object in existing memory by invoking an allocated
 103:/usr/include/c++/11/bits/stl_construct.h ****    * object's constructor with an initializer.
 104:/usr/include/c++/11/bits/stl_construct.h ****    */
 105:/usr/include/c++/11/bits/stl_construct.h **** #if __cplusplus >= 201103L
 106:/usr/include/c++/11/bits/stl_construct.h ****   template<typename _Tp, typename... _Args>
 107:/usr/include/c++/11/bits/stl_construct.h ****     _GLIBCXX20_CONSTEXPR
 108:/usr/include/c++/11/bits/stl_construct.h ****     inline void
 109:/usr/include/c++/11/bits/stl_construct.h ****     _Construct(_Tp* __p, _Args&&... __args)
 110:/usr/include/c++/11/bits/stl_construct.h ****     {
 111:/usr/include/c++/11/bits/stl_construct.h **** #if __cplusplus >= 202002L && __has_builtin(__builtin_is_constant_evaluated)
 112:/usr/include/c++/11/bits/stl_construct.h ****       if (__builtin_is_constant_evaluated())
 113:/usr/include/c++/11/bits/stl_construct.h **** 	{
 114:/usr/include/c++/11/bits/stl_construct.h **** 	  // Allow std::_Construct to be used in constant expressions.
 115:/usr/include/c++/11/bits/stl_construct.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 116:/usr/include/c++/11/bits/stl_construct.h **** 	  return;
 117:/usr/include/c++/11/bits/stl_construct.h **** 	}
 118:/usr/include/c++/11/bits/stl_construct.h **** #endif
 119:/usr/include/c++/11/bits/stl_construct.h ****       ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...);
 120:/usr/include/c++/11/bits/stl_construct.h ****     }
 121:/usr/include/c++/11/bits/stl_construct.h **** #else
 122:/usr/include/c++/11/bits/stl_construct.h ****   template<typename _T1, typename _T2>
 123:/usr/include/c++/11/bits/stl_construct.h ****     inline void
 124:/usr/include/c++/11/bits/stl_construct.h ****     _Construct(_T1* __p, const _T2& __value)
 125:/usr/include/c++/11/bits/stl_construct.h ****     {
 126:/usr/include/c++/11/bits/stl_construct.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 127:/usr/include/c++/11/bits/stl_construct.h ****       // 402. wrong new expression in [some_]allocator::construct
 128:/usr/include/c++/11/bits/stl_construct.h ****       ::new(static_cast<void*>(__p)) _T1(__value);
 129:/usr/include/c++/11/bits/stl_construct.h ****     }
 130:/usr/include/c++/11/bits/stl_construct.h **** #endif
 131:/usr/include/c++/11/bits/stl_construct.h **** 
 132:/usr/include/c++/11/bits/stl_construct.h ****   template<typename _T1>
 133:/usr/include/c++/11/bits/stl_construct.h ****     inline void
 134:/usr/include/c++/11/bits/stl_construct.h ****     _Construct_novalue(_T1* __p)
 135:/usr/include/c++/11/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1; }
 136:/usr/include/c++/11/bits/stl_construct.h **** 
 137:/usr/include/c++/11/bits/stl_construct.h ****   template<typename _ForwardIterator>
 138:/usr/include/c++/11/bits/stl_construct.h ****     _GLIBCXX20_CONSTEXPR void
 139:/usr/include/c++/11/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last);
 140:/usr/include/c++/11/bits/stl_construct.h **** 
 141:/usr/include/c++/11/bits/stl_construct.h ****   /**
 142:/usr/include/c++/11/bits/stl_construct.h ****    * Destroy the object pointed to by a pointer type.
 143:/usr/include/c++/11/bits/stl_construct.h ****    */
 144:/usr/include/c++/11/bits/stl_construct.h ****   template<typename _Tp>
 145:/usr/include/c++/11/bits/stl_construct.h ****     _GLIBCXX14_CONSTEXPR inline void
 146:/usr/include/c++/11/bits/stl_construct.h ****     _Destroy(_Tp* __pointer)
 147:/usr/include/c++/11/bits/stl_construct.h ****     {
 148:/usr/include/c++/11/bits/stl_construct.h **** #if __cplusplus > 201703L
 149:/usr/include/c++/11/bits/stl_construct.h ****       std::destroy_at(__pointer);
 150:/usr/include/c++/11/bits/stl_construct.h **** #else
 151:/usr/include/c++/11/bits/stl_construct.h ****       __pointer->~_Tp();
 152:/usr/include/c++/11/bits/stl_construct.h **** #endif
 153:/usr/include/c++/11/bits/stl_construct.h ****     }
 154:/usr/include/c++/11/bits/stl_construct.h **** 
 155:/usr/include/c++/11/bits/stl_construct.h ****   template<bool>
 156:/usr/include/c++/11/bits/stl_construct.h ****     struct _Destroy_aux
 157:/usr/include/c++/11/bits/stl_construct.h ****     {
 158:/usr/include/c++/11/bits/stl_construct.h ****       template<typename _ForwardIterator>
 159:/usr/include/c++/11/bits/stl_construct.h **** 	static _GLIBCXX20_CONSTEXPR void
 160:/usr/include/c++/11/bits/stl_construct.h **** 	__destroy(_ForwardIterator __first, _ForwardIterator __last)
 161:/usr/include/c++/11/bits/stl_construct.h **** 	{
 162:/usr/include/c++/11/bits/stl_construct.h **** 	  for (; __first != __last; ++__first)
 163:/usr/include/c++/11/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 164:/usr/include/c++/11/bits/stl_construct.h **** 	}
 165:/usr/include/c++/11/bits/stl_construct.h ****     };
 166:/usr/include/c++/11/bits/stl_construct.h **** 
 167:/usr/include/c++/11/bits/stl_construct.h ****   template<>
 168:/usr/include/c++/11/bits/stl_construct.h ****     struct _Destroy_aux<true>
 169:/usr/include/c++/11/bits/stl_construct.h ****     {
 170:/usr/include/c++/11/bits/stl_construct.h ****       template<typename _ForwardIterator>
 171:/usr/include/c++/11/bits/stl_construct.h ****         static void
 172:/usr/include/c++/11/bits/stl_construct.h ****         __destroy(_ForwardIterator, _ForwardIterator) { }
 173:/usr/include/c++/11/bits/stl_construct.h ****     };
 174:/usr/include/c++/11/bits/stl_construct.h **** 
 175:/usr/include/c++/11/bits/stl_construct.h ****   /**
 176:/usr/include/c++/11/bits/stl_construct.h ****    * Destroy a range of objects.  If the value_type of the object has
 177:/usr/include/c++/11/bits/stl_construct.h ****    * a trivial destructor, the compiler should optimize all of this
 178:/usr/include/c++/11/bits/stl_construct.h ****    * away, otherwise the objects' destructors must be invoked.
 179:/usr/include/c++/11/bits/stl_construct.h ****    */
 180:/usr/include/c++/11/bits/stl_construct.h ****   template<typename _ForwardIterator>
 181:/usr/include/c++/11/bits/stl_construct.h ****     _GLIBCXX20_CONSTEXPR inline void
 182:/usr/include/c++/11/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 8565              		.loc 12 182 5
 8566              		.cfi_startproc
 8567 0000 F30F1EFA 		endbr64
 8568 0004 55       		pushq	%rbp
 8569              		.cfi_def_cfa_offset 16
 8570              		.cfi_offset 6, -16
 8571 0005 4889E5   		movq	%rsp, %rbp
 8572              		.cfi_def_cfa_register 6
 8573 0008 4883EC10 		subq	$16, %rsp
 8574 000c 48897DF8 		movq	%rdi, -8(%rbp)
 8575 0010 488975F0 		movq	%rsi, -16(%rbp)
 183:/usr/include/c++/11/bits/stl_construct.h ****     {
 184:/usr/include/c++/11/bits/stl_construct.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 185:/usr/include/c++/11/bits/stl_construct.h ****                        _Value_type;
 186:/usr/include/c++/11/bits/stl_construct.h **** #if __cplusplus >= 201103L
 187:/usr/include/c++/11/bits/stl_construct.h ****       // A deleted destructor is trivial, this ensures we reject such types:
 188:/usr/include/c++/11/bits/stl_construct.h ****       static_assert(is_destructible<_Value_type>::value,
 189:/usr/include/c++/11/bits/stl_construct.h **** 		    "value type is destructible");
 190:/usr/include/c++/11/bits/stl_construct.h **** #endif
 191:/usr/include/c++/11/bits/stl_construct.h **** #if __cplusplus > 201703L && defined __cpp_lib_is_constant_evaluated
 192:/usr/include/c++/11/bits/stl_construct.h ****       if (std::is_constant_evaluated())
 193:/usr/include/c++/11/bits/stl_construct.h **** 	return _Destroy_aux<false>::__destroy(__first, __last);
 194:/usr/include/c++/11/bits/stl_construct.h **** #endif
 195:/usr/include/c++/11/bits/stl_construct.h ****       std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
 196:/usr/include/c++/11/bits/stl_construct.h **** 	__destroy(__first, __last);
 8576              		.loc 12 196 11
 8577 0014 488B55F0 		movq	-16(%rbp), %rdx
 8578 0018 488B45F8 		movq	-8(%rbp), %rax
 8579 001c 4889D6   		movq	%rdx, %rsi
 8580 001f 4889C7   		movq	%rax, %rdi
 8581 0022 E8000000 		call	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_
 8581      00
 197:/usr/include/c++/11/bits/stl_construct.h ****     }
 8582              		.loc 12 197 5
 8583 0027 90       		nop
 8584 0028 C9       		leave
 8585              		.cfi_def_cfa 7, 8
 8586 0029 C3       		ret
 8587              		.cfi_endproc
 8588              	.LFE1613:
 8590              		.section	.text._ZNSaIN8UnitTest18DeferredTestResultEEC2Ev,"axG",@progbits,_ZNSaIN8UnitTest18Deferr
 8591              		.align 2
 8592              		.weak	_ZNSaIN8UnitTest18DeferredTestResultEEC2Ev
 8594              	_ZNSaIN8UnitTest18DeferredTestResultEEC2Ev:
 8595              	.LFB1629:
 156:/usr/include/c++/11/bits/allocator.h **** 
 8596              		.loc 11 156 7
 8597              		.cfi_startproc
 8598 0000 F30F1EFA 		endbr64
 8599 0004 55       		pushq	%rbp
 8600              		.cfi_def_cfa_offset 16
 8601              		.cfi_offset 6, -16
 8602 0005 4889E5   		movq	%rsp, %rbp
 8603              		.cfi_def_cfa_register 6
 8604 0008 4883EC10 		subq	$16, %rsp
 8605 000c 48897DF8 		movq	%rdi, -8(%rbp)
 8606              	.LBB149:
 156:/usr/include/c++/11/bits/allocator.h **** 
 8607              		.loc 11 156 36
 8608 0010 488B45F8 		movq	-8(%rbp), %rax
 8609 0014 4889C7   		movq	%rax, %rdi
 8610 0017 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev
 8610      00
 8611              	.LBE149:
 156:/usr/include/c++/11/bits/allocator.h **** 
 8612              		.loc 11 156 38
 8613 001c 90       		nop
 8614 001d C9       		leave
 8615              		.cfi_def_cfa 7, 8
 8616 001e C3       		ret
 8617              		.cfi_endproc
 8618              	.LFE1629:
 8620              		.weak	_ZNSaIN8UnitTest18DeferredTestResultEEC1Ev
 8621              		.set	_ZNSaIN8UnitTest18DeferredTestResultEEC1Ev,_ZNSaIN8UnitTest18DeferredTestResultEEC2Ev
 8622              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE17_Vector_impl_dataC2Ev,
 8623              		.align 2
 8624              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE17_Vector_impl_dataC2Ev
 8626              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE17_Vector_impl_dataC2Ev:
 8627              	.LFB1632:
  97:/usr/include/c++/11/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 8628              		.loc 6 97 2
 8629              		.cfi_startproc
 8630 0000 F30F1EFA 		endbr64
 8631 0004 55       		pushq	%rbp
 8632              		.cfi_def_cfa_offset 16
 8633              		.cfi_offset 6, -16
 8634 0005 4889E5   		movq	%rsp, %rbp
 8635              		.cfi_def_cfa_register 6
 8636 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8637              	.LBB150:
  98:/usr/include/c++/11/bits/stl_vector.h **** 	{ }
 8638              		.loc 6 98 4
 8639 000c 488B45F8 		movq	-8(%rbp), %rax
 8640 0010 48C70000 		movq	$0, (%rax)
 8640      000000
  98:/usr/include/c++/11/bits/stl_vector.h **** 	{ }
 8641              		.loc 6 98 16
 8642 0017 488B45F8 		movq	-8(%rbp), %rax
 8643 001b 48C74008 		movq	$0, 8(%rax)
 8643      00000000 
  98:/usr/include/c++/11/bits/stl_vector.h **** 	{ }
 8644              		.loc 6 98 29
 8645 0023 488B45F8 		movq	-8(%rbp), %rax
 8646 0027 48C74010 		movq	$0, 16(%rax)
 8646      00000000 
 8647              	.LBE150:
  99:/usr/include/c++/11/bits/stl_vector.h **** 
 8648              		.loc 6 99 4
 8649 002f 90       		nop
 8650 0030 5D       		popq	%rbp
 8651              		.cfi_def_cfa 7, 8
 8652 0031 C3       		ret
 8653              		.cfi_endproc
 8654              	.LFE1632:
 8656              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE17_Vector_impl_dataC1Ev
 8657              		.set	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE17_Vector_impl_dataC1Ev,_ZNSt12_Ve
 8658              		.section	.text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev,"axG",@progbits,_
 8659              		.align 2
 8660              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev
 8662              	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev:
 8663              	.LFB1635:
 8664              		.file 13 "/usr/include/c++/11/ext/new_allocator.h"
   1:/usr/include/c++/11/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:/usr/include/c++/11/ext/new_allocator.h **** 
   3:/usr/include/c++/11/ext/new_allocator.h **** // Copyright (C) 2001-2021 Free Software Foundation, Inc.
   4:/usr/include/c++/11/ext/new_allocator.h **** //
   5:/usr/include/c++/11/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/11/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/11/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/11/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/11/ext/new_allocator.h **** // any later version.
  10:/usr/include/c++/11/ext/new_allocator.h **** 
  11:/usr/include/c++/11/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/11/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/11/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/11/ext/new_allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/11/ext/new_allocator.h **** 
  16:/usr/include/c++/11/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/11/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/11/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/11/ext/new_allocator.h **** 
  20:/usr/include/c++/11/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/11/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/11/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/11/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/11/ext/new_allocator.h **** 
  25:/usr/include/c++/11/ext/new_allocator.h **** /** @file ext/new_allocator.h
  26:/usr/include/c++/11/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/11/ext/new_allocator.h ****  */
  28:/usr/include/c++/11/ext/new_allocator.h **** 
  29:/usr/include/c++/11/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:/usr/include/c++/11/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:/usr/include/c++/11/ext/new_allocator.h **** 
  32:/usr/include/c++/11/ext/new_allocator.h **** #include <bits/c++config.h>
  33:/usr/include/c++/11/ext/new_allocator.h **** #include <new>
  34:/usr/include/c++/11/ext/new_allocator.h **** #include <bits/functexcept.h>
  35:/usr/include/c++/11/ext/new_allocator.h **** #include <bits/move.h>
  36:/usr/include/c++/11/ext/new_allocator.h **** #if __cplusplus >= 201103L
  37:/usr/include/c++/11/ext/new_allocator.h **** #include <type_traits>
  38:/usr/include/c++/11/ext/new_allocator.h **** #endif
  39:/usr/include/c++/11/ext/new_allocator.h **** 
  40:/usr/include/c++/11/ext/new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:/usr/include/c++/11/ext/new_allocator.h **** {
  42:/usr/include/c++/11/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/usr/include/c++/11/ext/new_allocator.h **** 
  44:/usr/include/c++/11/ext/new_allocator.h ****   /**
  45:/usr/include/c++/11/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per C++03 [20.4.1].
  46:/usr/include/c++/11/ext/new_allocator.h ****    *  @ingroup allocators
  47:/usr/include/c++/11/ext/new_allocator.h ****    *
  48:/usr/include/c++/11/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  49:/usr/include/c++/11/ext/new_allocator.h ****    *    - all allocation calls operator new
  50:/usr/include/c++/11/ext/new_allocator.h ****    *    - all deallocation calls operator delete
  51:/usr/include/c++/11/ext/new_allocator.h ****    *
  52:/usr/include/c++/11/ext/new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  53:/usr/include/c++/11/ext/new_allocator.h ****    */
  54:/usr/include/c++/11/ext/new_allocator.h ****   template<typename _Tp>
  55:/usr/include/c++/11/ext/new_allocator.h ****     class new_allocator
  56:/usr/include/c++/11/ext/new_allocator.h ****     {
  57:/usr/include/c++/11/ext/new_allocator.h ****     public:
  58:/usr/include/c++/11/ext/new_allocator.h ****       typedef _Tp        value_type;
  59:/usr/include/c++/11/ext/new_allocator.h ****       typedef std::size_t     size_type;
  60:/usr/include/c++/11/ext/new_allocator.h ****       typedef std::ptrdiff_t  difference_type;
  61:/usr/include/c++/11/ext/new_allocator.h **** #if __cplusplus <= 201703L
  62:/usr/include/c++/11/ext/new_allocator.h ****       typedef _Tp*       pointer;
  63:/usr/include/c++/11/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  64:/usr/include/c++/11/ext/new_allocator.h ****       typedef _Tp&       reference;
  65:/usr/include/c++/11/ext/new_allocator.h ****       typedef const _Tp& const_reference;
  66:/usr/include/c++/11/ext/new_allocator.h **** 
  67:/usr/include/c++/11/ext/new_allocator.h ****       template<typename _Tp1>
  68:/usr/include/c++/11/ext/new_allocator.h **** 	struct rebind
  69:/usr/include/c++/11/ext/new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  70:/usr/include/c++/11/ext/new_allocator.h **** #endif
  71:/usr/include/c++/11/ext/new_allocator.h **** 
  72:/usr/include/c++/11/ext/new_allocator.h **** #if __cplusplus >= 201103L
  73:/usr/include/c++/11/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  74:/usr/include/c++/11/ext/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  75:/usr/include/c++/11/ext/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  76:/usr/include/c++/11/ext/new_allocator.h **** #endif
  77:/usr/include/c++/11/ext/new_allocator.h **** 
  78:/usr/include/c++/11/ext/new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  79:/usr/include/c++/11/ext/new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:/usr/include/c++/11/ext/new_allocator.h **** 
  81:/usr/include/c++/11/ext/new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  82:/usr/include/c++/11/ext/new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  83:/usr/include/c++/11/ext/new_allocator.h **** 
  84:/usr/include/c++/11/ext/new_allocator.h ****       template<typename _Tp1>
  85:/usr/include/c++/11/ext/new_allocator.h **** 	_GLIBCXX20_CONSTEXPR
  86:/usr/include/c++/11/ext/new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  87:/usr/include/c++/11/ext/new_allocator.h **** 
  88:/usr/include/c++/11/ext/new_allocator.h **** #if __cplusplus <= 201703L
  89:/usr/include/c++/11/ext/new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8665              		.loc 13 89 7
 8666              		.cfi_startproc
 8667 0000 F30F1EFA 		endbr64
 8668 0004 55       		pushq	%rbp
 8669              		.cfi_def_cfa_offset 16
 8670              		.cfi_offset 6, -16
 8671 0005 4889E5   		movq	%rsp, %rbp
 8672              		.cfi_def_cfa_register 6
 8673 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8674              		.loc 13 89 48
 8675 000c 90       		nop
 8676 000d 5D       		popq	%rbp
 8677              		.cfi_def_cfa 7, 8
 8678 000e C3       		ret
 8679              		.cfi_endproc
 8680              	.LFE1635:
 8682              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED1Ev
 8683              		.set	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED1Ev,_ZN9__gnu_cxx13new_allocato
 8684              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEES2_E10deallocateER
 8685              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEES2_E10deallocateERS3_PS2_m
 8687              	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEES2_E10deallocateERS3_PS2_m:
 8688              	.LFB1637:
 8689              		.file 14 "/usr/include/c++/11/ext/alloc_traits.h"
   1:/usr/include/c++/11/ext/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/usr/include/c++/11/ext/alloc_traits.h **** 
   3:/usr/include/c++/11/ext/alloc_traits.h **** // Copyright (C) 2011-2021 Free Software Foundation, Inc.
   4:/usr/include/c++/11/ext/alloc_traits.h **** //
   5:/usr/include/c++/11/ext/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/11/ext/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/11/ext/alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/11/ext/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/11/ext/alloc_traits.h **** // any later version.
  10:/usr/include/c++/11/ext/alloc_traits.h **** 
  11:/usr/include/c++/11/ext/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/11/ext/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/11/ext/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/11/ext/alloc_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/11/ext/alloc_traits.h **** 
  16:/usr/include/c++/11/ext/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/11/ext/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/11/ext/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/11/ext/alloc_traits.h **** 
  20:/usr/include/c++/11/ext/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/11/ext/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/11/ext/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/11/ext/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/11/ext/alloc_traits.h **** 
  25:/usr/include/c++/11/ext/alloc_traits.h **** /** @file ext/alloc_traits.h
  26:/usr/include/c++/11/ext/alloc_traits.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/11/ext/alloc_traits.h ****  */
  28:/usr/include/c++/11/ext/alloc_traits.h **** 
  29:/usr/include/c++/11/ext/alloc_traits.h **** #ifndef _EXT_ALLOC_TRAITS_H
  30:/usr/include/c++/11/ext/alloc_traits.h **** #define _EXT_ALLOC_TRAITS_H 1
  31:/usr/include/c++/11/ext/alloc_traits.h **** 
  32:/usr/include/c++/11/ext/alloc_traits.h **** #pragma GCC system_header
  33:/usr/include/c++/11/ext/alloc_traits.h **** 
  34:/usr/include/c++/11/ext/alloc_traits.h **** # include <bits/alloc_traits.h>
  35:/usr/include/c++/11/ext/alloc_traits.h **** #if __cplusplus < 201103L
  36:/usr/include/c++/11/ext/alloc_traits.h **** # include <bits/allocator.h>  // for __alloc_swap
  37:/usr/include/c++/11/ext/alloc_traits.h **** #endif
  38:/usr/include/c++/11/ext/alloc_traits.h **** 
  39:/usr/include/c++/11/ext/alloc_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  40:/usr/include/c++/11/ext/alloc_traits.h **** {
  41:/usr/include/c++/11/ext/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  42:/usr/include/c++/11/ext/alloc_traits.h **** 
  43:/usr/include/c++/11/ext/alloc_traits.h **** /**
  44:/usr/include/c++/11/ext/alloc_traits.h ****  * @brief  Uniform interface to C++98 and C++11 allocators.
  45:/usr/include/c++/11/ext/alloc_traits.h ****  * @ingroup allocators
  46:/usr/include/c++/11/ext/alloc_traits.h **** */
  47:/usr/include/c++/11/ext/alloc_traits.h **** template<typename _Alloc, typename = typename _Alloc::value_type>
  48:/usr/include/c++/11/ext/alloc_traits.h ****   struct __alloc_traits
  49:/usr/include/c++/11/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  50:/usr/include/c++/11/ext/alloc_traits.h ****   : std::allocator_traits<_Alloc>
  51:/usr/include/c++/11/ext/alloc_traits.h **** #endif
  52:/usr/include/c++/11/ext/alloc_traits.h ****   {
  53:/usr/include/c++/11/ext/alloc_traits.h ****     typedef _Alloc allocator_type;
  54:/usr/include/c++/11/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  55:/usr/include/c++/11/ext/alloc_traits.h ****     typedef std::allocator_traits<_Alloc>           _Base_type;
  56:/usr/include/c++/11/ext/alloc_traits.h ****     typedef typename _Base_type::value_type         value_type;
  57:/usr/include/c++/11/ext/alloc_traits.h ****     typedef typename _Base_type::pointer            pointer;
  58:/usr/include/c++/11/ext/alloc_traits.h ****     typedef typename _Base_type::const_pointer      const_pointer;
  59:/usr/include/c++/11/ext/alloc_traits.h ****     typedef typename _Base_type::size_type          size_type;
  60:/usr/include/c++/11/ext/alloc_traits.h ****     typedef typename _Base_type::difference_type    difference_type;
  61:/usr/include/c++/11/ext/alloc_traits.h ****     // C++11 allocators do not define reference or const_reference
  62:/usr/include/c++/11/ext/alloc_traits.h ****     typedef value_type&                             reference;
  63:/usr/include/c++/11/ext/alloc_traits.h ****     typedef const value_type&                       const_reference;
  64:/usr/include/c++/11/ext/alloc_traits.h ****     using _Base_type::allocate;
  65:/usr/include/c++/11/ext/alloc_traits.h ****     using _Base_type::deallocate;
  66:/usr/include/c++/11/ext/alloc_traits.h ****     using _Base_type::construct;
  67:/usr/include/c++/11/ext/alloc_traits.h ****     using _Base_type::destroy;
  68:/usr/include/c++/11/ext/alloc_traits.h ****     using _Base_type::max_size;
  69:/usr/include/c++/11/ext/alloc_traits.h **** 
  70:/usr/include/c++/11/ext/alloc_traits.h ****   private:
  71:/usr/include/c++/11/ext/alloc_traits.h ****     template<typename _Ptr>
  72:/usr/include/c++/11/ext/alloc_traits.h ****       using __is_custom_pointer
  73:/usr/include/c++/11/ext/alloc_traits.h **** 	= std::__and_<std::is_same<pointer, _Ptr>,
  74:/usr/include/c++/11/ext/alloc_traits.h **** 		      std::__not_<std::is_pointer<_Ptr>>>;
  75:/usr/include/c++/11/ext/alloc_traits.h **** 
  76:/usr/include/c++/11/ext/alloc_traits.h ****   public:
  77:/usr/include/c++/11/ext/alloc_traits.h ****     // overload construct for non-standard pointer types
  78:/usr/include/c++/11/ext/alloc_traits.h ****     template<typename _Ptr, typename... _Args>
  79:/usr/include/c++/11/ext/alloc_traits.h ****       static _GLIBCXX14_CONSTEXPR
  80:/usr/include/c++/11/ext/alloc_traits.h ****       std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
  81:/usr/include/c++/11/ext/alloc_traits.h ****       construct(_Alloc& __a, _Ptr __p, _Args&&... __args)
  82:/usr/include/c++/11/ext/alloc_traits.h ****       noexcept(noexcept(_Base_type::construct(__a, std::__to_address(__p),
  83:/usr/include/c++/11/ext/alloc_traits.h **** 					      std::forward<_Args>(__args)...)))
  84:/usr/include/c++/11/ext/alloc_traits.h ****       {
  85:/usr/include/c++/11/ext/alloc_traits.h **** 	_Base_type::construct(__a, std::__to_address(__p),
  86:/usr/include/c++/11/ext/alloc_traits.h **** 			      std::forward<_Args>(__args)...);
  87:/usr/include/c++/11/ext/alloc_traits.h ****       }
  88:/usr/include/c++/11/ext/alloc_traits.h **** 
  89:/usr/include/c++/11/ext/alloc_traits.h ****     // overload destroy for non-standard pointer types
  90:/usr/include/c++/11/ext/alloc_traits.h ****     template<typename _Ptr>
  91:/usr/include/c++/11/ext/alloc_traits.h ****       static _GLIBCXX14_CONSTEXPR
  92:/usr/include/c++/11/ext/alloc_traits.h ****       std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
  93:/usr/include/c++/11/ext/alloc_traits.h ****       destroy(_Alloc& __a, _Ptr __p)
  94:/usr/include/c++/11/ext/alloc_traits.h ****       noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
  95:/usr/include/c++/11/ext/alloc_traits.h ****       { _Base_type::destroy(__a, std::__to_address(__p)); }
  96:/usr/include/c++/11/ext/alloc_traits.h **** 
  97:/usr/include/c++/11/ext/alloc_traits.h ****     static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
  98:/usr/include/c++/11/ext/alloc_traits.h ****     { return _Base_type::select_on_container_copy_construction(__a); }
  99:/usr/include/c++/11/ext/alloc_traits.h **** 
 100:/usr/include/c++/11/ext/alloc_traits.h ****     static _GLIBCXX14_CONSTEXPR void _S_on_swap(_Alloc& __a, _Alloc& __b)
 101:/usr/include/c++/11/ext/alloc_traits.h ****     { std::__alloc_on_swap(__a, __b); }
 102:/usr/include/c++/11/ext/alloc_traits.h **** 
 103:/usr/include/c++/11/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_copy_assign()
 104:/usr/include/c++/11/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_copy_assignment::value; }
 105:/usr/include/c++/11/ext/alloc_traits.h **** 
 106:/usr/include/c++/11/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_move_assign()
 107:/usr/include/c++/11/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_move_assignment::value; }
 108:/usr/include/c++/11/ext/alloc_traits.h **** 
 109:/usr/include/c++/11/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_swap()
 110:/usr/include/c++/11/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_swap::value; }
 111:/usr/include/c++/11/ext/alloc_traits.h **** 
 112:/usr/include/c++/11/ext/alloc_traits.h ****     static constexpr bool _S_always_equal()
 113:/usr/include/c++/11/ext/alloc_traits.h ****     { return _Base_type::is_always_equal::value; }
 114:/usr/include/c++/11/ext/alloc_traits.h **** 
 115:/usr/include/c++/11/ext/alloc_traits.h ****     static constexpr bool _S_nothrow_move()
 116:/usr/include/c++/11/ext/alloc_traits.h ****     { return _S_propagate_on_move_assign() || _S_always_equal(); }
 117:/usr/include/c++/11/ext/alloc_traits.h **** 
 118:/usr/include/c++/11/ext/alloc_traits.h ****     template<typename _Tp>
 119:/usr/include/c++/11/ext/alloc_traits.h ****       struct rebind
 120:/usr/include/c++/11/ext/alloc_traits.h ****       { typedef typename _Base_type::template rebind_alloc<_Tp> other; };
 121:/usr/include/c++/11/ext/alloc_traits.h **** #else // ! C++11
 122:/usr/include/c++/11/ext/alloc_traits.h **** 
 123:/usr/include/c++/11/ext/alloc_traits.h ****     typedef typename _Alloc::pointer                pointer;
 124:/usr/include/c++/11/ext/alloc_traits.h ****     typedef typename _Alloc::const_pointer          const_pointer;
 125:/usr/include/c++/11/ext/alloc_traits.h ****     typedef typename _Alloc::value_type             value_type;
 126:/usr/include/c++/11/ext/alloc_traits.h ****     typedef typename _Alloc::reference              reference;
 127:/usr/include/c++/11/ext/alloc_traits.h ****     typedef typename _Alloc::const_reference        const_reference;
 128:/usr/include/c++/11/ext/alloc_traits.h ****     typedef typename _Alloc::size_type              size_type;
 129:/usr/include/c++/11/ext/alloc_traits.h ****     typedef typename _Alloc::difference_type        difference_type;
 130:/usr/include/c++/11/ext/alloc_traits.h **** 
 131:/usr/include/c++/11/ext/alloc_traits.h ****     _GLIBCXX_NODISCARD static pointer
 132:/usr/include/c++/11/ext/alloc_traits.h ****     allocate(_Alloc& __a, size_type __n)
 133:/usr/include/c++/11/ext/alloc_traits.h ****     { return __a.allocate(__n); }
 134:/usr/include/c++/11/ext/alloc_traits.h **** 
 135:/usr/include/c++/11/ext/alloc_traits.h ****     template<typename _Hint>
 136:/usr/include/c++/11/ext/alloc_traits.h ****       _GLIBCXX_NODISCARD static pointer
 137:/usr/include/c++/11/ext/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, _Hint __hint)
 138:/usr/include/c++/11/ext/alloc_traits.h ****       { return __a.allocate(__n, __hint); }
 139:/usr/include/c++/11/ext/alloc_traits.h **** 
 140:/usr/include/c++/11/ext/alloc_traits.h ****     static void deallocate(_Alloc& __a, pointer __p, size_type __n)
 8690              		.loc 14 140 17
 8691              		.cfi_startproc
 8692 0000 F30F1EFA 		endbr64
 8693 0004 55       		pushq	%rbp
 8694              		.cfi_def_cfa_offset 16
 8695              		.cfi_offset 6, -16
 8696 0005 4889E5   		movq	%rsp, %rbp
 8697              		.cfi_def_cfa_register 6
 8698 0008 4883EC20 		subq	$32, %rsp
 8699 000c 48897DF8 		movq	%rdi, -8(%rbp)
 8700 0010 488975F0 		movq	%rsi, -16(%rbp)
 8701 0014 488955E8 		movq	%rdx, -24(%rbp)
 141:/usr/include/c++/11/ext/alloc_traits.h ****     { __a.deallocate(__p, __n); }
 8702              		.loc 14 141 21
 8703 0018 488B55E8 		movq	-24(%rbp), %rdx
 8704 001c 488B4DF0 		movq	-16(%rbp), %rcx
 8705 0020 488B45F8 		movq	-8(%rbp), %rax
 8706 0024 4889CE   		movq	%rcx, %rsi
 8707 0027 4889C7   		movq	%rax, %rdi
 8708 002a E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m
 8708      00
 8709              		.loc 14 141 33
 8710 002f 90       		nop
 8711 0030 C9       		leave
 8712              		.cfi_def_cfa 7, 8
 8713 0031 C3       		ret
 8714              		.cfi_endproc
 8715              	.LFE1637:
 8717              		.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_,"axG",
 8718              		.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_
 8720              	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_:
 8721              	.LFB1638:
 160:/usr/include/c++/11/bits/stl_construct.h **** 	{
 8722              		.loc 12 160 2
 8723              		.cfi_startproc
 8724 0000 F30F1EFA 		endbr64
 8725 0004 55       		pushq	%rbp
 8726              		.cfi_def_cfa_offset 16
 8727              		.cfi_offset 6, -16
 8728 0005 4889E5   		movq	%rsp, %rbp
 8729              		.cfi_def_cfa_register 6
 8730 0008 4883EC10 		subq	$16, %rsp
 8731 000c 48897DF8 		movq	%rdi, -8(%rbp)
 8732 0010 488975F0 		movq	%rsi, -16(%rbp)
 162:/usr/include/c++/11/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 8733              		.loc 12 162 4
 8734 0014 EB19     		jmp	.L451
 8735              	.L452:
 163:/usr/include/c++/11/bits/stl_construct.h **** 	}
 8736              		.loc 12 163 19 discriminator 2
 8737 0016 488B45F8 		movq	-8(%rbp), %rax
 8738 001a 4889C7   		movq	%rax, %rdi
 8739 001d E8000000 		call	_ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_
 8739      00
 8740 0022 4889C7   		movq	%rax, %rdi
 8741 0025 E8000000 		call	_ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_
 8741      00
 162:/usr/include/c++/11/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 8742              		.loc 12 162 4 discriminator 2
 8743 002a 48836DF8 		subq	$-128, -8(%rbp)
 8743      80
 8744              	.L451:
 162:/usr/include/c++/11/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 8745              		.loc 12 162 19 discriminator 1
 8746 002f 488B45F8 		movq	-8(%rbp), %rax
 8747 0033 483B45F0 		cmpq	-16(%rbp), %rax
 8748 0037 75DD     		jne	.L452
 164:/usr/include/c++/11/bits/stl_construct.h ****     };
 8749              		.loc 12 164 2
 8750 0039 90       		nop
 8751 003a 90       		nop
 8752 003b C9       		leave
 8753              		.cfi_def_cfa 7, 8
 8754 003c C3       		ret
 8755              		.cfi_endproc
 8756              	.LFE1638:
 8758              		.section	.text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev,"axG",@progbits,_
 8759              		.align 2
 8760              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev
 8762              	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev:
 8763              	.LFB1644:
  79:/usr/include/c++/11/ext/new_allocator.h **** 
 8764              		.loc 13 79 7
 8765              		.cfi_startproc
 8766 0000 F30F1EFA 		endbr64
 8767 0004 55       		pushq	%rbp
 8768              		.cfi_def_cfa_offset 16
 8769              		.cfi_offset 6, -16
 8770 0005 4889E5   		movq	%rsp, %rbp
 8771              		.cfi_def_cfa_register 6
 8772 0008 48897DF8 		movq	%rdi, -8(%rbp)
  79:/usr/include/c++/11/ext/new_allocator.h **** 
 8773              		.loc 13 79 47
 8774 000c 90       		nop
 8775 000d 5D       		popq	%rbp
 8776              		.cfi_def_cfa 7, 8
 8777 000e C3       		ret
 8778              		.cfi_endproc
 8779              	.LFE1644:
 8781              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC1Ev
 8782              		.set	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC1Ev,_ZN9__gnu_cxx13new_allocato
 8783              		.section	.text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m,"ax
 8784              		.align 2
 8785              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m
 8787              	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m:
 8788              	.LFB1646:
  90:/usr/include/c++/11/ext/new_allocator.h **** 
  91:/usr/include/c++/11/ext/new_allocator.h ****       pointer
  92:/usr/include/c++/11/ext/new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  93:/usr/include/c++/11/ext/new_allocator.h ****       { return std::__addressof(__x); }
  94:/usr/include/c++/11/ext/new_allocator.h **** 
  95:/usr/include/c++/11/ext/new_allocator.h ****       const_pointer
  96:/usr/include/c++/11/ext/new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  97:/usr/include/c++/11/ext/new_allocator.h ****       { return std::__addressof(__x); }
  98:/usr/include/c++/11/ext/new_allocator.h **** #endif
  99:/usr/include/c++/11/ext/new_allocator.h **** 
 100:/usr/include/c++/11/ext/new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
 101:/usr/include/c++/11/ext/new_allocator.h ****       // about what the return value is when __n == 0.
 102:/usr/include/c++/11/ext/new_allocator.h ****       _GLIBCXX_NODISCARD _Tp*
 103:/usr/include/c++/11/ext/new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 104:/usr/include/c++/11/ext/new_allocator.h ****       {
 105:/usr/include/c++/11/ext/new_allocator.h **** #if __cplusplus >= 201103L
 106:/usr/include/c++/11/ext/new_allocator.h **** 	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
 107:/usr/include/c++/11/ext/new_allocator.h **** 	 // 3308. std::allocator<void>().allocate(n)
 108:/usr/include/c++/11/ext/new_allocator.h **** 	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
 109:/usr/include/c++/11/ext/new_allocator.h **** #endif
 110:/usr/include/c++/11/ext/new_allocator.h **** 
 111:/usr/include/c++/11/ext/new_allocator.h **** 	if (__builtin_expect(__n > this->_M_max_size(), false))
 112:/usr/include/c++/11/ext/new_allocator.h **** 	  {
 113:/usr/include/c++/11/ext/new_allocator.h **** 	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
 114:/usr/include/c++/11/ext/new_allocator.h **** 	    // 3190. allocator::allocate sometimes returns too little storage
 115:/usr/include/c++/11/ext/new_allocator.h **** 	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
 116:/usr/include/c++/11/ext/new_allocator.h **** 	      std::__throw_bad_array_new_length();
 117:/usr/include/c++/11/ext/new_allocator.h **** 	    std::__throw_bad_alloc();
 118:/usr/include/c++/11/ext/new_allocator.h **** 	  }
 119:/usr/include/c++/11/ext/new_allocator.h **** 
 120:/usr/include/c++/11/ext/new_allocator.h **** #if __cpp_aligned_new
 121:/usr/include/c++/11/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 122:/usr/include/c++/11/ext/new_allocator.h **** 	  {
 123:/usr/include/c++/11/ext/new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 124:/usr/include/c++/11/ext/new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 125:/usr/include/c++/11/ext/new_allocator.h **** 	  }
 126:/usr/include/c++/11/ext/new_allocator.h **** #endif
 127:/usr/include/c++/11/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 128:/usr/include/c++/11/ext/new_allocator.h ****       }
 129:/usr/include/c++/11/ext/new_allocator.h **** 
 130:/usr/include/c++/11/ext/new_allocator.h ****       // __p is not permitted to be a null pointer.
 131:/usr/include/c++/11/ext/new_allocator.h ****       void
 132:/usr/include/c++/11/ext/new_allocator.h ****       deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
 8789              		.loc 13 132 7
 8790              		.cfi_startproc
 8791 0000 F30F1EFA 		endbr64
 8792 0004 55       		pushq	%rbp
 8793              		.cfi_def_cfa_offset 16
 8794              		.cfi_offset 6, -16
 8795 0005 4889E5   		movq	%rsp, %rbp
 8796              		.cfi_def_cfa_register 6
 8797 0008 4883EC20 		subq	$32, %rsp
 8798 000c 48897DF8 		movq	%rdi, -8(%rbp)
 8799 0010 488975F0 		movq	%rsi, -16(%rbp)
 8800 0014 488955E8 		movq	%rdx, -24(%rbp)
 133:/usr/include/c++/11/ext/new_allocator.h ****       {
 134:/usr/include/c++/11/ext/new_allocator.h **** #if __cpp_aligned_new
 135:/usr/include/c++/11/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 136:/usr/include/c++/11/ext/new_allocator.h **** 	  {
 137:/usr/include/c++/11/ext/new_allocator.h **** 	    ::operator delete(__p,
 138:/usr/include/c++/11/ext/new_allocator.h **** # if __cpp_sized_deallocation
 139:/usr/include/c++/11/ext/new_allocator.h **** 			      __t * sizeof(_Tp),
 140:/usr/include/c++/11/ext/new_allocator.h **** # endif
 141:/usr/include/c++/11/ext/new_allocator.h **** 			      std::align_val_t(alignof(_Tp)));
 142:/usr/include/c++/11/ext/new_allocator.h **** 	    return;
 143:/usr/include/c++/11/ext/new_allocator.h **** 	  }
 144:/usr/include/c++/11/ext/new_allocator.h **** #endif
 145:/usr/include/c++/11/ext/new_allocator.h **** 	::operator delete(__p
 8801              		.loc 13 145 19
 8802 0018 488B45F0 		movq	-16(%rbp), %rax
 8803 001c 4889C7   		movq	%rax, %rdi
 8804 001f E8000000 		call	_ZdlPv@PLT
 8804      00
 146:/usr/include/c++/11/ext/new_allocator.h **** #if __cpp_sized_deallocation
 147:/usr/include/c++/11/ext/new_allocator.h **** 			  , __t * sizeof(_Tp)
 148:/usr/include/c++/11/ext/new_allocator.h **** #endif
 149:/usr/include/c++/11/ext/new_allocator.h **** 			 );
 150:/usr/include/c++/11/ext/new_allocator.h ****       }
 8805              		.loc 13 150 7
 8806 0024 90       		nop
 8807 0025 C9       		leave
 8808              		.cfi_def_cfa 7, 8
 8809 0026 C3       		ret
 8810              		.cfi_endproc
 8811              	.LFE1646:
 8813              		.section	.text._ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_,"axG",@progbits,_ZSt11__a
 8814              		.weak	_ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_
 8816              	_ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_:
 8817              	.LFB1647:
 8818              		.file 15 "/usr/include/c++/11/bits/move.h"
   1:/usr/include/c++/11/bits/move.h **** // Move, forward and identity for C++11 + swap -*- C++ -*-
   2:/usr/include/c++/11/bits/move.h **** 
   3:/usr/include/c++/11/bits/move.h **** // Copyright (C) 2007-2021 Free Software Foundation, Inc.
   4:/usr/include/c++/11/bits/move.h **** //
   5:/usr/include/c++/11/bits/move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/11/bits/move.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/11/bits/move.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/11/bits/move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/11/bits/move.h **** // any later version.
  10:/usr/include/c++/11/bits/move.h **** 
  11:/usr/include/c++/11/bits/move.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/11/bits/move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/11/bits/move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/11/bits/move.h **** // GNU General Public License for more details.
  15:/usr/include/c++/11/bits/move.h **** 
  16:/usr/include/c++/11/bits/move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/11/bits/move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/11/bits/move.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/11/bits/move.h **** 
  20:/usr/include/c++/11/bits/move.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/11/bits/move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/11/bits/move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/11/bits/move.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/11/bits/move.h **** 
  25:/usr/include/c++/11/bits/move.h **** /** @file bits/move.h
  26:/usr/include/c++/11/bits/move.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/11/bits/move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:/usr/include/c++/11/bits/move.h ****  */
  29:/usr/include/c++/11/bits/move.h **** 
  30:/usr/include/c++/11/bits/move.h **** #ifndef _MOVE_H
  31:/usr/include/c++/11/bits/move.h **** #define _MOVE_H 1
  32:/usr/include/c++/11/bits/move.h **** 
  33:/usr/include/c++/11/bits/move.h **** #include <bits/c++config.h>
  34:/usr/include/c++/11/bits/move.h **** #if __cplusplus < 201103L
  35:/usr/include/c++/11/bits/move.h **** # include <bits/concept_check.h>
  36:/usr/include/c++/11/bits/move.h **** #endif
  37:/usr/include/c++/11/bits/move.h **** 
  38:/usr/include/c++/11/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  39:/usr/include/c++/11/bits/move.h **** {
  40:/usr/include/c++/11/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  41:/usr/include/c++/11/bits/move.h **** 
  42:/usr/include/c++/11/bits/move.h ****   // Used, in C++03 mode too, by allocators, etc.
  43:/usr/include/c++/11/bits/move.h ****   /**
  44:/usr/include/c++/11/bits/move.h ****    *  @brief Same as C++11 std::addressof
  45:/usr/include/c++/11/bits/move.h ****    *  @ingroup utilities
  46:/usr/include/c++/11/bits/move.h ****    */
  47:/usr/include/c++/11/bits/move.h ****   template<typename _Tp>
  48:/usr/include/c++/11/bits/move.h ****     inline _GLIBCXX_CONSTEXPR _Tp*
  49:/usr/include/c++/11/bits/move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8819              		.loc 15 49 5
 8820              		.cfi_startproc
 8821 0000 F30F1EFA 		endbr64
 8822 0004 55       		pushq	%rbp
 8823              		.cfi_def_cfa_offset 16
 8824              		.cfi_offset 6, -16
 8825 0005 4889E5   		movq	%rsp, %rbp
 8826              		.cfi_def_cfa_register 6
 8827 0008 48897DF8 		movq	%rdi, -8(%rbp)
  50:/usr/include/c++/11/bits/move.h ****     { return __builtin_addressof(__r); }
 8828              		.loc 15 50 37
 8829 000c 488B45F8 		movq	-8(%rbp), %rax
 8830              		.loc 15 50 40
 8831 0010 5D       		popq	%rbp
 8832              		.cfi_def_cfa 7, 8
 8833 0011 C3       		ret
 8834              		.cfi_endproc
 8835              	.LFE1647:
 8837              		.section	.text._ZN8UnitTest18DeferredTestResultD2Ev,"axG",@progbits,_ZN8UnitTest18DeferredTestResu
 8838              		.align 2
 8839              		.weak	_ZN8UnitTest18DeferredTestResultD2Ev
 8841              	_ZN8UnitTest18DeferredTestResultD2Ev:
 8842              	.LFB1650:
 8843              		.file 16 "../DeferredTestResult.h"
   1:../DeferredTestResult.h **** #ifndef UNITTEST_DEFERREDTESTRESULT_H
   2:../DeferredTestResult.h **** #define UNITTEST_DEFERREDTESTRESULT_H
   3:../DeferredTestResult.h **** 
   4:../DeferredTestResult.h **** #include <string>
   5:../DeferredTestResult.h **** #include <vector>
   6:../DeferredTestResult.h **** 
   7:../DeferredTestResult.h **** namespace UnitTest
   8:../DeferredTestResult.h **** {
   9:../DeferredTestResult.h **** 
  10:../DeferredTestResult.h **** struct DeferredTestResult
 8844              		.loc 16 10 8
 8845              		.cfi_startproc
 8846              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8847              		.cfi_lsda 0x1b,.LLSDA1650
 8848 0000 F30F1EFA 		endbr64
 8849 0004 55       		pushq	%rbp
 8850              		.cfi_def_cfa_offset 16
 8851              		.cfi_offset 6, -16
 8852 0005 4889E5   		movq	%rsp, %rbp
 8853              		.cfi_def_cfa_register 6
 8854 0008 53       		pushq	%rbx
 8855 0009 4883EC18 		subq	$24, %rsp
 8856              		.cfi_offset 3, -24
 8857 000d 48897DE8 		movq	%rdi, -24(%rbp)
 8858              	.LBB151:
 8859              		.loc 16 10 8
 8860 0011 488B45E8 		movq	-24(%rbp), %rax
 8861 0015 4883C060 		addq	$96, %rax
 8862 0019 4889C7   		movq	%rax, %rdi
 8863              	.LEHB223:
 8864 001c E8000000 		call	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev
 8864      00
 8865              	.LEHE223:
 8866              		.loc 16 10 8 is_stmt 0 discriminator 2
 8867 0021 488B45E8 		movq	-24(%rbp), %rax
 8868 0025 4883C040 		addq	$64, %rax
 8869 0029 4889C7   		movq	%rax, %rdi
 8870              	.LEHB224:
 8871 002c E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 8871      00
 8872              	.LEHE224:
 8873              		.loc 16 10 8 discriminator 4
 8874 0031 488B45E8 		movq	-24(%rbp), %rax
 8875 0035 4883C020 		addq	$32, %rax
 8876 0039 4889C7   		movq	%rax, %rdi
 8877              	.LEHB225:
 8878 003c E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 8878      00
 8879              	.LEHE225:
 8880              		.loc 16 10 8 discriminator 6
 8881 0041 488B45E8 		movq	-24(%rbp), %rax
 8882 0045 4889C7   		movq	%rax, %rdi
 8883              	.LEHB226:
 8884 0048 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 8884      00
 8885              	.LEHE226:
 8886              	.LBE151:
 8887 004d EB50     		jmp	.L464
 8888              	.L461:
 8889 004f F30F1EFA 		endbr64
 8890              	.LBB152:
 8891              		.loc 16 10 8
 8892 0053 4889C3   		movq	%rax, %rbx
 8893 0056 488B45E8 		movq	-24(%rbp), %rax
 8894 005a 4883C040 		addq	$64, %rax
 8895 005e 4889C7   		movq	%rax, %rdi
 8896 0061 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 8896      00
 8897 0066 EB07     		jmp	.L459
 8898              	.L462:
 8899 0068 F30F1EFA 		endbr64
 8900 006c 4889C3   		movq	%rax, %rbx
 8901              	.L459:
 8902              		.loc 16 10 8 discriminator 3
 8903 006f 488B45E8 		movq	-24(%rbp), %rax
 8904 0073 4883C020 		addq	$32, %rax
 8905 0077 4889C7   		movq	%rax, %rdi
 8906 007a E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 8906      00
 8907 007f EB07     		jmp	.L460
 8908              	.L463:
 8909 0081 F30F1EFA 		endbr64
 8910              		.loc 16 10 8
 8911 0085 4889C3   		movq	%rax, %rbx
 8912              	.L460:
 8913              		.loc 16 10 8 discriminator 5
 8914 0088 488B45E8 		movq	-24(%rbp), %rax
 8915 008c 4889C7   		movq	%rax, %rdi
 8916 008f E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 8916      00
 8917 0094 4889D8   		movq	%rbx, %rax
 8918 0097 4889C7   		movq	%rax, %rdi
 8919              	.LEHB227:
 8920 009a E8000000 		call	_Unwind_Resume@PLT
 8920      00
 8921              	.LEHE227:
 8922              	.L464:
 8923              	.LBE152:
 8924              		.loc 16 10 8
 8925 009f 488B5DF8 		movq	-8(%rbp), %rbx
 8926 00a3 C9       		leave
 8927              		.cfi_def_cfa 7, 8
 8928 00a4 C3       		ret
 8929              		.cfi_endproc
 8930              	.LFE1650:
 8931              		.section	.gcc_except_table
 8932              	.LLSDA1650:
 8933 0620 FF       		.byte	0xff
 8934 0621 FF       		.byte	0xff
 8935 0622 01       		.byte	0x1
 8936 0623 16       		.uleb128 .LLSDACSE1650-.LLSDACSB1650
 8937              	.LLSDACSB1650:
 8938 0624 1C       		.uleb128 .LEHB223-.LFB1650
 8939 0625 05       		.uleb128 .LEHE223-.LEHB223
 8940 0626 4F       		.uleb128 .L461-.LFB1650
 8941 0627 00       		.uleb128 0
 8942 0628 2C       		.uleb128 .LEHB224-.LFB1650
 8943 0629 05       		.uleb128 .LEHE224-.LEHB224
 8944 062a 68       		.uleb128 .L462-.LFB1650
 8945 062b 00       		.uleb128 0
 8946 062c 3C       		.uleb128 .LEHB225-.LFB1650
 8947 062d 05       		.uleb128 .LEHE225-.LEHB225
 8948 062e 8101     		.uleb128 .L463-.LFB1650
 8949 0630 00       		.uleb128 0
 8950 0631 48       		.uleb128 .LEHB226-.LFB1650
 8951 0632 05       		.uleb128 .LEHE226-.LEHB226
 8952 0633 00       		.uleb128 0
 8953 0634 00       		.uleb128 0
 8954 0635 9A01     		.uleb128 .LEHB227-.LFB1650
 8955 0637 05       		.uleb128 .LEHE227-.LEHB227
 8956 0638 00       		.uleb128 0
 8957 0639 00       		.uleb128 0
 8958              	.LLSDACSE1650:
 8959              		.section	.text._ZN8UnitTest18DeferredTestResultD2Ev,"axG",@progbits,_ZN8UnitTest18DeferredTestResu
 8961              		.weak	_ZN8UnitTest18DeferredTestResultD1Ev
 8962              		.set	_ZN8UnitTest18DeferredTestResultD1Ev,_ZN8UnitTest18DeferredTestResultD2Ev
 8963              		.section	.text._ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_,"axG",@progbits,_ZSt8_DestroyIN8
 8964              		.weak	_ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_
 8966              	_ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_:
 8967              	.LFB1648:
 146:/usr/include/c++/11/bits/stl_construct.h ****     {
 8968              		.loc 12 146 5 is_stmt 1
 8969              		.cfi_startproc
 8970 0000 F30F1EFA 		endbr64
 8971 0004 55       		pushq	%rbp
 8972              		.cfi_def_cfa_offset 16
 8973              		.cfi_offset 6, -16
 8974 0005 4889E5   		movq	%rsp, %rbp
 8975              		.cfi_def_cfa_register 6
 8976 0008 4883EC10 		subq	$16, %rsp
 8977 000c 48897DF8 		movq	%rdi, -8(%rbp)
 151:/usr/include/c++/11/bits/stl_construct.h **** #endif
 8978              		.loc 12 151 22
 8979 0010 488B45F8 		movq	-8(%rbp), %rax
 8980 0014 4889C7   		movq	%rax, %rdi
 8981 0017 E8000000 		call	_ZN8UnitTest18DeferredTestResultD1Ev
 8981      00
 153:/usr/include/c++/11/bits/stl_construct.h **** 
 8982              		.loc 12 153 5
 8983 001c 90       		nop
 8984 001d C9       		leave
 8985              		.cfi_def_cfa 7, 8
 8986 001e C3       		ret
 8987              		.cfi_endproc
 8988              	.LFE1648:
 8990              		.section	.text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE
 8991              		.align 2
 8992              		.weak	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev
 8994              	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:
 8995              	.LFB1653:
 678:/usr/include/c++/11/bits/stl_vector.h ****       {
 8996              		.loc 6 678 7
 8997              		.cfi_startproc
 8998              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8999              		.cfi_lsda 0x1b,.LLSDA1653
 9000 0000 F30F1EFA 		endbr64
 9001 0004 55       		pushq	%rbp
 9002              		.cfi_def_cfa_offset 16
 9003              		.cfi_offset 6, -16
 9004 0005 4889E5   		movq	%rsp, %rbp
 9005              		.cfi_def_cfa_register 6
 9006 0008 53       		pushq	%rbx
 9007 0009 4883EC18 		subq	$24, %rsp
 9008              		.cfi_offset 3, -24
 9009 000d 48897DE8 		movq	%rdi, -24(%rbp)
 9010              	.LBB153:
 681:/usr/include/c++/11/bits/stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
 9011              		.loc 6 681 28
 9012 0011 488B45E8 		movq	-24(%rbp), %rax
 9013 0015 4889C7   		movq	%rax, %rdi
 9014 0018 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_
 9014      00
 9015 001d 4889C2   		movq	%rax, %rdx
 680:/usr/include/c++/11/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 9016              		.loc 6 680 15
 9017 0020 488B45E8 		movq	-24(%rbp), %rax
 9018 0024 488B4808 		movq	8(%rax), %rcx
 9019 0028 488B45E8 		movq	-24(%rbp), %rax
 9020 002c 488B00   		movq	(%rax), %rax
 9021 002f 4889CE   		movq	%rcx, %rsi
 9022 0032 4889C7   		movq	%rax, %rdi
 9023              	.LEHB228:
 9024 0035 E8000000 		call	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT0
 9024      00
 9025              	.LEHE228:
 683:/usr/include/c++/11/bits/stl_vector.h **** 
 9026              		.loc 6 683 7
 9027 003a 488B45E8 		movq	-24(%rbp), %rax
 9028 003e 4889C7   		movq	%rax, %rdi
 9029              	.LEHB229:
 9030 0041 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2E
 9030      00
 9031              	.LEHE229:
 9032              	.LBE153:
 9033 0046 EB1E     		jmp	.L469
 9034              	.L468:
 9035 0048 F30F1EFA 		endbr64
 9036              	.LBB154:
 9037 004c 4889C3   		movq	%rax, %rbx
 9038 004f 488B45E8 		movq	-24(%rbp), %rax
 9039 0053 4889C7   		movq	%rax, %rdi
 9040 0056 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2E
 9040      00
 9041 005b 4889D8   		movq	%rbx, %rax
 9042 005e 4889C7   		movq	%rax, %rdi
 9043              	.LEHB230:
 9044 0061 E8000000 		call	_Unwind_Resume@PLT
 9044      00
 9045              	.LEHE230:
 9046              	.L469:
 9047              	.LBE154:
 9048 0066 488B5DF8 		movq	-8(%rbp), %rbx
 9049 006a C9       		leave
 9050              		.cfi_def_cfa 7, 8
 9051 006b C3       		ret
 9052              		.cfi_endproc
 9053              	.LFE1653:
 9054              		.section	.gcc_except_table
 9055              	.LLSDA1653:
 9056 063a FF       		.byte	0xff
 9057 063b FF       		.byte	0xff
 9058 063c 01       		.byte	0x1
 9059 063d 0C       		.uleb128 .LLSDACSE1653-.LLSDACSB1653
 9060              	.LLSDACSB1653:
 9061 063e 35       		.uleb128 .LEHB228-.LFB1653
 9062 063f 05       		.uleb128 .LEHE228-.LEHB228
 9063 0640 48       		.uleb128 .L468-.LFB1653
 9064 0641 00       		.uleb128 0
 9065 0642 41       		.uleb128 .LEHB229-.LFB1653
 9066 0643 05       		.uleb128 .LEHE229-.LEHB229
 9067 0644 00       		.uleb128 0
 9068 0645 00       		.uleb128 0
 9069 0646 61       		.uleb128 .LEHB230-.LFB1653
 9070 0647 05       		.uleb128 .LEHE230-.LEHB230
 9071 0648 00       		.uleb128 0
 9072 0649 00       		.uleb128 0
 9073              	.LLSDACSE1653:
 9074              		.section	.text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE
 9076              		.weak	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev
 9077              		.set	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev,_ZNSt
 9078              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 9079              		.align 2
 9080              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12
 9082              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector
 9083              	.LFB1657:
 128:/usr/include/c++/11/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 9084              		.loc 6 128 14
 9085              		.cfi_startproc
 9086 0000 F30F1EFA 		endbr64
 9087 0004 55       		pushq	%rbp
 9088              		.cfi_def_cfa_offset 16
 9089              		.cfi_offset 6, -16
 9090 0005 4889E5   		movq	%rsp, %rbp
 9091              		.cfi_def_cfa_register 6
 9092 0008 4883EC10 		subq	$16, %rsp
 9093 000c 48897DF8 		movq	%rdi, -8(%rbp)
 9094              	.LBB155:
 128:/usr/include/c++/11/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 9095              		.loc 6 128 14
 9096 0010 488B45F8 		movq	-8(%rbp), %rax
 9097 0014 4889C7   		movq	%rax, %rdi
 9098 0017 E8000000 		call	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev
 9098      00
 9099              	.LBE155:
 9100 001c 90       		nop
 9101 001d C9       		leave
 9102              		.cfi_def_cfa 7, 8
 9103 001e C3       		ret
 9104              		.cfi_endproc
 9105              	.LFE1657:
 9107              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12
 9108              		.set	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_
 9109              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 9110              		.align 2
 9111              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2
 9113              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:
 9114              	.LFB1659:
 333:/usr/include/c++/11/bits/stl_vector.h ****       {
 9115              		.loc 6 333 7
 9116              		.cfi_startproc
 9117              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9118              		.cfi_lsda 0x1b,.LLSDA1659
 9119 0000 F30F1EFA 		endbr64
 9120 0004 55       		pushq	%rbp
 9121              		.cfi_def_cfa_offset 16
 9122              		.cfi_offset 6, -16
 9123 0005 4889E5   		movq	%rsp, %rbp
 9124              		.cfi_def_cfa_register 6
 9125 0008 53       		pushq	%rbx
 9126 0009 4883EC18 		subq	$24, %rsp
 9127              		.cfi_offset 3, -24
 9128 000d 48897DE8 		movq	%rdi, -24(%rbp)
 9129              	.LBB156:
 336:/usr/include/c++/11/bits/stl_vector.h ****       }
 9130              		.loc 6 336 17
 9131 0011 488B45E8 		movq	-24(%rbp), %rax
 9132 0015 488B5010 		movq	16(%rax), %rdx
 336:/usr/include/c++/11/bits/stl_vector.h ****       }
 9133              		.loc 6 336 45
 9134 0019 488B45E8 		movq	-24(%rbp), %rax
 9135 001d 488B08   		movq	(%rax), %rcx
 336:/usr/include/c++/11/bits/stl_vector.h ****       }
 9136              		.loc 6 336 35
 9137 0020 4889D0   		movq	%rdx, %rax
 9138 0023 4829C8   		subq	%rcx, %rax
 9139 0026 48C1F803 		sarq	$3, %rax
 9140 002a 4889C2   		movq	%rax, %rdx
 9141 002d 48B8CDCC 		movabsq	$-3689348814741910323, %rax
 9141      CCCCCCCC 
 9141      CCCC
 9142 0037 480FAFC2 		imulq	%rdx, %rax
 335:/usr/include/c++/11/bits/stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 9143              		.loc 6 335 15
 9144 003b 4889C2   		movq	%rax, %rdx
 9145 003e 488B45E8 		movq	-24(%rbp), %rax
 9146 0042 488B08   		movq	(%rax), %rcx
 9147 0045 488B45E8 		movq	-24(%rbp), %rax
 9148 0049 4889CE   		movq	%rcx, %rsi
 9149 004c 4889C7   		movq	%rax, %rdi
 9150              	.LEHB231:
 9151 004f E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_
 9151      00
 9152              	.LEHE231:
 337:/usr/include/c++/11/bits/stl_vector.h **** 
 9153              		.loc 6 337 7
 9154 0054 488B45E8 		movq	-24(%rbp), %rax
 9155 0058 4889C7   		movq	%rax, %rdi
 9156 005b E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_
 9156      00
 9157              	.LBE156:
 9158 0060 EB1E     		jmp	.L474
 9159              	.L473:
 9160 0062 F30F1EFA 		endbr64
 9161              	.LBB157:
 9162 0066 4889C3   		movq	%rax, %rbx
 9163 0069 488B45E8 		movq	-24(%rbp), %rax
 9164 006d 4889C7   		movq	%rax, %rdi
 9165 0070 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_
 9165      00
 9166 0075 4889D8   		movq	%rbx, %rax
 9167 0078 4889C7   		movq	%rax, %rdi
 9168              	.LEHB232:
 9169 007b E8000000 		call	_Unwind_Resume@PLT
 9169      00
 9170              	.LEHE232:
 9171              	.L474:
 9172              	.LBE157:
 9173 0080 488B5DF8 		movq	-8(%rbp), %rbx
 9174 0084 C9       		leave
 9175              		.cfi_def_cfa 7, 8
 9176 0085 C3       		ret
 9177              		.cfi_endproc
 9178              	.LFE1659:
 9179              		.section	.gcc_except_table
 9180              	.LLSDA1659:
 9181 064a FF       		.byte	0xff
 9182 064b FF       		.byte	0xff
 9183 064c 01       		.byte	0x1
 9184 064d 08       		.uleb128 .LLSDACSE1659-.LLSDACSB1659
 9185              	.LLSDACSB1659:
 9186 064e 4F       		.uleb128 .LEHB231-.LFB1659
 9187 064f 05       		.uleb128 .LEHE231-.LEHB231
 9188 0650 62       		.uleb128 .L473-.LFB1659
 9189 0651 00       		.uleb128 0
 9190 0652 7B       		.uleb128 .LEHB232-.LFB1659
 9191 0653 05       		.uleb128 .LEHE232-.LEHB232
 9192 0654 00       		.uleb128 0
 9193 0655 00       		.uleb128 0
 9194              	.LLSDACSE1659:
 9195              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 9197              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1
 9198              		.set	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1E
 9199              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 9200              		.align 2
 9201              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19
 9203              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_M_get_
 9204              	.LFB1661:
 276:/usr/include/c++/11/bits/stl_vector.h ****       { return this->_M_impl; }
 9205              		.loc 6 276 7
 9206              		.cfi_startproc
 9207 0000 F30F1EFA 		endbr64
 9208 0004 55       		pushq	%rbp
 9209              		.cfi_def_cfa_offset 16
 9210              		.cfi_offset 6, -16
 9211 0005 4889E5   		movq	%rsp, %rbp
 9212              		.cfi_def_cfa_register 6
 9213 0008 48897DF8 		movq	%rdi, -8(%rbp)
 277:/usr/include/c++/11/bits/stl_vector.h **** 
 9214              		.loc 6 277 22
 9215 000c 488B45F8 		movq	-8(%rbp), %rax
 277:/usr/include/c++/11/bits/stl_vector.h **** 
 9216              		.loc 6 277 31
 9217 0010 5D       		popq	%rbp
 9218              		.cfi_def_cfa 7, 8
 9219 0011 C3       		ret
 9220              		.cfi_endproc
 9221              	.LFE1661:
 9223              		.section	.text._ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT
 9224              		.weak	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT
 9226              	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT0_E:
 9227              	.LFB1662:
 845:/usr/include/c++/11/bits/alloc_traits.h **** 	     allocator<_Tp>&)
 9228              		.loc 9 845 5
 9229              		.cfi_startproc
 9230 0000 F30F1EFA 		endbr64
 9231 0004 55       		pushq	%rbp
 9232              		.cfi_def_cfa_offset 16
 9233              		.cfi_offset 6, -16
 9234 0005 4889E5   		movq	%rsp, %rbp
 9235              		.cfi_def_cfa_register 6
 9236 0008 4883EC20 		subq	$32, %rsp
 9237 000c 48897DF8 		movq	%rdi, -8(%rbp)
 9238 0010 488975F0 		movq	%rsi, -16(%rbp)
 9239 0014 488955E8 		movq	%rdx, -24(%rbp)
 848:/usr/include/c++/11/bits/alloc_traits.h ****     }
 9240              		.loc 9 848 15
 9241 0018 488B55F0 		movq	-16(%rbp), %rdx
 9242 001c 488B45F8 		movq	-8(%rbp), %rax
 9243 0020 4889D6   		movq	%rdx, %rsi
 9244 0023 4889C7   		movq	%rax, %rdi
 9245 0026 E8000000 		call	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_
 9245      00
 9246              		.loc 9 849 5
 9247 002b 90       		nop
 9248 002c C9       		leave
 9249              		.cfi_def_cfa 7, 8
 9250 002d C3       		ret
 9251              		.cfi_endproc
 9252              	.LFE1662:
 9254              		.section	.text._ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev,"axG",@pr
 9255              		.align 2
 9256              		.weak	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev
 9258              	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:
 9259              	.LFB1664:
 9260              		.loc 11 174 7
 9261              		.cfi_startproc
 9262 0000 F30F1EFA 		endbr64
 9263 0004 55       		pushq	%rbp
 9264              		.cfi_def_cfa_offset 16
 9265              		.cfi_offset 6, -16
 9266 0005 4889E5   		movq	%rsp, %rbp
 9267              		.cfi_def_cfa_register 6
 9268 0008 4883EC10 		subq	$16, %rsp
 9269 000c 48897DF8 		movq	%rdi, -8(%rbp)
 9270              	.LBB158:
 9271              		.loc 11 174 39
 9272 0010 488B45F8 		movq	-8(%rbp), %rax
 9273 0014 4889C7   		movq	%rax, %rdi
 9274 0017 E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED
 9274      00
 9275              	.LBE158:
 9276 001c 90       		nop
 9277 001d C9       		leave
 9278              		.cfi_def_cfa 7, 8
 9279 001e C3       		ret
 9280              		.cfi_endproc
 9281              	.LFE1664:
 9283              		.weak	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev
 9284              		.set	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev,_ZNSaISt4pairIiNSt7
 9285              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 9286              		.align 2
 9287              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13
 9289              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_M_deal
 9290              	.LFB1666:
 350:/usr/include/c++/11/bits/stl_vector.h ****       {
 9291              		.loc 6 350 7
 9292              		.cfi_startproc
 9293 0000 F30F1EFA 		endbr64
 9294 0004 55       		pushq	%rbp
 9295              		.cfi_def_cfa_offset 16
 9296              		.cfi_offset 6, -16
 9297 0005 4889E5   		movq	%rsp, %rbp
 9298              		.cfi_def_cfa_register 6
 9299 0008 4883EC20 		subq	$32, %rsp
 9300 000c 48897DF8 		movq	%rdi, -8(%rbp)
 9301 0010 488975F0 		movq	%rsi, -16(%rbp)
 9302 0014 488955E8 		movq	%rdx, -24(%rbp)
 353:/usr/include/c++/11/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 9303              		.loc 6 353 2
 9304 0018 48837DF0 		cmpq	$0, -16(%rbp)
 9304      00
 9305 001d 7417     		je	.L481
 354:/usr/include/c++/11/bits/stl_vector.h ****       }
 9306              		.loc 6 354 20
 9307 001f 488B45F8 		movq	-8(%rbp), %rax
 354:/usr/include/c++/11/bits/stl_vector.h ****       }
 9308              		.loc 6 354 19
 9309 0023 488B55E8 		movq	-24(%rbp), %rdx
 9310 0027 488B4DF0 		movq	-16(%rbp), %rcx
 9311 002b 4889CE   		movq	%rcx, %rsi
 9312 002e 4889C7   		movq	%rax, %rdi
 9313 0031 E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE
 9313      00
 9314              	.L481:
 355:/usr/include/c++/11/bits/stl_vector.h **** 
 9315              		.loc 6 355 7
 9316 0036 90       		nop
 9317 0037 C9       		leave
 9318              		.cfi_def_cfa 7, 8
 9319 0038 C3       		ret
 9320              		.cfi_endproc
 9321              	.LFE1666:
 9323              		.section	.text._ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9
 9324              		.weak	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_
 9326              	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_:
 9327              	.LFB1667:
 182:/usr/include/c++/11/bits/stl_construct.h ****     {
 9328              		.loc 12 182 5
 9329              		.cfi_startproc
 9330 0000 F30F1EFA 		endbr64
 9331 0004 55       		pushq	%rbp
 9332              		.cfi_def_cfa_offset 16
 9333              		.cfi_offset 6, -16
 9334 0005 4889E5   		movq	%rsp, %rbp
 9335              		.cfi_def_cfa_register 6
 9336 0008 4883EC10 		subq	$16, %rsp
 9337 000c 48897DF8 		movq	%rdi, -8(%rbp)
 9338 0010 488975F0 		movq	%rsi, -16(%rbp)
 196:/usr/include/c++/11/bits/stl_construct.h ****     }
 9339              		.loc 12 196 11
 9340 0014 488B55F0 		movq	-16(%rbp), %rdx
 9341 0018 488B45F8 		movq	-8(%rbp), %rax
 9342 001c 4889D6   		movq	%rdx, %rsi
 9343 001f 4889C7   		movq	%rax, %rdi
 9344 0022 E8000000 		call	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESa
 9344      00
 9345              		.loc 12 197 5
 9346 0027 90       		nop
 9347 0028 C9       		leave
 9348              		.cfi_def_cfa 7, 8
 9349 0029 C3       		ret
 9350              		.cfi_endproc
 9351              	.LFE1667:
 9353              		.section	.text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcE
 9354              		.align 2
 9355              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE
 9357              	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:
 9358              	.LFB1669:
  89:/usr/include/c++/11/ext/new_allocator.h **** 
 9359              		.loc 13 89 7
 9360              		.cfi_startproc
 9361 0000 F30F1EFA 		endbr64
 9362 0004 55       		pushq	%rbp
 9363              		.cfi_def_cfa_offset 16
 9364              		.cfi_offset 6, -16
 9365 0005 4889E5   		movq	%rsp, %rbp
 9366              		.cfi_def_cfa_register 6
 9367 0008 48897DF8 		movq	%rdi, -8(%rbp)
  89:/usr/include/c++/11/ext/new_allocator.h **** 
 9368              		.loc 13 89 48
 9369 000c 90       		nop
 9370 000d 5D       		popq	%rbp
 9371              		.cfi_def_cfa 7, 8
 9372 000e C3       		ret
 9373              		.cfi_endproc
 9374              	.LFE1669:
 9376              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE
 9377              		.set	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED
 9378              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_trait
 9379              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcE
 9381              	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES8_
 9382              	.LFB1671:
 140:/usr/include/c++/11/ext/alloc_traits.h ****     { __a.deallocate(__p, __n); }
 9383              		.loc 14 140 17
 9384              		.cfi_startproc
 9385 0000 F30F1EFA 		endbr64
 9386 0004 55       		pushq	%rbp
 9387              		.cfi_def_cfa_offset 16
 9388              		.cfi_offset 6, -16
 9389 0005 4889E5   		movq	%rsp, %rbp
 9390              		.cfi_def_cfa_register 6
 9391 0008 4883EC20 		subq	$32, %rsp
 9392 000c 48897DF8 		movq	%rdi, -8(%rbp)
 9393 0010 488975F0 		movq	%rsi, -16(%rbp)
 9394 0014 488955E8 		movq	%rdx, -24(%rbp)
 9395              		.loc 14 141 21
 9396 0018 488B55E8 		movq	-24(%rbp), %rdx
 9397 001c 488B4DF0 		movq	-16(%rbp), %rcx
 9398 0020 488B45F8 		movq	-8(%rbp), %rax
 9399 0024 4889CE   		movq	%rcx, %rsi
 9400 0027 4889C7   		movq	%rax, %rdi
 9401 002a E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE1
 9401      00
 9402              		.loc 14 141 33
 9403 002f 90       		nop
 9404 0030 C9       		leave
 9405              		.cfi_def_cfa 7, 8
 9406 0031 C3       		ret
 9407              		.cfi_endproc
 9408              	.LFE1671:
 9410              		.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_t
 9411              		.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcES
 9413              	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 9414              	.LFB1672:
 160:/usr/include/c++/11/bits/stl_construct.h **** 	{
 9415              		.loc 12 160 2
 9416              		.cfi_startproc
 9417 0000 F30F1EFA 		endbr64
 9418 0004 55       		pushq	%rbp
 9419              		.cfi_def_cfa_offset 16
 9420              		.cfi_offset 6, -16
 9421 0005 4889E5   		movq	%rsp, %rbp
 9422              		.cfi_def_cfa_register 6
 9423 0008 4883EC10 		subq	$16, %rsp
 9424 000c 48897DF8 		movq	%rdi, -8(%rbp)
 9425 0010 488975F0 		movq	%rsi, -16(%rbp)
 162:/usr/include/c++/11/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 9426              		.loc 12 162 4
 9427 0014 EB19     		jmp	.L486
 9428              	.L487:
 163:/usr/include/c++/11/bits/stl_construct.h **** 	}
 9429              		.loc 12 163 19 discriminator 2
 9430 0016 488B45F8 		movq	-8(%rbp), %rax
 9431 001a 4889C7   		movq	%rax, %rdi
 9432 001d E8000000 		call	_ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_
 9432      00
 9433 0022 4889C7   		movq	%rax, %rdi
 9434 0025 E8000000 		call	_ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_
 9434      00
 162:/usr/include/c++/11/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 9435              		.loc 12 162 4 discriminator 2
 9436 002a 488345F8 		addq	$40, -8(%rbp)
 9436      28
 9437              	.L486:
 162:/usr/include/c++/11/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 9438              		.loc 12 162 19 discriminator 1
 9439 002f 488B45F8 		movq	-8(%rbp), %rax
 9440 0033 483B45F0 		cmpq	-16(%rbp), %rax
 9441 0037 75DD     		jne	.L487
 164:/usr/include/c++/11/bits/stl_construct.h ****     };
 9442              		.loc 12 164 2
 9443 0039 90       		nop
 9444 003a 90       		nop
 9445 003b C9       		leave
 9446              		.cfi_def_cfa 7, 8
 9447 003c C3       		ret
 9448              		.cfi_endproc
 9449              	.LFE1672:
 9451              		.section	.text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcE
 9452              		.align 2
 9453              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE
 9455              	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deall
 9456              	.LFB1673:
 132:/usr/include/c++/11/ext/new_allocator.h ****       {
 9457              		.loc 13 132 7
 9458              		.cfi_startproc
 9459 0000 F30F1EFA 		endbr64
 9460 0004 55       		pushq	%rbp
 9461              		.cfi_def_cfa_offset 16
 9462              		.cfi_offset 6, -16
 9463 0005 4889E5   		movq	%rsp, %rbp
 9464              		.cfi_def_cfa_register 6
 9465 0008 4883EC20 		subq	$32, %rsp
 9466 000c 48897DF8 		movq	%rdi, -8(%rbp)
 9467 0010 488975F0 		movq	%rsi, -16(%rbp)
 9468 0014 488955E8 		movq	%rdx, -24(%rbp)
 145:/usr/include/c++/11/ext/new_allocator.h **** #if __cpp_sized_deallocation
 9469              		.loc 13 145 19
 9470 0018 488B45F0 		movq	-16(%rbp), %rax
 9471 001c 4889C7   		movq	%rax, %rdi
 9472 001f E8000000 		call	_ZdlPv@PLT
 9472      00
 9473              		.loc 13 150 7
 9474 0024 90       		nop
 9475 0025 C9       		leave
 9476              		.cfi_def_cfa 7, 8
 9477 0026 C3       		ret
 9478              		.cfi_endproc
 9479              	.LFE1673:
 9481              		.section	.text._ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT
 9482              		.weak	_ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_
 9484              	_ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_:
 9485              	.LFB1674:
  49:/usr/include/c++/11/bits/move.h ****     { return __builtin_addressof(__r); }
 9486              		.loc 15 49 5
 9487              		.cfi_startproc
 9488 0000 F30F1EFA 		endbr64
 9489 0004 55       		pushq	%rbp
 9490              		.cfi_def_cfa_offset 16
 9491              		.cfi_offset 6, -16
 9492 0005 4889E5   		movq	%rsp, %rbp
 9493              		.cfi_def_cfa_register 6
 9494 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9495              		.loc 15 50 37
 9496 000c 488B45F8 		movq	-8(%rbp), %rax
 9497              		.loc 15 50 40
 9498 0010 5D       		popq	%rbp
 9499              		.cfi_def_cfa 7, 8
 9500 0011 C3       		ret
 9501              		.cfi_endproc
 9502              	.LFE1674:
 9504              		.section	.text._ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev,"axG",@progbi
 9505              		.align 2
 9506              		.weak	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev
 9508              	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:
 9509              	.LFB1677:
 9510              		.file 17 "/usr/include/c++/11/bits/stl_pair.h"
   1:/usr/include/c++/11/bits/stl_pair.h **** // Pair implementation -*- C++ -*-
   2:/usr/include/c++/11/bits/stl_pair.h **** 
   3:/usr/include/c++/11/bits/stl_pair.h **** // Copyright (C) 2001-2021 Free Software Foundation, Inc.
   4:/usr/include/c++/11/bits/stl_pair.h **** //
   5:/usr/include/c++/11/bits/stl_pair.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/11/bits/stl_pair.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/11/bits/stl_pair.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/11/bits/stl_pair.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/11/bits/stl_pair.h **** // any later version.
  10:/usr/include/c++/11/bits/stl_pair.h **** 
  11:/usr/include/c++/11/bits/stl_pair.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/11/bits/stl_pair.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/11/bits/stl_pair.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/11/bits/stl_pair.h **** // GNU General Public License for more details.
  15:/usr/include/c++/11/bits/stl_pair.h **** 
  16:/usr/include/c++/11/bits/stl_pair.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/11/bits/stl_pair.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/11/bits/stl_pair.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/11/bits/stl_pair.h **** 
  20:/usr/include/c++/11/bits/stl_pair.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/11/bits/stl_pair.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/11/bits/stl_pair.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/11/bits/stl_pair.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/11/bits/stl_pair.h **** 
  25:/usr/include/c++/11/bits/stl_pair.h **** /*
  26:/usr/include/c++/11/bits/stl_pair.h ****  *
  27:/usr/include/c++/11/bits/stl_pair.h ****  * Copyright (c) 1994
  28:/usr/include/c++/11/bits/stl_pair.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/11/bits/stl_pair.h ****  *
  30:/usr/include/c++/11/bits/stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/11/bits/stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/11/bits/stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/11/bits/stl_pair.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/11/bits/stl_pair.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/11/bits/stl_pair.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/11/bits/stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/11/bits/stl_pair.h ****  *
  38:/usr/include/c++/11/bits/stl_pair.h ****  *
  39:/usr/include/c++/11/bits/stl_pair.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/11/bits/stl_pair.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/11/bits/stl_pair.h ****  *
  42:/usr/include/c++/11/bits/stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/11/bits/stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/11/bits/stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/11/bits/stl_pair.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/11/bits/stl_pair.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/11/bits/stl_pair.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/11/bits/stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/11/bits/stl_pair.h ****  */
  50:/usr/include/c++/11/bits/stl_pair.h **** 
  51:/usr/include/c++/11/bits/stl_pair.h **** /** @file bits/stl_pair.h
  52:/usr/include/c++/11/bits/stl_pair.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/11/bits/stl_pair.h ****  *  Do not attempt to use it directly. @headername{utility}
  54:/usr/include/c++/11/bits/stl_pair.h ****  */
  55:/usr/include/c++/11/bits/stl_pair.h **** 
  56:/usr/include/c++/11/bits/stl_pair.h **** #ifndef _STL_PAIR_H
  57:/usr/include/c++/11/bits/stl_pair.h **** #define _STL_PAIR_H 1
  58:/usr/include/c++/11/bits/stl_pair.h **** 
  59:/usr/include/c++/11/bits/stl_pair.h **** #include <bits/move.h> // for std::move / std::forward, and std::swap
  60:/usr/include/c++/11/bits/stl_pair.h **** 
  61:/usr/include/c++/11/bits/stl_pair.h **** #if __cplusplus >= 201103L
  62:/usr/include/c++/11/bits/stl_pair.h **** # include <type_traits> // for std::__decay_and_strip, std::is_reference_v
  63:/usr/include/c++/11/bits/stl_pair.h **** #endif
  64:/usr/include/c++/11/bits/stl_pair.h **** #if __cplusplus > 201703L
  65:/usr/include/c++/11/bits/stl_pair.h **** # include <compare>
  66:/usr/include/c++/11/bits/stl_pair.h **** # define __cpp_lib_constexpr_utility 201811L
  67:/usr/include/c++/11/bits/stl_pair.h **** #endif
  68:/usr/include/c++/11/bits/stl_pair.h **** 
  69:/usr/include/c++/11/bits/stl_pair.h **** namespace std _GLIBCXX_VISIBILITY(default)
  70:/usr/include/c++/11/bits/stl_pair.h **** {
  71:/usr/include/c++/11/bits/stl_pair.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  72:/usr/include/c++/11/bits/stl_pair.h **** 
  73:/usr/include/c++/11/bits/stl_pair.h ****   /**
  74:/usr/include/c++/11/bits/stl_pair.h ****    *  @addtogroup utilities
  75:/usr/include/c++/11/bits/stl_pair.h ****    *  @{
  76:/usr/include/c++/11/bits/stl_pair.h ****    */
  77:/usr/include/c++/11/bits/stl_pair.h **** 
  78:/usr/include/c++/11/bits/stl_pair.h **** #if __cplusplus >= 201103L
  79:/usr/include/c++/11/bits/stl_pair.h ****   /// Tag type for piecewise construction of std::pair objects.
  80:/usr/include/c++/11/bits/stl_pair.h ****   struct piecewise_construct_t { explicit piecewise_construct_t() = default; };
  81:/usr/include/c++/11/bits/stl_pair.h **** 
  82:/usr/include/c++/11/bits/stl_pair.h ****   /// Tag for piecewise construction of std::pair objects.
  83:/usr/include/c++/11/bits/stl_pair.h ****   _GLIBCXX17_INLINE constexpr piecewise_construct_t piecewise_construct =
  84:/usr/include/c++/11/bits/stl_pair.h ****     piecewise_construct_t();
  85:/usr/include/c++/11/bits/stl_pair.h **** 
  86:/usr/include/c++/11/bits/stl_pair.h ****   /// @cond undocumented
  87:/usr/include/c++/11/bits/stl_pair.h **** 
  88:/usr/include/c++/11/bits/stl_pair.h ****   // Forward declarations.
  89:/usr/include/c++/11/bits/stl_pair.h ****   template<typename...>
  90:/usr/include/c++/11/bits/stl_pair.h ****     class tuple;
  91:/usr/include/c++/11/bits/stl_pair.h **** 
  92:/usr/include/c++/11/bits/stl_pair.h ****   template<size_t...>
  93:/usr/include/c++/11/bits/stl_pair.h ****     struct _Index_tuple;
  94:/usr/include/c++/11/bits/stl_pair.h **** 
  95:/usr/include/c++/11/bits/stl_pair.h ****   // Concept utility functions, reused in conditionally-explicit
  96:/usr/include/c++/11/bits/stl_pair.h ****   // constructors.
  97:/usr/include/c++/11/bits/stl_pair.h ****   // See PR 70437, don't look at is_constructible or
  98:/usr/include/c++/11/bits/stl_pair.h ****   // is_convertible if the types are the same to
  99:/usr/include/c++/11/bits/stl_pair.h ****   // avoid querying those properties for incomplete types.
 100:/usr/include/c++/11/bits/stl_pair.h ****   template <bool, typename _T1, typename _T2>
 101:/usr/include/c++/11/bits/stl_pair.h ****     struct _PCC
 102:/usr/include/c++/11/bits/stl_pair.h ****     {
 103:/usr/include/c++/11/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 104:/usr/include/c++/11/bits/stl_pair.h ****       static constexpr bool _ConstructiblePair()
 105:/usr/include/c++/11/bits/stl_pair.h ****       {
 106:/usr/include/c++/11/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 107:/usr/include/c++/11/bits/stl_pair.h **** 		      is_constructible<_T2, const _U2&>>::value;
 108:/usr/include/c++/11/bits/stl_pair.h ****       }
 109:/usr/include/c++/11/bits/stl_pair.h **** 
 110:/usr/include/c++/11/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 111:/usr/include/c++/11/bits/stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 112:/usr/include/c++/11/bits/stl_pair.h ****       {
 113:/usr/include/c++/11/bits/stl_pair.h **** 	return __and_<is_convertible<const _U1&, _T1>,
 114:/usr/include/c++/11/bits/stl_pair.h **** 		      is_convertible<const _U2&, _T2>>::value;
 115:/usr/include/c++/11/bits/stl_pair.h ****       }
 116:/usr/include/c++/11/bits/stl_pair.h **** 
 117:/usr/include/c++/11/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 118:/usr/include/c++/11/bits/stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 119:/usr/include/c++/11/bits/stl_pair.h ****       {
 120:/usr/include/c++/11/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 121:/usr/include/c++/11/bits/stl_pair.h **** 		      is_constructible<_T2, _U2&&>>::value;
 122:/usr/include/c++/11/bits/stl_pair.h ****       }
 123:/usr/include/c++/11/bits/stl_pair.h **** 
 124:/usr/include/c++/11/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 125:/usr/include/c++/11/bits/stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 126:/usr/include/c++/11/bits/stl_pair.h ****       {
 127:/usr/include/c++/11/bits/stl_pair.h **** 	return __and_<is_convertible<_U1&&, _T1>,
 128:/usr/include/c++/11/bits/stl_pair.h **** 		      is_convertible<_U2&&, _T2>>::value;
 129:/usr/include/c++/11/bits/stl_pair.h ****       }
 130:/usr/include/c++/11/bits/stl_pair.h **** 
 131:/usr/include/c++/11/bits/stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 132:/usr/include/c++/11/bits/stl_pair.h ****       static constexpr bool _CopyMovePair()
 133:/usr/include/c++/11/bits/stl_pair.h ****       {
 134:/usr/include/c++/11/bits/stl_pair.h **** 	using __do_converts = __and_<is_convertible<const _U1&, _T1>,
 135:/usr/include/c++/11/bits/stl_pair.h **** 				  is_convertible<_U2&&, _T2>>;
 136:/usr/include/c++/11/bits/stl_pair.h **** 	using __converts = typename conditional<__implicit,
 137:/usr/include/c++/11/bits/stl_pair.h **** 				       __do_converts,
 138:/usr/include/c++/11/bits/stl_pair.h **** 				       __not_<__do_converts>>::type;
 139:/usr/include/c++/11/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 140:/usr/include/c++/11/bits/stl_pair.h **** 		      is_constructible<_T2, _U2&&>,
 141:/usr/include/c++/11/bits/stl_pair.h **** 		      __converts
 142:/usr/include/c++/11/bits/stl_pair.h **** 		      >::value;
 143:/usr/include/c++/11/bits/stl_pair.h ****       }
 144:/usr/include/c++/11/bits/stl_pair.h **** 
 145:/usr/include/c++/11/bits/stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 146:/usr/include/c++/11/bits/stl_pair.h ****       static constexpr bool _MoveCopyPair()
 147:/usr/include/c++/11/bits/stl_pair.h ****       {
 148:/usr/include/c++/11/bits/stl_pair.h **** 	using __do_converts = __and_<is_convertible<_U1&&, _T1>,
 149:/usr/include/c++/11/bits/stl_pair.h **** 				  is_convertible<const _U2&, _T2>>;
 150:/usr/include/c++/11/bits/stl_pair.h **** 	using __converts = typename conditional<__implicit,
 151:/usr/include/c++/11/bits/stl_pair.h **** 				       __do_converts,
 152:/usr/include/c++/11/bits/stl_pair.h **** 				       __not_<__do_converts>>::type;
 153:/usr/include/c++/11/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 154:/usr/include/c++/11/bits/stl_pair.h **** 		      is_constructible<_T2, const _U2&&>,
 155:/usr/include/c++/11/bits/stl_pair.h **** 		      __converts
 156:/usr/include/c++/11/bits/stl_pair.h **** 		      >::value;
 157:/usr/include/c++/11/bits/stl_pair.h ****       }
 158:/usr/include/c++/11/bits/stl_pair.h ****   };
 159:/usr/include/c++/11/bits/stl_pair.h **** 
 160:/usr/include/c++/11/bits/stl_pair.h ****   template <typename _T1, typename _T2>
 161:/usr/include/c++/11/bits/stl_pair.h ****     struct _PCC<false, _T1, _T2>
 162:/usr/include/c++/11/bits/stl_pair.h ****     {
 163:/usr/include/c++/11/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 164:/usr/include/c++/11/bits/stl_pair.h ****       static constexpr bool _ConstructiblePair()
 165:/usr/include/c++/11/bits/stl_pair.h ****       {
 166:/usr/include/c++/11/bits/stl_pair.h **** 	return false;
 167:/usr/include/c++/11/bits/stl_pair.h ****       }
 168:/usr/include/c++/11/bits/stl_pair.h **** 
 169:/usr/include/c++/11/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 170:/usr/include/c++/11/bits/stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 171:/usr/include/c++/11/bits/stl_pair.h ****       {
 172:/usr/include/c++/11/bits/stl_pair.h **** 	return false;
 173:/usr/include/c++/11/bits/stl_pair.h ****       }
 174:/usr/include/c++/11/bits/stl_pair.h **** 
 175:/usr/include/c++/11/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 176:/usr/include/c++/11/bits/stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 177:/usr/include/c++/11/bits/stl_pair.h ****       {
 178:/usr/include/c++/11/bits/stl_pair.h **** 	return false;
 179:/usr/include/c++/11/bits/stl_pair.h ****       }
 180:/usr/include/c++/11/bits/stl_pair.h **** 
 181:/usr/include/c++/11/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 182:/usr/include/c++/11/bits/stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 183:/usr/include/c++/11/bits/stl_pair.h ****       {
 184:/usr/include/c++/11/bits/stl_pair.h **** 	return false;
 185:/usr/include/c++/11/bits/stl_pair.h ****       }
 186:/usr/include/c++/11/bits/stl_pair.h ****   };
 187:/usr/include/c++/11/bits/stl_pair.h **** #endif // C++11
 188:/usr/include/c++/11/bits/stl_pair.h **** 
 189:/usr/include/c++/11/bits/stl_pair.h ****   template<typename _U1, typename _U2> class __pair_base
 190:/usr/include/c++/11/bits/stl_pair.h ****   {
 191:/usr/include/c++/11/bits/stl_pair.h **** #if __cplusplus >= 201103L
 192:/usr/include/c++/11/bits/stl_pair.h ****     template<typename _T1, typename _T2> friend struct pair;
 193:/usr/include/c++/11/bits/stl_pair.h ****     __pair_base() = default;
 194:/usr/include/c++/11/bits/stl_pair.h ****     ~__pair_base() = default;
 195:/usr/include/c++/11/bits/stl_pair.h ****     __pair_base(const __pair_base&) = default;
 196:/usr/include/c++/11/bits/stl_pair.h ****     __pair_base& operator=(const __pair_base&) = delete;
 197:/usr/include/c++/11/bits/stl_pair.h **** #endif // C++11
 198:/usr/include/c++/11/bits/stl_pair.h ****   };
 199:/usr/include/c++/11/bits/stl_pair.h **** 
 200:/usr/include/c++/11/bits/stl_pair.h ****   /// @endcond
 201:/usr/include/c++/11/bits/stl_pair.h **** 
 202:/usr/include/c++/11/bits/stl_pair.h ****  /**
 203:/usr/include/c++/11/bits/stl_pair.h ****    *  @brief Struct holding two objects of arbitrary type.
 204:/usr/include/c++/11/bits/stl_pair.h ****    *
 205:/usr/include/c++/11/bits/stl_pair.h ****    *  @tparam _T1  Type of first object.
 206:/usr/include/c++/11/bits/stl_pair.h ****    *  @tparam _T2  Type of second object.
 207:/usr/include/c++/11/bits/stl_pair.h ****    *
 208:/usr/include/c++/11/bits/stl_pair.h ****    *  <https://gcc.gnu.org/onlinedocs/libstdc++/manual/utilities.html>
 209:/usr/include/c++/11/bits/stl_pair.h ****    */
 210:/usr/include/c++/11/bits/stl_pair.h ****   template<typename _T1, typename _T2>
 211:/usr/include/c++/11/bits/stl_pair.h ****     struct pair
 9511              		.loc 17 211 12
 9512              		.cfi_startproc
 9513 0000 F30F1EFA 		endbr64
 9514 0004 55       		pushq	%rbp
 9515              		.cfi_def_cfa_offset 16
 9516              		.cfi_offset 6, -16
 9517 0005 4889E5   		movq	%rsp, %rbp
 9518              		.cfi_def_cfa_register 6
 9519 0008 4883EC10 		subq	$16, %rsp
 9520 000c 48897DF8 		movq	%rdi, -8(%rbp)
 9521              	.LBB159:
 9522              		.loc 17 211 12
 9523 0010 488B45F8 		movq	-8(%rbp), %rax
 9524 0014 4883C008 		addq	$8, %rax
 9525 0018 4889C7   		movq	%rax, %rdi
 9526 001b E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 9526      00
 9527              	.LBE159:
 9528 0020 90       		nop
 9529 0021 C9       		leave
 9530              		.cfi_def_cfa 7, 8
 9531 0022 C3       		ret
 9532              		.cfi_endproc
 9533              	.LFE1677:
 9535              		.weak	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev
 9536              		.set	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev,_ZNSt4pairIiNSt7__cxx11
 9537              		.section	.text._ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_,"
 9538              		.weak	_ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_
 9540              	_ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_:
 9541              	.LFB1675:
 146:/usr/include/c++/11/bits/stl_construct.h ****     {
 9542              		.loc 12 146 5
 9543              		.cfi_startproc
 9544 0000 F30F1EFA 		endbr64
 9545 0004 55       		pushq	%rbp
 9546              		.cfi_def_cfa_offset 16
 9547              		.cfi_offset 6, -16
 9548 0005 4889E5   		movq	%rsp, %rbp
 9549              		.cfi_def_cfa_register 6
 9550 0008 4883EC10 		subq	$16, %rsp
 9551 000c 48897DF8 		movq	%rdi, -8(%rbp)
 151:/usr/include/c++/11/bits/stl_construct.h **** #endif
 9552              		.loc 12 151 22
 9553 0010 488B45F8 		movq	-8(%rbp), %rax
 9554 0014 4889C7   		movq	%rax, %rdi
 9555 0017 E8000000 		call	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev
 9555      00
 153:/usr/include/c++/11/bits/stl_construct.h **** 
 9556              		.loc 12 153 5
 9557 001c 90       		nop
 9558 001d C9       		leave
 9559              		.cfi_def_cfa 7, 8
 9560 001e C3       		ret
 9561              		.cfi_endproc
 9562              	.LFE1675:
 9564              		.section	.data.rel.ro.local,"aw"
 9565              		.align 8
 9568              	_ZTVN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 9569 0000 00000000 		.quad	0
 9569      00000000 
 9570 0008 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOf
 9570      00000000 
 9571 0010 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFa
 9571      00000000 
 9572 0018 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFa
 9572      00000000 
 9573 0020 00000000 		.quad	_ZNK8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfF
 9573      00000000 
 9574              		.text
 9575 3651 90       		.align 2
 9577              	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMe
 9578              	.LFB1680:
  98:TestDeferredTestReporter.cpp **** {
 9579              		.loc 3 98 1
 9580              		.cfi_startproc
 9581 3652 F30F1EFA 		endbr64
 9582 3656 55       		pushq	%rbp
 9583              		.cfi_def_cfa_offset 16
 9584              		.cfi_offset 6, -16
 9585 3657 4889E5   		movq	%rsp, %rbp
 9586              		.cfi_def_cfa_register 6
 9587 365a 4883EC10 		subq	$16, %rsp
 9588 365e 48897DF8 		movq	%rdi, -8(%rbp)
 9589              	.LBB160:
  98:TestDeferredTestReporter.cpp **** {
 9590              		.loc 3 98 1
 9591 3662 488D1500 		leaq	16+_ZTVN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopy
 9591      000000
 9592 3669 488B45F8 		movq	-8(%rbp), %rax
 9593 366d 488910   		movq	%rdx, (%rax)
 9594 3670 488B45F8 		movq	-8(%rbp), %rax
 9595 3674 4889C7   		movq	%rax, %rdi
 9596 3677 E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 9596      00
 9597              	.LBE160:
 9598 367c 90       		nop
 9599 367d C9       		leave
 9600              		.cfi_def_cfa 7, 8
 9601 367e C3       		ret
 9602              		.cfi_endproc
 9603              	.LFE1680:
 9605              		.set	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFai
 9606 367f 90       		.align 2
 9608              	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMe
 9609              	.LFB1682:
  98:TestDeferredTestReporter.cpp **** {
 9610              		.loc 3 98 1
 9611              		.cfi_startproc
 9612              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9613              		.cfi_lsda 0x1b,.LLSDA1682
 9614 3680 F30F1EFA 		endbr64
 9615 3684 55       		pushq	%rbp
 9616              		.cfi_def_cfa_offset 16
 9617              		.cfi_offset 6, -16
 9618 3685 4889E5   		movq	%rsp, %rbp
 9619              		.cfi_def_cfa_register 6
 9620 3688 53       		pushq	%rbx
 9621 3689 4883EC18 		subq	$24, %rsp
 9622              		.cfi_offset 3, -24
 9623 368d 48897DE8 		movq	%rdi, -24(%rbp)
  98:TestDeferredTestReporter.cpp **** {
 9624              		.loc 3 98 1
 9625 3691 488B45E8 		movq	-24(%rbp), %rax
 9626 3695 4889C7   		movq	%rax, %rdi
 9627              	.LEHB233:
 9628 3698 E8B5FFFF 		call	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFai
 9628      FF
 9629              	.LEHE233:
  98:TestDeferredTestReporter.cpp **** {
 9630              		.loc 3 98 1 is_stmt 0 discriminator 2
 9631 369d 488B45E8 		movq	-24(%rbp), %rax
 9632 36a1 4889C7   		movq	%rax, %rdi
 9633 36a4 E8000000 		call	_ZdlPv@PLT
 9633      00
 9634 36a9 EB1E     		jmp	.L497
 9635              	.L496:
 9636 36ab F30F1EFA 		endbr64
  98:TestDeferredTestReporter.cpp **** {
 9637              		.loc 3 98 1
 9638 36af 4889C3   		movq	%rax, %rbx
 9639 36b2 488B45E8 		movq	-24(%rbp), %rax
 9640 36b6 4889C7   		movq	%rax, %rdi
 9641 36b9 E8000000 		call	_ZdlPv@PLT
 9641      00
 9642 36be 4889D8   		movq	%rbx, %rax
 9643 36c1 4889C7   		movq	%rax, %rdi
 9644              	.LEHB234:
 9645 36c4 E8000000 		call	_Unwind_Resume@PLT
 9645      00
 9646              	.LEHE234:
 9647              	.L497:
 9648 36c9 488B5DF8 		movq	-8(%rbp), %rbx
 9649 36cd C9       		leave
 9650              		.cfi_def_cfa 7, 8
 9651 36ce C3       		ret
 9652              		.cfi_endproc
 9653              	.LFE1682:
 9654              		.section	.gcc_except_table
 9655              	.LLSDA1682:
 9656 0656 FF       		.byte	0xff
 9657 0657 FF       		.byte	0xff
 9658 0658 01       		.byte	0x1
 9659 0659 08       		.uleb128 .LLSDACSE1682-.LLSDACSB1682
 9660              	.LLSDACSB1682:
 9661 065a 18       		.uleb128 .LEHB233-.LFB1682
 9662 065b 05       		.uleb128 .LEHE233-.LEHB233
 9663 065c 2B       		.uleb128 .L496-.LFB1682
 9664 065d 00       		.uleb128 0
 9665 065e 44       		.uleb128 .LEHB234-.LFB1682
 9666 065f 05       		.uleb128 .LEHE234-.LEHB234
 9667 0660 00       		.uleb128 0
 9668 0661 00       		.uleb128 0
 9669              	.LLSDACSE1682:
 9670              		.text
 9672              		.section	.data.rel.ro.local
 9673              		.align 8
 9676              	_ZTVN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 9677 0028 00000000 		.quad	0
 9677      00000000 
 9678 0030 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 9678      00000000 
 9679 0038 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsF
 9679      00000000 
 9680 0040 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsF
 9680      00000000 
 9681 0048 00000000 		.quad	_ZNK8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetails
 9681      00000000 
 9682              		.text
 9683 36cf 90       		.align 2
 9685              	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMulti
 9686              	.LFB1684:
  83:TestDeferredTestReporter.cpp **** {
 9687              		.loc 3 83 1 is_stmt 1
 9688              		.cfi_startproc
 9689 36d0 F30F1EFA 		endbr64
 9690 36d4 55       		pushq	%rbp
 9691              		.cfi_def_cfa_offset 16
 9692              		.cfi_offset 6, -16
 9693 36d5 4889E5   		movq	%rsp, %rbp
 9694              		.cfi_def_cfa_register 6
 9695 36d8 4883EC10 		subq	$16, %rsp
 9696 36dc 48897DF8 		movq	%rdi, -8(%rbp)
 9697              	.LBB161:
  83:TestDeferredTestReporter.cpp **** {
 9698              		.loc 3 83 1
 9699 36e0 488D1500 		leaq	16+_ZTVN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDeta
 9699      000000
 9700 36e7 488B45F8 		movq	-8(%rbp), %rax
 9701 36eb 488910   		movq	%rdx, (%rax)
 9702 36ee 488B45F8 		movq	-8(%rbp), %rax
 9703 36f2 4889C7   		movq	%rax, %rdi
 9704 36f5 E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 9704      00
 9705              	.LBE161:
 9706 36fa 90       		nop
 9707 36fb C9       		leave
 9708              		.cfi_def_cfa 7, 8
 9709 36fc C3       		ret
 9710              		.cfi_endproc
 9711              	.LFE1684:
 9713              		.set	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsFo
 9714 36fd 90       		.align 2
 9716              	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMulti
 9717              	.LFB1686:
  83:TestDeferredTestReporter.cpp **** {
 9718              		.loc 3 83 1
 9719              		.cfi_startproc
 9720              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9721              		.cfi_lsda 0x1b,.LLSDA1686
 9722 36fe F30F1EFA 		endbr64
 9723 3702 55       		pushq	%rbp
 9724              		.cfi_def_cfa_offset 16
 9725              		.cfi_offset 6, -16
 9726 3703 4889E5   		movq	%rsp, %rbp
 9727              		.cfi_def_cfa_register 6
 9728 3706 53       		pushq	%rbx
 9729 3707 4883EC18 		subq	$24, %rsp
 9730              		.cfi_offset 3, -24
 9731 370b 48897DE8 		movq	%rdi, -24(%rbp)
  83:TestDeferredTestReporter.cpp **** {
 9732              		.loc 3 83 1
 9733 370f 488B45E8 		movq	-24(%rbp), %rax
 9734 3713 4889C7   		movq	%rax, %rdi
 9735              	.LEHB235:
 9736 3716 E8B5FFFF 		call	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsFo
 9736      FF
 9737              	.LEHE235:
  83:TestDeferredTestReporter.cpp **** {
 9738              		.loc 3 83 1 is_stmt 0 discriminator 2
 9739 371b 488B45E8 		movq	-24(%rbp), %rax
 9740 371f 4889C7   		movq	%rax, %rdi
 9741 3722 E8000000 		call	_ZdlPv@PLT
 9741      00
 9742 3727 EB1E     		jmp	.L502
 9743              	.L501:
 9744 3729 F30F1EFA 		endbr64
  83:TestDeferredTestReporter.cpp **** {
 9745              		.loc 3 83 1
 9746 372d 4889C3   		movq	%rax, %rbx
 9747 3730 488B45E8 		movq	-24(%rbp), %rax
 9748 3734 4889C7   		movq	%rax, %rdi
 9749 3737 E8000000 		call	_ZdlPv@PLT
 9749      00
 9750 373c 4889D8   		movq	%rbx, %rax
 9751 373f 4889C7   		movq	%rax, %rdi
 9752              	.LEHB236:
 9753 3742 E8000000 		call	_Unwind_Resume@PLT
 9753      00
 9754              	.LEHE236:
 9755              	.L502:
 9756 3747 488B5DF8 		movq	-8(%rbp), %rbx
 9757 374b C9       		leave
 9758              		.cfi_def_cfa 7, 8
 9759 374c C3       		ret
 9760              		.cfi_endproc
 9761              	.LFE1686:
 9762              		.section	.gcc_except_table
 9763              	.LLSDA1686:
 9764 0662 FF       		.byte	0xff
 9765 0663 FF       		.byte	0xff
 9766 0664 01       		.byte	0x1
 9767 0665 08       		.uleb128 .LLSDACSE1686-.LLSDACSB1686
 9768              	.LLSDACSB1686:
 9769 0666 18       		.uleb128 .LEHB235-.LFB1686
 9770 0667 05       		.uleb128 .LEHE235-.LEHB235
 9771 0668 2B       		.uleb128 .L501-.LFB1686
 9772 0669 00       		.uleb128 0
 9773 066a 44       		.uleb128 .LEHB236-.LFB1686
 9774 066b 05       		.uleb128 .LEHE236-.LEHB236
 9775 066c 00       		.uleb128 0
 9776 066d 00       		.uleb128 0
 9777              	.LLSDACSE1686:
 9778              		.text
 9780              		.section	.data.rel.ro.local
 9781              		.align 8
 9784              	_ZTVN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsE:
 9785 0050 00000000 		.quad	0
 9785      00000000 
 9786 0058 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 9786      00000000 
 9787 0060 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD
 9787      00000000 
 9788 0068 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD
 9788      00000000 
 9789 0070 00000000 		.quad	_ZNK8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetails
 9789      00000000 
 9790              		.text
 9791 374d 90       		.align 2
 9793              	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD2Ev:
 9794              	.LFB1688:
  71:TestDeferredTestReporter.cpp **** {
 9795              		.loc 3 71 1 is_stmt 1
 9796              		.cfi_startproc
 9797 374e F30F1EFA 		endbr64
 9798 3752 55       		pushq	%rbp
 9799              		.cfi_def_cfa_offset 16
 9800              		.cfi_offset 6, -16
 9801 3753 4889E5   		movq	%rsp, %rbp
 9802              		.cfi_def_cfa_register 6
 9803 3756 4883EC10 		subq	$16, %rsp
 9804 375a 48897DF8 		movq	%rdi, -8(%rbp)
 9805              	.LBB162:
  71:TestDeferredTestReporter.cpp **** {
 9806              		.loc 3 71 1
 9807 375e 488D1500 		leaq	16+_ZTVN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDeta
 9807      000000
 9808 3765 488B45F8 		movq	-8(%rbp), %rax
 9809 3769 488910   		movq	%rdx, (%rax)
 9810 376c 488B45F8 		movq	-8(%rbp), %rax
 9811 3770 4889C7   		movq	%rax, %rdi
 9812 3773 E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 9812      00
 9813              	.LBE162:
 9814 3778 90       		nop
 9815 3779 C9       		leave
 9816              		.cfi_def_cfa 7, 8
 9817 377a C3       		ret
 9818              		.cfi_endproc
 9819              	.LFE1688:
 9821              		.set	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD1
 9822 377b 90       		.align 2
 9824              	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD0Ev:
 9825              	.LFB1690:
  71:TestDeferredTestReporter.cpp **** {
 9826              		.loc 3 71 1
 9827              		.cfi_startproc
 9828              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9829              		.cfi_lsda 0x1b,.LLSDA1690
 9830 377c F30F1EFA 		endbr64
 9831 3780 55       		pushq	%rbp
 9832              		.cfi_def_cfa_offset 16
 9833              		.cfi_offset 6, -16
 9834 3781 4889E5   		movq	%rsp, %rbp
 9835              		.cfi_def_cfa_register 6
 9836 3784 53       		pushq	%rbx
 9837 3785 4883EC18 		subq	$24, %rsp
 9838              		.cfi_offset 3, -24
 9839 3789 48897DE8 		movq	%rdi, -24(%rbp)
  71:TestDeferredTestReporter.cpp **** {
 9840              		.loc 3 71 1
 9841 378d 488B45E8 		movq	-24(%rbp), %rax
 9842 3791 4889C7   		movq	%rax, %rdi
 9843              	.LEHB237:
 9844 3794 E8B5FFFF 		call	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD1
 9844      FF
 9845              	.LEHE237:
  71:TestDeferredTestReporter.cpp **** {
 9846              		.loc 3 71 1 is_stmt 0 discriminator 2
 9847 3799 488B45E8 		movq	-24(%rbp), %rax
 9848 379d 4889C7   		movq	%rax, %rdi
 9849 37a0 E8000000 		call	_ZdlPv@PLT
 9849      00
 9850 37a5 EB1E     		jmp	.L507
 9851              	.L506:
 9852 37a7 F30F1EFA 		endbr64
  71:TestDeferredTestReporter.cpp **** {
 9853              		.loc 3 71 1
 9854 37ab 4889C3   		movq	%rax, %rbx
 9855 37ae 488B45E8 		movq	-24(%rbp), %rax
 9856 37b2 4889C7   		movq	%rax, %rdi
 9857 37b5 E8000000 		call	_ZdlPv@PLT
 9857      00
 9858 37ba 4889D8   		movq	%rbx, %rax
 9859 37bd 4889C7   		movq	%rax, %rdi
 9860              	.LEHB238:
 9861 37c0 E8000000 		call	_Unwind_Resume@PLT
 9861      00
 9862              	.LEHE238:
 9863              	.L507:
 9864 37c5 488B5DF8 		movq	-8(%rbp), %rbx
 9865 37c9 C9       		leave
 9866              		.cfi_def_cfa 7, 8
 9867 37ca C3       		ret
 9868              		.cfi_endproc
 9869              	.LFE1690:
 9870              		.section	.gcc_except_table
 9871              	.LLSDA1690:
 9872 066e FF       		.byte	0xff
 9873 066f FF       		.byte	0xff
 9874 0670 01       		.byte	0x1
 9875 0671 08       		.uleb128 .LLSDACSE1690-.LLSDACSB1690
 9876              	.LLSDACSB1690:
 9877 0672 18       		.uleb128 .LEHB237-.LFB1690
 9878 0673 05       		.uleb128 .LEHE237-.LEHB237
 9879 0674 2B       		.uleb128 .L506-.LFB1690
 9880 0675 00       		.uleb128 0
 9881 0676 44       		.uleb128 .LEHB238-.LFB1690
 9882 0677 05       		.uleb128 .LEHE238-.LEHB238
 9883 0678 00       		.uleb128 0
 9884 0679 00       		.uleb128 0
 9885              	.LLSDACSE1690:
 9886              		.text
 9888              		.section	.data.rel.ro.local
 9889              		.align 8
 9892              	_ZTVN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE:
 9893 0078 00000000 		.quad	0
 9893      00000000 
 9894 0080 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
 9894      00000000 
 9895 0088 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD1Ev
 9895      00000000 
 9896 0090 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD0Ev
 9896      00000000 
 9897 0098 00000000 		.quad	_ZNK8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTime7Ru
 9897      00000000 
 9898              		.text
 9899 37cb 90       		.align 2
 9901              	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD2Ev:
 9902              	.LFB1692:
  61:TestDeferredTestReporter.cpp **** {
 9903              		.loc 3 61 1 is_stmt 1
 9904              		.cfi_startproc
 9905 37cc F30F1EFA 		endbr64
 9906 37d0 55       		pushq	%rbp
 9907              		.cfi_def_cfa_offset 16
 9908              		.cfi_offset 6, -16
 9909 37d1 4889E5   		movq	%rsp, %rbp
 9910              		.cfi_def_cfa_register 6
 9911 37d4 4883EC10 		subq	$16, %rsp
 9912 37d8 48897DF8 		movq	%rdi, -8(%rbp)
 9913              	.LBB163:
  61:TestDeferredTestReporter.cpp **** {
 9914              		.loc 3 61 1
 9915 37dc 488D1500 		leaq	16+_ZTVN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTime
 9915      000000
 9916 37e3 488B45F8 		movq	-8(%rbp), %rax
 9917 37e7 488910   		movq	%rdx, (%rax)
 9918 37ea 488B45F8 		movq	-8(%rbp), %rax
 9919 37ee 4889C7   		movq	%rax, %rdi
 9920 37f1 E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 9920      00
 9921              	.LBE163:
 9922 37f6 90       		nop
 9923 37f7 C9       		leave
 9924              		.cfi_def_cfa 7, 8
 9925 37f8 C3       		ret
 9926              		.cfi_endproc
 9927              	.LFE1692:
 9929              		.set	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD1Ev,
 9930 37f9 90       		.align 2
 9932              	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD0Ev:
 9933              	.LFB1694:
  61:TestDeferredTestReporter.cpp **** {
 9934              		.loc 3 61 1
 9935              		.cfi_startproc
 9936              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9937              		.cfi_lsda 0x1b,.LLSDA1694
 9938 37fa F30F1EFA 		endbr64
 9939 37fe 55       		pushq	%rbp
 9940              		.cfi_def_cfa_offset 16
 9941              		.cfi_offset 6, -16
 9942 37ff 4889E5   		movq	%rsp, %rbp
 9943              		.cfi_def_cfa_register 6
 9944 3802 53       		pushq	%rbx
 9945 3803 4883EC18 		subq	$24, %rsp
 9946              		.cfi_offset 3, -24
 9947 3807 48897DE8 		movq	%rdi, -24(%rbp)
  61:TestDeferredTestReporter.cpp **** {
 9948              		.loc 3 61 1
 9949 380b 488B45E8 		movq	-24(%rbp), %rax
 9950 380f 4889C7   		movq	%rax, %rdi
 9951              	.LEHB239:
 9952 3812 E8B5FFFF 		call	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD1Ev
 9952      FF
 9953              	.LEHE239:
  61:TestDeferredTestReporter.cpp **** {
 9954              		.loc 3 61 1 is_stmt 0 discriminator 2
 9955 3817 488B45E8 		movq	-24(%rbp), %rax
 9956 381b 4889C7   		movq	%rax, %rdi
 9957 381e E8000000 		call	_ZdlPv@PLT
 9957      00
 9958 3823 EB1E     		jmp	.L512
 9959              	.L511:
 9960 3825 F30F1EFA 		endbr64
  61:TestDeferredTestReporter.cpp **** {
 9961              		.loc 3 61 1
 9962 3829 4889C3   		movq	%rax, %rbx
 9963 382c 488B45E8 		movq	-24(%rbp), %rax
 9964 3830 4889C7   		movq	%rax, %rdi
 9965 3833 E8000000 		call	_ZdlPv@PLT
 9965      00
 9966 3838 4889D8   		movq	%rbx, %rax
 9967 383b 4889C7   		movq	%rax, %rdi
 9968              	.LEHB240:
 9969 383e E8000000 		call	_Unwind_Resume@PLT
 9969      00
 9970              	.LEHE240:
 9971              	.L512:
 9972 3843 488B5DF8 		movq	-8(%rbp), %rbx
 9973 3847 C9       		leave
 9974              		.cfi_def_cfa 7, 8
 9975 3848 C3       		ret
 9976              		.cfi_endproc
 9977              	.LFE1694:
 9978              		.section	.gcc_except_table
 9979              	.LLSDA1694:
 9980 067a FF       		.byte	0xff
 9981 067b FF       		.byte	0xff
 9982 067c 01       		.byte	0x1
 9983 067d 08       		.uleb128 .LLSDACSE1694-.LLSDACSB1694
 9984              	.LLSDACSB1694:
 9985 067e 18       		.uleb128 .LEHB239-.LFB1694
 9986 067f 05       		.uleb128 .LEHE239-.LEHB239
 9987 0680 2B       		.uleb128 .L511-.LFB1694
 9988 0681 00       		.uleb128 0
 9989 0682 44       		.uleb128 .LEHB240-.LFB1694
 9990 0683 05       		.uleb128 .LEHE240-.LEHB240
 9991 0684 00       		.uleb128 0
 9992 0685 00       		.uleb128 0
 9993              	.LLSDACSE1694:
 9994              		.text
 9996              		.section	.data.rel.ro.local
 9997              		.align 8
 10000              	_ZTVN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 10001 00a0 00000000 		.quad	0
 10001      00000000 
 10002 00a8 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestName
 10002      00000000 
 10003 00b0 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAn
 10003      00000000 
 10004 00b8 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAn
 10004      00000000 
 10005 00c0 00000000 		.quad	_ZNK8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameA
 10005      00000000 
 10006              		.text
 10007 3849 90       		.align 2
 10009              	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteD
 10010              	.LFB1696:
  52:TestDeferredTestReporter.cpp **** {
 10011              		.loc 3 52 1 is_stmt 1
 10012              		.cfi_startproc
 10013 384a F30F1EFA 		endbr64
 10014 384e 55       		pushq	%rbp
 10015              		.cfi_def_cfa_offset 16
 10016              		.cfi_offset 6, -16
 10017 384f 4889E5   		movq	%rsp, %rbp
 10018              		.cfi_def_cfa_register 6
 10019 3852 4883EC10 		subq	$16, %rsp
 10020 3856 48897DF8 		movq	%rdi, -8(%rbp)
 10021              	.LBB164:
  52:TestDeferredTestReporter.cpp **** {
 10022              		.loc 3 52 1
 10023 385a 488D1500 		leaq	16+_ZTVN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNa
 10023      000000
 10024 3861 488B45F8 		movq	-8(%rbp), %rax
 10025 3865 488910   		movq	%rdx, (%rax)
 10026 3868 488B45F8 		movq	-8(%rbp), %rax
 10027 386c 4889C7   		movq	%rax, %rdi
 10028 386f E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 10028      00
 10029              	.LBE164:
 10030 3874 90       		nop
 10031 3875 C9       		leave
 10032              		.cfi_def_cfa 7, 8
 10033 3876 C3       		ret
 10034              		.cfi_endproc
 10035              	.LFE1696:
 10037              		.set	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAnd
 10038 3877 90       		.align 2
 10040              	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteD
 10041              	.LFB1698:
  52:TestDeferredTestReporter.cpp **** {
 10042              		.loc 3 52 1
 10043              		.cfi_startproc
 10044              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 10045              		.cfi_lsda 0x1b,.LLSDA1698
 10046 3878 F30F1EFA 		endbr64
 10047 387c 55       		pushq	%rbp
 10048              		.cfi_def_cfa_offset 16
 10049              		.cfi_offset 6, -16
 10050 387d 4889E5   		movq	%rsp, %rbp
 10051              		.cfi_def_cfa_register 6
 10052 3880 53       		pushq	%rbx
 10053 3881 4883EC18 		subq	$24, %rsp
 10054              		.cfi_offset 3, -24
 10055 3885 48897DE8 		movq	%rdi, -24(%rbp)
  52:TestDeferredTestReporter.cpp **** {
 10056              		.loc 3 52 1
 10057 3889 488B45E8 		movq	-24(%rbp), %rax
 10058 388d 4889C7   		movq	%rax, %rdi
 10059              	.LEHB241:
 10060 3890 E8B5FFFF 		call	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAnd
 10060      FF
 10061              	.LEHE241:
  52:TestDeferredTestReporter.cpp **** {
 10062              		.loc 3 52 1 is_stmt 0 discriminator 2
 10063 3895 488B45E8 		movq	-24(%rbp), %rax
 10064 3899 4889C7   		movq	%rax, %rdi
 10065 389c E8000000 		call	_ZdlPv@PLT
 10065      00
 10066 38a1 EB1E     		jmp	.L517
 10067              	.L516:
 10068 38a3 F30F1EFA 		endbr64
  52:TestDeferredTestReporter.cpp **** {
 10069              		.loc 3 52 1
 10070 38a7 4889C3   		movq	%rax, %rbx
 10071 38aa 488B45E8 		movq	-24(%rbp), %rax
 10072 38ae 4889C7   		movq	%rax, %rdi
 10073 38b1 E8000000 		call	_ZdlPv@PLT
 10073      00
 10074 38b6 4889D8   		movq	%rbx, %rax
 10075 38b9 4889C7   		movq	%rax, %rdi
 10076              	.LEHB242:
 10077 38bc E8000000 		call	_Unwind_Resume@PLT
 10077      00
 10078              	.LEHE242:
 10079              	.L517:
 10080 38c1 488B5DF8 		movq	-8(%rbp), %rbx
 10081 38c5 C9       		leave
 10082              		.cfi_def_cfa 7, 8
 10083 38c6 C3       		ret
 10084              		.cfi_endproc
 10085              	.LFE1698:
 10086              		.section	.gcc_except_table
 10087              	.LLSDA1698:
 10088 0686 FF       		.byte	0xff
 10089 0687 FF       		.byte	0xff
 10090 0688 01       		.byte	0x1
 10091 0689 08       		.uleb128 .LLSDACSE1698-.LLSDACSB1698
 10092              	.LLSDACSB1698:
 10093 068a 18       		.uleb128 .LEHB241-.LFB1698
 10094 068b 05       		.uleb128 .LEHE241-.LEHB241
 10095 068c 2B       		.uleb128 .L516-.LFB1698
 10096 068d 00       		.uleb128 0
 10097 068e 44       		.uleb128 .LEHB242-.LFB1698
 10098 068f 05       		.uleb128 .LEHE242-.LEHB242
 10099 0690 00       		.uleb128 0
 10100 0691 00       		.uleb128 0
 10101              	.LLSDACSE1698:
 10102              		.text
 10104              		.section	.data.rel.ro.local
 10105              		.align 8
 10108              	_ZTVN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 10109 00c8 00000000 		.quad	0
 10109      00000000 
 10110 00d0 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDefer
 10110      00000000 
 10111 00d8 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferre
 10111      00000000 
 10112 00e0 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferre
 10112      00000000 
 10113 00e8 00000000 		.quad	_ZNK8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferr
 10113      00000000 
 10114              		.text
 10115 38c7 90       		.align 2
 10117              	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestD2
 10118              	.LFB1700:
  46:TestDeferredTestReporter.cpp **** {
 10119              		.loc 3 46 1 is_stmt 1
 10120              		.cfi_startproc
 10121 38c8 F30F1EFA 		endbr64
 10122 38cc 55       		pushq	%rbp
 10123              		.cfi_def_cfa_offset 16
 10124              		.cfi_offset 6, -16
 10125 38cd 4889E5   		movq	%rsp, %rbp
 10126              		.cfi_def_cfa_register 6
 10127 38d0 4883EC10 		subq	$16, %rsp
 10128 38d4 48897DF8 		movq	%rdi, -8(%rbp)
 10129              	.LBB165:
  46:TestDeferredTestReporter.cpp **** {
 10130              		.loc 3 46 1
 10131 38d8 488D1500 		leaq	16+_ZTVN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDef
 10131      000000
 10132 38df 488B45F8 		movq	-8(%rbp), %rax
 10133 38e3 488910   		movq	%rdx, (%rax)
 10134 38e6 488B45F8 		movq	-8(%rbp), %rax
 10135 38ea 4889C7   		movq	%rax, %rdi
 10136 38ed E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 10136      00
 10137              	.LBE165:
 10138 38f2 90       		nop
 10139 38f3 C9       		leave
 10140              		.cfi_def_cfa 7, 8
 10141 38f4 C3       		ret
 10142              		.cfi_endproc
 10143              	.LFE1700:
 10145              		.set	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferred
 10146 38f5 90       		.align 2
 10148              	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestD0
 10149              	.LFB1702:
  46:TestDeferredTestReporter.cpp **** {
 10150              		.loc 3 46 1
 10151              		.cfi_startproc
 10152              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 10153              		.cfi_lsda 0x1b,.LLSDA1702
 10154 38f6 F30F1EFA 		endbr64
 10155 38fa 55       		pushq	%rbp
 10156              		.cfi_def_cfa_offset 16
 10157              		.cfi_offset 6, -16
 10158 38fb 4889E5   		movq	%rsp, %rbp
 10159              		.cfi_def_cfa_register 6
 10160 38fe 53       		pushq	%rbx
 10161 38ff 4883EC18 		subq	$24, %rsp
 10162              		.cfi_offset 3, -24
 10163 3903 48897DE8 		movq	%rdi, -24(%rbp)
  46:TestDeferredTestReporter.cpp **** {
 10164              		.loc 3 46 1
 10165 3907 488B45E8 		movq	-24(%rbp), %rax
 10166 390b 4889C7   		movq	%rax, %rdi
 10167              	.LEHB243:
 10168 390e E8B5FFFF 		call	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferred
 10168      FF
 10169              	.LEHE243:
  46:TestDeferredTestReporter.cpp **** {
 10170              		.loc 3 46 1 is_stmt 0 discriminator 2
 10171 3913 488B45E8 		movq	-24(%rbp), %rax
 10172 3917 4889C7   		movq	%rax, %rdi
 10173 391a E8000000 		call	_ZdlPv@PLT
 10173      00
 10174 391f EB1E     		jmp	.L522
 10175              	.L521:
 10176 3921 F30F1EFA 		endbr64
  46:TestDeferredTestReporter.cpp **** {
 10177              		.loc 3 46 1
 10178 3925 4889C3   		movq	%rax, %rbx
 10179 3928 488B45E8 		movq	-24(%rbp), %rax
 10180 392c 4889C7   		movq	%rax, %rdi
 10181 392f E8000000 		call	_ZdlPv@PLT
 10181      00
 10182 3934 4889D8   		movq	%rbx, %rax
 10183 3937 4889C7   		movq	%rax, %rdi
 10184              	.LEHB244:
 10185 393a E8000000 		call	_Unwind_Resume@PLT
 10185      00
 10186              	.LEHE244:
 10187              	.L522:
 10188 393f 488B5DF8 		movq	-8(%rbp), %rbx
 10189 3943 C9       		leave
 10190              		.cfi_def_cfa 7, 8
 10191 3944 C3       		ret
 10192              		.cfi_endproc
 10193              	.LFE1702:
 10194              		.section	.gcc_except_table
 10195              	.LLSDA1702:
 10196 0692 FF       		.byte	0xff
 10197 0693 FF       		.byte	0xff
 10198 0694 01       		.byte	0x1
 10199 0695 08       		.uleb128 .LLSDACSE1702-.LLSDACSB1702
 10200              	.LLSDACSB1702:
 10201 0696 18       		.uleb128 .LEHB243-.LFB1702
 10202 0697 05       		.uleb128 .LEHE243-.LEHB243
 10203 0698 2B       		.uleb128 .L521-.LFB1702
 10204 0699 00       		.uleb128 0
 10205 069a 44       		.uleb128 .LEHB244-.LFB1702
 10206 069b 05       		.uleb128 .LEHE244-.LEHB244
 10207 069c 00       		.uleb128 0
 10208 069d 00       		.uleb128 0
 10209              	.LLSDACSE1702:
 10210              		.text
 10212              		.section	.data.rel.ro,"aw"
 10213              		.align 8
 10216              	_ZTVN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE:
 10217 0000 00000000 		.quad	0
 10217      00000000 
 10218 0008 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE
 10218      00000000 
 10219 0010 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD1Ev
 10219      00000000 
 10220 0018 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD0Ev
 10220      00000000 
 10221 0020 00000000 		.quad	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 10221      00000000 
 10222 0028 00000000 		.quad	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 10222      00000000 
 10223 0030 00000000 		.quad	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
 10223      00000000 
 10224 0038 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporter13ReportSummaryEiiif
 10224      00000000 
 10225              		.text
 10226 3945 90       		.align 2
 10228              	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD2Ev:
 10229              	.LFB1704:
  20:TestDeferredTestReporter.cpp **** {
 10230              		.loc 3 20 8 is_stmt 1
 10231              		.cfi_startproc
 10232 3946 F30F1EFA 		endbr64
 10233 394a 55       		pushq	%rbp
 10234              		.cfi_def_cfa_offset 16
 10235              		.cfi_offset 6, -16
 10236 394b 4889E5   		movq	%rsp, %rbp
 10237              		.cfi_def_cfa_register 6
 10238 394e 4883EC10 		subq	$16, %rsp
 10239 3952 48897DF8 		movq	%rdi, -8(%rbp)
 10240              	.LBB166:
  20:TestDeferredTestReporter.cpp **** {
 10241              		.loc 3 20 8
 10242 3956 488D1500 		leaq	16+_ZTVN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE(%rip), %rdx
 10242      000000
 10243 395d 488B45F8 		movq	-8(%rbp), %rax
 10244 3961 488910   		movq	%rdx, (%rax)
 10245 3964 488B45F8 		movq	-8(%rbp), %rax
 10246 3968 4889C7   		movq	%rax, %rdi
 10247 396b E8000000 		call	_ZN8UnitTest20DeferredTestReporterD2Ev
 10247      00
 10248              	.LBE166:
 10249 3970 90       		nop
 10250 3971 C9       		leave
 10251              		.cfi_def_cfa 7, 8
 10252 3972 C3       		ret
 10253              		.cfi_endproc
 10254              	.LFE1704:
 10256              		.set	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD1Ev,_ZN8UnitTest12_GLOBAL__N_124MockDefe
 10257 3973 90       		.align 2
 10259              	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD0Ev:
 10260              	.LFB1706:
  20:TestDeferredTestReporter.cpp **** {
 10261              		.loc 3 20 8
 10262              		.cfi_startproc
 10263              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 10264              		.cfi_lsda 0x1b,.LLSDA1706
 10265 3974 F30F1EFA 		endbr64
 10266 3978 55       		pushq	%rbp
 10267              		.cfi_def_cfa_offset 16
 10268              		.cfi_offset 6, -16
 10269 3979 4889E5   		movq	%rsp, %rbp
 10270              		.cfi_def_cfa_register 6
 10271 397c 53       		pushq	%rbx
 10272 397d 4883EC18 		subq	$24, %rsp
 10273              		.cfi_offset 3, -24
 10274 3981 48897DE8 		movq	%rdi, -24(%rbp)
  20:TestDeferredTestReporter.cpp **** {
 10275              		.loc 3 20 8
 10276 3985 488B45E8 		movq	-24(%rbp), %rax
 10277 3989 4889C7   		movq	%rax, %rdi
 10278              	.LEHB245:
 10279 398c E8B5FFFF 		call	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD1Ev
 10279      FF
 10280              	.LEHE245:
  20:TestDeferredTestReporter.cpp **** {
 10281              		.loc 3 20 8 is_stmt 0 discriminator 2
 10282 3991 488B45E8 		movq	-24(%rbp), %rax
 10283 3995 4889C7   		movq	%rax, %rdi
 10284 3998 E8000000 		call	_ZdlPv@PLT
 10284      00
 10285 399d EB1E     		jmp	.L527
 10286              	.L526:
 10287 399f F30F1EFA 		endbr64
  20:TestDeferredTestReporter.cpp **** {
 10288              		.loc 3 20 8
 10289 39a3 4889C3   		movq	%rax, %rbx
 10290 39a6 488B45E8 		movq	-24(%rbp), %rax
 10291 39aa 4889C7   		movq	%rax, %rdi
 10292 39ad E8000000 		call	_ZdlPv@PLT
 10292      00
 10293 39b2 4889D8   		movq	%rbx, %rax
 10294 39b5 4889C7   		movq	%rax, %rdi
 10295              	.LEHB246:
 10296 39b8 E8000000 		call	_Unwind_Resume@PLT
 10296      00
 10297              	.LEHE246:
 10298              	.L527:
 10299 39bd 488B5DF8 		movq	-8(%rbp), %rbx
 10300 39c1 C9       		leave
 10301              		.cfi_def_cfa 7, 8
 10302 39c2 C3       		ret
 10303              		.cfi_endproc
 10304              	.LFE1706:
 10305              		.section	.gcc_except_table
 10306              	.LLSDA1706:
 10307 069e FF       		.byte	0xff
 10308 069f FF       		.byte	0xff
 10309 06a0 01       		.byte	0x1
 10310 06a1 08       		.uleb128 .LLSDACSE1706-.LLSDACSB1706
 10311              	.LLSDACSB1706:
 10312 06a2 18       		.uleb128 .LEHB245-.LFB1706
 10313 06a3 05       		.uleb128 .LEHE245-.LEHB245
 10314 06a4 2B       		.uleb128 .L526-.LFB1706
 10315 06a5 00       		.uleb128 0
 10316 06a6 44       		.uleb128 .LEHB246-.LFB1706
 10317 06a7 05       		.uleb128 .LEHE246-.LEHB246
 10318 06a8 00       		.uleb128 0
 10319 06a9 00       		.uleb128 0
 10320              	.LLSDACSE1706:
 10321              		.text
 10323              		.weak	_ZTVN8UnitTest15MemoryOutStreamE
 10324              		.section	.data.rel.ro.local._ZTVN8UnitTest15MemoryOutStreamE,"awG",@progbits,_ZTVN8UnitTest15Memor
 10325              		.align 8
 10328              	_ZTVN8UnitTest15MemoryOutStreamE:
 10329 0000 90000000 		.quad	144
 10329      00000000 
 10330 0008 00000000 		.quad	0
 10330      00000000 
 10331 0010 00000000 		.quad	_ZTIN8UnitTest15MemoryOutStreamE
 10331      00000000 
 10332 0018 00000000 		.quad	_ZN8UnitTest15MemoryOutStreamD1Ev
 10332      00000000 
 10333 0020 00000000 		.quad	_ZN8UnitTest15MemoryOutStreamD0Ev
 10333      00000000 
 10334 0028 70FFFFFF 		.quad	-144
 10334      FFFFFFFF 
 10335 0030 70FFFFFF 		.quad	-144
 10335      FFFFFFFF 
 10336 0038 00000000 		.quad	_ZTIN8UnitTest15MemoryOutStreamE
 10336      00000000 
 10337 0040 00000000 		.quad	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
 10337      00000000 
 10338 0048 00000000 		.quad	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
 10338      00000000 
 10339              		.weak	_ZTTN8UnitTest15MemoryOutStreamE
 10340              		.section	.data.rel.ro.local._ZTTN8UnitTest15MemoryOutStreamE,"awG",@progbits,_ZTVN8UnitTest15Memor
 10341              		.align 8
 10344              	_ZTTN8UnitTest15MemoryOutStreamE:
 10345 0000 00000000 		.quad	_ZTVN8UnitTest15MemoryOutStreamE+24
 10345      00000000 
 10346 0008 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE
 10346      00000000 
 10347 0010 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_So+24
 10347      00000000 
 10348 0018 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_So+64
 10348      00000000 
 10349 0020 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE
 10349      00000000 
 10350 0028 00000000 		.quad	_ZTVN8UnitTest15MemoryOutStreamE+64
 10350      00000000 
 10351              		.hidden	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIc
 10352              		.weak	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE
 10353              		.section	.data.rel.ro._ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char
 10354              		.align 8
 10357              	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE:
 10358 0000 90000000 		.quad	144
 10358      00000000 
 10359 0008 00000000 		.quad	0
 10359      00000000 
 10360 0010 00000000 		.quad	_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
 10360      00000000 
 10361 0018 00000000 		.quad	0
 10361      00000000 
 10362 0020 00000000 		.quad	0
 10362      00000000 
 10363 0028 70FFFFFF 		.quad	-144
 10363      FFFFFFFF 
 10364 0030 70FFFFFF 		.quad	-144
 10364      FFFFFFFF 
 10365 0038 00000000 		.quad	_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
 10365      00000000 
 10366 0040 00000000 		.quad	0
 10366      00000000 
 10367 0048 00000000 		.quad	0
 10367      00000000 
 10368              		.hidden	_ZTCN8UnitTest15MemoryOutStreamE0_So
 10369              		.weak	_ZTCN8UnitTest15MemoryOutStreamE0_So
 10370              		.section	.data.rel.ro._ZTCN8UnitTest15MemoryOutStreamE0_So,"awG",@progbits,_ZTVN8UnitTest15MemoryO
 10371              		.align 8
 10374              	_ZTCN8UnitTest15MemoryOutStreamE0_So:
 10375 0000 90000000 		.quad	144
 10375      00000000 
 10376 0008 00000000 		.quad	0
 10376      00000000 
 10377 0010 00000000 		.quad	_ZTISo
 10377      00000000 
 10378 0018 00000000 		.quad	0
 10378      00000000 
 10379 0020 00000000 		.quad	0
 10379      00000000 
 10380 0028 70FFFFFF 		.quad	-144
 10380      FFFFFFFF 
 10381 0030 70FFFFFF 		.quad	-144
 10381      FFFFFFFF 
 10382 0038 00000000 		.quad	_ZTISo
 10382      00000000 
 10383 0040 00000000 		.quad	0
 10383      00000000 
 10384 0048 00000000 		.quad	0
 10384      00000000 
 10385              		.section	.text._ZN8UnitTest15MemoryOutStreamD1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD1Ev
 10386              		.align 2
 10387              		.weak	_ZN8UnitTest15MemoryOutStreamD1Ev
 10389              	_ZN8UnitTest15MemoryOutStreamD1Ev:
 10390              	.LFB1709:
  13:../MemoryOutStream.h **** {
 10391              		.loc 2 13 7 is_stmt 1
 10392              		.cfi_startproc
 10393              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 10394              		.cfi_lsda 0x1b,.LLSDA1709
 10395 0000 F30F1EFA 		endbr64
 10396 0004 55       		pushq	%rbp
 10397              		.cfi_def_cfa_offset 16
 10398              		.cfi_offset 6, -16
 10399 0005 4889E5   		movq	%rsp, %rbp
 10400              		.cfi_def_cfa_register 6
 10401 0008 53       		pushq	%rbx
 10402 0009 4883EC18 		subq	$24, %rsp
 10403              		.cfi_offset 3, -24
 10404 000d 48897DE8 		movq	%rdi, -24(%rbp)
 10405              	.LBB167:
  13:../MemoryOutStream.h **** {
 10406              		.loc 2 13 7
 10407 0011 488D1500 		leaq	24+_ZTVN8UnitTest15MemoryOutStreamE(%rip), %rdx
 10407      000000
 10408 0018 488B45E8 		movq	-24(%rbp), %rax
 10409 001c 488910   		movq	%rdx, (%rax)
 10410 001f 488B45E8 		movq	-24(%rbp), %rax
 10411 0023 48059000 		addq	$144, %rax
 10411      0000
 10412 0029 488D1500 		leaq	64+_ZTVN8UnitTest15MemoryOutStreamE(%rip), %rdx
 10412      000000
 10413 0030 488910   		movq	%rdx, (%rax)
 10414 0033 488B45E8 		movq	-24(%rbp), %rax
 10415 0037 4883C070 		addq	$112, %rax
 10416 003b 4889C7   		movq	%rax, %rdi
 10417              	.LEHB247:
 10418 003e E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 10418      00
 10419              	.LEHE247:
  13:../MemoryOutStream.h **** {
 10420              		.loc 2 13 7 is_stmt 0 discriminator 2
 10421 0043 488B45E8 		movq	-24(%rbp), %rax
 10422 0047 488D1500 		leaq	8+_ZTTN8UnitTest15MemoryOutStreamE(%rip), %rdx
 10422      000000
 10423 004e 4889D6   		movq	%rdx, %rsi
 10424 0051 4889C7   		movq	%rax, %rdi
 10425              	.LEHB248:
 10426 0054 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev@PLT
 10426      00
 10427              	.LEHE248:
  13:../MemoryOutStream.h **** {
 10428              		.loc 2 13 7 discriminator 4
 10429 0059 488B45E8 		movq	-24(%rbp), %rax
 10430 005d 48059000 		addq	$144, %rax
 10430      0000
 10431 0063 4889C7   		movq	%rax, %rdi
 10432              	.LEHB249:
 10433 0066 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev@PLT
 10433      00
 10434              	.LEHE249:
 10435              	.LBE167:
 10436 006b EB43     		jmp	.L533
 10437              	.L531:
 10438 006d F30F1EFA 		endbr64
 10439              	.LBB168:
  13:../MemoryOutStream.h **** {
 10440              		.loc 2 13 7
 10441 0071 4889C3   		movq	%rax, %rbx
 10442 0074 488B45E8 		movq	-24(%rbp), %rax
 10443 0078 488D1500 		leaq	8+_ZTTN8UnitTest15MemoryOutStreamE(%rip), %rdx
 10443      000000
 10444 007f 4889D6   		movq	%rdx, %rsi
 10445 0082 4889C7   		movq	%rax, %rdi
 10446 0085 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev@PLT
 10446      00
 10447 008a EB07     		jmp	.L530
 10448              	.L532:
 10449 008c F30F1EFA 		endbr64
 10450 0090 4889C3   		movq	%rax, %rbx
 10451              	.L530:
  13:../MemoryOutStream.h **** {
 10452              		.loc 2 13 7 discriminator 3
 10453 0093 488B45E8 		movq	-24(%rbp), %rax
 10454 0097 48059000 		addq	$144, %rax
 10454      0000
 10455 009d 4889C7   		movq	%rax, %rdi
 10456 00a0 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev@PLT
 10456      00
 10457 00a5 4889D8   		movq	%rbx, %rax
 10458 00a8 4889C7   		movq	%rax, %rdi
 10459              	.LEHB250:
 10460 00ab E8000000 		call	_Unwind_Resume@PLT
 10460      00
 10461              	.LEHE250:
 10462              	.L533:
 10463              	.LBE168:
  13:../MemoryOutStream.h **** {
 10464              		.loc 2 13 7
 10465 00b0 488B5DF8 		movq	-8(%rbp), %rbx
 10466 00b4 C9       		leave
 10467              		.cfi_def_cfa 7, 8
 10468 00b5 C3       		ret
 10469              		.cfi_endproc
 10470              	.LFE1709:
 10471              		.section	.gcc_except_table
 10472              	.LLSDA1709:
 10473 06aa FF       		.byte	0xff
 10474 06ab FF       		.byte	0xff
 10475 06ac 01       		.byte	0x1
 10476 06ad 12       		.uleb128 .LLSDACSE1709-.LLSDACSB1709
 10477              	.LLSDACSB1709:
 10478 06ae 3E       		.uleb128 .LEHB247-.LFB1709
 10479 06af 05       		.uleb128 .LEHE247-.LEHB247
 10480 06b0 6D       		.uleb128 .L531-.LFB1709
 10481 06b1 00       		.uleb128 0
 10482 06b2 54       		.uleb128 .LEHB248-.LFB1709
 10483 06b3 05       		.uleb128 .LEHE248-.LEHB248
 10484 06b4 8C01     		.uleb128 .L532-.LFB1709
 10485 06b6 00       		.uleb128 0
 10486 06b7 66       		.uleb128 .LEHB249-.LFB1709
 10487 06b8 05       		.uleb128 .LEHE249-.LEHB249
 10488 06b9 00       		.uleb128 0
 10489 06ba 00       		.uleb128 0
 10490 06bb AB01     		.uleb128 .LEHB250-.LFB1709
 10491 06bd 05       		.uleb128 .LEHE250-.LEHB250
 10492 06be 00       		.uleb128 0
 10493 06bf 00       		.uleb128 0
 10494              	.LLSDACSE1709:
 10495              		.section	.text._ZN8UnitTest15MemoryOutStreamD1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD1Ev
 10497              		.set	.LTHUNK0,_ZN8UnitTest15MemoryOutStreamD1Ev
 10498              		.weak	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
 10500              	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev:
 10501              	.LFB1713:
  13:../MemoryOutStream.h **** {
 10502              		.loc 2 13 7 is_stmt 1
 10503              		.cfi_startproc
 10504 00b6 F30F1EFA 		endbr64
 10505 00ba 4C8B17   		movq	(%rdi), %r10
 10506 00bd 49037AE8 		addq	-24(%r10), %rdi
 10507 00c1 E93AFFFF 		jmp	.LTHUNK0
 10507      FF
 10508              		.cfi_endproc
 10509              	.LFE1713:
 10511              		.section	.text._ZN8UnitTest15MemoryOutStreamD0Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD0Ev
 10512              		.align 2
 10513              		.weak	_ZN8UnitTest15MemoryOutStreamD0Ev
 10515              	_ZN8UnitTest15MemoryOutStreamD0Ev:
 10516              	.LFB1710:
  13:../MemoryOutStream.h **** {
 10517              		.loc 2 13 7
 10518              		.cfi_startproc
 10519              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 10520              		.cfi_lsda 0x1b,.LLSDA1710
 10521 0000 F30F1EFA 		endbr64
 10522 0004 55       		pushq	%rbp
 10523              		.cfi_def_cfa_offset 16
 10524              		.cfi_offset 6, -16
 10525 0005 4889E5   		movq	%rsp, %rbp
 10526              		.cfi_def_cfa_register 6
 10527 0008 53       		pushq	%rbx
 10528 0009 4883EC18 		subq	$24, %rsp
 10529              		.cfi_offset 3, -24
 10530 000d 48897DE8 		movq	%rdi, -24(%rbp)
  13:../MemoryOutStream.h **** {
 10531              		.loc 2 13 7
 10532 0011 488B45E8 		movq	-24(%rbp), %rax
 10533 0015 4889C7   		movq	%rax, %rdi
 10534              	.LEHB251:
 10535 0018 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 10535      00
 10536              	.LEHE251:
  13:../MemoryOutStream.h **** {
 10537              		.loc 2 13 7 is_stmt 0 discriminator 2
 10538 001d 488B45E8 		movq	-24(%rbp), %rax
 10539 0021 4889C7   		movq	%rax, %rdi
 10540 0024 E8000000 		call	_ZdlPv@PLT
 10540      00
 10541 0029 EB1E     		jmp	.L537
 10542              	.L536:
 10543 002b F30F1EFA 		endbr64
  13:../MemoryOutStream.h **** {
 10544              		.loc 2 13 7
 10545 002f 4889C3   		movq	%rax, %rbx
 10546 0032 488B45E8 		movq	-24(%rbp), %rax
 10547 0036 4889C7   		movq	%rax, %rdi
 10548 0039 E8000000 		call	_ZdlPv@PLT
 10548      00
 10549 003e 4889D8   		movq	%rbx, %rax
 10550 0041 4889C7   		movq	%rax, %rdi
 10551              	.LEHB252:
 10552 0044 E8000000 		call	_Unwind_Resume@PLT
 10552      00
 10553              	.LEHE252:
 10554              	.L537:
 10555 0049 488B5DF8 		movq	-8(%rbp), %rbx
 10556 004d C9       		leave
 10557              		.cfi_def_cfa 7, 8
 10558 004e C3       		ret
 10559              		.cfi_endproc
 10560              	.LFE1710:
 10561              		.section	.gcc_except_table
 10562              	.LLSDA1710:
 10563 06c0 FF       		.byte	0xff
 10564 06c1 FF       		.byte	0xff
 10565 06c2 01       		.byte	0x1
 10566 06c3 08       		.uleb128 .LLSDACSE1710-.LLSDACSB1710
 10567              	.LLSDACSB1710:
 10568 06c4 18       		.uleb128 .LEHB251-.LFB1710
 10569 06c5 05       		.uleb128 .LEHE251-.LEHB251
 10570 06c6 2B       		.uleb128 .L536-.LFB1710
 10571 06c7 00       		.uleb128 0
 10572 06c8 44       		.uleb128 .LEHB252-.LFB1710
 10573 06c9 05       		.uleb128 .LEHE252-.LEHB252
 10574 06ca 00       		.uleb128 0
 10575 06cb 00       		.uleb128 0
 10576              	.LLSDACSE1710:
 10577              		.section	.text._ZN8UnitTest15MemoryOutStreamD0Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD0Ev
 10579              		.set	.LTHUNK1,_ZN8UnitTest15MemoryOutStreamD0Ev
 10580              		.weak	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
 10582              	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev:
 10583              	.LFB1714:
  13:../MemoryOutStream.h **** {
 10584              		.loc 2 13 7 is_stmt 1
 10585              		.cfi_startproc
 10586 004f F30F1EFA 		endbr64
 10587 0053 4C8B17   		movq	(%rdi), %r10
 10588 0056 49037AE8 		addq	-24(%r10), %rdi
 10589 005a EBA4     		jmp	.LTHUNK1
 10590              		.cfi_endproc
 10591              	.LFE1714:
 10593              		.section	.rodata
 10594 05c2 00000000 		.align 32
 10594      00000000 
 10594      00000000 
 10594      00000000 
 10594      00000000 
 10597              	_ZTSN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 10598 05e0 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOf
 10598      6E697454 
 10598      65737431 
 10598      325F474C 
 10598      4F42414C 
 10599              		.section	.data.rel.ro
 10600              		.align 8
 10603              	_ZTIN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 10604 0040 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10604      00000000 
 10605 0048 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOf
 10605      00000000 
 10606 0050 00000000 		.quad	_ZTIN8UnitTest4TestE
 10606      00000000 
 10607              		.section	.rodata
 10608 0649 00000000 		.align 32
 10608      00000000 
 10608      00000000 
 10608      00000000 
 10608      00000000 
 10611              	_ZTSN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 10612 0660 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 10612      6E697454 
 10612      65737431 
 10612      325F474C 
 10612      4F42414C 
 10613              		.section	.data.rel.ro
 10614              		.align 8
 10617              	_ZTIN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 10618 0058 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10618      00000000 
 10619 0060 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 10619      00000000 
 10620 0068 00000000 		.quad	_ZTIN8UnitTest4TestE
 10620      00000000 
 10621              		.section	.rodata
 10622 06cf 00000000 		.align 32
 10622      00000000 
 10622      00000000 
 10622      00000000 
 10622      00
 10625              	_ZTSN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsE:
 10626 06e0 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 10626      6E697454 
 10626      65737431 
 10626      325F474C 
 10626      4F42414C 
 10627              		.section	.data.rel.ro
 10628              		.align 8
 10631              	_ZTIN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsE:
 10632 0070 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10632      00000000 
 10633 0078 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 10633      00000000 
 10634 0080 00000000 		.quad	_ZTIN8UnitTest4TestE
 10634      00000000 
 10635              		.section	.rodata
 10636 073c 00000000 		.align 32
 10639              	_ZTSN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE:
 10640 0740 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE"
 10640      6E697454 
 10640      65737431 
 10640      325F474C 
 10640      4F42414C 
 10641              		.section	.data.rel.ro
 10642              		.align 8
 10645              	_ZTIN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE:
 10646 0088 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10646      00000000 
 10647 0090 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
 10647      00000000 
 10648 0098 00000000 		.quad	_ZTIN8UnitTest4TestE
 10648      00000000 
 10649              		.section	.rodata
 10650 0799 00000000 		.align 32
 10650      000000
 10653              	_ZTSN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 10654 07a0 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestName
 10654      6E697454 
 10654      65737431 
 10654      325F474C 
 10654      4F42414C 
 10655              		.section	.data.rel.ro
 10656              		.align 8
 10659              	_ZTIN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 10660 00a0 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10660      00000000 
 10661 00a8 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestName
 10661      00000000 
 10662 00b0 00000000 		.quad	_ZTIN8UnitTest4TestE
 10662      00000000 
 10663              		.section	.rodata
 10664 0803 00000000 		.align 32
 10664      00000000 
 10664      00000000 
 10664      00000000 
 10664      00000000 
 10667              	_ZTSN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 10668 0820 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDefer
 10668      6E697454 
 10668      65737431 
 10668      325F474C 
 10668      4F42414C 
 10669              		.section	.data.rel.ro
 10670              		.align 8
 10673              	_ZTIN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 10674 00b8 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10674      00000000 
 10675 00c0 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDefer
 10675      00000000 
 10676 00c8 00000000 		.quad	_ZTIN8UnitTest4TestE
 10676      00000000 
 10677              		.section	.rodata
 10678 0882 00000000 		.align 32
 10678      00000000 
 10678      00000000 
 10678      00000000 
 10678      00000000 
 10681              	_ZTSN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE:
 10682 08a0 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE"
 10682      6E697454 
 10682      65737431 
 10682      325F474C 
 10682      4F42414C 
 10683              		.section	.data.rel.ro
 10684              		.align 8
 10687              	_ZTIN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE:
 10688 00d0 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10688      00000000 
 10689 00d8 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE
 10689      00000000 
 10690 00e0 00000000 		.quad	_ZTIN8UnitTest20DeferredTestReporterE
 10690      00000000 
 10691              		.weak	_ZTIN8UnitTest15MemoryOutStreamE
 10692              		.section	.data.rel.ro._ZTIN8UnitTest15MemoryOutStreamE,"awG",@progbits,_ZTIN8UnitTest15MemoryOutSt
 10693              		.align 8
 10696              	_ZTIN8UnitTest15MemoryOutStreamE:
 10697 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10697      00000000 
 10698 0008 00000000 		.quad	_ZTSN8UnitTest15MemoryOutStreamE
 10698      00000000 
 10699 0010 00000000 		.quad	_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
 10699      00000000 
 10700              		.weak	_ZTSN8UnitTest15MemoryOutStreamE
 10701              		.section	.rodata._ZTSN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTSN8UnitTest15MemoryOutStreamE,
 10702              		.align 16
 10705              	_ZTSN8UnitTest15MemoryOutStreamE:
 10706 0000 4E38556E 		.string	"N8UnitTest15MemoryOutStreamE"
 10706      69745465 
 10706      73743135 
 10706      4D656D6F 
 10706      72794F75 
 10707              		.text
 10709              	_Z41__static_initialization_and_destruction_0ii:
 10710              	.LFB1711:
 116:TestDeferredTestReporter.cpp **** 
 117:TestDeferredTestReporter.cpp **** }}
 10711              		.loc 3 117 2
 10712              		.cfi_startproc
 10713 39c3 F30F1EFA 		endbr64
 10714 39c7 55       		pushq	%rbp
 10715              		.cfi_def_cfa_offset 16
 10716              		.cfi_offset 6, -16
 10717 39c8 4889E5   		movq	%rsp, %rbp
 10718              		.cfi_def_cfa_register 6
 10719 39cb 4883EC10 		subq	$16, %rsp
 10720 39cf 897DFC   		movl	%edi, -4(%rbp)
 10721 39d2 8975F8   		movl	%esi, -8(%rbp)
 10722              		.loc 3 117 2
 10723 39d5 837DFC01 		cmpl	$1, -4(%rbp)
 10724 39d9 0F851102 		jne	.L540
 10724      0000
 10725              		.loc 3 117 2 is_stmt 0 discriminator 1
 10726 39df 817DF8FF 		cmpl	$65535, -8(%rbp)
 10726      FF0000
 10727 39e6 0F850402 		jne	.L540
 10727      0000
  46:TestDeferredTestReporter.cpp **** {
 10728              		.loc 3 46 1 is_stmt 1
 10729 39ec 488D0500 		leaq	_ZN8UnitTest12_GLOBAL__N_177testDeferredTestReporterFixtureReportTestStartCreatesANewDeferred
 10729      000000
 10730 39f3 4889C7   		movq	%rax, %rdi
 10731 39f6 E817C9FF 		call	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferred
 10731      FF
 10732 39fb 488D0500 		leaq	__dso_handle(%rip), %rax
 10732      000000
 10733 3a02 4889C2   		movq	%rax, %rdx
 10734 3a05 488D0500 		leaq	_ZN8UnitTest12_GLOBAL__N_177testDeferredTestReporterFixtureReportTestStartCreatesANewDeferred
 10734      000000
 10735 3a0c 4889C6   		movq	%rax, %rsi
 10736 3a0f 488D05B2 		leaq	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferred
 10736      FEFFFF
 10737 3a16 4889C7   		movq	%rax, %rdi
 10738 3a19 E8000000 		call	__cxa_atexit@PLT
 10738      00
 10739 3a1e E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 10739      00
 10740 3a23 4889C1   		movq	%rax, %rcx
 10741 3a26 488D0500 		leaq	_ZN8UnitTest12_GLOBAL__N_177testDeferredTestReporterFixtureReportTestStartCreatesANewDeferred
 10741      000000
 10742 3a2d 4889C2   		movq	%rax, %rdx
 10743 3a30 4889CE   		movq	%rcx, %rsi
 10744 3a33 488D0500 		leaq	_ZN8UnitTest12_GLOBAL__N_170adderDeferredTestReporterFixtureReportTestStartCreatesANewDeferre
 10744      000000
 10745 3a3a 4889C7   		movq	%rax, %rdi
 10746 3a3d E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 10746      00
  52:TestDeferredTestReporter.cpp **** {
 10747              		.loc 3 52 1
 10748 3a42 488D0500 		leaq	_ZN8UnitTest12_GLOBAL__N_178testDeferredTestReporterFixtureReportTestStartCapturesTestNameAnd
 10748      000000
 10749 3a49 4889C7   		movq	%rax, %rdi
 10750 3a4c E897CDFF 		call	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAnd
 10750      FF
 10751 3a51 488D0500 		leaq	__dso_handle(%rip), %rax
 10751      000000
 10752 3a58 4889C2   		movq	%rax, %rdx
 10753 3a5b 488D0500 		leaq	_ZN8UnitTest12_GLOBAL__N_178testDeferredTestReporterFixtureReportTestStartCapturesTestNameAnd
 10753      000000
 10754 3a62 4889C6   		movq	%rax, %rsi
 10755 3a65 488D05DE 		leaq	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAnd
 10755      FDFFFF
 10756 3a6c 4889C7   		movq	%rax, %rdi
 10757 3a6f E8000000 		call	__cxa_atexit@PLT
 10757      00
 10758 3a74 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 10758      00
 10759 3a79 4889C1   		movq	%rax, %rcx
 10760 3a7c 488D0500 		leaq	_ZN8UnitTest12_GLOBAL__N_178testDeferredTestReporterFixtureReportTestStartCapturesTestNameAnd
 10760      000000
 10761 3a83 4889C2   		movq	%rax, %rdx
 10762 3a86 4889CE   		movq	%rcx, %rsi
 10763 3a89 488D0500 		leaq	_ZN8UnitTest12_GLOBAL__N_171adderDeferredTestReporterFixtureReportTestStartCapturesTestNameAn
 10763      000000
 10764 3a90 4889C7   		movq	%rax, %rdi
 10765 3a93 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 10765      00
  61:TestDeferredTestReporter.cpp **** {
 10766              		.loc 3 61 1
 10767 3a98 488D0500 		leaq	_ZN8UnitTest12_GLOBAL__N_168testDeferredTestReporterFixtureReportTestEndCapturesTestTimeInsta
 10767      000000
 10768 3a9f 4889C7   		movq	%rax, %rdi
 10769 3aa2 E8F1D2FF 		call	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeC1Ev
 10769      FF
 10770 3aa7 488D0500 		leaq	__dso_handle(%rip), %rax
 10770      000000
 10771 3aae 4889C2   		movq	%rax, %rdx
 10772 3ab1 488D0500 		leaq	_ZN8UnitTest12_GLOBAL__N_168testDeferredTestReporterFixtureReportTestEndCapturesTestTimeInsta
 10772      000000
 10773 3ab8 4889C6   		movq	%rax, %rsi
 10774 3abb 488D050A 		leaq	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD1Ev(
 10774      FDFFFF
 10775 3ac2 4889C7   		movq	%rax, %rdi
 10776 3ac5 E8000000 		call	__cxa_atexit@PLT
 10776      00
 10777 3aca E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 10777      00
 10778 3acf 4889C1   		movq	%rax, %rcx
 10779 3ad2 488D0500 		leaq	_ZN8UnitTest12_GLOBAL__N_168testDeferredTestReporterFixtureReportTestEndCapturesTestTimeInsta
 10779      000000
 10780 3ad9 4889C2   		movq	%rax, %rdx
 10781 3adc 4889CE   		movq	%rcx, %rsi
 10782 3adf 488D0500 		leaq	_ZN8UnitTest12_GLOBAL__N_161adderDeferredTestReporterFixtureReportTestEndCapturesTestTimeE(%r
 10782      000000
 10783 3ae6 4889C7   		movq	%rax, %rdi
 10784 3ae9 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 10784      00
  71:TestDeferredTestReporter.cpp **** {
 10785              		.loc 3 71 1
 10786 3aee 488D0500 		leaq	_ZN8UnitTest12_GLOBAL__N_171testDeferredTestReporterFixtureReportFailureSavesFailureDetailsIn
 10786      000000
 10787 3af5 4889C7   		movq	%rax, %rdi
 10788 3af8 E8BFD7FF 		call	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsC1
 10788      FF
 10789 3afd 488D0500 		leaq	__dso_handle(%rip), %rax
 10789      000000
 10790 3b04 4889C2   		movq	%rax, %rdx
 10791 3b07 488D0500 		leaq	_ZN8UnitTest12_GLOBAL__N_171testDeferredTestReporterFixtureReportFailureSavesFailureDetailsIn
 10791      000000
 10792 3b0e 4889C6   		movq	%rax, %rsi
 10793 3b11 488D0536 		leaq	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD1
 10793      FCFFFF
 10794 3b18 4889C7   		movq	%rax, %rdi
 10795 3b1b E8000000 		call	__cxa_atexit@PLT
 10795      00
 10796 3b20 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 10796      00
 10797 3b25 4889C1   		movq	%rax, %rcx
 10798 3b28 488D0500 		leaq	_ZN8UnitTest12_GLOBAL__N_171testDeferredTestReporterFixtureReportFailureSavesFailureDetailsIn
 10798      000000
 10799 3b2f 4889C2   		movq	%rax, %rdx
 10800 3b32 4889CE   		movq	%rcx, %rsi
 10801 3b35 488D0500 		leaq	_ZN8UnitTest12_GLOBAL__N_164adderDeferredTestReporterFixtureReportFailureSavesFailureDetailsE
 10801      000000
 10802 3b3c 4889C7   		movq	%rax, %rdi
 10803 3b3f E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 10803      00
  83:TestDeferredTestReporter.cpp **** {
 10804              		.loc 3 83 1
 10805 3b44 488D0500 		leaq	_ZN8UnitTest12_GLOBAL__N_190testDeferredTestReporterFixtureReportFailureSavesFailureDetailsFo
 10805      000000
 10806 3b4b 4889C7   		movq	%rax, %rdi
 10807 3b4e E843DDFF 		call	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsFo
 10807      FF
 10808 3b53 488D0500 		leaq	__dso_handle(%rip), %rax
 10808      000000
 10809 3b5a 4889C2   		movq	%rax, %rdx
 10810 3b5d 488D0500 		leaq	_ZN8UnitTest12_GLOBAL__N_190testDeferredTestReporterFixtureReportFailureSavesFailureDetailsFo
 10810      000000
 10811 3b64 4889C6   		movq	%rax, %rsi
 10812 3b67 488D0562 		leaq	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsFo
 10812      FBFFFF
 10813 3b6e 4889C7   		movq	%rax, %rdi
 10814 3b71 E8000000 		call	__cxa_atexit@PLT
 10814      00
 10815 3b76 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 10815      00
 10816 3b7b 4889C1   		movq	%rax, %rcx
 10817 3b7e 488D0500 		leaq	_ZN8UnitTest12_GLOBAL__N_190testDeferredTestReporterFixtureReportFailureSavesFailureDetailsFo
 10817      000000
 10818 3b85 4889C2   		movq	%rax, %rdx
 10819 3b88 4889CE   		movq	%rcx, %rsi
 10820 3b8b 488D0500 		leaq	_ZN8UnitTest12_GLOBAL__N_183adderDeferredTestReporterFixtureReportFailureSavesFailureDetailsF
 10820      000000
 10821 3b92 4889C7   		movq	%rax, %rdi
 10822 3b95 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 10822      00
  98:TestDeferredTestReporter.cpp **** {
 10823              		.loc 3 98 1
 10824 3b9a 488D0500 		leaq	_ZN8UnitTest12_GLOBAL__N_184testDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFai
 10824      000000
 10825 3ba1 4889C7   		movq	%rax, %rdi
 10826 3ba4 E8A5E3FF 		call	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFai
 10826      FF
 10827 3ba9 488D0500 		leaq	__dso_handle(%rip), %rax
 10827      000000
 10828 3bb0 4889C2   		movq	%rax, %rdx
 10829 3bb3 488D0500 		leaq	_ZN8UnitTest12_GLOBAL__N_184testDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFai
 10829      000000
 10830 3bba 4889C6   		movq	%rax, %rsi
 10831 3bbd 488D058E 		leaq	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFai
 10831      FAFFFF
 10832 3bc4 4889C7   		movq	%rax, %rdi
 10833 3bc7 E8000000 		call	__cxa_atexit@PLT
 10833      00
 10834 3bcc E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 10834      00
 10835 3bd1 4889C1   		movq	%rax, %rcx
 10836 3bd4 488D0500 		leaq	_ZN8UnitTest12_GLOBAL__N_184testDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFai
 10836      000000
 10837 3bdb 4889C2   		movq	%rax, %rdx
 10838 3bde 4889CE   		movq	%rcx, %rsi
 10839 3be1 488D0500 		leaq	_ZN8UnitTest12_GLOBAL__N_177adderDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFa
 10839      000000
 10840 3be8 4889C7   		movq	%rax, %rdi
 10841 3beb E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 10841      00
 10842              	.L540:
 10843              		.loc 3 117 2
 10844 3bf0 90       		nop
 10845 3bf1 C9       		leave
 10846              		.cfi_def_cfa 7, 8
 10847 3bf2 C3       		ret
 10848              		.cfi_endproc
 10849              	.LFE1711:
 10852              	_GLOBAL__sub_I_TestDeferredTestReporter.cpp:
 10853              	.LFB1712:
 10854              		.loc 3 117 2
 10855              		.cfi_startproc
 10856 3bf3 F30F1EFA 		endbr64
 10857 3bf7 55       		pushq	%rbp
 10858              		.cfi_def_cfa_offset 16
 10859              		.cfi_offset 6, -16
 10860 3bf8 4889E5   		movq	%rsp, %rbp
 10861              		.cfi_def_cfa_register 6
 10862              		.loc 3 117 2
 10863 3bfb BEFFFF00 		movl	$65535, %esi
 10863      00
 10864 3c00 BF010000 		movl	$1, %edi
 10864      00
 10865 3c05 E8B9FDFF 		call	_Z41__static_initialization_and_destruction_0ii
 10865      FF
 10866 3c0a 5D       		popq	%rbp
 10867              		.cfi_def_cfa 7, 8
 10868 3c0b C3       		ret
 10869              		.cfi_endproc
 10870              	.LFE1712:
 10872              		.section	.init_array,"aw"
 10873              		.align 8
 10874 0000 00000000 		.quad	_GLOBAL__sub_I_TestDeferredTestReporter.cpp
 10874      00000000 
 10875              		.section	.rodata
 10876 08d5 000000   		.align 4
 10877              	.LC14:
 10878 08d8 66E6F642 		.long	1123477094
 10879              		.align 4
 10880              	.LC15:
 10881 08dc 17B7D138 		.long	953267991
 10882              		.text
 10883              	.Letext0:
 10884              		.file 18 "../TestDetails.h"
 10885              		.file 19 "../TestList.h"
 10886              		.file 20 "../TestResults.h"
 10887              		.file 21 "../Test.h"
 10888              		.file 22 "../PosixUtils/SignalTranslator.h"
 10889              		.file 23 "../CurrentTest.h"
 10890              		.file 24 "../AssertException.h"
 10891              		.file 25 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h"
 10892              		.file 26 "<built-in>"
 10893              		.file 27 "/usr/include/x86_64-linux-gnu/bits/types/wint_t.h"
 10894              		.file 28 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h"
 10895              		.file 29 "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h"
 10896              		.file 30 "/usr/include/x86_64-linux-gnu/bits/types/__FILE.h"
 10897              		.file 31 "/usr/include/c++/11/cwchar"
 10898              		.file 32 "/usr/include/c++/11/bits/stl_iterator_base_types.h"
 10899              		.file 33 "/usr/include/c++/11/bits/char_traits.h"
 10900              		.file 34 "/usr/include/x86_64-linux-gnu/c++/11/bits/c++config.h"
 10901              		.file 35 "/usr/include/c++/11/clocale"
 10902              		.file 36 "/usr/include/c++/11/bits/basic_string.tcc"
 10903              		.file 37 "/usr/include/c++/11/sstream"
 10904              		.file 38 "/usr/include/c++/11/bits/stringfwd.h"
 10905              		.file 39 "/usr/include/c++/11/cwctype"
 10906              		.file 40 "/usr/include/c++/11/bits/ostream.tcc"
 10907              		.file 41 "/usr/include/c++/11/ostream"
 10908              		.file 42 "/usr/include/c++/11/bits/vector.tcc"
 10909              		.file 43 "/usr/include/c++/11/cstring"
 10910              		.file 44 "/usr/include/c++/11/bits/functexcept.h"
 10911              		.file 45 "/usr/include/c++/11/bits/stl_iterator_base_funcs.h"
 10912              		.file 46 "/usr/include/c++/11/bits/basic_ios.h"
 10913              		.file 47 "/usr/include/wchar.h"
 10914              		.file 48 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h"
 10915              		.file 49 "/usr/include/c++/11/debug/debug.h"
 10916              		.file 50 "/usr/include/c++/11/bits/predefined_ops.h"
 10917              		.file 51 "/usr/include/c++/11/bits/stl_iterator.h"
 10918              		.file 52 "/usr/include/c++/11/ext/type_traits.h"
 10919              		.file 53 "/usr/include/locale.h"
 10920              		.file 54 "/usr/include/x86_64-linux-gnu/bits/types.h"
 10921              		.file 55 "/usr/include/x86_64-linux-gnu/bits/setjmp.h"
 10922              		.file 56 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h"
 10923              		.file 57 "/usr/include/x86_64-linux-gnu/bits/types/struct___jmp_buf_tag.h"
 10924              		.file 58 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h"
 10925              		.file 59 "/usr/include/wctype.h"
 10926              		.file 60 "/usr/include/setjmp.h"
 10927              		.file 61 "/usr/include/x86_64-linux-gnu/bits/types/__sigval_t.h"
 10928              		.file 62 "/usr/include/x86_64-linux-gnu/bits/types/siginfo_t.h"
 10929              		.file 63 "/usr/include/signal.h"
 10930              		.file 64 "/usr/include/x86_64-linux-gnu/bits/sigaction.h"
 10931              		.file 65 "/usr/include/string.h"
 10932              		.file 66 "/usr/include/c++/11/new"
 33788              		.align 8
 33791              	DW.ref._ZTIN8UnitTest15AssertExceptionE:
 33792 0000 00000000 		.quad	_ZTIN8UnitTest15AssertExceptionE
 33792      00000000 
 33793              		.hidden	DW.ref._ZTISt9exception
 33794              		.weak	DW.ref._ZTISt9exception
 33795              		.section	.data.rel.local.DW.ref._ZTISt9exception,"awG",@progbits,DW.ref._ZTISt9exception,comdat
 33796              		.align 8
 33799              	DW.ref._ZTISt9exception:
 33800 0000 00000000 		.quad	_ZTISt9exception
 33800      00000000 
 33801              		.hidden	DW.ref.__gxx_personality_v0
 33802              		.weak	DW.ref.__gxx_personality_v0
 33803              		.section	.data.rel.local.DW.ref.__gxx_personality_v0,"awG",@progbits,DW.ref.__gxx_personality_v0,c
 33804              		.align 8
 33807              	DW.ref.__gxx_personality_v0:
 33808 0000 00000000 		.quad	__gxx_personality_v0
 33808      00000000 
 33809              		.hidden	__dso_handle
 33810              		.ident	"GCC: (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0"
 33811              		.section	.note.GNU-stack,"",@progbits
 33812              		.section	.note.gnu.property,"a"
 33813              		.align 8
 33814 0000 04000000 		.long	1f - 0f
 33815 0004 10000000 		.long	4f - 1f
 33816 0008 05000000 		.long	5
 33817              	0:
 33818 000c 474E5500 		.string	"GNU"
 33819              	1:
 33820              		.align 8
 33821 0010 020000C0 		.long	0xc0000002
 33822 0014 04000000 		.long	3f - 2f
 33823              	2:
 33824 0018 03000000 		.long	0x3
 33825              	3:
 33826 001c 00000000 		.align 8
 33827              	4:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 TestDeferredTestReporter.cpp
     /tmp/ccp7qfC7.s:11     .text._ZN13UnitTestSuite12GetSuiteNameEv:0000000000000000 _ZN13UnitTestSuite12GetSuiteNameEv
     /tmp/ccp7qfC7.s:35     .text._ZN8UnitTest15MemoryOutStreamC1Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamC1Ev
     /tmp/ccp7qfC7.s:33807  .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccp7qfC7.s:10344  .data.rel.ro.local._ZTTN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTTN8UnitTest15MemoryOutStreamE
     /tmp/ccp7qfC7.s:10328  .data.rel.ro.local._ZTVN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTVN8UnitTest15MemoryOutStreamE
     /tmp/ccp7qfC7.s:147    .text:0000000000000000 _ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporter13ReportSummaryEiiif
     /tmp/ccp7qfC7.s:175    .text._ZN8UnitTest12TestReporterC2Ev:0000000000000000 _ZN8UnitTest12TestReporterC2Ev
     /tmp/ccp7qfC7.s:175    .text._ZN8UnitTest12TestReporterC2Ev:0000000000000000 _ZN8UnitTest12TestReporterC1Ev
     /tmp/ccp7qfC7.s:206    .text._ZN8UnitTest20DeferredTestReporterC2Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterC2Ev
     /tmp/ccp7qfC7.s:5016   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev
     /tmp/ccp7qfC7.s:206    .text._ZN8UnitTest20DeferredTestReporterC2Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterC1Ev
     /tmp/ccp7qfC7.s:283    .text._ZN8UnitTest20DeferredTestReporterD2Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterD2Ev
     /tmp/ccp7qfC7.s:5049   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
     /tmp/ccp7qfC7.s:283    .text._ZN8UnitTest20DeferredTestReporterD2Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterD1Ev
     /tmp/ccp7qfC7.s:367    .text._ZN8UnitTest20DeferredTestReporterD0Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterD0Ev
     /tmp/ccp7qfC7.s:434    .text:000000000000001e _ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterC2Ev
     /tmp/ccp7qfC7.s:10216  .data.rel.ro:0000000000000000 _ZTVN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE
     /tmp/ccp7qfC7.s:434    .text:000000000000001e _ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterC1Ev
     /tmp/ccp7qfC7.s:472    .text:0000000000000048 _ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
     /tmp/ccp7qfC7.s:10228  .text:0000000000003946 _ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD1Ev
     /tmp/ccp7qfC7.s:702    .text:0000000000000242 _ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
     /tmp/ccp7qfC7.s:822    .text:00000000000002e4 _ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelperC2ERKNS_11TestDetailsE
     /tmp/ccp7qfC7.s:822    .text:00000000000002e4 _ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelperC1ERKNS_11TestDetailsE
     /tmp/ccp7qfC7.s:860    .text:0000000000000312 _ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestC2Ev
     /tmp/ccp7qfC7.s:10108  .data.rel.ro.local:00000000000000c8 _ZTVN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestE
     /tmp/ccp7qfC7.s:860    .text:0000000000000312 _ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestC1Ev
     /tmp/ccp7qfC7.s:899    .bss:0000000000000000 _ZN8UnitTest12_GLOBAL__N_177testDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestInstanceE
     /tmp/ccp7qfC7.s:899    .bss:0000000000000038 _ZN8UnitTest12_GLOBAL__N_170adderDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestE
     /tmp/ccp7qfC7.s:904    .text:0000000000000362 _ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelperD2Ev
     /tmp/ccp7qfC7.s:904    .text:0000000000000362 _ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelperD1Ev
     /tmp/ccp7qfC7.s:941    .text:000000000000037e _ZNK8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest7RunImplEv
     /tmp/ccp7qfC7.s:5140   .text:00000000000024b7 _ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccp7qfC7.s:10389  .text._ZN8UnitTest15MemoryOutStreamD1Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamD1Ev
     /tmp/ccp7qfC7.s:33799  .data.rel.local.DW.ref._ZTISt9exception:0000000000000000 DW.ref._ZTISt9exception
     /tmp/ccp7qfC7.s:33791  .data.rel.local.DW.ref._ZTIN8UnitTest15AssertExceptionE:0000000000000000 DW.ref._ZTIN8UnitTest15AssertExceptionE
     /tmp/ccp7qfC7.s:1298   .text:00000000000006aa _ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelper7RunImplEv
     /tmp/ccp7qfC7.s:5514   .text._ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv:0000000000000000 _ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv
     /tmp/ccp7qfC7.s:5550   .text._ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
     /tmp/ccp7qfC7.s:1451   .text:00000000000007ba _ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelperC2ERKNS_11TestDetailsE
     /tmp/ccp7qfC7.s:1451   .text:00000000000007ba _ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelperC1ERKNS_11TestDetailsE
     /tmp/ccp7qfC7.s:1487   .text:00000000000007e8 _ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteC2Ev
     /tmp/ccp7qfC7.s:10000  .data.rel.ro.local:00000000000000a0 _ZTVN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteE
     /tmp/ccp7qfC7.s:1487   .text:00000000000007e8 _ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteC1Ev
     /tmp/ccp7qfC7.s:1526   .bss:0000000000000040 _ZN8UnitTest12_GLOBAL__N_178testDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteInstanceE
     /tmp/ccp7qfC7.s:1526   .bss:0000000000000078 _ZN8UnitTest12_GLOBAL__N_171adderDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteE
     /tmp/ccp7qfC7.s:1531   .text:0000000000000838 _ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelperD2Ev
     /tmp/ccp7qfC7.s:1531   .text:0000000000000838 _ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelperD1Ev
     /tmp/ccp7qfC7.s:1558   .text:0000000000000854 _ZNK8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuite7RunImplEv
     /tmp/ccp7qfC7.s:5697   .text:00000000000027a6 _ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccp7qfC7.s:1918   .text:0000000000000b80 _ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelper7RunImplEv
     /tmp/ccp7qfC7.s:6070   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
     /tmp/ccp7qfC7.s:6105   .text._ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
     /tmp/ccp7qfC7.s:2163   .text:0000000000000d6a _ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperC2ERKNS_11TestDetailsE
     /tmp/ccp7qfC7.s:2163   .text:0000000000000d6a _ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperC1ERKNS_11TestDetailsE
     /tmp/ccp7qfC7.s:2198   .text:0000000000000d98 _ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeC2Ev
     /tmp/ccp7qfC7.s:9892   .data.rel.ro.local:0000000000000078 _ZTVN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
     /tmp/ccp7qfC7.s:2198   .text:0000000000000d98 _ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeC1Ev
     /tmp/ccp7qfC7.s:2237   .bss:0000000000000080 _ZN8UnitTest12_GLOBAL__N_168testDeferredTestReporterFixtureReportTestEndCapturesTestTimeInstanceE
     /tmp/ccp7qfC7.s:2237   .bss:00000000000000b8 _ZN8UnitTest12_GLOBAL__N_161adderDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
     /tmp/ccp7qfC7.s:2242   .text:0000000000000de8 _ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperD2Ev
     /tmp/ccp7qfC7.s:2242   .text:0000000000000de8 _ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperD1Ev
     /tmp/ccp7qfC7.s:2269   .text:0000000000000e04 _ZNK8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTime7RunImplEv
     /tmp/ccp7qfC7.s:6251   .text:0000000000002a95 _ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccp7qfC7.s:2626   .text:0000000000001130 _ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelper7RunImplEv
     /tmp/ccp7qfC7.s:6626   .text._ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE
     /tmp/ccp7qfC7.s:2801   .text:000000000000128e _ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperC2ERKNS_11TestDetailsE
     /tmp/ccp7qfC7.s:2801   .text:000000000000128e _ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperC1ERKNS_11TestDetailsE
     /tmp/ccp7qfC7.s:2837   .text:00000000000012bc _ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsC2Ev
     /tmp/ccp7qfC7.s:9784   .data.rel.ro.local:0000000000000050 _ZTVN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsE
     /tmp/ccp7qfC7.s:2837   .text:00000000000012bc _ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsC1Ev
     /tmp/ccp7qfC7.s:2876   .bss:00000000000000c0 _ZN8UnitTest12_GLOBAL__N_171testDeferredTestReporterFixtureReportFailureSavesFailureDetailsInstanceE
     /tmp/ccp7qfC7.s:2876   .bss:00000000000000f8 _ZN8UnitTest12_GLOBAL__N_164adderDeferredTestReporterFixtureReportFailureSavesFailureDetailsE
     /tmp/ccp7qfC7.s:2881   .text:000000000000130c _ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperD2Ev
     /tmp/ccp7qfC7.s:2881   .text:000000000000130c _ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperD1Ev
     /tmp/ccp7qfC7.s:2908   .text:0000000000001328 _ZNK8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetails7RunImplEv
     /tmp/ccp7qfC7.s:6792   .text:0000000000002d84 _ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccp7qfC7.s:3272   .text:0000000000001654 _ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper7RunImplEv
     /tmp/ccp7qfC7.s:7164   .text._ZN8UnitTest5CheckIbEEbT_:0000000000000000 _ZN8UnitTest5CheckIbEEbT_
     /tmp/ccp7qfC7.s:3532   .text:0000000000001868 _ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresHelperC2ERKNS_11TestDetailsE
     /tmp/ccp7qfC7.s:3532   .text:0000000000001868 _ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresHelperC1ERKNS_11TestDetailsE
     /tmp/ccp7qfC7.s:3568   .text:0000000000001896 _ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresC2Ev
     /tmp/ccp7qfC7.s:9676   .data.rel.ro.local:0000000000000028 _ZTVN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresE
     /tmp/ccp7qfC7.s:3568   .text:0000000000001896 _ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresC1Ev
     /tmp/ccp7qfC7.s:3607   .bss:0000000000000100 _ZN8UnitTest12_GLOBAL__N_190testDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresInstanceE
     /tmp/ccp7qfC7.s:3607   .bss:0000000000000138 _ZN8UnitTest12_GLOBAL__N_183adderDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresE
     /tmp/ccp7qfC7.s:3612   .text:00000000000018e6 _ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresHelperD2Ev
     /tmp/ccp7qfC7.s:3612   .text:00000000000018e6 _ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresHelperD1Ev
     /tmp/ccp7qfC7.s:3639   .text:0000000000001902 _ZNK8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailures7RunImplEv
     /tmp/ccp7qfC7.s:7187   .text:0000000000003073 _ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccp7qfC7.s:4006   .text:0000000000001c2e _ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresHelper7RunImplEv
     /tmp/ccp7qfC7.s:7560   .text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv:0000000000000000 _ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv
     /tmp/ccp7qfC7.s:7595   .text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEixEm:0000000000000000 _ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEixEm
     /tmp/ccp7qfC7.s:4354   .text:0000000000001f20 _ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageHelperC2ERKNS_11TestDetailsE
     /tmp/ccp7qfC7.s:4354   .text:0000000000001f20 _ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageHelperC1ERKNS_11TestDetailsE
     /tmp/ccp7qfC7.s:4390   .text:0000000000001f4e _ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageC2Ev
     /tmp/ccp7qfC7.s:9568   .data.rel.ro.local:0000000000000000 _ZTVN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageE
     /tmp/ccp7qfC7.s:4390   .text:0000000000001f4e _ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageC1Ev
     /tmp/ccp7qfC7.s:4429   .bss:0000000000000140 _ZN8UnitTest12_GLOBAL__N_184testDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageInstanceE
     /tmp/ccp7qfC7.s:4429   .bss:0000000000000178 _ZN8UnitTest12_GLOBAL__N_177adderDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageE
     /tmp/ccp7qfC7.s:4434   .text:0000000000001f9e _ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageHelperD2Ev
     /tmp/ccp7qfC7.s:4434   .text:0000000000001f9e _ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageHelperD1Ev
     /tmp/ccp7qfC7.s:4461   .text:0000000000001fba _ZNK8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessage7RunImplEv
     /tmp/ccp7qfC7.s:7627   .text:0000000000003362 _ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccp7qfC7.s:4822   .text:00000000000022e6 _ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageHelper7RunImplEv
     /tmp/ccp7qfC7.s:8000   .text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE2atEm:0000000000000000 _ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE2atEm
     /tmp/ccp7qfC7.s:5016   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev
     /tmp/ccp7qfC7.s:8067   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev
     /tmp/ccp7qfC7.s:5049   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
     /tmp/ccp7qfC7.s:8186   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
     /tmp/ccp7qfC7.s:8209   .text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E:0000000000000000 _ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E
     /tmp/ccp7qfC7.s:8099   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
     /tmp/ccp7qfC7.s:8246   .text._ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE14_M_range_checkEm:0000000000000000 _ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE14_M_range_checkEm
     /tmp/ccp7qfC7.s:8293   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEixEm:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEixEm
     /tmp/ccp7qfC7.s:8323   .text._ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE:0000000000000000 _ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE
     /tmp/ccp7qfC7.s:8356   .text._ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_:0000000000000000 _ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_
     /tmp/ccp7qfC7.s:8411   .text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE14_M_range_checkEm:0000000000000000 _ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE14_M_range_checkEm
     /tmp/ccp7qfC7.s:8036   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev
     /tmp/ccp7qfC7.s:8493   .text._ZNSaIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEED2Ev
     /tmp/ccp7qfC7.s:8036   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
     /tmp/ccp7qfC7.s:8458   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC1Ev
     /tmp/ccp7qfC7.s:8067   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev
     /tmp/ccp7qfC7.s:8525   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m
     /tmp/ccp7qfC7.s:8099   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
     /tmp/ccp7qfC7.s:8562   .text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_:0000000000000000 _ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_
     /tmp/ccp7qfC7.s:8458   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC2Ev
     /tmp/ccp7qfC7.s:8594   .text._ZNSaIN8UnitTest18DeferredTestResultEEC2Ev:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEEC2Ev
     /tmp/ccp7qfC7.s:8626   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE17_Vector_impl_dataC2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE17_Vector_impl_dataC2Ev
     /tmp/ccp7qfC7.s:8662   .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev
     /tmp/ccp7qfC7.s:8493   .text._ZNSaIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEED1Ev
     /tmp/ccp7qfC7.s:8687   .text._ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEES2_E10deallocateERS3_PS2_m:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEES2_E10deallocateERS3_PS2_m
     /tmp/ccp7qfC7.s:8720   .text._ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_:0000000000000000 _ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_
     /tmp/ccp7qfC7.s:8762   .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev
     /tmp/ccp7qfC7.s:8594   .text._ZNSaIN8UnitTest18DeferredTestResultEEC2Ev:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEEC1Ev
     /tmp/ccp7qfC7.s:8626   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE17_Vector_impl_dataC2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE17_Vector_impl_dataC1Ev
     /tmp/ccp7qfC7.s:8662   .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED1Ev
     /tmp/ccp7qfC7.s:8787   .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m
     /tmp/ccp7qfC7.s:8816   .text._ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_:0000000000000000 _ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_
     /tmp/ccp7qfC7.s:8966   .text._ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_:0000000000000000 _ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_
     /tmp/ccp7qfC7.s:8762   .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC1Ev
     /tmp/ccp7qfC7.s:8841   .text._ZN8UnitTest18DeferredTestResultD2Ev:0000000000000000 _ZN8UnitTest18DeferredTestResultD2Ev
     /tmp/ccp7qfC7.s:8994   .text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:0000000000000000 _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev
     /tmp/ccp7qfC7.s:8841   .text._ZN8UnitTest18DeferredTestResultD2Ev:0000000000000000 _ZN8UnitTest18DeferredTestResultD1Ev
     /tmp/ccp7qfC7.s:8994   .text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:0000000000000000 _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev
     /tmp/ccp7qfC7.s:9203   .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_M_get_Tp_allocatorEv:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_M_get_Tp_allocatorEv
     /tmp/ccp7qfC7.s:9226   .text._ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT0_E:0000000000000000 _ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT0_E
     /tmp/ccp7qfC7.s:9113   .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev
     /tmp/ccp7qfC7.s:9082   .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD2Ev
     /tmp/ccp7qfC7.s:9258   .text._ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:0000000000000000 _ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev
     /tmp/ccp7qfC7.s:9082   .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD1Ev
     /tmp/ccp7qfC7.s:9289   .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_M_deallocateEPS7_m:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_M_deallocateEPS7_m
     /tmp/ccp7qfC7.s:9113   .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev
     /tmp/ccp7qfC7.s:9326   .text._ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_:0000000000000000 _ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_
     /tmp/ccp7qfC7.s:9357   .text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev
     /tmp/ccp7qfC7.s:9258   .text._ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:0000000000000000 _ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev
     /tmp/ccp7qfC7.s:9381   .text._ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES8_E10deallocateERS9_PS8_m:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES8_E10deallocateERS9_PS8_m
     /tmp/ccp7qfC7.s:9413   .text._ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvT_SB_:0000000000000000 _ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvT_SB_
     /tmp/ccp7qfC7.s:9357   .text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev
     /tmp/ccp7qfC7.s:9455   .text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateEPS8_m:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateEPS8_m
     /tmp/ccp7qfC7.s:9484   .text._ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_:0000000000000000 _ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_
     /tmp/ccp7qfC7.s:9540   .text._ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_:0000000000000000 _ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_
     /tmp/ccp7qfC7.s:9508   .text._ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:0000000000000000 _ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev
     /tmp/ccp7qfC7.s:9508   .text._ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:0000000000000000 _ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev
     /tmp/ccp7qfC7.s:10603  .data.rel.ro:0000000000000040 _ZTIN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageE
     /tmp/ccp7qfC7.s:9577   .text:0000000000003652 _ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageD1Ev
     /tmp/ccp7qfC7.s:9608   .text:0000000000003680 _ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageD0Ev
     /tmp/ccp7qfC7.s:9577   .text:0000000000003652 _ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageD2Ev
     /tmp/ccp7qfC7.s:10617  .data.rel.ro:0000000000000058 _ZTIN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresE
     /tmp/ccp7qfC7.s:9685   .text:00000000000036d0 _ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresD1Ev
     /tmp/ccp7qfC7.s:9716   .text:00000000000036fe _ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresD0Ev
     /tmp/ccp7qfC7.s:9685   .text:00000000000036d0 _ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresD2Ev
     /tmp/ccp7qfC7.s:10631  .data.rel.ro:0000000000000070 _ZTIN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsE
     /tmp/ccp7qfC7.s:9793   .text:000000000000374e _ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD1Ev
     /tmp/ccp7qfC7.s:9824   .text:000000000000377c _ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD0Ev
     /tmp/ccp7qfC7.s:9793   .text:000000000000374e _ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD2Ev
     /tmp/ccp7qfC7.s:10645  .data.rel.ro:0000000000000088 _ZTIN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
     /tmp/ccp7qfC7.s:9901   .text:00000000000037cc _ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD1Ev
     /tmp/ccp7qfC7.s:9932   .text:00000000000037fa _ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD0Ev
     /tmp/ccp7qfC7.s:9901   .text:00000000000037cc _ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD2Ev
     /tmp/ccp7qfC7.s:10659  .data.rel.ro:00000000000000a0 _ZTIN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteE
     /tmp/ccp7qfC7.s:10009  .text:000000000000384a _ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteD1Ev
     /tmp/ccp7qfC7.s:10040  .text:0000000000003878 _ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteD0Ev
     /tmp/ccp7qfC7.s:10009  .text:000000000000384a _ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteD2Ev
     /tmp/ccp7qfC7.s:10673  .data.rel.ro:00000000000000b8 _ZTIN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestE
     /tmp/ccp7qfC7.s:10117  .text:00000000000038c8 _ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestD1Ev
     /tmp/ccp7qfC7.s:10148  .text:00000000000038f6 _ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestD0Ev
     /tmp/ccp7qfC7.s:10117  .text:00000000000038c8 _ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestD2Ev
     /tmp/ccp7qfC7.s:10687  .data.rel.ro:00000000000000d0 _ZTIN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE
     /tmp/ccp7qfC7.s:10259  .text:0000000000003974 _ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD0Ev
     /tmp/ccp7qfC7.s:10228  .text:0000000000003946 _ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD2Ev
     /tmp/ccp7qfC7.s:10696  .data.rel.ro._ZTIN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTIN8UnitTest15MemoryOutStreamE
     /tmp/ccp7qfC7.s:10515  .text._ZN8UnitTest15MemoryOutStreamD0Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamD0Ev
     /tmp/ccp7qfC7.s:10500  .text._ZN8UnitTest15MemoryOutStreamD1Ev:00000000000000b6 _ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
     /tmp/ccp7qfC7.s:10582  .text._ZN8UnitTest15MemoryOutStreamD0Ev:000000000000004f _ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
     /tmp/ccp7qfC7.s:10357  .data.rel.ro._ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE:0000000000000000 _ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
     /tmp/ccp7qfC7.s:10374  .data.rel.ro._ZTCN8UnitTest15MemoryOutStreamE0_So:0000000000000000 _ZTCN8UnitTest15MemoryOutStreamE0_So
     /tmp/ccp7qfC7.s:10597  .rodata:00000000000005e0 _ZTSN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageE
     /tmp/ccp7qfC7.s:10611  .rodata:0000000000000660 _ZTSN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresE
     /tmp/ccp7qfC7.s:10625  .rodata:00000000000006e0 _ZTSN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsE
     /tmp/ccp7qfC7.s:10639  .rodata:0000000000000740 _ZTSN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
     /tmp/ccp7qfC7.s:10653  .rodata:00000000000007a0 _ZTSN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteE
     /tmp/ccp7qfC7.s:10667  .rodata:0000000000000820 _ZTSN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestE
     /tmp/ccp7qfC7.s:10681  .rodata:00000000000008a0 _ZTSN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE
     /tmp/ccp7qfC7.s:10705  .rodata._ZTSN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTSN8UnitTest15MemoryOutStreamE
     /tmp/ccp7qfC7.s:10709  .text:00000000000039c3 _Z41__static_initialization_and_destruction_0ii
     /tmp/ccp7qfC7.s:10852  .text:0000000000003bf3 _GLOBAL__sub_I_TestDeferredTestReporter.cpp
                           .group:0000000000000000 _ZN8UnitTest12TestReporterC5Ev
                           .group:0000000000000000 _ZN8UnitTest20DeferredTestReporterC5Ev
                           .group:0000000000000000 _ZN8UnitTest20DeferredTestReporterD5Ev
                           .group:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC5Ev
                           .group:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC5Ev
                           .group:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEED5Ev
                           .group:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEEC5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE17_Vector_impl_dataC5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC5Ev
                           .group:0000000000000000 _ZN8UnitTest18DeferredTestResultD5Ev
                           .group:0000000000000000 _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED5Ev
                           .group:0000000000000000 _ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED5Ev
                           .group:0000000000000000 _ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED5Ev

UNDEFINED SYMBOLS
_ZNSt9basic_iosIcSt11char_traitsIcEEC2Ev
_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC2Ev
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev
_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
_Unwind_Resume
__gxx_personality_v0
_ZTVN8UnitTest12TestReporterE
_ZTVN8UnitTest20DeferredTestReporterE
_ZN8UnitTest12TestReporterD2Ev
_ZdlPv
_ZNSaIcEC1Ev
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_
_ZNSaIcED1Ev
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv
_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
__stack_chk_fail
_ZN8UnitTest4TestC2EPKcS2_S2_i
__cxa_begin_catch
_ZN8UnitTest11CurrentTest7ResultsEv
_ZNK8UnitTest15AssertException10LineNumberEv
_ZNK8UnitTest15AssertException8FilenameEv
_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
__cxa_end_catch
_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
_ZNK8UnitTest15MemoryOutStream7GetTextEv
_ZN8UnitTest11TestDetailsC1ERKS0_i
_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
_ZN8UnitTest11CurrentTest7DetailsEv
_ZN8UnitTest20DeferredTestReporter10GetResultsEv
_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
strcpy
_ZN8UnitTest16SignalTranslatorC1Ev
_ZN8UnitTest16SignalTranslator12s_jumpTargetE
__sigsetjmp
__cxa_allocate_exception
_ZTIPKc
__cxa_throw
_ZN8UnitTest16SignalTranslatorD1Ev
_ZNSolsEi
_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE
_ZNSolsEf
_ZSt24__throw_out_of_range_fmtPKcz
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
_ZN8UnitTest4TestD2Ev
_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
_ZTISo
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTIN8UnitTest4TestE
_ZTIN8UnitTest20DeferredTestReporterE
__dso_handle
__cxa_atexit
_ZN8UnitTest4Test11GetTestListEv
_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
_ZTIN8UnitTest15AssertExceptionE
_ZTISt9exception
