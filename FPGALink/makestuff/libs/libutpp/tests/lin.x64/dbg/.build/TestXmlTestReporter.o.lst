   1              		.file	"TestXmlTestReporter.cpp"
   2              		.text
   3              	.Ltext0:
   4              		.file 0 "/home/pong/FPGALink/makestuff/libs/libutpp/tests" "TestXmlTestReporter.cpp"
   5              		.section	.rodata
   6              	.LC0:
   7 0000 44656661 		.string	"DefaultSuite"
   7      756C7453 
   7      75697465 
   7      00
   8              		.section	.text._ZN13UnitTestSuite12GetSuiteNameEv,"axG",@progbits,_ZN13UnitTestSuite12GetSuiteName
   9              		.weak	_ZN13UnitTestSuite12GetSuiteNameEv
  11              	_ZN13UnitTestSuite12GetSuiteNameEv:
  12              	.LFB0:
  13              		.file 1 "../TestSuite.h"
   1:../TestSuite.h **** #ifndef UNITTEST_TESTSUITE_H
   2:../TestSuite.h **** #define UNITTEST_TESTSUITE_H
   3:../TestSuite.h **** 
   4:../TestSuite.h **** namespace UnitTestSuite {
   5:../TestSuite.h **** 
   6:../TestSuite.h ****     inline char const* GetSuiteName ()
   7:../TestSuite.h ****     {
  14              		.loc 1 7 5
  15              		.cfi_startproc
  16 0000 F30F1EFA 		endbr64
  17 0004 55       		pushq	%rbp
  18              		.cfi_def_cfa_offset 16
  19              		.cfi_offset 6, -16
  20 0005 4889E5   		movq	%rsp, %rbp
  21              		.cfi_def_cfa_register 6
   8:../TestSuite.h ****         return "DefaultSuite";
  22              		.loc 1 8 16
  23 0008 488D0500 		leaq	.LC0(%rip), %rax
  23      000000
   9:../TestSuite.h ****     }
  24              		.loc 1 9 5
  25 000f 5D       		popq	%rbp
  26              		.cfi_def_cfa 7, 8
  27 0010 C3       		ret
  28              		.cfi_endproc
  29              	.LFE0:
  31              		.section	.text._ZN8UnitTest15MemoryOutStreamC1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamC1Ev
  32              		.align 2
  33              		.weak	_ZN8UnitTest15MemoryOutStreamC1Ev
  35              	_ZN8UnitTest15MemoryOutStreamC1Ev:
  36              	.LFB1129:
  37              		.file 2 "../MemoryOutStream.h"
   1:../MemoryOutStream.h **** #ifndef UNITTEST_MEMORYOUTSTREAM_H
   2:../MemoryOutStream.h **** #define UNITTEST_MEMORYOUTSTREAM_H
   3:../MemoryOutStream.h **** 
   4:../MemoryOutStream.h **** #include "Config.h"
   5:../MemoryOutStream.h **** 
   6:../MemoryOutStream.h **** #ifndef UNITTEST_USE_CUSTOM_STREAMS
   7:../MemoryOutStream.h **** 
   8:../MemoryOutStream.h **** #include <sstream>
   9:../MemoryOutStream.h **** 
  10:../MemoryOutStream.h **** namespace UnitTest
  11:../MemoryOutStream.h **** {
  12:../MemoryOutStream.h **** 
  13:../MemoryOutStream.h **** class MemoryOutStream : public std::ostringstream
  14:../MemoryOutStream.h **** {
  15:../MemoryOutStream.h **** public:
  16:../MemoryOutStream.h ****     MemoryOutStream() {}
  38              		.loc 2 16 5
  39              		.cfi_startproc
  40              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  41              		.cfi_lsda 0x1b,.LLSDA1129
  42 0000 F30F1EFA 		endbr64
  43 0004 55       		pushq	%rbp
  44              		.cfi_def_cfa_offset 16
  45              		.cfi_offset 6, -16
  46 0005 4889E5   		movq	%rsp, %rbp
  47              		.cfi_def_cfa_register 6
  48 0008 53       		pushq	%rbx
  49 0009 4883EC18 		subq	$24, %rsp
  50              		.cfi_offset 3, -24
  51 000d 48897DE8 		movq	%rdi, -24(%rbp)
  52              	.LBB2:
  53              		.loc 2 16 23
  54 0011 488B45E8 		movq	-24(%rbp), %rax
  55 0015 48059000 		addq	$144, %rax
  55      0000
  56 001b 4889C7   		movq	%rax, %rdi
  57              	.LEHB0:
  58 001e E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEEC2Ev@PLT
  58      00
  59              	.LEHE0:
  60 0023 488B45E8 		movq	-24(%rbp), %rax
  61 0027 488D1500 		leaq	8+_ZTTN8UnitTest15MemoryOutStreamE(%rip), %rdx
  61      000000
  62 002e 4889D6   		movq	%rdx, %rsi
  63 0031 4889C7   		movq	%rax, %rdi
  64              	.LEHB1:
  65 0034 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC2Ev@PLT
  65      00
  66              	.LEHE1:
  67              		.loc 2 16 23 is_stmt 0 discriminator 2
  68 0039 488D1500 		leaq	24+_ZTVN8UnitTest15MemoryOutStreamE(%rip), %rdx
  68      000000
  69 0040 488B45E8 		movq	-24(%rbp), %rax
  70 0044 488910   		movq	%rdx, (%rax)
  71 0047 488B45E8 		movq	-24(%rbp), %rax
  72 004b 48059000 		addq	$144, %rax
  72      0000
  73 0051 488D1500 		leaq	64+_ZTVN8UnitTest15MemoryOutStreamE(%rip), %rdx
  73      000000
  74 0058 488910   		movq	%rdx, (%rax)
  75 005b 488B45E8 		movq	-24(%rbp), %rax
  76 005f 4883C070 		addq	$112, %rax
  77 0063 4889C7   		movq	%rax, %rdi
  78              	.LEHB2:
  79 0066 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@PLT
  79      00
  80              	.LEHE2:
  81              	.LBE2:
  82              		.loc 2 16 24 is_stmt 1
  83 006b EB43     		jmp	.L8
  84              	.L7:
  85 006d F30F1EFA 		endbr64
  86              	.LBB3:
  87 0071 4889C3   		movq	%rax, %rbx
  88 0074 488B45E8 		movq	-24(%rbp), %rax
  89 0078 488D1500 		leaq	8+_ZTTN8UnitTest15MemoryOutStreamE(%rip), %rdx
  89      000000
  90 007f 4889D6   		movq	%rdx, %rsi
  91 0082 4889C7   		movq	%rax, %rdi
  92 0085 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev@PLT
  92      00
  93 008a EB07     		jmp	.L5
  94              	.L6:
  95 008c F30F1EFA 		endbr64
  96 0090 4889C3   		movq	%rax, %rbx
  97              	.L5:
  98              		.loc 2 16 24 is_stmt 0 discriminator 1
  99 0093 488B45E8 		movq	-24(%rbp), %rax
 100 0097 48059000 		addq	$144, %rax
 100      0000
 101 009d 4889C7   		movq	%rax, %rdi
 102 00a0 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev@PLT
 102      00
 103 00a5 4889D8   		movq	%rbx, %rax
 104 00a8 4889C7   		movq	%rax, %rdi
 105              	.LEHB3:
 106 00ab E8000000 		call	_Unwind_Resume@PLT
 106      00
 107              	.LEHE3:
 108              	.L8:
 109              	.LBE3:
 110              		.loc 2 16 24
 111 00b0 488B5DF8 		movq	-8(%rbp), %rbx
 112 00b4 C9       		leave
 113              		.cfi_def_cfa 7, 8
 114 00b5 C3       		ret
 115              		.cfi_endproc
 116              	.LFE1129:
 117              		.globl	__gxx_personality_v0
 118              		.section	.gcc_except_table._ZN8UnitTest15MemoryOutStreamC1Ev,"aG",@progbits,_ZN8UnitTest15MemoryOu
 119              	.LLSDA1129:
 120 0000 FF       		.byte	0xff
 121 0001 FF       		.byte	0xff
 122 0002 01       		.byte	0x1
 123 0003 12       		.uleb128 .LLSDACSE1129-.LLSDACSB1129
 124              	.LLSDACSB1129:
 125 0004 1E       		.uleb128 .LEHB0-.LFB1129
 126 0005 05       		.uleb128 .LEHE0-.LEHB0
 127 0006 00       		.uleb128 0
 128 0007 00       		.uleb128 0
 129 0008 34       		.uleb128 .LEHB1-.LFB1129
 130 0009 05       		.uleb128 .LEHE1-.LEHB1
 131 000a 8C01     		.uleb128 .L6-.LFB1129
 132 000c 00       		.uleb128 0
 133 000d 66       		.uleb128 .LEHB2-.LFB1129
 134 000e 05       		.uleb128 .LEHE2-.LEHB2
 135 000f 6D       		.uleb128 .L7-.LFB1129
 136 0010 00       		.uleb128 0
 137 0011 AB01     		.uleb128 .LEHB3-.LFB1129
 138 0013 05       		.uleb128 .LEHE3-.LEHB3
 139 0014 00       		.uleb128 0
 140 0015 00       		.uleb128 0
 141              	.LLSDACSE1129:
 142              		.section	.text._ZN8UnitTest15MemoryOutStreamC1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamC1Ev
 144              		.text
 145              		.align 2
 147              	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev:
 148              	.LFB1406:
 149              		.file 3 "TestXmlTestReporter.cpp"
   1:TestXmlTestReporter.cpp **** #include "../UnitTest++.h"
   2:TestXmlTestReporter.cpp **** #include "../XmlTestReporter.h"
   3:TestXmlTestReporter.cpp **** 
   4:TestXmlTestReporter.cpp **** #include <sstream>
   5:TestXmlTestReporter.cpp **** 
   6:TestXmlTestReporter.cpp **** using namespace UnitTest;
   7:TestXmlTestReporter.cpp **** using std::ostringstream;
   8:TestXmlTestReporter.cpp **** 
   9:TestXmlTestReporter.cpp **** namespace
  10:TestXmlTestReporter.cpp **** {
  11:TestXmlTestReporter.cpp **** 
  12:TestXmlTestReporter.cpp **** #ifdef UNITTEST_USE_CUSTOM_STREAMS
  13:TestXmlTestReporter.cpp **** 
  14:TestXmlTestReporter.cpp **** // Overload to let MemoryOutStream accept std::string
  15:TestXmlTestReporter.cpp **** MemoryOutStream& operator<<(MemoryOutStream& s, const std::string& value)
  16:TestXmlTestReporter.cpp **** {
  17:TestXmlTestReporter.cpp ****     s << value.c_str();
  18:TestXmlTestReporter.cpp ****     return s;
  19:TestXmlTestReporter.cpp **** }
  20:TestXmlTestReporter.cpp **** 
  21:TestXmlTestReporter.cpp **** #endif
  22:TestXmlTestReporter.cpp **** 
  23:TestXmlTestReporter.cpp **** struct XmlTestReporterFixture
  24:TestXmlTestReporter.cpp **** {
  25:TestXmlTestReporter.cpp ****     XmlTestReporterFixture()
 150              		.loc 3 25 5 is_stmt 1
 151              		.cfi_startproc
 152              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 153              		.cfi_lsda 0x1b,.LLSDA1406
 154 0000 55       		pushq	%rbp
 155              		.cfi_def_cfa_offset 16
 156              		.cfi_offset 6, -16
 157 0001 4889E5   		movq	%rsp, %rbp
 158              		.cfi_def_cfa_register 6
 159 0004 53       		pushq	%rbx
 160 0005 4883EC18 		subq	$24, %rsp
 161              		.cfi_offset 3, -24
 162 0009 48897DE8 		movq	%rdi, -24(%rbp)
 163              	.LBB4:
  26:TestXmlTestReporter.cpp ****         : reporter(output)
 164              		.loc 3 26 26
 165 000d 488B45E8 		movq	-24(%rbp), %rax
 166 0011 4889C7   		movq	%rax, %rdi
 167              	.LEHB4:
 168 0014 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC1Ev@PLT
 168      00
 169              	.LEHE4:
 170              		.loc 3 26 11
 171 0019 488B45E8 		movq	-24(%rbp), %rax
 172 001d 488D9078 		leaq	376(%rax), %rdx
 172      010000
 173 0024 488B45E8 		movq	-24(%rbp), %rax
 174 0028 4889C6   		movq	%rax, %rsi
 175 002b 4889D7   		movq	%rdx, %rdi
 176              	.LEHB5:
 177 002e E8000000 		call	_ZN8UnitTest15XmlTestReporterC1ERSo@PLT
 177      00
 178              	.LEHE5:
 179              	.LBE4:
  27:TestXmlTestReporter.cpp ****     {
  28:TestXmlTestReporter.cpp ****     }
 180              		.loc 3 28 5
 181 0033 EB1E     		jmp	.L12
 182              	.L11:
 183 0035 F30F1EFA 		endbr64
 184              	.LBB5:
 185 0039 4889C3   		movq	%rax, %rbx
 186 003c 488B45E8 		movq	-24(%rbp), %rax
 187 0040 4889C7   		movq	%rax, %rdi
 188 0043 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT
 188      00
 189 0048 4889D8   		movq	%rbx, %rax
 190 004b 4889C7   		movq	%rax, %rdi
 191              	.LEHB6:
 192 004e E8000000 		call	_Unwind_Resume@PLT
 192      00
 193              	.LEHE6:
 194              	.L12:
 195              	.LBE5:
 196 0053 488B5DF8 		movq	-8(%rbp), %rbx
 197 0057 C9       		leave
 198              		.cfi_def_cfa 7, 8
 199 0058 C3       		ret
 200              		.cfi_endproc
 201              	.LFE1406:
 202              		.section	.gcc_except_table,"a",@progbits
 203              	.LLSDA1406:
 204 0000 FF       		.byte	0xff
 205 0001 FF       		.byte	0xff
 206 0002 01       		.byte	0x1
 207 0003 0C       		.uleb128 .LLSDACSE1406-.LLSDACSB1406
 208              	.LLSDACSB1406:
 209 0004 14       		.uleb128 .LEHB4-.LFB1406
 210 0005 05       		.uleb128 .LEHE4-.LEHB4
 211 0006 00       		.uleb128 0
 212 0007 00       		.uleb128 0
 213 0008 2E       		.uleb128 .LEHB5-.LFB1406
 214 0009 05       		.uleb128 .LEHE5-.LEHB5
 215 000a 35       		.uleb128 .L11-.LFB1406
 216 000b 00       		.uleb128 0
 217 000c 4E       		.uleb128 .LEHB6-.LFB1406
 218 000d 05       		.uleb128 .LEHE6-.LEHB6
 219 000e 00       		.uleb128 0
 220 000f 00       		.uleb128 0
 221              	.LLSDACSE1406:
 222              		.text
 224 0059 90       		.align 2
 226              	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev:
 227              	.LFB1410:
  23:TestXmlTestReporter.cpp **** {
 228              		.loc 3 23 8
 229              		.cfi_startproc
 230              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 231              		.cfi_lsda 0x1b,.LLSDA1410
 232 005a 55       		pushq	%rbp
 233              		.cfi_def_cfa_offset 16
 234              		.cfi_offset 6, -16
 235 005b 4889E5   		movq	%rsp, %rbp
 236              		.cfi_def_cfa_register 6
 237 005e 53       		pushq	%rbx
 238 005f 4883EC18 		subq	$24, %rsp
 239              		.cfi_offset 3, -24
 240 0063 48897DE8 		movq	%rdi, -24(%rbp)
 241              	.LBB6:
  23:TestXmlTestReporter.cpp **** {
 242              		.loc 3 23 8
 243 0067 488B45E8 		movq	-24(%rbp), %rax
 244 006b 48057801 		addq	$376, %rax
 244      0000
 245 0071 4889C7   		movq	%rax, %rdi
 246              	.LEHB7:
 247 0074 E8000000 		call	_ZN8UnitTest15XmlTestReporterD1Ev
 247      00
 248              	.LEHE7:
  23:TestXmlTestReporter.cpp **** {
 249              		.loc 3 23 8 is_stmt 0 discriminator 2
 250 0079 488B45E8 		movq	-24(%rbp), %rax
 251 007d 4889C7   		movq	%rax, %rdi
 252              	.LEHB8:
 253 0080 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT
 253      00
 254              	.LEHE8:
 255              	.LBE6:
 256 0085 EB1E     		jmp	.L16
 257              	.L15:
 258 0087 F30F1EFA 		endbr64
 259              	.LBB7:
  23:TestXmlTestReporter.cpp **** {
 260              		.loc 3 23 8
 261 008b 4889C3   		movq	%rax, %rbx
 262 008e 488B45E8 		movq	-24(%rbp), %rax
 263 0092 4889C7   		movq	%rax, %rdi
 264 0095 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT
 264      00
 265 009a 4889D8   		movq	%rbx, %rax
 266 009d 4889C7   		movq	%rax, %rdi
 267              	.LEHB9:
 268 00a0 E8000000 		call	_Unwind_Resume@PLT
 268      00
 269              	.LEHE9:
 270              	.L16:
 271              	.LBE7:
 272 00a5 488B5DF8 		movq	-8(%rbp), %rbx
 273 00a9 C9       		leave
 274              		.cfi_def_cfa 7, 8
 275 00aa C3       		ret
 276              		.cfi_endproc
 277              	.LFE1410:
 278              		.section	.gcc_except_table
 279              	.LLSDA1410:
 280 0010 FF       		.byte	0xff
 281 0011 FF       		.byte	0xff
 282 0012 01       		.byte	0x1
 283 0013 0C       		.uleb128 .LLSDACSE1410-.LLSDACSB1410
 284              	.LLSDACSB1410:
 285 0014 1A       		.uleb128 .LEHB7-.LFB1410
 286 0015 05       		.uleb128 .LEHE7-.LEHB7
 287 0016 2D       		.uleb128 .L15-.LFB1410
 288 0017 00       		.uleb128 0
 289 0018 26       		.uleb128 .LEHB8-.LFB1410
 290 0019 05       		.uleb128 .LEHE8-.LEHB8
 291 001a 00       		.uleb128 0
 292 001b 00       		.uleb128 0
 293 001c 46       		.uleb128 .LEHB9-.LFB1410
 294 001d 05       		.uleb128 .LEHE9-.LEHB9
 295 001e 00       		.uleb128 0
 296 001f 00       		.uleb128 0
 297              	.LLSDACSE1410:
 298              		.text
 300 00ab 90       		.align 2
 302              	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperC2ERKN8UnitTest11TestDet
 303              	.LFB1412:
  29:TestXmlTestReporter.cpp **** 
  30:TestXmlTestReporter.cpp ****     ostringstream output;
  31:TestXmlTestReporter.cpp ****     XmlTestReporter reporter;
  32:TestXmlTestReporter.cpp **** };
  33:TestXmlTestReporter.cpp **** 
  34:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, MultipleCharactersAreEscaped)
 304              		.loc 3 34 1 is_stmt 1
 305              		.cfi_startproc
 306 00ac 55       		pushq	%rbp
 307              		.cfi_def_cfa_offset 16
 308              		.cfi_offset 6, -16
 309 00ad 4889E5   		movq	%rsp, %rbp
 310              		.cfi_def_cfa_register 6
 311 00b0 4883EC10 		subq	$16, %rsp
 312 00b4 48897DF8 		movq	%rdi, -8(%rbp)
 313 00b8 488975F0 		movq	%rsi, -16(%rbp)
 314              	.LBB8:
 315              		.loc 3 34 1
 316 00bc 488B45F8 		movq	-8(%rbp), %rax
 317 00c0 4889C7   		movq	%rax, %rdi
 318 00c3 E838FFFF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 318      FF
 319 00c8 488B45F8 		movq	-8(%rbp), %rax
 320 00cc 488B55F0 		movq	-16(%rbp), %rdx
 321 00d0 488990A0 		movq	%rdx, 416(%rax)
 321      010000
 322              	.LBE8:
 323 00d7 90       		nop
 324 00d8 C9       		leave
 325              		.cfi_def_cfa 7, 8
 326 00d9 C3       		ret
 327              		.cfi_endproc
 328              	.LFE1412:
 330              		.set	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperC1ERKN8UnitTest11T
 331              		.section	.rodata
 332              	.LC1:
 333 000d 54657374 		.string	"TestXmlTestReporter.cpp"
 333      586D6C54 
 333      65737452 
 333      65706F72 
 333      7465722E 
 334              	.LC2:
 335 0025 4D756C74 		.string	"MultipleCharactersAreEscaped"
 335      69706C65 
 335      43686172 
 335      61637465 
 335      72734172 
 336              		.text
 337              		.align 2
 339              	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedC2Ev:
 340              	.LFB1415:
 341              		.loc 3 34 1
 342              		.cfi_startproc
 343 00da 55       		pushq	%rbp
 344              		.cfi_def_cfa_offset 16
 345              		.cfi_offset 6, -16
 346 00db 4889E5   		movq	%rsp, %rbp
 347              		.cfi_def_cfa_register 6
 348 00de 53       		pushq	%rbx
 349 00df 4883EC18 		subq	$24, %rsp
 350              		.cfi_offset 3, -24
 351 00e3 48897DE8 		movq	%rdi, -24(%rbp)
 352              	.LBB9:
 353              		.loc 3 34 1
 354 00e7 488B5DE8 		movq	-24(%rbp), %rbx
 355 00eb E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 355      00
 356 00f0 4889C2   		movq	%rax, %rdx
 357 00f3 41B82200 		movl	$34, %r8d
 357      0000
 358 00f9 488D0500 		leaq	.LC1(%rip), %rax
 358      000000
 359 0100 4889C1   		movq	%rax, %rcx
 360 0103 488D0500 		leaq	.LC2(%rip), %rax
 360      000000
 361 010a 4889C6   		movq	%rax, %rsi
 362 010d 4889DF   		movq	%rbx, %rdi
 363 0110 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 363      00
 364 0115 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE(%rip), %rdx
 364      000000
 365 011c 488B45E8 		movq	-24(%rbp), %rax
 366 0120 488910   		movq	%rdx, (%rax)
 367              	.LBE9:
 368 0123 90       		nop
 369 0124 488B5DF8 		movq	-8(%rbp), %rbx
 370 0128 C9       		leave
 371              		.cfi_def_cfa 7, 8
 372 0129 C3       		ret
 373              		.cfi_endproc
 374              	.LFE1415:
 376              		.set	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedC1Ev,_ZN12_GLOBAL__N
 377              		.local	_ZN12_GLOBAL__N_162testXmlTestReporterFixtureMultipleCharactersAreEscapedInstanceE
 378              		.comm	_ZN12_GLOBAL__N_162testXmlTestReporterFixtureMultipleCharactersAreEscapedInstanceE,56,32
 379              		.local	_ZN12_GLOBAL__N_155adderXmlTestReporterFixtureMultipleCharactersAreEscapedE
 380              		.comm	_ZN12_GLOBAL__N_155adderXmlTestReporterFixtureMultipleCharactersAreEscapedE,1,1
 381              		.align 2
 383              	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperD2Ev:
 384              	.LFB1419:
 385              		.loc 3 34 1
 386              		.cfi_startproc
 387 012a 55       		pushq	%rbp
 388              		.cfi_def_cfa_offset 16
 389              		.cfi_offset 6, -16
 390 012b 4889E5   		movq	%rsp, %rbp
 391              		.cfi_def_cfa_register 6
 392 012e 4883EC10 		subq	$16, %rsp
 393 0132 48897DF8 		movq	%rdi, -8(%rbp)
 394              	.LBB10:
 395              		.loc 3 34 1
 396 0136 488B45F8 		movq	-8(%rbp), %rax
 397 013a 4889C7   		movq	%rax, %rdi
 398 013d E818FFFF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 398      FF
 399              	.LBE10:
 400 0142 90       		nop
 401 0143 C9       		leave
 402              		.cfi_def_cfa 7, 8
 403 0144 C3       		ret
 404              		.cfi_endproc
 405              	.LFE1419:
 407              		.set	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperD1Ev,_ZN12_GLOBAL_
 408              		.section	.rodata
 409              	.LC3:
 410 0042 556E6861 		.string	"Unhandled exception: "
 410      6E646C65 
 410      64206578 
 410      63657074 
 410      696F6E3A 
 411              		.align 8
 412              	.LC4:
 413 0058 556E6861 		.string	"Unhandled exception while destroying fixture XmlTestReporterFixture"
 413      6E646C65 
 413      64206578 
 413      63657074 
 413      696F6E20 
 414 009c 00000000 		.align 8
 415              	.LC5:
 416 00a0 556E6861 		.string	"Unhandled exception while constructing fixture XmlTestReporterFixture"
 416      6E646C65 
 416      64206578 
 416      63657074 
 416      696F6E20 
 417              		.text
 418 0145 90       		.align 2
 420              	_ZNK12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscaped7RunImplEv:
 421              	.LFB1417:
 422              		.loc 3 34 1
 423              		.cfi_startproc
 424              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 425              		.cfi_lsda 0x1b,.LLSDA1417
 426 0146 F30F1EFA 		endbr64
 427 014a 55       		pushq	%rbp
 428              		.cfi_def_cfa_offset 16
 429              		.cfi_offset 6, -16
 430 014b 4889E5   		movq	%rsp, %rbp
 431              		.cfi_def_cfa_register 6
 432 014e 4155     		pushq	%r13
 433 0150 4154     		pushq	%r12
 434 0152 53       		pushq	%rbx
 435 0153 4881EC08 		subq	$520, %rsp
 435      020000
 436              		.cfi_offset 13, -24
 437              		.cfi_offset 12, -32
 438              		.cfi_offset 3, -40
 439 015a 4889BDE8 		movq	%rdi, -536(%rbp)
 439      FDFFFF
 440              		.loc 3 34 1
 441 0161 64488B04 		movq	%fs:40, %rax
 441      25280000 
 441      00
 442 016a 488945D8 		movq	%rax, -40(%rbp)
 443 016e 31C0     		xorl	%eax, %eax
 444 0170 C685FFFD 		movb	$0, -513(%rbp)
 444      FFFF00
 445              	.LBB11:
 446 0177 488B85E8 		movq	-536(%rbp), %rax
 446      FDFFFF
 447 017e 488D5008 		leaq	8(%rax), %rdx
 448 0182 488D8530 		leaq	-464(%rbp), %rax
 448      FEFFFF
 449 0189 4889D6   		movq	%rdx, %rsi
 450 018c 4889C7   		movq	%rax, %rdi
 451              	.LEHB10:
 452 018f E818FFFF 		call	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperC1ERKN8UnitTest11T
 452      FF
 453              	.LEHE10:
 454              		.loc 3 34 1 is_stmt 0 discriminator 1
 455 0194 C685FFFD 		movb	$1, -513(%rbp)
 455      FFFF01
 456 019b 488B85E8 		movq	-536(%rbp), %rax
 456      FDFFFF
 457 01a2 488D5008 		leaq	8(%rax), %rdx
 458 01a6 488D8530 		leaq	-464(%rbp), %rax
 458      FEFFFF
 459 01ad 4889D6   		movq	%rdx, %rsi
 460 01b0 4889C7   		movq	%rax, %rdi
 461              	.LEHB11:
 462 01b3 E8332D00 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscaped
 462      00
 463              	.LEHE11:
 464              		.loc 3 34 1 discriminator 3
 465 01b8 488D8530 		leaq	-464(%rbp), %rax
 465      FEFFFF
 466 01bf 4889C7   		movq	%rax, %rdi
 467              	.LEHB12:
 468 01c2 E863FFFF 		call	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperD1Ev
 468      FF
 469              	.LEHE12:
 470              	.LBE11:
 471              		.loc 3 34 1
 472 01c7 E9840200 		jmp	.L20
 472      00
 473              	.L35:
 474 01cc F30F1EFA 		endbr64
 475              	.LBB12:
 476 01d0 4989C4   		movq	%rax, %r12
 477 01d3 4889D3   		movq	%rdx, %rbx
 478 01d6 488D8530 		leaq	-464(%rbp), %rax
 478      FEFFFF
 479 01dd 4889C7   		movq	%rax, %rdi
 480 01e0 E845FFFF 		call	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperD1Ev
 480      FF
 481 01e5 4C89E0   		movq	%r12, %rax
 482 01e8 4889DA   		movq	%rbx, %rdx
 483 01eb EB04     		jmp	.L22
 484              	.L34:
 485 01ed F30F1EFA 		endbr64
 486              	.L22:
 487              	.LBE12:
 488 01f1 4883FA01 		cmpq	$1, %rdx
 489 01f5 740F     		je	.L23
 490 01f7 4883FA02 		cmpq	$2, %rdx
 491 01fb 0F84A700 		je	.L24
 491      0000
 492 0201 E94D0100 		jmp	.L40
 492      00
 493              	.L23:
 494              	.LBB13:
 495              		.loc 3 34 1 discriminator 4
 496 0206 4889C7   		movq	%rax, %rdi
 497 0209 E8000000 		call	__cxa_begin_catch@PLT
 497      00
 498 020e 48898508 		movq	%rax, -504(%rbp)
 498      FEFFFF
 499              	.LEHB13:
 500 0215 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 500      00
 501 021a 488B18   		movq	(%rax), %rbx
 502 021d 488B8508 		movq	-504(%rbp), %rax
 502      FEFFFF
 503 0224 488B00   		movq	(%rax), %rax
 504 0227 4883C010 		addq	$16, %rax
 505 022b 488B10   		movq	(%rax), %rdx
 506 022e 488B8508 		movq	-504(%rbp), %rax
 506      FEFFFF
 507 0235 4889C7   		movq	%rax, %rdi
 508 0238 FFD2     		call	*%rdx
 509              	.LVL0:
 510 023a 4989C4   		movq	%rax, %r12
 511 023d 488B8508 		movq	-504(%rbp), %rax
 511      FEFFFF
 512 0244 4889C7   		movq	%rax, %rdi
 513 0247 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 513      00
 514              		.loc 3 34 1 discriminator 8
 515 024c 4189C5   		movl	%eax, %r13d
 516 024f 488B8508 		movq	-504(%rbp), %rax
 516      FEFFFF
 517 0256 4889C7   		movq	%rax, %rdi
 518 0259 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 518      00
 519              		.loc 3 34 1 discriminator 10
 520 025e 4889C1   		movq	%rax, %rcx
 521 0261 488B85E8 		movq	-536(%rbp), %rax
 521      FDFFFF
 522 0268 488B5008 		movq	8(%rax), %rdx
 523 026c 488B85E8 		movq	-536(%rbp), %rax
 523      FDFFFF
 524 0273 488B7010 		movq	16(%rax), %rsi
 525 0277 488D8510 		leaq	-496(%rbp), %rax
 525      FEFFFF
 526 027e 4589E8   		movl	%r13d, %r8d
 527 0281 4889C7   		movq	%rax, %rdi
 528 0284 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 528      00
 529              		.loc 3 34 1 discriminator 14
 530 0289 488D8510 		leaq	-496(%rbp), %rax
 530      FEFFFF
 531 0290 4C89E2   		movq	%r12, %rdx
 532 0293 4889C6   		movq	%rax, %rsi
 533 0296 4889DF   		movq	%rbx, %rdi
 534 0299 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 534      00
 535              	.LEHE13:
 536              		.loc 3 34 1 discriminator 16
 537 029e E8000000 		call	__cxa_end_catch@PLT
 537      00
 538              	.LBE13:
 539 02a3 E9A80100 		jmp	.L20
 539      00
 540              	.L24:
 541              	.LBB14:
 542              		.loc 3 34 1 discriminator 5
 543 02a8 4889C7   		movq	%rax, %rdi
 544 02ab E8000000 		call	__cxa_begin_catch@PLT
 544      00
 545 02b0 48898500 		movq	%rax, -512(%rbp)
 545      FEFFFF
 546              	.LBB15:
 547 02b7 488D8530 		leaq	-464(%rbp), %rax
 547      FEFFFF
 548 02be 4889C7   		movq	%rax, %rdi
 549              	.LEHB14:
 550 02c1 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 550      00
 551              	.LEHE14:
 552              		.loc 3 34 1 discriminator 18
 553 02c6 488D8530 		leaq	-464(%rbp), %rax
 553      FEFFFF
 554 02cd 488D1500 		leaq	.LC3(%rip), %rdx
 554      000000
 555 02d4 4889D6   		movq	%rdx, %rsi
 556 02d7 4889C7   		movq	%rax, %rdi
 557              	.LEHB15:
 558 02da E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 558      00
 559 02df 4889C3   		movq	%rax, %rbx
 560 02e2 488B8500 		movq	-512(%rbp), %rax
 560      FEFFFF
 561 02e9 488B00   		movq	(%rax), %rax
 562 02ec 4883C010 		addq	$16, %rax
 563 02f0 488B10   		movq	(%rax), %rdx
 564 02f3 488B8500 		movq	-512(%rbp), %rax
 564      FEFFFF
 565 02fa 4889C7   		movq	%rax, %rdi
 566 02fd FFD2     		call	*%rdx
 567              	.LVL1:
 568 02ff 4889C6   		movq	%rax, %rsi
 569 0302 4889DF   		movq	%rbx, %rdi
 570 0305 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 570      00
 571              		.loc 3 34 1 discriminator 22
 572 030a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 572      00
 573 030f 488B18   		movq	(%rax), %rbx
 574 0312 488D8530 		leaq	-464(%rbp), %rax
 574      FEFFFF
 575 0319 4889C7   		movq	%rax, %rdi
 576 031c E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 576      00
 577              		.loc 3 34 1 discriminator 24
 578 0321 4889C2   		movq	%rax, %rdx
 579 0324 488B85E8 		movq	-536(%rbp), %rax
 579      FDFFFF
 580 032b 4883C008 		addq	$8, %rax
 581 032f 4889C6   		movq	%rax, %rsi
 582 0332 4889DF   		movq	%rbx, %rdi
 583 0335 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 583      00
 584              	.LEHE15:
 585              		.loc 3 34 1 discriminator 28
 586 033a 488D8530 		leaq	-464(%rbp), %rax
 586      FEFFFF
 587 0341 4889C7   		movq	%rax, %rdi
 588              	.LEHB16:
 589 0344 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 589      00
 590              	.LEHE16:
 591              	.LBE15:
 592              		.loc 3 34 1 discriminator 29
 593 0349 E8000000 		call	__cxa_end_catch@PLT
 593      00
 594              	.LBE14:
 595 034e E9FD0000 		jmp	.L20
 595      00
 596              	.L40:
 597              		.loc 3 34 1 discriminator 6
 598 0353 4889C7   		movq	%rax, %rdi
 599 0356 E8000000 		call	__cxa_begin_catch@PLT
 599      00
 600 035b 80BDFFFD 		cmpb	$0, -513(%rbp)
 600      FFFF00
 601 0362 7445     		je	.L27
 602              	.LEHB17:
 603              		.loc 3 34 1 discriminator 31
 604 0364 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 604      00
 605 0369 488B18   		movq	(%rax), %rbx
 606 036c 488B85E8 		movq	-536(%rbp), %rax
 606      FDFFFF
 607 0373 488D4808 		leaq	8(%rax), %rcx
 608 0377 488D8510 		leaq	-496(%rbp), %rax
 608      FEFFFF
 609 037e BA220000 		movl	$34, %edx
 609      00
 610 0383 4889CE   		movq	%rcx, %rsi
 611 0386 4889C7   		movq	%rax, %rdi
 612 0389 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 612      00
 613              		.loc 3 34 1 discriminator 36
 614 038e 488D8510 		leaq	-496(%rbp), %rax
 614      FEFFFF
 615 0395 488D1500 		leaq	.LC4(%rip), %rdx
 615      000000
 616 039c 4889C6   		movq	%rax, %rsi
 617 039f 4889DF   		movq	%rbx, %rdi
 618 03a2 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 618      00
 619 03a7 EB43     		jmp	.L28
 620              	.L27:
 621              		.loc 3 34 1 discriminator 32
 622 03a9 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 622      00
 623 03ae 488B18   		movq	(%rax), %rbx
 624 03b1 488B85E8 		movq	-536(%rbp), %rax
 624      FDFFFF
 625 03b8 488D4808 		leaq	8(%rax), %rcx
 626 03bc 488D8510 		leaq	-496(%rbp), %rax
 626      FEFFFF
 627 03c3 BA220000 		movl	$34, %edx
 627      00
 628 03c8 4889CE   		movq	%rcx, %rsi
 629 03cb 4889C7   		movq	%rax, %rdi
 630 03ce E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 630      00
 631              		.loc 3 34 1 discriminator 43
 632 03d3 488D8510 		leaq	-496(%rbp), %rax
 632      FEFFFF
 633 03da 488D1500 		leaq	.LC5(%rip), %rdx
 633      000000
 634 03e1 4889C6   		movq	%rax, %rsi
 635 03e4 4889DF   		movq	%rbx, %rdi
 636 03e7 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 636      00
 637              	.LEHE17:
 638              	.L28:
 639              	.LEHB18:
 640              		.loc 3 34 1 discriminator 46
 641 03ec E8000000 		call	__cxa_end_catch@PLT
 641      00
 642 03f1 EB5D     		jmp	.L20
 643              	.L36:
 644 03f3 F30F1EFA 		endbr64
 645              	.LBB17:
 646              		.loc 3 34 1
 647 03f7 4889C3   		movq	%rax, %rbx
 648 03fa E8000000 		call	__cxa_end_catch@PLT
 648      00
 649 03ff 4889D8   		movq	%rbx, %rax
 650 0402 4889C7   		movq	%rax, %rdi
 651 0405 E8000000 		call	_Unwind_Resume@PLT
 651      00
 652              	.LEHE18:
 653              	.L38:
 654 040a F30F1EFA 		endbr64
 655              	.LBE17:
 656              	.LBB18:
 657              	.LBB16:
 658 040e 4889C3   		movq	%rax, %rbx
 659 0411 488D8530 		leaq	-464(%rbp), %rax
 659      FEFFFF
 660 0418 4889C7   		movq	%rax, %rdi
 661 041b E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 661      00
 662 0420 EB07     		jmp	.L31
 663              	.L37:
 664 0422 F30F1EFA 		endbr64
 665              	.LBE16:
 666 0426 4889C3   		movq	%rax, %rbx
 667              	.L31:
 668 0429 E8000000 		call	__cxa_end_catch@PLT
 668      00
 669 042e 4889D8   		movq	%rbx, %rax
 670 0431 4889C7   		movq	%rax, %rdi
 671              	.LEHB19:
 672 0434 E8000000 		call	_Unwind_Resume@PLT
 672      00
 673              	.LEHE19:
 674              	.L39:
 675 0439 F30F1EFA 		endbr64
 676              	.LBE18:
 677 043d 4889C3   		movq	%rax, %rbx
 678 0440 E8000000 		call	__cxa_end_catch@PLT
 678      00
 679 0445 4889D8   		movq	%rbx, %rax
 680 0448 4889C7   		movq	%rax, %rdi
 681              	.LEHB20:
 682 044b E8000000 		call	_Unwind_Resume@PLT
 682      00
 683              	.LEHE20:
 684              	.L20:
 685 0450 488B45D8 		movq	-40(%rbp), %rax
 686 0454 64482B04 		subq	%fs:40, %rax
 686      25280000 
 686      00
 687 045d 7405     		je	.L33
 688 045f E8000000 		call	__stack_chk_fail@PLT
 688      00
 689              	.L33:
 690 0464 4881C408 		addq	$520, %rsp
 690      020000
 691 046b 5B       		popq	%rbx
 692 046c 415C     		popq	%r12
 693 046e 415D     		popq	%r13
 694 0470 5D       		popq	%rbp
 695              		.cfi_def_cfa 7, 8
 696 0471 C3       		ret
 697              		.cfi_endproc
 698              	.LFE1417:
 699              		.section	.gcc_except_table
 700              		.align 4
 701              	.LLSDA1417:
 702 0020 FF       		.byte	0xff
 703 0021 9B       		.byte	0x9b
 704 0022 55       		.uleb128 .LLSDATT1417-.LLSDATTD1417
 705              	.LLSDATTD1417:
 706 0023 01       		.byte	0x1
 707 0024 3E       		.uleb128 .LLSDACSE1417-.LLSDACSB1417
 708              	.LLSDACSB1417:
 709 0025 49       		.uleb128 .LEHB10-.LFB1417
 710 0026 05       		.uleb128 .LEHE10-.LEHB10
 711 0027 A701     		.uleb128 .L34-.LFB1417
 712 0029 05       		.uleb128 0x5
 713 002a 6D       		.uleb128 .LEHB11-.LFB1417
 714 002b 05       		.uleb128 .LEHE11-.LEHB11
 715 002c 8601     		.uleb128 .L35-.LFB1417
 716 002e 07       		.uleb128 0x7
 717 002f 7C       		.uleb128 .LEHB12-.LFB1417
 718 0030 05       		.uleb128 .LEHE12-.LEHB12
 719 0031 A701     		.uleb128 .L34-.LFB1417
 720 0033 05       		.uleb128 0x5
 721 0034 CF01     		.uleb128 .LEHB13-.LFB1417
 722 0036 8901     		.uleb128 .LEHE13-.LEHB13
 723 0038 AD05     		.uleb128 .L36-.LFB1417
 724 003a 00       		.uleb128 0
 725 003b FB02     		.uleb128 .LEHB14-.LFB1417
 726 003d 05       		.uleb128 .LEHE14-.LEHB14
 727 003e DC05     		.uleb128 .L37-.LFB1417
 728 0040 00       		.uleb128 0
 729 0041 9403     		.uleb128 .LEHB15-.LFB1417
 730 0043 60       		.uleb128 .LEHE15-.LEHB15
 731 0044 C405     		.uleb128 .L38-.LFB1417
 732 0046 00       		.uleb128 0
 733 0047 FE03     		.uleb128 .LEHB16-.LFB1417
 734 0049 05       		.uleb128 .LEHE16-.LEHB16
 735 004a DC05     		.uleb128 .L37-.LFB1417
 736 004c 00       		.uleb128 0
 737 004d 9E04     		.uleb128 .LEHB17-.LFB1417
 738 004f 8801     		.uleb128 .LEHE17-.LEHB17
 739 0051 F305     		.uleb128 .L39-.LFB1417
 740 0053 00       		.uleb128 0
 741 0054 A605     		.uleb128 .LEHB18-.LFB1417
 742 0056 1E       		.uleb128 .LEHE18-.LEHB18
 743 0057 00       		.uleb128 0
 744 0058 00       		.uleb128 0
 745 0059 EE05     		.uleb128 .LEHB19-.LFB1417
 746 005b 05       		.uleb128 .LEHE19-.LEHB19
 747 005c 00       		.uleb128 0
 748 005d 00       		.uleb128 0
 749 005e 8506     		.uleb128 .LEHB20-.LFB1417
 750 0060 05       		.uleb128 .LEHE20-.LEHB20
 751 0061 00       		.uleb128 0
 752 0062 00       		.uleb128 0
 753              	.LLSDACSE1417:
 754 0063 03       		.byte	0x3
 755 0064 00       		.byte	0
 756 0065 02       		.byte	0x2
 757 0066 7D       		.byte	0x7d
 758 0067 01       		.byte	0x1
 759 0068 7D       		.byte	0x7d
 760 0069 00       		.byte	0
 761 006a 7D       		.byte	0x7d
 762 006b 00       		.align 4
 763 006c 00000000 		.long	0
 764              	
 765 0070 00000000 		.long	DW.ref._ZTISt9exception-.
 766 0074 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 767              	.LLSDATT1417:
 768              		.text
 770              		.section	.rodata
 771              	.LC6:
 772 00e6 66696C65 		.string	"filename.h"
 772      6E616D65 
 772      2E6800
 773              	.LC7:
 774 00f1 73756974 		.string	"suite"
 774      6500
 775              	.LC8:
 776 00f7 54657374 		.string	"TestName"
 776      4E616D65 
 776      00
 777              	.LC9:
 778 0100 22222727 		.string	"\"\"''&&<<>>"
 778      26263C3C 
 778      3E3E00
 779 010b 00000000 		.align 8
 779      00
 780              	.LC11:
 781 0110 3C3F786D 		.string	"<?xml version=\"1.0\"?><unittest-results tests=\"1\" failedtests=\"2\" failures=\"3\" tim
 781      6C207665 
 781      7273696F 
 781      6E3D2231 
 781      2E30223F 
 782 020d 000000   		.align 8
 783              	.LC12:
 784 0210 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(expected, output.str())"
 784      6E646C65 
 784      64206578 
 784      63657074 
 784      696F6E20 
 785              		.text
 786              		.align 2
 788              	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelper7RunImplEv:
 789              	.LFB1421:
  35:TestXmlTestReporter.cpp **** {
 790              		.loc 3 35 1 is_stmt 1
 791              		.cfi_startproc
 792              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 793              		.cfi_lsda 0x1b,.LLSDA1421
 794 0472 F30F1EFA 		endbr64
 795 0476 55       		pushq	%rbp
 796              		.cfi_def_cfa_offset 16
 797              		.cfi_offset 6, -16
 798 0477 4889E5   		movq	%rsp, %rbp
 799              		.cfi_def_cfa_register 6
 800 047a 53       		pushq	%rbx
 801 047b 4881EC98 		subq	$152, %rsp
 801      000000
 802              		.cfi_offset 3, -24
 803 0482 4889BD68 		movq	%rdi, -152(%rbp)
 803      FFFFFF
 804              		.loc 3 35 1
 805 0489 64488B04 		movq	%fs:40, %rax
 805      25280000 
 805      00
 806 0492 488945E8 		movq	%rax, -24(%rbp)
 807 0496 31C0     		xorl	%eax, %eax
  36:TestXmlTestReporter.cpp ****     TestDetails const details("TestName", "suite", "filename.h", 4321);
 808              		.loc 3 36 70
 809 0498 488D4580 		leaq	-128(%rbp), %rax
 810 049c 41B8E110 		movl	$4321, %r8d
 810      0000
 811 04a2 488D1500 		leaq	.LC6(%rip), %rdx
 811      000000
 812 04a9 4889D1   		movq	%rdx, %rcx
 813 04ac 488D1500 		leaq	.LC7(%rip), %rdx
 813      000000
 814 04b3 488D3500 		leaq	.LC8(%rip), %rsi
 814      000000
 815 04ba 4889C7   		movq	%rax, %rdi
 816              	.LEHB21:
 817 04bd E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 817      00
  37:TestXmlTestReporter.cpp **** 
  38:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(details);
 818              		.loc 3 38 29
 819 04c2 488B8568 		movq	-152(%rbp), %rax
 819      FFFFFF
 820 04c9 488D9078 		leaq	376(%rax), %rdx
 820      010000
 821 04d0 488D4580 		leaq	-128(%rbp), %rax
 822 04d4 4889C6   		movq	%rax, %rsi
 823 04d7 4889D7   		movq	%rdx, %rdi
 824 04da E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE@PLT
 824      00
  39:TestXmlTestReporter.cpp ****     reporter.ReportFailure(details, "\"\"\'\'&&<<>>");
 825              		.loc 3 39 27
 826 04df 488B8568 		movq	-152(%rbp), %rax
 826      FFFFFF
 827 04e6 488D8878 		leaq	376(%rax), %rcx
 827      010000
 828 04ed 488D4580 		leaq	-128(%rbp), %rax
 829 04f1 488D1500 		leaq	.LC9(%rip), %rdx
 829      000000
 830 04f8 4889C6   		movq	%rax, %rsi
 831 04fb 4889CF   		movq	%rcx, %rdi
 832 04fe E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc@PLT
 832      00
  40:TestXmlTestReporter.cpp ****     reporter.ReportTestFinish(details, 0.1f);
 833              		.loc 3 40 30
 834 0503 488B8568 		movq	-152(%rbp), %rax
 834      FFFFFF
 835 050a 488D8878 		leaq	376(%rax), %rcx
 835      010000
 836 0511 488D4580 		leaq	-128(%rbp), %rax
 837 0515 8B150000 		movl	.LC10(%rip), %edx
 837      0000
 838 051b 660F6EC2 		movd	%edx, %xmm0
 839 051f 4889C6   		movq	%rax, %rsi
 840 0522 4889CF   		movq	%rcx, %rdi
 841 0525 E8000000 		call	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf@PLT
 841      00
  41:TestXmlTestReporter.cpp ****     reporter.ReportSummary(1, 2, 3, 0.1f);
 842              		.loc 3 41 27
 843 052a 488B8568 		movq	-152(%rbp), %rax
 843      FFFFFF
 844 0531 488DB878 		leaq	376(%rax), %rdi
 844      010000
 845 0538 8B050000 		movl	.LC10(%rip), %eax
 845      0000
 846 053e 660F6EC0 		movd	%eax, %xmm0
 847 0542 B9030000 		movl	$3, %ecx
 847      00
 848 0547 BA020000 		movl	$2, %edx
 848      00
 849 054c BE010000 		movl	$1, %esi
 849      00
 850 0551 E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif@PLT
 850      00
 851              	.LEHE21:
  42:TestXmlTestReporter.cpp **** 
  43:TestXmlTestReporter.cpp ****     char const* expected =
 852              		.loc 3 43 17
 853 0556 488D0500 		leaq	.LC11(%rip), %rax
 853      000000
 854 055d 48898578 		movq	%rax, -136(%rbp)
 854      FFFFFF
 855              	.LEHB22:
  44:TestXmlTestReporter.cpp ****         "<?xml version=\"1.0\"?>"
  45:TestXmlTestReporter.cpp ****         "<unittest-results tests=\"1\" failedtests=\"2\" failures=\"3\" time=\"0.1\">"
  46:TestXmlTestReporter.cpp ****         "<test suite=\"suite\" name=\"TestName\" time=\"0.1\">"
  47:TestXmlTestReporter.cpp ****         "<failure message=\"filename.h(4321) : "
  48:TestXmlTestReporter.cpp ****         "&quot;&quot;&apos;&apos;&amp;&amp;&lt;&lt;&gt;&gt;\"/>"
  49:TestXmlTestReporter.cpp ****         "</test>"
  50:TestXmlTestReporter.cpp ****         "</unittest-results>";
  51:TestXmlTestReporter.cpp **** 
  52:TestXmlTestReporter.cpp ****     CHECK_EQUAL(expected, output.str());
 856              		.loc 3 52 5
 857 0564 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 857      00
 858 0569 488B08   		movq	(%rax), %rcx
 859 056c 488D45A0 		leaq	-96(%rbp), %rax
 860 0570 BA340000 		movl	$52, %edx
 860      00
 861 0575 4889CE   		movq	%rcx, %rsi
 862 0578 4889C7   		movq	%rax, %rdi
 863 057b E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 863      00
 864              		.loc 3 52 5 is_stmt 0 discriminator 4
 865 0580 488B9568 		movq	-152(%rbp), %rdx
 865      FFFFFF
 866 0587 488D45C0 		leaq	-64(%rbp), %rax
 867 058b 4889D6   		movq	%rdx, %rsi
 868 058e 4889C7   		movq	%rax, %rdi
 869 0591 E8000000 		call	_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv@PLT
 869      00
 870              	.LEHE22:
 871              	.LEHB23:
 872              		.loc 3 52 5 discriminator 6
 873 0596 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 873      00
 874 059b 488B00   		movq	(%rax), %rax
 875 059e 488D4DA0 		leaq	-96(%rbp), %rcx
 876 05a2 488D55C0 		leaq	-64(%rbp), %rdx
 877 05a6 488DB578 		leaq	-136(%rbp), %rsi
 877      FFFFFF
 878 05ad 4889C7   		movq	%rax, %rdi
 879 05b0 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 879      00
 880              	.LEHE23:
 881              		.loc 3 52 5 discriminator 10
 882 05b5 488D45C0 		leaq	-64(%rbp), %rax
 883 05b9 4889C7   		movq	%rax, %rdi
 884              	.LEHB24:
 885 05bc E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 885      00
 886              	.LEHE24:
  53:TestXmlTestReporter.cpp **** }
 887              		.loc 3 53 1 is_stmt 1
 888 05c1 EB7C     		jmp	.L41
 889              	.L48:
 890 05c3 F30F1EFA 		endbr64
  52:TestXmlTestReporter.cpp **** }
 891              		.loc 3 52 5
 892 05c7 4889C3   		movq	%rax, %rbx
 893 05ca 488D45C0 		leaq	-64(%rbp), %rax
 894 05ce 4889C7   		movq	%rax, %rdi
 895 05d1 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 895      00
 896 05d6 4889D8   		movq	%rbx, %rax
 897 05d9 EB04     		jmp	.L43
 898              	.L47:
 899 05db F30F1EFA 		endbr64
 900              	.L43:
  52:TestXmlTestReporter.cpp **** }
 901              		.loc 3 52 5 is_stmt 0 discriminator 3
 902 05df 4889C7   		movq	%rax, %rdi
 903 05e2 E8000000 		call	__cxa_begin_catch@PLT
 903      00
 904              	.LEHB25:
 905 05e7 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 905      00
 906 05ec 488B18   		movq	(%rax), %rbx
 907 05ef E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 907      00
  52:TestXmlTestReporter.cpp **** }
 908              		.loc 3 52 5 discriminator 15
 909 05f4 488B08   		movq	(%rax), %rcx
 910 05f7 488D45A0 		leaq	-96(%rbp), %rax
 911 05fb BA340000 		movl	$52, %edx
 911      00
 912 0600 4889CE   		movq	%rcx, %rsi
 913 0603 4889C7   		movq	%rax, %rdi
 914 0606 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 914      00
  52:TestXmlTestReporter.cpp **** }
 915              		.loc 3 52 5 discriminator 19
 916 060b 488D45A0 		leaq	-96(%rbp), %rax
 917 060f 488D1500 		leaq	.LC12(%rip), %rdx
 917      000000
 918 0616 4889C6   		movq	%rax, %rsi
 919 0619 4889DF   		movq	%rbx, %rdi
 920 061c E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 920      00
 921              	.LEHE25:
 922              	.LEHB26:
  52:TestXmlTestReporter.cpp **** }
 923              		.loc 3 52 5 discriminator 21
 924 0621 E8000000 		call	__cxa_end_catch@PLT
 924      00
 925              	.LEHE26:
 926              		.loc 3 53 1 is_stmt 1 discriminator 21
 927 0626 EB17     		jmp	.L41
 928              	.L49:
 929 0628 F30F1EFA 		endbr64
  52:TestXmlTestReporter.cpp **** }
 930              		.loc 3 52 5
 931 062c 4889C3   		movq	%rax, %rbx
 932 062f E8000000 		call	__cxa_end_catch@PLT
 932      00
 933 0634 4889D8   		movq	%rbx, %rax
 934 0637 4889C7   		movq	%rax, %rdi
 935              	.LEHB27:
 936 063a E8000000 		call	_Unwind_Resume@PLT
 936      00
 937              	.LEHE27:
 938              	.L41:
 939              		.loc 3 53 1
 940 063f 488B45E8 		movq	-24(%rbp), %rax
 941 0643 64482B04 		subq	%fs:40, %rax
 941      25280000 
 941      00
 942 064c 7405     		je	.L46
 943 064e E8000000 		call	__stack_chk_fail@PLT
 943      00
 944              	.L46:
 945 0653 488B5DF8 		movq	-8(%rbp), %rbx
 946 0657 C9       		leave
 947              		.cfi_def_cfa 7, 8
 948 0658 C3       		ret
 949              		.cfi_endproc
 950              	.LFE1421:
 951              		.section	.gcc_except_table
 952              		.align 4
 953              	.LLSDA1421:
 954 0078 FF       		.byte	0xff
 955 0079 9B       		.byte	0x9b
 956 007a 31       		.uleb128 .LLSDATT1421-.LLSDATTD1421
 957              	.LLSDATTD1421:
 958 007b 01       		.byte	0x1
 959 007c 27       		.uleb128 .LLSDACSE1421-.LLSDACSB1421
 960              	.LLSDACSB1421:
 961 007d 4B       		.uleb128 .LEHB21-.LFB1421
 962 007e 9901     		.uleb128 .LEHE21-.LEHB21
 963 0080 00       		.uleb128 0
 964 0081 00       		.uleb128 0
 965 0082 F201     		.uleb128 .LEHB22-.LFB1421
 966 0084 32       		.uleb128 .LEHE22-.LEHB22
 967 0085 E902     		.uleb128 .L47-.LFB1421
 968 0087 01       		.uleb128 0x1
 969 0088 A402     		.uleb128 .LEHB23-.LFB1421
 970 008a 1F       		.uleb128 .LEHE23-.LEHB23
 971 008b D102     		.uleb128 .L48-.LFB1421
 972 008d 03       		.uleb128 0x3
 973 008e CA02     		.uleb128 .LEHB24-.LFB1421
 974 0090 05       		.uleb128 .LEHE24-.LEHB24
 975 0091 E902     		.uleb128 .L47-.LFB1421
 976 0093 01       		.uleb128 0x1
 977 0094 F502     		.uleb128 .LEHB25-.LFB1421
 978 0096 3A       		.uleb128 .LEHE25-.LEHB25
 979 0097 B603     		.uleb128 .L49-.LFB1421
 980 0099 00       		.uleb128 0
 981 009a AF03     		.uleb128 .LEHB26-.LFB1421
 982 009c 05       		.uleb128 .LEHE26-.LEHB26
 983 009d 00       		.uleb128 0
 984 009e 00       		.uleb128 0
 985 009f C803     		.uleb128 .LEHB27-.LFB1421
 986 00a1 05       		.uleb128 .LEHE27-.LEHB27
 987 00a2 00       		.uleb128 0
 988 00a3 00       		.uleb128 0
 989              	.LLSDACSE1421:
 990 00a4 01       		.byte	0x1
 991 00a5 00       		.byte	0
 992 00a6 00       		.byte	0
 993 00a7 7D       		.byte	0x7d
 994              		.align 4
 995 00a8 00000000 		.long	0
 996              	
 997              	.LLSDATT1421:
 998              		.text
 1000 0659 90       		.align 2
 1002              	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperC2ERKN8UnitT
 1003              	.LFB1423:
  54:TestXmlTestReporter.cpp **** 
  55:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, OutputIsCachedUntilReportSummaryIsCalled)
 1004              		.loc 3 55 1
 1005              		.cfi_startproc
 1006 065a 55       		pushq	%rbp
 1007              		.cfi_def_cfa_offset 16
 1008              		.cfi_offset 6, -16
 1009 065b 4889E5   		movq	%rsp, %rbp
 1010              		.cfi_def_cfa_register 6
 1011 065e 4883EC10 		subq	$16, %rsp
 1012 0662 48897DF8 		movq	%rdi, -8(%rbp)
 1013 0666 488975F0 		movq	%rsi, -16(%rbp)
 1014              	.LBB19:
 1015              		.loc 3 55 1
 1016 066a 488B45F8 		movq	-8(%rbp), %rax
 1017 066e 4889C7   		movq	%rax, %rdi
 1018 0671 E88AF9FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 1018      FF
 1019 0676 488B45F8 		movq	-8(%rbp), %rax
 1020 067a 488B55F0 		movq	-16(%rbp), %rdx
 1021 067e 488990A0 		movq	%rdx, 416(%rax)
 1021      010000
 1022              	.LBE19:
 1023 0685 90       		nop
 1024 0686 C9       		leave
 1025              		.cfi_def_cfa 7, 8
 1026 0687 C3       		ret
 1027              		.cfi_endproc
 1028              	.LFE1423:
 1030              		.set	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperC1ERKN
 1031              		.section	.rodata
 1032 024b 00000000 		.align 8
 1032      00
 1033              	.LC13:
 1034 0250 4F757470 		.string	"OutputIsCachedUntilReportSummaryIsCalled"
 1034      75744973 
 1034      43616368 
 1034      6564556E 
 1034      74696C52 
 1035              		.text
 1036              		.align 2
 1038              	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledC2Ev:
 1039              	.LFB1426:
 1040              		.loc 3 55 1
 1041              		.cfi_startproc
 1042 0688 55       		pushq	%rbp
 1043              		.cfi_def_cfa_offset 16
 1044              		.cfi_offset 6, -16
 1045 0689 4889E5   		movq	%rsp, %rbp
 1046              		.cfi_def_cfa_register 6
 1047 068c 53       		pushq	%rbx
 1048 068d 4883EC18 		subq	$24, %rsp
 1049              		.cfi_offset 3, -24
 1050 0691 48897DE8 		movq	%rdi, -24(%rbp)
 1051              	.LBB20:
 1052              		.loc 3 55 1
 1053 0695 488B5DE8 		movq	-24(%rbp), %rbx
 1054 0699 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 1054      00
 1055 069e 4889C2   		movq	%rax, %rdx
 1056 06a1 41B83700 		movl	$55, %r8d
 1056      0000
 1057 06a7 488D0500 		leaq	.LC1(%rip), %rax
 1057      000000
 1058 06ae 4889C1   		movq	%rax, %rcx
 1059 06b1 488D0500 		leaq	.LC13(%rip), %rax
 1059      000000
 1060 06b8 4889C6   		movq	%rax, %rsi
 1061 06bb 4889DF   		movq	%rbx, %rdi
 1062 06be E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 1062      00
 1063 06c3 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE(%
 1063      000000
 1064 06ca 488B45E8 		movq	-24(%rbp), %rax
 1065 06ce 488910   		movq	%rdx, (%rax)
 1066              	.LBE20:
 1067 06d1 90       		nop
 1068 06d2 488B5DF8 		movq	-8(%rbp), %rbx
 1069 06d6 C9       		leave
 1070              		.cfi_def_cfa 7, 8
 1071 06d7 C3       		ret
 1072              		.cfi_endproc
 1073              	.LFE1426:
 1075              		.set	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledC1Ev,_ZN
 1076              		.local	_ZN12_GLOBAL__N_174testXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledInstan
 1077              		.comm	_ZN12_GLOBAL__N_174testXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledInstanc
 1078              		.local	_ZN12_GLOBAL__N_167adderXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE
 1079              		.comm	_ZN12_GLOBAL__N_167adderXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE,1,1
 1080              		.align 2
 1082              	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperD2Ev:
 1083              	.LFB1430:
 1084              		.loc 3 55 1
 1085              		.cfi_startproc
 1086 06d8 55       		pushq	%rbp
 1087              		.cfi_def_cfa_offset 16
 1088              		.cfi_offset 6, -16
 1089 06d9 4889E5   		movq	%rsp, %rbp
 1090              		.cfi_def_cfa_register 6
 1091 06dc 4883EC10 		subq	$16, %rsp
 1092 06e0 48897DF8 		movq	%rdi, -8(%rbp)
 1093              	.LBB21:
 1094              		.loc 3 55 1
 1095 06e4 488B45F8 		movq	-8(%rbp), %rax
 1096 06e8 4889C7   		movq	%rax, %rdi
 1097 06eb E86AF9FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 1097      FF
 1098              	.LBE21:
 1099 06f0 90       		nop
 1100 06f1 C9       		leave
 1101              		.cfi_def_cfa 7, 8
 1102 06f2 C3       		ret
 1103              		.cfi_endproc
 1104              	.LFE1430:
 1106              		.set	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperD1Ev,_
 1107 06f3 90       		.align 2
 1109              	_ZNK12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalled7RunImplEv:
 1110              	.LFB1428:
 1111              		.loc 3 55 1
 1112              		.cfi_startproc
 1113              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1114              		.cfi_lsda 0x1b,.LLSDA1428
 1115 06f4 F30F1EFA 		endbr64
 1116 06f8 55       		pushq	%rbp
 1117              		.cfi_def_cfa_offset 16
 1118              		.cfi_offset 6, -16
 1119 06f9 4889E5   		movq	%rsp, %rbp
 1120              		.cfi_def_cfa_register 6
 1121 06fc 4155     		pushq	%r13
 1122 06fe 4154     		pushq	%r12
 1123 0700 53       		pushq	%rbx
 1124 0701 4881EC08 		subq	$520, %rsp
 1124      020000
 1125              		.cfi_offset 13, -24
 1126              		.cfi_offset 12, -32
 1127              		.cfi_offset 3, -40
 1128 0708 4889BDE8 		movq	%rdi, -536(%rbp)
 1128      FDFFFF
 1129              		.loc 3 55 1
 1130 070f 64488B04 		movq	%fs:40, %rax
 1130      25280000 
 1130      00
 1131 0718 488945D8 		movq	%rax, -40(%rbp)
 1132 071c 31C0     		xorl	%eax, %eax
 1133 071e C685FFFD 		movb	$0, -513(%rbp)
 1133      FFFF00
 1134              	.LBB22:
 1135 0725 488B85E8 		movq	-536(%rbp), %rax
 1135      FDFFFF
 1136 072c 488D5008 		leaq	8(%rax), %rdx
 1137 0730 488D8530 		leaq	-464(%rbp), %rax
 1137      FEFFFF
 1138 0737 4889D6   		movq	%rdx, %rsi
 1139 073a 4889C7   		movq	%rax, %rdi
 1140              	.LEHB28:
 1141 073d E818FFFF 		call	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperC1ERKN
 1141      FF
 1142              	.LEHE28:
 1143              		.loc 3 55 1 is_stmt 0 discriminator 1
 1144 0742 C685FFFD 		movb	$1, -513(%rbp)
 1144      FFFF01
 1145 0749 488B85E8 		movq	-536(%rbp), %rax
 1145      FDFFFF
 1146 0750 488D5008 		leaq	8(%rax), %rdx
 1147 0754 488D8530 		leaq	-464(%rbp), %rax
 1147      FEFFFF
 1148 075b 4889D6   		movq	%rdx, %rsi
 1149 075e 4889C7   		movq	%rax, %rdi
 1150              	.LEHB29:
 1151 0761 E8742A00 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSum
 1151      00
 1152              	.LEHE29:
 1153              		.loc 3 55 1 discriminator 3
 1154 0766 488D8530 		leaq	-464(%rbp), %rax
 1154      FEFFFF
 1155 076d 4889C7   		movq	%rax, %rdi
 1156              	.LEHB30:
 1157 0770 E863FFFF 		call	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperD1Ev
 1157      FF
 1158              	.LEHE30:
 1159              	.LBE22:
 1160              		.loc 3 55 1
 1161 0775 E9840200 		jmp	.L53
 1161      00
 1162              	.L68:
 1163 077a F30F1EFA 		endbr64
 1164              	.LBB23:
 1165 077e 4989C4   		movq	%rax, %r12
 1166 0781 4889D3   		movq	%rdx, %rbx
 1167 0784 488D8530 		leaq	-464(%rbp), %rax
 1167      FEFFFF
 1168 078b 4889C7   		movq	%rax, %rdi
 1169 078e E845FFFF 		call	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperD1Ev
 1169      FF
 1170 0793 4C89E0   		movq	%r12, %rax
 1171 0796 4889DA   		movq	%rbx, %rdx
 1172 0799 EB04     		jmp	.L55
 1173              	.L67:
 1174 079b F30F1EFA 		endbr64
 1175              	.L55:
 1176              	.LBE23:
 1177 079f 4883FA01 		cmpq	$1, %rdx
 1178 07a3 740F     		je	.L56
 1179 07a5 4883FA02 		cmpq	$2, %rdx
 1180 07a9 0F84A700 		je	.L57
 1180      0000
 1181 07af E94D0100 		jmp	.L73
 1181      00
 1182              	.L56:
 1183              	.LBB24:
 1184              		.loc 3 55 1 discriminator 4
 1185 07b4 4889C7   		movq	%rax, %rdi
 1186 07b7 E8000000 		call	__cxa_begin_catch@PLT
 1186      00
 1187 07bc 48898508 		movq	%rax, -504(%rbp)
 1187      FEFFFF
 1188              	.LEHB31:
 1189 07c3 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1189      00
 1190 07c8 488B18   		movq	(%rax), %rbx
 1191 07cb 488B8508 		movq	-504(%rbp), %rax
 1191      FEFFFF
 1192 07d2 488B00   		movq	(%rax), %rax
 1193 07d5 4883C010 		addq	$16, %rax
 1194 07d9 488B10   		movq	(%rax), %rdx
 1195 07dc 488B8508 		movq	-504(%rbp), %rax
 1195      FEFFFF
 1196 07e3 4889C7   		movq	%rax, %rdi
 1197 07e6 FFD2     		call	*%rdx
 1198              	.LVL2:
 1199 07e8 4989C4   		movq	%rax, %r12
 1200 07eb 488B8508 		movq	-504(%rbp), %rax
 1200      FEFFFF
 1201 07f2 4889C7   		movq	%rax, %rdi
 1202 07f5 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 1202      00
 1203              		.loc 3 55 1 discriminator 8
 1204 07fa 4189C5   		movl	%eax, %r13d
 1205 07fd 488B8508 		movq	-504(%rbp), %rax
 1205      FEFFFF
 1206 0804 4889C7   		movq	%rax, %rdi
 1207 0807 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 1207      00
 1208              		.loc 3 55 1 discriminator 10
 1209 080c 4889C1   		movq	%rax, %rcx
 1210 080f 488B85E8 		movq	-536(%rbp), %rax
 1210      FDFFFF
 1211 0816 488B5008 		movq	8(%rax), %rdx
 1212 081a 488B85E8 		movq	-536(%rbp), %rax
 1212      FDFFFF
 1213 0821 488B7010 		movq	16(%rax), %rsi
 1214 0825 488D8510 		leaq	-496(%rbp), %rax
 1214      FEFFFF
 1215 082c 4589E8   		movl	%r13d, %r8d
 1216 082f 4889C7   		movq	%rax, %rdi
 1217 0832 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 1217      00
 1218              		.loc 3 55 1 discriminator 14
 1219 0837 488D8510 		leaq	-496(%rbp), %rax
 1219      FEFFFF
 1220 083e 4C89E2   		movq	%r12, %rdx
 1221 0841 4889C6   		movq	%rax, %rsi
 1222 0844 4889DF   		movq	%rbx, %rdi
 1223 0847 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1223      00
 1224              	.LEHE31:
 1225              		.loc 3 55 1 discriminator 16
 1226 084c E8000000 		call	__cxa_end_catch@PLT
 1226      00
 1227              	.LBE24:
 1228 0851 E9A80100 		jmp	.L53
 1228      00
 1229              	.L57:
 1230              	.LBB25:
 1231              		.loc 3 55 1 discriminator 5
 1232 0856 4889C7   		movq	%rax, %rdi
 1233 0859 E8000000 		call	__cxa_begin_catch@PLT
 1233      00
 1234 085e 48898500 		movq	%rax, -512(%rbp)
 1234      FEFFFF
 1235              	.LBB26:
 1236 0865 488D8530 		leaq	-464(%rbp), %rax
 1236      FEFFFF
 1237 086c 4889C7   		movq	%rax, %rdi
 1238              	.LEHB32:
 1239 086f E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 1239      00
 1240              	.LEHE32:
 1241              		.loc 3 55 1 discriminator 18
 1242 0874 488D8530 		leaq	-464(%rbp), %rax
 1242      FEFFFF
 1243 087b 488D1500 		leaq	.LC3(%rip), %rdx
 1243      000000
 1244 0882 4889D6   		movq	%rdx, %rsi
 1245 0885 4889C7   		movq	%rax, %rdi
 1246              	.LEHB33:
 1247 0888 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 1247      00
 1248 088d 4889C3   		movq	%rax, %rbx
 1249 0890 488B8500 		movq	-512(%rbp), %rax
 1249      FEFFFF
 1250 0897 488B00   		movq	(%rax), %rax
 1251 089a 4883C010 		addq	$16, %rax
 1252 089e 488B10   		movq	(%rax), %rdx
 1253 08a1 488B8500 		movq	-512(%rbp), %rax
 1253      FEFFFF
 1254 08a8 4889C7   		movq	%rax, %rdi
 1255 08ab FFD2     		call	*%rdx
 1256              	.LVL3:
 1257 08ad 4889C6   		movq	%rax, %rsi
 1258 08b0 4889DF   		movq	%rbx, %rdi
 1259 08b3 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 1259      00
 1260              		.loc 3 55 1 discriminator 22
 1261 08b8 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1261      00
 1262 08bd 488B18   		movq	(%rax), %rbx
 1263 08c0 488D8530 		leaq	-464(%rbp), %rax
 1263      FEFFFF
 1264 08c7 4889C7   		movq	%rax, %rdi
 1265 08ca E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 1265      00
 1266              		.loc 3 55 1 discriminator 24
 1267 08cf 4889C2   		movq	%rax, %rdx
 1268 08d2 488B85E8 		movq	-536(%rbp), %rax
 1268      FDFFFF
 1269 08d9 4883C008 		addq	$8, %rax
 1270 08dd 4889C6   		movq	%rax, %rsi
 1271 08e0 4889DF   		movq	%rbx, %rdi
 1272 08e3 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1272      00
 1273              	.LEHE33:
 1274              		.loc 3 55 1 discriminator 28
 1275 08e8 488D8530 		leaq	-464(%rbp), %rax
 1275      FEFFFF
 1276 08ef 4889C7   		movq	%rax, %rdi
 1277              	.LEHB34:
 1278 08f2 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 1278      00
 1279              	.LEHE34:
 1280              	.LBE26:
 1281              		.loc 3 55 1 discriminator 29
 1282 08f7 E8000000 		call	__cxa_end_catch@PLT
 1282      00
 1283              	.LBE25:
 1284 08fc E9FD0000 		jmp	.L53
 1284      00
 1285              	.L73:
 1286              		.loc 3 55 1 discriminator 6
 1287 0901 4889C7   		movq	%rax, %rdi
 1288 0904 E8000000 		call	__cxa_begin_catch@PLT
 1288      00
 1289 0909 80BDFFFD 		cmpb	$0, -513(%rbp)
 1289      FFFF00
 1290 0910 7445     		je	.L60
 1291              	.LEHB35:
 1292              		.loc 3 55 1 discriminator 31
 1293 0912 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1293      00
 1294 0917 488B18   		movq	(%rax), %rbx
 1295 091a 488B85E8 		movq	-536(%rbp), %rax
 1295      FDFFFF
 1296 0921 488D4808 		leaq	8(%rax), %rcx
 1297 0925 488D8510 		leaq	-496(%rbp), %rax
 1297      FEFFFF
 1298 092c BA370000 		movl	$55, %edx
 1298      00
 1299 0931 4889CE   		movq	%rcx, %rsi
 1300 0934 4889C7   		movq	%rax, %rdi
 1301 0937 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1301      00
 1302              		.loc 3 55 1 discriminator 36
 1303 093c 488D8510 		leaq	-496(%rbp), %rax
 1303      FEFFFF
 1304 0943 488D1500 		leaq	.LC4(%rip), %rdx
 1304      000000
 1305 094a 4889C6   		movq	%rax, %rsi
 1306 094d 4889DF   		movq	%rbx, %rdi
 1307 0950 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1307      00
 1308 0955 EB43     		jmp	.L61
 1309              	.L60:
 1310              		.loc 3 55 1 discriminator 32
 1311 0957 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1311      00
 1312 095c 488B18   		movq	(%rax), %rbx
 1313 095f 488B85E8 		movq	-536(%rbp), %rax
 1313      FDFFFF
 1314 0966 488D4808 		leaq	8(%rax), %rcx
 1315 096a 488D8510 		leaq	-496(%rbp), %rax
 1315      FEFFFF
 1316 0971 BA370000 		movl	$55, %edx
 1316      00
 1317 0976 4889CE   		movq	%rcx, %rsi
 1318 0979 4889C7   		movq	%rax, %rdi
 1319 097c E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1319      00
 1320              		.loc 3 55 1 discriminator 43
 1321 0981 488D8510 		leaq	-496(%rbp), %rax
 1321      FEFFFF
 1322 0988 488D1500 		leaq	.LC5(%rip), %rdx
 1322      000000
 1323 098f 4889C6   		movq	%rax, %rsi
 1324 0992 4889DF   		movq	%rbx, %rdi
 1325 0995 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1325      00
 1326              	.LEHE35:
 1327              	.L61:
 1328              	.LEHB36:
 1329              		.loc 3 55 1 discriminator 46
 1330 099a E8000000 		call	__cxa_end_catch@PLT
 1330      00
 1331 099f EB5D     		jmp	.L53
 1332              	.L69:
 1333 09a1 F30F1EFA 		endbr64
 1334              	.LBB28:
 1335              		.loc 3 55 1
 1336 09a5 4889C3   		movq	%rax, %rbx
 1337 09a8 E8000000 		call	__cxa_end_catch@PLT
 1337      00
 1338 09ad 4889D8   		movq	%rbx, %rax
 1339 09b0 4889C7   		movq	%rax, %rdi
 1340 09b3 E8000000 		call	_Unwind_Resume@PLT
 1340      00
 1341              	.LEHE36:
 1342              	.L71:
 1343 09b8 F30F1EFA 		endbr64
 1344              	.LBE28:
 1345              	.LBB29:
 1346              	.LBB27:
 1347 09bc 4889C3   		movq	%rax, %rbx
 1348 09bf 488D8530 		leaq	-464(%rbp), %rax
 1348      FEFFFF
 1349 09c6 4889C7   		movq	%rax, %rdi
 1350 09c9 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 1350      00
 1351 09ce EB07     		jmp	.L64
 1352              	.L70:
 1353 09d0 F30F1EFA 		endbr64
 1354              	.LBE27:
 1355 09d4 4889C3   		movq	%rax, %rbx
 1356              	.L64:
 1357 09d7 E8000000 		call	__cxa_end_catch@PLT
 1357      00
 1358 09dc 4889D8   		movq	%rbx, %rax
 1359 09df 4889C7   		movq	%rax, %rdi
 1360              	.LEHB37:
 1361 09e2 E8000000 		call	_Unwind_Resume@PLT
 1361      00
 1362              	.LEHE37:
 1363              	.L72:
 1364 09e7 F30F1EFA 		endbr64
 1365              	.LBE29:
 1366 09eb 4889C3   		movq	%rax, %rbx
 1367 09ee E8000000 		call	__cxa_end_catch@PLT
 1367      00
 1368 09f3 4889D8   		movq	%rbx, %rax
 1369 09f6 4889C7   		movq	%rax, %rdi
 1370              	.LEHB38:
 1371 09f9 E8000000 		call	_Unwind_Resume@PLT
 1371      00
 1372              	.LEHE38:
 1373              	.L53:
 1374 09fe 488B45D8 		movq	-40(%rbp), %rax
 1375 0a02 64482B04 		subq	%fs:40, %rax
 1375      25280000 
 1375      00
 1376 0a0b 7405     		je	.L66
 1377 0a0d E8000000 		call	__stack_chk_fail@PLT
 1377      00
 1378              	.L66:
 1379 0a12 4881C408 		addq	$520, %rsp
 1379      020000
 1380 0a19 5B       		popq	%rbx
 1381 0a1a 415C     		popq	%r12
 1382 0a1c 415D     		popq	%r13
 1383 0a1e 5D       		popq	%rbp
 1384              		.cfi_def_cfa 7, 8
 1385 0a1f C3       		ret
 1386              		.cfi_endproc
 1387              	.LFE1428:
 1388              		.section	.gcc_except_table
 1389              		.align 4
 1390              	.LLSDA1428:
 1391 00ac FF       		.byte	0xff
 1392 00ad 9B       		.byte	0x9b
 1393 00ae 55       		.uleb128 .LLSDATT1428-.LLSDATTD1428
 1394              	.LLSDATTD1428:
 1395 00af 01       		.byte	0x1
 1396 00b0 3E       		.uleb128 .LLSDACSE1428-.LLSDACSB1428
 1397              	.LLSDACSB1428:
 1398 00b1 49       		.uleb128 .LEHB28-.LFB1428
 1399 00b2 05       		.uleb128 .LEHE28-.LEHB28
 1400 00b3 A701     		.uleb128 .L67-.LFB1428
 1401 00b5 05       		.uleb128 0x5
 1402 00b6 6D       		.uleb128 .LEHB29-.LFB1428
 1403 00b7 05       		.uleb128 .LEHE29-.LEHB29
 1404 00b8 8601     		.uleb128 .L68-.LFB1428
 1405 00ba 07       		.uleb128 0x7
 1406 00bb 7C       		.uleb128 .LEHB30-.LFB1428
 1407 00bc 05       		.uleb128 .LEHE30-.LEHB30
 1408 00bd A701     		.uleb128 .L67-.LFB1428
 1409 00bf 05       		.uleb128 0x5
 1410 00c0 CF01     		.uleb128 .LEHB31-.LFB1428
 1411 00c2 8901     		.uleb128 .LEHE31-.LEHB31
 1412 00c4 AD05     		.uleb128 .L69-.LFB1428
 1413 00c6 00       		.uleb128 0
 1414 00c7 FB02     		.uleb128 .LEHB32-.LFB1428
 1415 00c9 05       		.uleb128 .LEHE32-.LEHB32
 1416 00ca DC05     		.uleb128 .L70-.LFB1428
 1417 00cc 00       		.uleb128 0
 1418 00cd 9403     		.uleb128 .LEHB33-.LFB1428
 1419 00cf 60       		.uleb128 .LEHE33-.LEHB33
 1420 00d0 C405     		.uleb128 .L71-.LFB1428
 1421 00d2 00       		.uleb128 0
 1422 00d3 FE03     		.uleb128 .LEHB34-.LFB1428
 1423 00d5 05       		.uleb128 .LEHE34-.LEHB34
 1424 00d6 DC05     		.uleb128 .L70-.LFB1428
 1425 00d8 00       		.uleb128 0
 1426 00d9 9E04     		.uleb128 .LEHB35-.LFB1428
 1427 00db 8801     		.uleb128 .LEHE35-.LEHB35
 1428 00dd F305     		.uleb128 .L72-.LFB1428
 1429 00df 00       		.uleb128 0
 1430 00e0 A605     		.uleb128 .LEHB36-.LFB1428
 1431 00e2 1E       		.uleb128 .LEHE36-.LEHB36
 1432 00e3 00       		.uleb128 0
 1433 00e4 00       		.uleb128 0
 1434 00e5 EE05     		.uleb128 .LEHB37-.LFB1428
 1435 00e7 05       		.uleb128 .LEHE37-.LEHB37
 1436 00e8 00       		.uleb128 0
 1437 00e9 00       		.uleb128 0
 1438 00ea 8506     		.uleb128 .LEHB38-.LFB1428
 1439 00ec 05       		.uleb128 .LEHE38-.LEHB38
 1440 00ed 00       		.uleb128 0
 1441 00ee 00       		.uleb128 0
 1442              	.LLSDACSE1428:
 1443 00ef 03       		.byte	0x3
 1444 00f0 00       		.byte	0
 1445 00f1 02       		.byte	0x2
 1446 00f2 7D       		.byte	0x7d
 1447 00f3 01       		.byte	0x1
 1448 00f4 7D       		.byte	0x7d
 1449 00f5 00       		.byte	0
 1450 00f6 7D       		.byte	0x7d
 1451 00f7 00       		.align 4
 1452 00f8 00000000 		.long	0
 1453              	
 1454 00fc 00000000 		.long	DW.ref._ZTISt9exception-.
 1455 0100 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 1456              	.LLSDATT1428:
 1457              		.text
 1459              		.section	.rodata
 1460              	.LC14:
 1461 0279 00       		.string	""
 1462              	.LC15:
 1463 027a 6D657373 		.string	"message"
 1463      61676500 
 1464              	.LC17:
 1465 0282 6F757470 		.string	"output.str().empty()"
 1465      75742E73 
 1465      74722829 
 1465      2E656D70 
 1465      74792829 
 1466              	.LC18:
 1467 0297 216F7574 		.string	"!output.str().empty()"
 1467      7075742E 
 1467      73747228 
 1467      292E656D 
 1467      70747928 
 1468 02ad 000000   		.align 8
 1469              	.LC19:
 1470 02b0 556E6861 		.string	"Unhandled exception in CHECK(output.str().empty())"
 1470      6E646C65 
 1470      64206578 
 1470      63657074 
 1470      696F6E20 
 1471 02e3 00000000 		.align 8
 1471      00
 1472              	.LC20:
 1473 02e8 556E6861 		.string	"Unhandled exception in CHECK(!output.str().empty())"
 1473      6E646C65 
 1473      64206578 
 1473      63657074 
 1473      696F6E20 
 1474              		.text
 1475              		.align 2
 1477              	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelper7RunImplEv:
 1478              	.LFB1432:
  56:TestXmlTestReporter.cpp **** {
 1479              		.loc 3 56 1 is_stmt 1
 1480              		.cfi_startproc
 1481              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1482              		.cfi_lsda 0x1b,.LLSDA1432
 1483 0a20 F30F1EFA 		endbr64
 1484 0a24 55       		pushq	%rbp
 1485              		.cfi_def_cfa_offset 16
 1486              		.cfi_offset 6, -16
 1487 0a25 4889E5   		movq	%rsp, %rbp
 1488              		.cfi_def_cfa_register 6
 1489 0a28 53       		pushq	%rbx
 1490 0a29 4881EC88 		subq	$136, %rsp
 1490      000000
 1491              		.cfi_offset 3, -24
 1492 0a30 4889BD78 		movq	%rdi, -136(%rbp)
 1492      FFFFFF
 1493              		.loc 3 56 1
 1494 0a37 64488B04 		movq	%fs:40, %rax
 1494      25280000 
 1494      00
 1495 0a40 488945E8 		movq	%rax, -24(%rbp)
 1496 0a44 31C0     		xorl	%eax, %eax
  57:TestXmlTestReporter.cpp ****     TestDetails const details("", "", "", 0);
 1497              		.loc 3 57 44
 1498 0a46 488D4580 		leaq	-128(%rbp), %rax
 1499 0a4a 41B80000 		movl	$0, %r8d
 1499      0000
 1500 0a50 488D1500 		leaq	.LC14(%rip), %rdx
 1500      000000
 1501 0a57 4889D1   		movq	%rdx, %rcx
 1502 0a5a 488D1500 		leaq	.LC14(%rip), %rdx
 1502      000000
 1503 0a61 488D3500 		leaq	.LC14(%rip), %rsi
 1503      000000
 1504 0a68 4889C7   		movq	%rax, %rdi
 1505              	.LEHB39:
 1506 0a6b E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 1506      00
  58:TestXmlTestReporter.cpp **** 
  59:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(details);
 1507              		.loc 3 59 29
 1508 0a70 488B8578 		movq	-136(%rbp), %rax
 1508      FFFFFF
 1509 0a77 488D9078 		leaq	376(%rax), %rdx
 1509      010000
 1510 0a7e 488D4580 		leaq	-128(%rbp), %rax
 1511 0a82 4889C6   		movq	%rax, %rsi
 1512 0a85 4889D7   		movq	%rdx, %rdi
 1513 0a88 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE@PLT
 1513      00
  60:TestXmlTestReporter.cpp ****     reporter.ReportFailure(details, "message");
 1514              		.loc 3 60 27
 1515 0a8d 488B8578 		movq	-136(%rbp), %rax
 1515      FFFFFF
 1516 0a94 488D8878 		leaq	376(%rax), %rcx
 1516      010000
 1517 0a9b 488D4580 		leaq	-128(%rbp), %rax
 1518 0a9f 488D1500 		leaq	.LC15(%rip), %rdx
 1518      000000
 1519 0aa6 4889C6   		movq	%rax, %rsi
 1520 0aa9 4889CF   		movq	%rcx, %rdi
 1521 0aac E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc@PLT
 1521      00
  61:TestXmlTestReporter.cpp ****     reporter.ReportTestFinish(details, 1.0F);
 1522              		.loc 3 61 30
 1523 0ab1 488B8578 		movq	-136(%rbp), %rax
 1523      FFFFFF
 1524 0ab8 488D8878 		leaq	376(%rax), %rcx
 1524      010000
 1525 0abf 488D4580 		leaq	-128(%rbp), %rax
 1526 0ac3 8B150000 		movl	.LC16(%rip), %edx
 1526      0000
 1527 0ac9 660F6EC2 		movd	%edx, %xmm0
 1528 0acd 4889C6   		movq	%rax, %rsi
 1529 0ad0 4889CF   		movq	%rcx, %rdi
 1530 0ad3 E8000000 		call	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf@PLT
 1530      00
 1531              	.LEHE39:
  62:TestXmlTestReporter.cpp ****     CHECK(output.str().empty());
 1532              		.loc 3 62 5
 1533 0ad8 488B9578 		movq	-136(%rbp), %rdx
 1533      FFFFFF
 1534 0adf 488D45C0 		leaq	-64(%rbp), %rax
 1535 0ae3 4889D6   		movq	%rdx, %rsi
 1536 0ae6 4889C7   		movq	%rax, %rdi
 1537              	.LEHB40:
 1538 0ae9 E8000000 		call	_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv@PLT
 1538      00
 1539              	.LEHE40:
 1540              		.loc 3 62 5 is_stmt 0 discriminator 2
 1541 0aee 488D45C0 		leaq	-64(%rbp), %rax
 1542 0af2 4889C7   		movq	%rax, %rdi
 1543              	.LEHB41:
 1544 0af5 E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv@PLT
 1544      00
 1545              	.LEHE41:
 1546 0afa 0FB6C0   		movzbl	%al, %eax
 1547 0afd 89C7     		movl	%eax, %edi
 1548 0aff E8000000 		call	_ZN8UnitTest5CheckIbEEbT_
 1548      00
 1549 0b04 83F001   		xorl	$1, %eax
 1550 0b07 89C3     		movl	%eax, %ebx
 1551 0b09 488D45C0 		leaq	-64(%rbp), %rax
 1552 0b0d 4889C7   		movq	%rax, %rdi
 1553              	.LEHB42:
 1554 0b10 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 1554      00
 1555              		.loc 3 62 5 discriminator 6
 1556 0b15 84DB     		testb	%bl, %bl
 1557 0b17 743A     		je	.L75
 1558              		.loc 3 62 5 discriminator 7
 1559 0b19 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1559      00
 1560 0b1e 488B18   		movq	(%rax), %rbx
 1561 0b21 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 1561      00
 1562              		.loc 3 62 5 discriminator 9
 1563 0b26 488B08   		movq	(%rax), %rcx
 1564 0b29 488D45A0 		leaq	-96(%rbp), %rax
 1565 0b2d BA3E0000 		movl	$62, %edx
 1565      00
 1566 0b32 4889CE   		movq	%rcx, %rsi
 1567 0b35 4889C7   		movq	%rax, %rdi
 1568 0b38 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1568      00
 1569              		.loc 3 62 5 discriminator 13
 1570 0b3d 488D45A0 		leaq	-96(%rbp), %rax
 1571 0b41 488D1500 		leaq	.LC17(%rip), %rdx
 1571      000000
 1572 0b48 4889C6   		movq	%rax, %rsi
 1573 0b4b 4889DF   		movq	%rbx, %rdi
 1574 0b4e E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1574      00
 1575              	.LEHE42:
 1576              	.L75:
  63:TestXmlTestReporter.cpp **** 
  64:TestXmlTestReporter.cpp ****     reporter.ReportSummary(1, 1, 1, 1.0f);
 1577              		.loc 3 64 27 is_stmt 1
 1578 0b53 488B8578 		movq	-136(%rbp), %rax
 1578      FFFFFF
 1579 0b5a 488DB878 		leaq	376(%rax), %rdi
 1579      010000
 1580 0b61 8B050000 		movl	.LC16(%rip), %eax
 1580      0000
 1581 0b67 660F6EC0 		movd	%eax, %xmm0
 1582 0b6b B9010000 		movl	$1, %ecx
 1582      00
 1583 0b70 BA010000 		movl	$1, %edx
 1583      00
 1584 0b75 BE010000 		movl	$1, %esi
 1584      00
 1585              	.LEHB43:
 1586 0b7a E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif@PLT
 1586      00
 1587              	.LEHE43:
  65:TestXmlTestReporter.cpp ****     CHECK(!output.str().empty());
 1588              		.loc 3 65 5
 1589 0b7f 488B9578 		movq	-136(%rbp), %rdx
 1589      FFFFFF
 1590 0b86 488D45C0 		leaq	-64(%rbp), %rax
 1591 0b8a 4889D6   		movq	%rdx, %rsi
 1592 0b8d 4889C7   		movq	%rax, %rdi
 1593              	.LEHB44:
 1594 0b90 E8000000 		call	_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv@PLT
 1594      00
 1595              	.LEHE44:
 1596              		.loc 3 65 5 is_stmt 0 discriminator 2
 1597 0b95 488D45C0 		leaq	-64(%rbp), %rax
 1598 0b99 4889C7   		movq	%rax, %rdi
 1599              	.LEHB45:
 1600 0b9c E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv@PLT
 1600      00
 1601              	.LEHE45:
 1602 0ba1 83F001   		xorl	$1, %eax
 1603 0ba4 0FB6C0   		movzbl	%al, %eax
 1604 0ba7 89C7     		movl	%eax, %edi
 1605 0ba9 E8000000 		call	_ZN8UnitTest5CheckIbEEbT_
 1605      00
 1606 0bae 83F001   		xorl	$1, %eax
 1607 0bb1 89C3     		movl	%eax, %ebx
 1608 0bb3 488D45C0 		leaq	-64(%rbp), %rax
 1609 0bb7 4889C7   		movq	%rax, %rdi
 1610              	.LEHB46:
 1611 0bba E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 1611      00
 1612              		.loc 3 65 5 discriminator 6
 1613 0bbf 84DB     		testb	%bl, %bl
 1614 0bc1 0F843A01 		je	.L90
 1614      0000
 1615              		.loc 3 65 5 discriminator 7
 1616 0bc7 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1616      00
 1617 0bcc 488B18   		movq	(%rax), %rbx
 1618 0bcf E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 1618      00
 1619              		.loc 3 65 5 discriminator 9
 1620 0bd4 488B08   		movq	(%rax), %rcx
 1621 0bd7 488D45A0 		leaq	-96(%rbp), %rax
 1622 0bdb BA410000 		movl	$65, %edx
 1622      00
 1623 0be0 4889CE   		movq	%rcx, %rsi
 1624 0be3 4889C7   		movq	%rax, %rdi
 1625 0be6 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1625      00
 1626              		.loc 3 65 5 discriminator 13
 1627 0beb 488D45A0 		leaq	-96(%rbp), %rax
 1628 0bef 488D1500 		leaq	.LC18(%rip), %rdx
 1628      000000
 1629 0bf6 4889C6   		movq	%rax, %rsi
 1630 0bf9 4889DF   		movq	%rbx, %rdi
 1631 0bfc E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1631      00
 1632              	.LEHE46:
  66:TestXmlTestReporter.cpp **** }
 1633              		.loc 3 66 1 is_stmt 1
 1634 0c01 E9FB0000 		jmp	.L90
 1634      00
 1635              	.L85:
 1636 0c06 F30F1EFA 		endbr64
  62:TestXmlTestReporter.cpp **** 
 1637              		.loc 3 62 5
 1638 0c0a 4889C3   		movq	%rax, %rbx
 1639 0c0d 488D45C0 		leaq	-64(%rbp), %rax
 1640 0c11 4889C7   		movq	%rax, %rdi
 1641 0c14 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 1641      00
 1642 0c19 4889D8   		movq	%rbx, %rax
 1643 0c1c EB04     		jmp	.L78
 1644              	.L84:
 1645 0c1e F30F1EFA 		endbr64
 1646              	.L78:
  62:TestXmlTestReporter.cpp **** 
 1647              		.loc 3 62 5 is_stmt 0 discriminator 12
 1648 0c22 4889C7   		movq	%rax, %rdi
 1649 0c25 E8000000 		call	__cxa_begin_catch@PLT
 1649      00
 1650              	.LEHB47:
 1651 0c2a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1651      00
 1652 0c2f 488B18   		movq	(%rax), %rbx
 1653 0c32 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 1653      00
  62:TestXmlTestReporter.cpp **** 
 1654              		.loc 3 62 5 discriminator 18
 1655 0c37 488B08   		movq	(%rax), %rcx
 1656 0c3a 488D45A0 		leaq	-96(%rbp), %rax
 1657 0c3e BA3E0000 		movl	$62, %edx
 1657      00
 1658 0c43 4889CE   		movq	%rcx, %rsi
 1659 0c46 4889C7   		movq	%rax, %rdi
 1660 0c49 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1660      00
  62:TestXmlTestReporter.cpp **** 
 1661              		.loc 3 62 5 discriminator 22
 1662 0c4e 488D45A0 		leaq	-96(%rbp), %rax
 1663 0c52 488D1500 		leaq	.LC19(%rip), %rdx
 1663      000000
 1664 0c59 4889C6   		movq	%rax, %rsi
 1665 0c5c 4889DF   		movq	%rbx, %rdi
 1666 0c5f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1666      00
 1667              	.LEHE47:
 1668              	.LEHB48:
  62:TestXmlTestReporter.cpp **** 
 1669              		.loc 3 62 5 discriminator 24
 1670 0c64 E8000000 		call	__cxa_end_catch@PLT
 1670      00
 1671              	.LEHE48:
 1672 0c69 E9E5FEFF 		jmp	.L75
 1672      FF
 1673              	.L86:
 1674 0c6e F30F1EFA 		endbr64
  62:TestXmlTestReporter.cpp **** 
 1675              		.loc 3 62 5
 1676 0c72 4889C3   		movq	%rax, %rbx
 1677 0c75 E8000000 		call	__cxa_end_catch@PLT
 1677      00
 1678 0c7a 4889D8   		movq	%rbx, %rax
 1679 0c7d 4889C7   		movq	%rax, %rdi
 1680              	.LEHB49:
 1681 0c80 E8000000 		call	_Unwind_Resume@PLT
 1681      00
 1682              	.LEHE49:
 1683              	.L88:
 1684 0c85 F30F1EFA 		endbr64
  65:TestXmlTestReporter.cpp ****     CHECK(!output.str().empty());
 1685              		.loc 3 65 5 is_stmt 1
 1686 0c89 4889C3   		movq	%rax, %rbx
 1687 0c8c 488D45C0 		leaq	-64(%rbp), %rax
 1688 0c90 4889C7   		movq	%rax, %rdi
 1689 0c93 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 1689      00
 1690 0c98 4889D8   		movq	%rbx, %rax
 1691 0c9b EB04     		jmp	.L81
 1692              	.L87:
 1693 0c9d F30F1EFA 		endbr64
 1694              	.L81:
  65:TestXmlTestReporter.cpp ****     CHECK(!output.str().empty());
 1695              		.loc 3 65 5 is_stmt 0 discriminator 12
 1696 0ca1 4889C7   		movq	%rax, %rdi
 1697 0ca4 E8000000 		call	__cxa_begin_catch@PLT
 1697      00
 1698              	.LEHB50:
 1699 0ca9 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1699      00
 1700 0cae 488B18   		movq	(%rax), %rbx
 1701 0cb1 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 1701      00
  65:TestXmlTestReporter.cpp ****     CHECK(!output.str().empty());
 1702              		.loc 3 65 5 discriminator 18
 1703 0cb6 488B08   		movq	(%rax), %rcx
 1704 0cb9 488D45A0 		leaq	-96(%rbp), %rax
 1705 0cbd BA410000 		movl	$65, %edx
 1705      00
 1706 0cc2 4889CE   		movq	%rcx, %rsi
 1707 0cc5 4889C7   		movq	%rax, %rdi
 1708 0cc8 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1708      00
  65:TestXmlTestReporter.cpp ****     CHECK(!output.str().empty());
 1709              		.loc 3 65 5 discriminator 22
 1710 0ccd 488D45A0 		leaq	-96(%rbp), %rax
 1711 0cd1 488D1500 		leaq	.LC20(%rip), %rdx
 1711      000000
 1712 0cd8 4889C6   		movq	%rax, %rsi
 1713 0cdb 4889DF   		movq	%rbx, %rdi
 1714 0cde E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1714      00
 1715              	.LEHE50:
 1716              	.LEHB51:
  65:TestXmlTestReporter.cpp ****     CHECK(!output.str().empty());
 1717              		.loc 3 65 5 discriminator 24
 1718 0ce3 E8000000 		call	__cxa_end_catch@PLT
 1718      00
 1719              	.LEHE51:
 1720              		.loc 3 66 1 is_stmt 1 discriminator 24
 1721 0ce8 EB17     		jmp	.L90
 1722              	.L89:
 1723 0cea F30F1EFA 		endbr64
  65:TestXmlTestReporter.cpp ****     CHECK(!output.str().empty());
 1724              		.loc 3 65 5
 1725 0cee 4889C3   		movq	%rax, %rbx
 1726 0cf1 E8000000 		call	__cxa_end_catch@PLT
 1726      00
 1727 0cf6 4889D8   		movq	%rbx, %rax
 1728 0cf9 4889C7   		movq	%rax, %rdi
 1729              	.LEHB52:
 1730 0cfc E8000000 		call	_Unwind_Resume@PLT
 1730      00
 1731              	.LEHE52:
 1732              	.L90:
 1733              		.loc 3 66 1
 1734 0d01 90       		nop
 1735 0d02 488B45E8 		movq	-24(%rbp), %rax
 1736 0d06 64482B04 		subq	%fs:40, %rax
 1736      25280000 
 1736      00
 1737 0d0f 7405     		je	.L83
 1738 0d11 E8000000 		call	__stack_chk_fail@PLT
 1738      00
 1739              	.L83:
 1740 0d16 488B5DF8 		movq	-8(%rbp), %rbx
 1741 0d1a C9       		leave
 1742              		.cfi_def_cfa 7, 8
 1743 0d1b C3       		ret
 1744              		.cfi_endproc
 1745              	.LFE1432:
 1746              		.section	.gcc_except_table
 1747              		.align 4
 1748              	.LLSDA1432:
 1749 0104 FF       		.byte	0xff
 1750 0105 9B       		.byte	0x9b
 1751 0106 59       		.uleb128 .LLSDATT1432-.LLSDATTD1432
 1752              	.LLSDATTD1432:
 1753 0107 01       		.byte	0x1
 1754 0108 4D       		.uleb128 .LLSDACSE1432-.LLSDACSB1432
 1755              	.LLSDACSB1432:
 1756 0109 4B       		.uleb128 .LEHB39-.LFB1432
 1757 010a 6D       		.uleb128 .LEHE39-.LEHB39
 1758 010b 00       		.uleb128 0
 1759 010c 00       		.uleb128 0
 1760 010d C901     		.uleb128 .LEHB40-.LFB1432
 1761 010f 05       		.uleb128 .LEHE40-.LEHB40
 1762 0110 FE03     		.uleb128 .L84-.LFB1432
 1763 0112 01       		.uleb128 0x1
 1764 0113 D501     		.uleb128 .LEHB41-.LFB1432
 1765 0115 05       		.uleb128 .LEHE41-.LEHB41
 1766 0116 E603     		.uleb128 .L85-.LFB1432
 1767 0118 03       		.uleb128 0x3
 1768 0119 F001     		.uleb128 .LEHB42-.LFB1432
 1769 011b 43       		.uleb128 .LEHE42-.LEHB42
 1770 011c FE03     		.uleb128 .L84-.LFB1432
 1771 011e 01       		.uleb128 0x1
 1772 011f DA02     		.uleb128 .LEHB43-.LFB1432
 1773 0121 05       		.uleb128 .LEHE43-.LEHB43
 1774 0122 00       		.uleb128 0
 1775 0123 00       		.uleb128 0
 1776 0124 F002     		.uleb128 .LEHB44-.LFB1432
 1777 0126 05       		.uleb128 .LEHE44-.LEHB44
 1778 0127 FD04     		.uleb128 .L87-.LFB1432
 1779 0129 01       		.uleb128 0x1
 1780 012a FC02     		.uleb128 .LEHB45-.LFB1432
 1781 012c 05       		.uleb128 .LEHE45-.LEHB45
 1782 012d E504     		.uleb128 .L88-.LFB1432
 1783 012f 03       		.uleb128 0x3
 1784 0130 9A03     		.uleb128 .LEHB46-.LFB1432
 1785 0132 47       		.uleb128 .LEHE46-.LEHB46
 1786 0133 FD04     		.uleb128 .L87-.LFB1432
 1787 0135 01       		.uleb128 0x1
 1788 0136 8A04     		.uleb128 .LEHB47-.LFB1432
 1789 0138 3A       		.uleb128 .LEHE47-.LEHB47
 1790 0139 CE04     		.uleb128 .L86-.LFB1432
 1791 013b 00       		.uleb128 0
 1792 013c C404     		.uleb128 .LEHB48-.LFB1432
 1793 013e 05       		.uleb128 .LEHE48-.LEHB48
 1794 013f 00       		.uleb128 0
 1795 0140 00       		.uleb128 0
 1796 0141 E004     		.uleb128 .LEHB49-.LFB1432
 1797 0143 05       		.uleb128 .LEHE49-.LEHB49
 1798 0144 00       		.uleb128 0
 1799 0145 00       		.uleb128 0
 1800 0146 8905     		.uleb128 .LEHB50-.LFB1432
 1801 0148 3A       		.uleb128 .LEHE50-.LEHB50
 1802 0149 CA05     		.uleb128 .L89-.LFB1432
 1803 014b 00       		.uleb128 0
 1804 014c C305     		.uleb128 .LEHB51-.LFB1432
 1805 014e 05       		.uleb128 .LEHE51-.LEHB51
 1806 014f 00       		.uleb128 0
 1807 0150 00       		.uleb128 0
 1808 0151 DC05     		.uleb128 .LEHB52-.LFB1432
 1809 0153 05       		.uleb128 .LEHE52-.LEHB52
 1810 0154 00       		.uleb128 0
 1811 0155 00       		.uleb128 0
 1812              	.LLSDACSE1432:
 1813 0156 01       		.byte	0x1
 1814 0157 00       		.byte	0
 1815 0158 00       		.byte	0
 1816 0159 7D       		.byte	0x7d
 1817 015a 0000     		.align 4
 1818 015c 00000000 		.long	0
 1819              	
 1820              	.LLSDATT1432:
 1821              		.text
 1823              		.align 2
 1825              	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperC2ERKN8UnitTest11TestDetails
 1826              	.LFB1434:
  67:TestXmlTestReporter.cpp **** 
  68:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, EmptyReportSummaryFormat)
 1827              		.loc 3 68 1
 1828              		.cfi_startproc
 1829 0d1c 55       		pushq	%rbp
 1830              		.cfi_def_cfa_offset 16
 1831              		.cfi_offset 6, -16
 1832 0d1d 4889E5   		movq	%rsp, %rbp
 1833              		.cfi_def_cfa_register 6
 1834 0d20 4883EC10 		subq	$16, %rsp
 1835 0d24 48897DF8 		movq	%rdi, -8(%rbp)
 1836 0d28 488975F0 		movq	%rsi, -16(%rbp)
 1837              	.LBB30:
 1838              		.loc 3 68 1
 1839 0d2c 488B45F8 		movq	-8(%rbp), %rax
 1840 0d30 4889C7   		movq	%rax, %rdi
 1841 0d33 E8C8F2FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 1841      FF
 1842 0d38 488B45F8 		movq	-8(%rbp), %rax
 1843 0d3c 488B55F0 		movq	-16(%rbp), %rdx
 1844 0d40 488990A0 		movq	%rdx, 416(%rax)
 1844      010000
 1845              	.LBE30:
 1846 0d47 90       		nop
 1847 0d48 C9       		leave
 1848              		.cfi_def_cfa 7, 8
 1849 0d49 C3       		ret
 1850              		.cfi_endproc
 1851              	.LFE1434:
 1853              		.set	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperC1ERKN8UnitTest11TestD
 1854              		.section	.rodata
 1855              	.LC21:
 1856 031c 456D7074 		.string	"EmptyReportSummaryFormat"
 1856      79526570 
 1856      6F727453 
 1856      756D6D61 
 1856      7279466F 
 1857              		.text
 1858              		.align 2
 1860              	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatC2Ev:
 1861              	.LFB1437:
 1862              		.loc 3 68 1
 1863              		.cfi_startproc
 1864 0d4a 55       		pushq	%rbp
 1865              		.cfi_def_cfa_offset 16
 1866              		.cfi_offset 6, -16
 1867 0d4b 4889E5   		movq	%rsp, %rbp
 1868              		.cfi_def_cfa_register 6
 1869 0d4e 53       		pushq	%rbx
 1870 0d4f 4883EC18 		subq	$24, %rsp
 1871              		.cfi_offset 3, -24
 1872 0d53 48897DE8 		movq	%rdi, -24(%rbp)
 1873              	.LBB31:
 1874              		.loc 3 68 1
 1875 0d57 488B5DE8 		movq	-24(%rbp), %rbx
 1876 0d5b E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 1876      00
 1877 0d60 4889C2   		movq	%rax, %rdx
 1878 0d63 41B84400 		movl	$68, %r8d
 1878      0000
 1879 0d69 488D0500 		leaq	.LC1(%rip), %rax
 1879      000000
 1880 0d70 4889C1   		movq	%rax, %rcx
 1881 0d73 488D0500 		leaq	.LC21(%rip), %rax
 1881      000000
 1882 0d7a 4889C6   		movq	%rax, %rsi
 1883 0d7d 4889DF   		movq	%rbx, %rdi
 1884 0d80 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 1884      00
 1885 0d85 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE(%rip), %rdx
 1885      000000
 1886 0d8c 488B45E8 		movq	-24(%rbp), %rax
 1887 0d90 488910   		movq	%rdx, (%rax)
 1888              	.LBE31:
 1889 0d93 90       		nop
 1890 0d94 488B5DF8 		movq	-8(%rbp), %rbx
 1891 0d98 C9       		leave
 1892              		.cfi_def_cfa 7, 8
 1893 0d99 C3       		ret
 1894              		.cfi_endproc
 1895              	.LFE1437:
 1897              		.set	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatC1Ev,_ZN12_GLOBAL__N_150
 1898              		.local	_ZN12_GLOBAL__N_158testXmlTestReporterFixtureEmptyReportSummaryFormatInstanceE
 1899              		.comm	_ZN12_GLOBAL__N_158testXmlTestReporterFixtureEmptyReportSummaryFormatInstanceE,56,32
 1900              		.local	_ZN12_GLOBAL__N_151adderXmlTestReporterFixtureEmptyReportSummaryFormatE
 1901              		.comm	_ZN12_GLOBAL__N_151adderXmlTestReporterFixtureEmptyReportSummaryFormatE,1,1
 1902              		.align 2
 1904              	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperD2Ev:
 1905              	.LFB1441:
 1906              		.loc 3 68 1
 1907              		.cfi_startproc
 1908 0d9a 55       		pushq	%rbp
 1909              		.cfi_def_cfa_offset 16
 1910              		.cfi_offset 6, -16
 1911 0d9b 4889E5   		movq	%rsp, %rbp
 1912              		.cfi_def_cfa_register 6
 1913 0d9e 4883EC10 		subq	$16, %rsp
 1914 0da2 48897DF8 		movq	%rdi, -8(%rbp)
 1915              	.LBB32:
 1916              		.loc 3 68 1
 1917 0da6 488B45F8 		movq	-8(%rbp), %rax
 1918 0daa 4889C7   		movq	%rax, %rdi
 1919 0dad E8A8F2FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 1919      FF
 1920              	.LBE32:
 1921 0db2 90       		nop
 1922 0db3 C9       		leave
 1923              		.cfi_def_cfa 7, 8
 1924 0db4 C3       		ret
 1925              		.cfi_endproc
 1926              	.LFE1441:
 1928              		.set	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperD1Ev,_ZN12_GLOBAL__N_1
 1929 0db5 90       		.align 2
 1931              	_ZNK12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormat7RunImplEv:
 1932              	.LFB1439:
 1933              		.loc 3 68 1
 1934              		.cfi_startproc
 1935              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1936              		.cfi_lsda 0x1b,.LLSDA1439
 1937 0db6 F30F1EFA 		endbr64
 1938 0dba 55       		pushq	%rbp
 1939              		.cfi_def_cfa_offset 16
 1940              		.cfi_offset 6, -16
 1941 0dbb 4889E5   		movq	%rsp, %rbp
 1942              		.cfi_def_cfa_register 6
 1943 0dbe 4155     		pushq	%r13
 1944 0dc0 4154     		pushq	%r12
 1945 0dc2 53       		pushq	%rbx
 1946 0dc3 4881EC08 		subq	$520, %rsp
 1946      020000
 1947              		.cfi_offset 13, -24
 1948              		.cfi_offset 12, -32
 1949              		.cfi_offset 3, -40
 1950 0dca 4889BDE8 		movq	%rdi, -536(%rbp)
 1950      FDFFFF
 1951              		.loc 3 68 1
 1952 0dd1 64488B04 		movq	%fs:40, %rax
 1952      25280000 
 1952      00
 1953 0dda 488945D8 		movq	%rax, -40(%rbp)
 1954 0dde 31C0     		xorl	%eax, %eax
 1955 0de0 C685FFFD 		movb	$0, -513(%rbp)
 1955      FFFF00
 1956              	.LBB33:
 1957 0de7 488B85E8 		movq	-536(%rbp), %rax
 1957      FDFFFF
 1958 0dee 488D5008 		leaq	8(%rax), %rdx
 1959 0df2 488D8530 		leaq	-464(%rbp), %rax
 1959      FEFFFF
 1960 0df9 4889D6   		movq	%rdx, %rsi
 1961 0dfc 4889C7   		movq	%rax, %rdi
 1962              	.LEHB53:
 1963 0dff E818FFFF 		call	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperC1ERKN8UnitTest11TestD
 1963      FF
 1964              	.LEHE53:
 1965              		.loc 3 68 1 is_stmt 0 discriminator 1
 1966 0e04 C685FFFD 		movb	$1, -513(%rbp)
 1966      FFFF01
 1967 0e0b 488B85E8 		movq	-536(%rbp), %rax
 1967      FDFFFF
 1968 0e12 488D5008 		leaq	8(%rax), %rdx
 1969 0e16 488D8530 		leaq	-464(%rbp), %rax
 1969      FEFFFF
 1970 0e1d 4889D6   		movq	%rdx, %rsi
 1971 0e20 4889C7   		movq	%rax, %rdi
 1972              	.LEHB54:
 1973 0e23 E8A12600 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelp
 1973      00
 1974              	.LEHE54:
 1975              		.loc 3 68 1 discriminator 3
 1976 0e28 488D8530 		leaq	-464(%rbp), %rax
 1976      FEFFFF
 1977 0e2f 4889C7   		movq	%rax, %rdi
 1978              	.LEHB55:
 1979 0e32 E863FFFF 		call	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperD1Ev
 1979      FF
 1980              	.LEHE55:
 1981              	.LBE33:
 1982              		.loc 3 68 1
 1983 0e37 E9840200 		jmp	.L94
 1983      00
 1984              	.L109:
 1985 0e3c F30F1EFA 		endbr64
 1986              	.LBB34:
 1987 0e40 4989C4   		movq	%rax, %r12
 1988 0e43 4889D3   		movq	%rdx, %rbx
 1989 0e46 488D8530 		leaq	-464(%rbp), %rax
 1989      FEFFFF
 1990 0e4d 4889C7   		movq	%rax, %rdi
 1991 0e50 E845FFFF 		call	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperD1Ev
 1991      FF
 1992 0e55 4C89E0   		movq	%r12, %rax
 1993 0e58 4889DA   		movq	%rbx, %rdx
 1994 0e5b EB04     		jmp	.L96
 1995              	.L108:
 1996 0e5d F30F1EFA 		endbr64
 1997              	.L96:
 1998              	.LBE34:
 1999 0e61 4883FA01 		cmpq	$1, %rdx
 2000 0e65 740F     		je	.L97
 2001 0e67 4883FA02 		cmpq	$2, %rdx
 2002 0e6b 0F84A700 		je	.L98
 2002      0000
 2003 0e71 E94D0100 		jmp	.L114
 2003      00
 2004              	.L97:
 2005              	.LBB35:
 2006              		.loc 3 68 1 discriminator 4
 2007 0e76 4889C7   		movq	%rax, %rdi
 2008 0e79 E8000000 		call	__cxa_begin_catch@PLT
 2008      00
 2009 0e7e 48898508 		movq	%rax, -504(%rbp)
 2009      FEFFFF
 2010              	.LEHB56:
 2011 0e85 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2011      00
 2012 0e8a 488B18   		movq	(%rax), %rbx
 2013 0e8d 488B8508 		movq	-504(%rbp), %rax
 2013      FEFFFF
 2014 0e94 488B00   		movq	(%rax), %rax
 2015 0e97 4883C010 		addq	$16, %rax
 2016 0e9b 488B10   		movq	(%rax), %rdx
 2017 0e9e 488B8508 		movq	-504(%rbp), %rax
 2017      FEFFFF
 2018 0ea5 4889C7   		movq	%rax, %rdi
 2019 0ea8 FFD2     		call	*%rdx
 2020              	.LVL4:
 2021 0eaa 4989C4   		movq	%rax, %r12
 2022 0ead 488B8508 		movq	-504(%rbp), %rax
 2022      FEFFFF
 2023 0eb4 4889C7   		movq	%rax, %rdi
 2024 0eb7 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 2024      00
 2025              		.loc 3 68 1 discriminator 8
 2026 0ebc 4189C5   		movl	%eax, %r13d
 2027 0ebf 488B8508 		movq	-504(%rbp), %rax
 2027      FEFFFF
 2028 0ec6 4889C7   		movq	%rax, %rdi
 2029 0ec9 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 2029      00
 2030              		.loc 3 68 1 discriminator 10
 2031 0ece 4889C1   		movq	%rax, %rcx
 2032 0ed1 488B85E8 		movq	-536(%rbp), %rax
 2032      FDFFFF
 2033 0ed8 488B5008 		movq	8(%rax), %rdx
 2034 0edc 488B85E8 		movq	-536(%rbp), %rax
 2034      FDFFFF
 2035 0ee3 488B7010 		movq	16(%rax), %rsi
 2036 0ee7 488D8510 		leaq	-496(%rbp), %rax
 2036      FEFFFF
 2037 0eee 4589E8   		movl	%r13d, %r8d
 2038 0ef1 4889C7   		movq	%rax, %rdi
 2039 0ef4 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 2039      00
 2040              		.loc 3 68 1 discriminator 14
 2041 0ef9 488D8510 		leaq	-496(%rbp), %rax
 2041      FEFFFF
 2042 0f00 4C89E2   		movq	%r12, %rdx
 2043 0f03 4889C6   		movq	%rax, %rsi
 2044 0f06 4889DF   		movq	%rbx, %rdi
 2045 0f09 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2045      00
 2046              	.LEHE56:
 2047              		.loc 3 68 1 discriminator 16
 2048 0f0e E8000000 		call	__cxa_end_catch@PLT
 2048      00
 2049              	.LBE35:
 2050 0f13 E9A80100 		jmp	.L94
 2050      00
 2051              	.L98:
 2052              	.LBB36:
 2053              		.loc 3 68 1 discriminator 5
 2054 0f18 4889C7   		movq	%rax, %rdi
 2055 0f1b E8000000 		call	__cxa_begin_catch@PLT
 2055      00
 2056 0f20 48898500 		movq	%rax, -512(%rbp)
 2056      FEFFFF
 2057              	.LBB37:
 2058 0f27 488D8530 		leaq	-464(%rbp), %rax
 2058      FEFFFF
 2059 0f2e 4889C7   		movq	%rax, %rdi
 2060              	.LEHB57:
 2061 0f31 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 2061      00
 2062              	.LEHE57:
 2063              		.loc 3 68 1 discriminator 18
 2064 0f36 488D8530 		leaq	-464(%rbp), %rax
 2064      FEFFFF
 2065 0f3d 488D1500 		leaq	.LC3(%rip), %rdx
 2065      000000
 2066 0f44 4889D6   		movq	%rdx, %rsi
 2067 0f47 4889C7   		movq	%rax, %rdi
 2068              	.LEHB58:
 2069 0f4a E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 2069      00
 2070 0f4f 4889C3   		movq	%rax, %rbx
 2071 0f52 488B8500 		movq	-512(%rbp), %rax
 2071      FEFFFF
 2072 0f59 488B00   		movq	(%rax), %rax
 2073 0f5c 4883C010 		addq	$16, %rax
 2074 0f60 488B10   		movq	(%rax), %rdx
 2075 0f63 488B8500 		movq	-512(%rbp), %rax
 2075      FEFFFF
 2076 0f6a 4889C7   		movq	%rax, %rdi
 2077 0f6d FFD2     		call	*%rdx
 2078              	.LVL5:
 2079 0f6f 4889C6   		movq	%rax, %rsi
 2080 0f72 4889DF   		movq	%rbx, %rdi
 2081 0f75 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 2081      00
 2082              		.loc 3 68 1 discriminator 22
 2083 0f7a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2083      00
 2084 0f7f 488B18   		movq	(%rax), %rbx
 2085 0f82 488D8530 		leaq	-464(%rbp), %rax
 2085      FEFFFF
 2086 0f89 4889C7   		movq	%rax, %rdi
 2087 0f8c E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 2087      00
 2088              		.loc 3 68 1 discriminator 24
 2089 0f91 4889C2   		movq	%rax, %rdx
 2090 0f94 488B85E8 		movq	-536(%rbp), %rax
 2090      FDFFFF
 2091 0f9b 4883C008 		addq	$8, %rax
 2092 0f9f 4889C6   		movq	%rax, %rsi
 2093 0fa2 4889DF   		movq	%rbx, %rdi
 2094 0fa5 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2094      00
 2095              	.LEHE58:
 2096              		.loc 3 68 1 discriminator 28
 2097 0faa 488D8530 		leaq	-464(%rbp), %rax
 2097      FEFFFF
 2098 0fb1 4889C7   		movq	%rax, %rdi
 2099              	.LEHB59:
 2100 0fb4 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 2100      00
 2101              	.LEHE59:
 2102              	.LBE37:
 2103              		.loc 3 68 1 discriminator 29
 2104 0fb9 E8000000 		call	__cxa_end_catch@PLT
 2104      00
 2105              	.LBE36:
 2106 0fbe E9FD0000 		jmp	.L94
 2106      00
 2107              	.L114:
 2108              		.loc 3 68 1 discriminator 6
 2109 0fc3 4889C7   		movq	%rax, %rdi
 2110 0fc6 E8000000 		call	__cxa_begin_catch@PLT
 2110      00
 2111 0fcb 80BDFFFD 		cmpb	$0, -513(%rbp)
 2111      FFFF00
 2112 0fd2 7445     		je	.L101
 2113              	.LEHB60:
 2114              		.loc 3 68 1 discriminator 31
 2115 0fd4 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2115      00
 2116 0fd9 488B18   		movq	(%rax), %rbx
 2117 0fdc 488B85E8 		movq	-536(%rbp), %rax
 2117      FDFFFF
 2118 0fe3 488D4808 		leaq	8(%rax), %rcx
 2119 0fe7 488D8510 		leaq	-496(%rbp), %rax
 2119      FEFFFF
 2120 0fee BA440000 		movl	$68, %edx
 2120      00
 2121 0ff3 4889CE   		movq	%rcx, %rsi
 2122 0ff6 4889C7   		movq	%rax, %rdi
 2123 0ff9 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2123      00
 2124              		.loc 3 68 1 discriminator 36
 2125 0ffe 488D8510 		leaq	-496(%rbp), %rax
 2125      FEFFFF
 2126 1005 488D1500 		leaq	.LC4(%rip), %rdx
 2126      000000
 2127 100c 4889C6   		movq	%rax, %rsi
 2128 100f 4889DF   		movq	%rbx, %rdi
 2129 1012 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2129      00
 2130 1017 EB43     		jmp	.L102
 2131              	.L101:
 2132              		.loc 3 68 1 discriminator 32
 2133 1019 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2133      00
 2134 101e 488B18   		movq	(%rax), %rbx
 2135 1021 488B85E8 		movq	-536(%rbp), %rax
 2135      FDFFFF
 2136 1028 488D4808 		leaq	8(%rax), %rcx
 2137 102c 488D8510 		leaq	-496(%rbp), %rax
 2137      FEFFFF
 2138 1033 BA440000 		movl	$68, %edx
 2138      00
 2139 1038 4889CE   		movq	%rcx, %rsi
 2140 103b 4889C7   		movq	%rax, %rdi
 2141 103e E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2141      00
 2142              		.loc 3 68 1 discriminator 43
 2143 1043 488D8510 		leaq	-496(%rbp), %rax
 2143      FEFFFF
 2144 104a 488D1500 		leaq	.LC5(%rip), %rdx
 2144      000000
 2145 1051 4889C6   		movq	%rax, %rsi
 2146 1054 4889DF   		movq	%rbx, %rdi
 2147 1057 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2147      00
 2148              	.LEHE60:
 2149              	.L102:
 2150              	.LEHB61:
 2151              		.loc 3 68 1 discriminator 46
 2152 105c E8000000 		call	__cxa_end_catch@PLT
 2152      00
 2153 1061 EB5D     		jmp	.L94
 2154              	.L110:
 2155 1063 F30F1EFA 		endbr64
 2156              	.LBB39:
 2157              		.loc 3 68 1
 2158 1067 4889C3   		movq	%rax, %rbx
 2159 106a E8000000 		call	__cxa_end_catch@PLT
 2159      00
 2160 106f 4889D8   		movq	%rbx, %rax
 2161 1072 4889C7   		movq	%rax, %rdi
 2162 1075 E8000000 		call	_Unwind_Resume@PLT
 2162      00
 2163              	.LEHE61:
 2164              	.L112:
 2165 107a F30F1EFA 		endbr64
 2166              	.LBE39:
 2167              	.LBB40:
 2168              	.LBB38:
 2169 107e 4889C3   		movq	%rax, %rbx
 2170 1081 488D8530 		leaq	-464(%rbp), %rax
 2170      FEFFFF
 2171 1088 4889C7   		movq	%rax, %rdi
 2172 108b E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 2172      00
 2173 1090 EB07     		jmp	.L105
 2174              	.L111:
 2175 1092 F30F1EFA 		endbr64
 2176              	.LBE38:
 2177 1096 4889C3   		movq	%rax, %rbx
 2178              	.L105:
 2179 1099 E8000000 		call	__cxa_end_catch@PLT
 2179      00
 2180 109e 4889D8   		movq	%rbx, %rax
 2181 10a1 4889C7   		movq	%rax, %rdi
 2182              	.LEHB62:
 2183 10a4 E8000000 		call	_Unwind_Resume@PLT
 2183      00
 2184              	.LEHE62:
 2185              	.L113:
 2186 10a9 F30F1EFA 		endbr64
 2187              	.LBE40:
 2188 10ad 4889C3   		movq	%rax, %rbx
 2189 10b0 E8000000 		call	__cxa_end_catch@PLT
 2189      00
 2190 10b5 4889D8   		movq	%rbx, %rax
 2191 10b8 4889C7   		movq	%rax, %rdi
 2192              	.LEHB63:
 2193 10bb E8000000 		call	_Unwind_Resume@PLT
 2193      00
 2194              	.LEHE63:
 2195              	.L94:
 2196 10c0 488B45D8 		movq	-40(%rbp), %rax
 2197 10c4 64482B04 		subq	%fs:40, %rax
 2197      25280000 
 2197      00
 2198 10cd 7405     		je	.L107
 2199 10cf E8000000 		call	__stack_chk_fail@PLT
 2199      00
 2200              	.L107:
 2201 10d4 4881C408 		addq	$520, %rsp
 2201      020000
 2202 10db 5B       		popq	%rbx
 2203 10dc 415C     		popq	%r12
 2204 10de 415D     		popq	%r13
 2205 10e0 5D       		popq	%rbp
 2206              		.cfi_def_cfa 7, 8
 2207 10e1 C3       		ret
 2208              		.cfi_endproc
 2209              	.LFE1439:
 2210              		.section	.gcc_except_table
 2211              		.align 4
 2212              	.LLSDA1439:
 2213 0160 FF       		.byte	0xff
 2214 0161 9B       		.byte	0x9b
 2215 0162 55       		.uleb128 .LLSDATT1439-.LLSDATTD1439
 2216              	.LLSDATTD1439:
 2217 0163 01       		.byte	0x1
 2218 0164 3E       		.uleb128 .LLSDACSE1439-.LLSDACSB1439
 2219              	.LLSDACSB1439:
 2220 0165 49       		.uleb128 .LEHB53-.LFB1439
 2221 0166 05       		.uleb128 .LEHE53-.LEHB53
 2222 0167 A701     		.uleb128 .L108-.LFB1439
 2223 0169 05       		.uleb128 0x5
 2224 016a 6D       		.uleb128 .LEHB54-.LFB1439
 2225 016b 05       		.uleb128 .LEHE54-.LEHB54
 2226 016c 8601     		.uleb128 .L109-.LFB1439
 2227 016e 07       		.uleb128 0x7
 2228 016f 7C       		.uleb128 .LEHB55-.LFB1439
 2229 0170 05       		.uleb128 .LEHE55-.LEHB55
 2230 0171 A701     		.uleb128 .L108-.LFB1439
 2231 0173 05       		.uleb128 0x5
 2232 0174 CF01     		.uleb128 .LEHB56-.LFB1439
 2233 0176 8901     		.uleb128 .LEHE56-.LEHB56
 2234 0178 AD05     		.uleb128 .L110-.LFB1439
 2235 017a 00       		.uleb128 0
 2236 017b FB02     		.uleb128 .LEHB57-.LFB1439
 2237 017d 05       		.uleb128 .LEHE57-.LEHB57
 2238 017e DC05     		.uleb128 .L111-.LFB1439
 2239 0180 00       		.uleb128 0
 2240 0181 9403     		.uleb128 .LEHB58-.LFB1439
 2241 0183 60       		.uleb128 .LEHE58-.LEHB58
 2242 0184 C405     		.uleb128 .L112-.LFB1439
 2243 0186 00       		.uleb128 0
 2244 0187 FE03     		.uleb128 .LEHB59-.LFB1439
 2245 0189 05       		.uleb128 .LEHE59-.LEHB59
 2246 018a DC05     		.uleb128 .L111-.LFB1439
 2247 018c 00       		.uleb128 0
 2248 018d 9E04     		.uleb128 .LEHB60-.LFB1439
 2249 018f 8801     		.uleb128 .LEHE60-.LEHB60
 2250 0191 F305     		.uleb128 .L113-.LFB1439
 2251 0193 00       		.uleb128 0
 2252 0194 A605     		.uleb128 .LEHB61-.LFB1439
 2253 0196 1E       		.uleb128 .LEHE61-.LEHB61
 2254 0197 00       		.uleb128 0
 2255 0198 00       		.uleb128 0
 2256 0199 EE05     		.uleb128 .LEHB62-.LFB1439
 2257 019b 05       		.uleb128 .LEHE62-.LEHB62
 2258 019c 00       		.uleb128 0
 2259 019d 00       		.uleb128 0
 2260 019e 8506     		.uleb128 .LEHB63-.LFB1439
 2261 01a0 05       		.uleb128 .LEHE63-.LEHB63
 2262 01a1 00       		.uleb128 0
 2263 01a2 00       		.uleb128 0
 2264              	.LLSDACSE1439:
 2265 01a3 03       		.byte	0x3
 2266 01a4 00       		.byte	0
 2267 01a5 02       		.byte	0x2
 2268 01a6 7D       		.byte	0x7d
 2269 01a7 01       		.byte	0x1
 2270 01a8 7D       		.byte	0x7d
 2271 01a9 00       		.byte	0
 2272 01aa 7D       		.byte	0x7d
 2273 01ab 00       		.align 4
 2274 01ac 00000000 		.long	0
 2275              	
 2276 01b0 00000000 		.long	DW.ref._ZTISt9exception-.
 2277 01b4 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 2278              	.LLSDATT1439:
 2279              		.text
 2281              		.section	.rodata
 2282 0335 000000   		.align 8
 2283              	.LC22:
 2284 0338 3C3F786D 		.string	"<?xml version=\"1.0\"?><unittest-results tests=\"0\" failedtests=\"0\" failures=\"0\" tim
 2284      6C207665 
 2284      7273696F 
 2284      6E3D2231 
 2284      2E30223F 
 2285              		.text
 2286              		.align 2
 2288              	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelper7RunImplEv:
 2289              	.LFB1443:
  69:TestXmlTestReporter.cpp **** {
 2290              		.loc 3 69 1 is_stmt 1
 2291              		.cfi_startproc
 2292              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 2293              		.cfi_lsda 0x1b,.LLSDA1443
 2294 10e2 F30F1EFA 		endbr64
 2295 10e6 55       		pushq	%rbp
 2296              		.cfi_def_cfa_offset 16
 2297              		.cfi_offset 6, -16
 2298 10e7 4889E5   		movq	%rsp, %rbp
 2299              		.cfi_def_cfa_register 6
 2300 10ea 53       		pushq	%rbx
 2301 10eb 4883EC78 		subq	$120, %rsp
 2302              		.cfi_offset 3, -24
 2303 10ef 48897D88 		movq	%rdi, -120(%rbp)
 2304              		.loc 3 69 1
 2305 10f3 64488B04 		movq	%fs:40, %rax
 2305      25280000 
 2305      00
 2306 10fc 488945E8 		movq	%rax, -24(%rbp)
 2307 1100 31C0     		xorl	%eax, %eax
  70:TestXmlTestReporter.cpp ****     reporter.ReportSummary(0, 0, 0, 0.1f);
 2308              		.loc 3 70 27
 2309 1102 488B4588 		movq	-120(%rbp), %rax
 2310 1106 488DB878 		leaq	376(%rax), %rdi
 2310      010000
 2311 110d 8B050000 		movl	.LC10(%rip), %eax
 2311      0000
 2312 1113 660F6EC0 		movd	%eax, %xmm0
 2313 1117 B9000000 		movl	$0, %ecx
 2313      00
 2314 111c BA000000 		movl	$0, %edx
 2314      00
 2315 1121 BE000000 		movl	$0, %esi
 2315      00
 2316              	.LEHB64:
 2317 1126 E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif@PLT
 2317      00
 2318              	.LEHE64:
  71:TestXmlTestReporter.cpp **** 
  72:TestXmlTestReporter.cpp ****     const char *expected =
 2319              		.loc 3 72 17
 2320 112b 488D0500 		leaq	.LC22(%rip), %rax
 2320      000000
 2321 1132 48894598 		movq	%rax, -104(%rbp)
 2322              	.LEHB65:
  73:TestXmlTestReporter.cpp **** "<?xml version=\"1.0\"?>"
  74:TestXmlTestReporter.cpp **** "<unittest-results tests=\"0\" failedtests=\"0\" failures=\"0\" time=\"0.1\">"
  75:TestXmlTestReporter.cpp **** "</unittest-results>";
  76:TestXmlTestReporter.cpp **** 
  77:TestXmlTestReporter.cpp ****     CHECK_EQUAL(expected, output.str());
 2323              		.loc 3 77 5
 2324 1136 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 2324      00
 2325 113b 488B08   		movq	(%rax), %rcx
 2326 113e 488D45A0 		leaq	-96(%rbp), %rax
 2327 1142 BA4D0000 		movl	$77, %edx
 2327      00
 2328 1147 4889CE   		movq	%rcx, %rsi
 2329 114a 4889C7   		movq	%rax, %rdi
 2330 114d E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2330      00
 2331              		.loc 3 77 5 is_stmt 0 discriminator 4
 2332 1152 488B5588 		movq	-120(%rbp), %rdx
 2333 1156 488D45C0 		leaq	-64(%rbp), %rax
 2334 115a 4889D6   		movq	%rdx, %rsi
 2335 115d 4889C7   		movq	%rax, %rdi
 2336 1160 E8000000 		call	_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv@PLT
 2336      00
 2337              	.LEHE65:
 2338              	.LEHB66:
 2339              		.loc 3 77 5 discriminator 6
 2340 1165 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2340      00
 2341 116a 488B00   		movq	(%rax), %rax
 2342 116d 488D4DA0 		leaq	-96(%rbp), %rcx
 2343 1171 488D55C0 		leaq	-64(%rbp), %rdx
 2344 1175 488D7598 		leaq	-104(%rbp), %rsi
 2345 1179 4889C7   		movq	%rax, %rdi
 2346 117c E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 2346      00
 2347              	.LEHE66:
 2348              		.loc 3 77 5 discriminator 10
 2349 1181 488D45C0 		leaq	-64(%rbp), %rax
 2350 1185 4889C7   		movq	%rax, %rdi
 2351              	.LEHB67:
 2352 1188 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 2352      00
 2353              	.LEHE67:
  78:TestXmlTestReporter.cpp **** }
 2354              		.loc 3 78 1 is_stmt 1
 2355 118d EB7C     		jmp	.L115
 2356              	.L122:
 2357 118f F30F1EFA 		endbr64
  77:TestXmlTestReporter.cpp **** }
 2358              		.loc 3 77 5
 2359 1193 4889C3   		movq	%rax, %rbx
 2360 1196 488D45C0 		leaq	-64(%rbp), %rax
 2361 119a 4889C7   		movq	%rax, %rdi
 2362 119d E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 2362      00
 2363 11a2 4889D8   		movq	%rbx, %rax
 2364 11a5 EB04     		jmp	.L117
 2365              	.L121:
 2366 11a7 F30F1EFA 		endbr64
 2367              	.L117:
  77:TestXmlTestReporter.cpp **** }
 2368              		.loc 3 77 5 is_stmt 0 discriminator 3
 2369 11ab 4889C7   		movq	%rax, %rdi
 2370 11ae E8000000 		call	__cxa_begin_catch@PLT
 2370      00
 2371              	.LEHB68:
 2372 11b3 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2372      00
 2373 11b8 488B18   		movq	(%rax), %rbx
 2374 11bb E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 2374      00
  77:TestXmlTestReporter.cpp **** }
 2375              		.loc 3 77 5 discriminator 15
 2376 11c0 488B08   		movq	(%rax), %rcx
 2377 11c3 488D45A0 		leaq	-96(%rbp), %rax
 2378 11c7 BA4D0000 		movl	$77, %edx
 2378      00
 2379 11cc 4889CE   		movq	%rcx, %rsi
 2380 11cf 4889C7   		movq	%rax, %rdi
 2381 11d2 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2381      00
  77:TestXmlTestReporter.cpp **** }
 2382              		.loc 3 77 5 discriminator 19
 2383 11d7 488D45A0 		leaq	-96(%rbp), %rax
 2384 11db 488D1500 		leaq	.LC12(%rip), %rdx
 2384      000000
 2385 11e2 4889C6   		movq	%rax, %rsi
 2386 11e5 4889DF   		movq	%rbx, %rdi
 2387 11e8 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2387      00
 2388              	.LEHE68:
 2389              	.LEHB69:
  77:TestXmlTestReporter.cpp **** }
 2390              		.loc 3 77 5 discriminator 21
 2391 11ed E8000000 		call	__cxa_end_catch@PLT
 2391      00
 2392              	.LEHE69:
 2393              		.loc 3 78 1 is_stmt 1 discriminator 21
 2394 11f2 EB17     		jmp	.L115
 2395              	.L123:
 2396 11f4 F30F1EFA 		endbr64
  77:TestXmlTestReporter.cpp **** }
 2397              		.loc 3 77 5
 2398 11f8 4889C3   		movq	%rax, %rbx
 2399 11fb E8000000 		call	__cxa_end_catch@PLT
 2399      00
 2400 1200 4889D8   		movq	%rbx, %rax
 2401 1203 4889C7   		movq	%rax, %rdi
 2402              	.LEHB70:
 2403 1206 E8000000 		call	_Unwind_Resume@PLT
 2403      00
 2404              	.LEHE70:
 2405              	.L115:
 2406              		.loc 3 78 1
 2407 120b 488B45E8 		movq	-24(%rbp), %rax
 2408 120f 64482B04 		subq	%fs:40, %rax
 2408      25280000 
 2408      00
 2409 1218 7405     		je	.L120
 2410 121a E8000000 		call	__stack_chk_fail@PLT
 2410      00
 2411              	.L120:
 2412 121f 488B5DF8 		movq	-8(%rbp), %rbx
 2413 1223 C9       		leave
 2414              		.cfi_def_cfa 7, 8
 2415 1224 C3       		ret
 2416              		.cfi_endproc
 2417              	.LFE1443:
 2418              		.section	.gcc_except_table
 2419              		.align 4
 2420              	.LLSDA1443:
 2421 01b8 FF       		.byte	0xff
 2422 01b9 9B       		.byte	0x9b
 2423 01ba 31       		.uleb128 .LLSDATT1443-.LLSDATTD1443
 2424              	.LLSDATTD1443:
 2425 01bb 01       		.byte	0x1
 2426 01bc 25       		.uleb128 .LLSDACSE1443-.LLSDACSB1443
 2427              	.LLSDACSB1443:
 2428 01bd 44       		.uleb128 .LEHB64-.LFB1443
 2429 01be 05       		.uleb128 .LEHE64-.LEHB64
 2430 01bf 00       		.uleb128 0
 2431 01c0 00       		.uleb128 0
 2432 01c1 54       		.uleb128 .LEHB65-.LFB1443
 2433 01c2 2F       		.uleb128 .LEHE65-.LEHB65
 2434 01c3 C501     		.uleb128 .L121-.LFB1443
 2435 01c5 01       		.uleb128 0x1
 2436 01c6 8301     		.uleb128 .LEHB66-.LFB1443
 2437 01c8 1C       		.uleb128 .LEHE66-.LEHB66
 2438 01c9 AD01     		.uleb128 .L122-.LFB1443
 2439 01cb 03       		.uleb128 0x3
 2440 01cc A601     		.uleb128 .LEHB67-.LFB1443
 2441 01ce 05       		.uleb128 .LEHE67-.LEHB67
 2442 01cf C501     		.uleb128 .L121-.LFB1443
 2443 01d1 01       		.uleb128 0x1
 2444 01d2 D101     		.uleb128 .LEHB68-.LFB1443
 2445 01d4 3A       		.uleb128 .LEHE68-.LEHB68
 2446 01d5 9202     		.uleb128 .L123-.LFB1443
 2447 01d7 00       		.uleb128 0
 2448 01d8 8B02     		.uleb128 .LEHB69-.LFB1443
 2449 01da 05       		.uleb128 .LEHE69-.LEHB69
 2450 01db 00       		.uleb128 0
 2451 01dc 00       		.uleb128 0
 2452 01dd A402     		.uleb128 .LEHB70-.LFB1443
 2453 01df 05       		.uleb128 .LEHE70-.LEHB70
 2454 01e0 00       		.uleb128 0
 2455 01e1 00       		.uleb128 0
 2456              	.LLSDACSE1443:
 2457 01e2 01       		.byte	0x1
 2458 01e3 00       		.byte	0
 2459 01e4 00       		.byte	0
 2460 01e5 7D       		.byte	0x7d
 2461 01e6 0000     		.align 4
 2462 01e8 00000000 		.long	0
 2463              	
 2464              	.LLSDATT1443:
 2465              		.text
 2467 1225 90       		.align 2
 2469              	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperC2ERKN8UnitTe
 2470              	.LFB1445:
  79:TestXmlTestReporter.cpp **** 
  80:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, SingleSuccessfulTestReportSummaryFormat)
 2471              		.loc 3 80 1
 2472              		.cfi_startproc
 2473 1226 55       		pushq	%rbp
 2474              		.cfi_def_cfa_offset 16
 2475              		.cfi_offset 6, -16
 2476 1227 4889E5   		movq	%rsp, %rbp
 2477              		.cfi_def_cfa_register 6
 2478 122a 4883EC10 		subq	$16, %rsp
 2479 122e 48897DF8 		movq	%rdi, -8(%rbp)
 2480 1232 488975F0 		movq	%rsi, -16(%rbp)
 2481              	.LBB41:
 2482              		.loc 3 80 1
 2483 1236 488B45F8 		movq	-8(%rbp), %rax
 2484 123a 4889C7   		movq	%rax, %rdi
 2485 123d E8BEEDFF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 2485      FF
 2486 1242 488B45F8 		movq	-8(%rbp), %rax
 2487 1246 488B55F0 		movq	-16(%rbp), %rdx
 2488 124a 488990A0 		movq	%rdx, 416(%rax)
 2488      010000
 2489              	.LBE41:
 2490 1251 90       		nop
 2491 1252 C9       		leave
 2492              		.cfi_def_cfa 7, 8
 2493 1253 C3       		ret
 2494              		.cfi_endproc
 2495              	.LFE1445:
 2497              		.set	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperC1ERKN8
 2498              		.section	.rodata
 2499 03a5 000000   		.align 8
 2500              	.LC23:
 2501 03a8 53696E67 		.string	"SingleSuccessfulTestReportSummaryFormat"
 2501      6C655375 
 2501      63636573 
 2501      7366756C 
 2501      54657374 
 2502              		.text
 2503              		.align 2
 2505              	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatC2Ev:
 2506              	.LFB1448:
 2507              		.loc 3 80 1
 2508              		.cfi_startproc
 2509 1254 55       		pushq	%rbp
 2510              		.cfi_def_cfa_offset 16
 2511              		.cfi_offset 6, -16
 2512 1255 4889E5   		movq	%rsp, %rbp
 2513              		.cfi_def_cfa_register 6
 2514 1258 53       		pushq	%rbx
 2515 1259 4883EC18 		subq	$24, %rsp
 2516              		.cfi_offset 3, -24
 2517 125d 48897DE8 		movq	%rdi, -24(%rbp)
 2518              	.LBB42:
 2519              		.loc 3 80 1
 2520 1261 488B5DE8 		movq	-24(%rbp), %rbx
 2521 1265 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 2521      00
 2522 126a 4889C2   		movq	%rax, %rdx
 2523 126d 41B85000 		movl	$80, %r8d
 2523      0000
 2524 1273 488D0500 		leaq	.LC1(%rip), %rax
 2524      000000
 2525 127a 4889C1   		movq	%rax, %rcx
 2526 127d 488D0500 		leaq	.LC23(%rip), %rax
 2526      000000
 2527 1284 4889C6   		movq	%rax, %rsi
 2528 1287 4889DF   		movq	%rbx, %rdi
 2529 128a E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 2529      00
 2530 128f 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE(%r
 2530      000000
 2531 1296 488B45E8 		movq	-24(%rbp), %rax
 2532 129a 488910   		movq	%rdx, (%rax)
 2533              	.LBE42:
 2534 129d 90       		nop
 2535 129e 488B5DF8 		movq	-8(%rbp), %rbx
 2536 12a2 C9       		leave
 2537              		.cfi_def_cfa 7, 8
 2538 12a3 C3       		ret
 2539              		.cfi_endproc
 2540              	.LFE1448:
 2542              		.set	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatC1Ev,_ZN1
 2543              		.local	_ZN12_GLOBAL__N_173testXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatInstanc
 2544              		.comm	_ZN12_GLOBAL__N_173testXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatInstance
 2545              		.local	_ZN12_GLOBAL__N_166adderXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE
 2546              		.comm	_ZN12_GLOBAL__N_166adderXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE,1,1
 2547              		.align 2
 2549              	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperD2Ev:
 2550              	.LFB1452:
 2551              		.loc 3 80 1
 2552              		.cfi_startproc
 2553 12a4 55       		pushq	%rbp
 2554              		.cfi_def_cfa_offset 16
 2555              		.cfi_offset 6, -16
 2556 12a5 4889E5   		movq	%rsp, %rbp
 2557              		.cfi_def_cfa_register 6
 2558 12a8 4883EC10 		subq	$16, %rsp
 2559 12ac 48897DF8 		movq	%rdi, -8(%rbp)
 2560              	.LBB43:
 2561              		.loc 3 80 1
 2562 12b0 488B45F8 		movq	-8(%rbp), %rax
 2563 12b4 4889C7   		movq	%rax, %rdi
 2564 12b7 E89EEDFF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 2564      FF
 2565              	.LBE43:
 2566 12bc 90       		nop
 2567 12bd C9       		leave
 2568              		.cfi_def_cfa 7, 8
 2569 12be C3       		ret
 2570              		.cfi_endproc
 2571              	.LFE1452:
 2573              		.set	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperD1Ev,_Z
 2574 12bf 90       		.align 2
 2576              	_ZNK12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormat7RunImplEv:
 2577              	.LFB1450:
 2578              		.loc 3 80 1
 2579              		.cfi_startproc
 2580              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 2581              		.cfi_lsda 0x1b,.LLSDA1450
 2582 12c0 F30F1EFA 		endbr64
 2583 12c4 55       		pushq	%rbp
 2584              		.cfi_def_cfa_offset 16
 2585              		.cfi_offset 6, -16
 2586 12c5 4889E5   		movq	%rsp, %rbp
 2587              		.cfi_def_cfa_register 6
 2588 12c8 4155     		pushq	%r13
 2589 12ca 4154     		pushq	%r12
 2590 12cc 53       		pushq	%rbx
 2591 12cd 4881EC08 		subq	$520, %rsp
 2591      020000
 2592              		.cfi_offset 13, -24
 2593              		.cfi_offset 12, -32
 2594              		.cfi_offset 3, -40
 2595 12d4 4889BDE8 		movq	%rdi, -536(%rbp)
 2595      FDFFFF
 2596              		.loc 3 80 1
 2597 12db 64488B04 		movq	%fs:40, %rax
 2597      25280000 
 2597      00
 2598 12e4 488945D8 		movq	%rax, -40(%rbp)
 2599 12e8 31C0     		xorl	%eax, %eax
 2600 12ea C685FFFD 		movb	$0, -513(%rbp)
 2600      FFFF00
 2601              	.LBB44:
 2602 12f1 488B85E8 		movq	-536(%rbp), %rax
 2602      FDFFFF
 2603 12f8 488D5008 		leaq	8(%rax), %rdx
 2604 12fc 488D8530 		leaq	-464(%rbp), %rax
 2604      FEFFFF
 2605 1303 4889D6   		movq	%rdx, %rsi
 2606 1306 4889C7   		movq	%rax, %rdi
 2607              	.LEHB71:
 2608 1309 E818FFFF 		call	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperC1ERKN8
 2608      FF
 2609              	.LEHE71:
 2610              		.loc 3 80 1 is_stmt 0 discriminator 1
 2611 130e C685FFFD 		movb	$1, -513(%rbp)
 2611      FFFF01
 2612 1315 488B85E8 		movq	-536(%rbp), %rax
 2612      FDFFFF
 2613 131c 488D5008 		leaq	8(%rax), %rdx
 2614 1320 488D8530 		leaq	-464(%rbp), %rax
 2614      FEFFFF
 2615 1327 4889D6   		movq	%rdx, %rsi
 2616 132a 4889C7   		movq	%rax, %rdi
 2617              	.LEHB72:
 2618 132d E8862400 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSu
 2618      00
 2619              	.LEHE72:
 2620              		.loc 3 80 1 discriminator 3
 2621 1332 488D8530 		leaq	-464(%rbp), %rax
 2621      FEFFFF
 2622 1339 4889C7   		movq	%rax, %rdi
 2623              	.LEHB73:
 2624 133c E863FFFF 		call	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperD1Ev
 2624      FF
 2625              	.LEHE73:
 2626              	.LBE44:
 2627              		.loc 3 80 1
 2628 1341 E9840200 		jmp	.L127
 2628      00
 2629              	.L142:
 2630 1346 F30F1EFA 		endbr64
 2631              	.LBB45:
 2632 134a 4989C4   		movq	%rax, %r12
 2633 134d 4889D3   		movq	%rdx, %rbx
 2634 1350 488D8530 		leaq	-464(%rbp), %rax
 2634      FEFFFF
 2635 1357 4889C7   		movq	%rax, %rdi
 2636 135a E845FFFF 		call	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperD1Ev
 2636      FF
 2637 135f 4C89E0   		movq	%r12, %rax
 2638 1362 4889DA   		movq	%rbx, %rdx
 2639 1365 EB04     		jmp	.L129
 2640              	.L141:
 2641 1367 F30F1EFA 		endbr64
 2642              	.L129:
 2643              	.LBE45:
 2644 136b 4883FA01 		cmpq	$1, %rdx
 2645 136f 740F     		je	.L130
 2646 1371 4883FA02 		cmpq	$2, %rdx
 2647 1375 0F84A700 		je	.L131
 2647      0000
 2648 137b E94D0100 		jmp	.L147
 2648      00
 2649              	.L130:
 2650              	.LBB46:
 2651              		.loc 3 80 1 discriminator 4
 2652 1380 4889C7   		movq	%rax, %rdi
 2653 1383 E8000000 		call	__cxa_begin_catch@PLT
 2653      00
 2654 1388 48898508 		movq	%rax, -504(%rbp)
 2654      FEFFFF
 2655              	.LEHB74:
 2656 138f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2656      00
 2657 1394 488B18   		movq	(%rax), %rbx
 2658 1397 488B8508 		movq	-504(%rbp), %rax
 2658      FEFFFF
 2659 139e 488B00   		movq	(%rax), %rax
 2660 13a1 4883C010 		addq	$16, %rax
 2661 13a5 488B10   		movq	(%rax), %rdx
 2662 13a8 488B8508 		movq	-504(%rbp), %rax
 2662      FEFFFF
 2663 13af 4889C7   		movq	%rax, %rdi
 2664 13b2 FFD2     		call	*%rdx
 2665              	.LVL6:
 2666 13b4 4989C4   		movq	%rax, %r12
 2667 13b7 488B8508 		movq	-504(%rbp), %rax
 2667      FEFFFF
 2668 13be 4889C7   		movq	%rax, %rdi
 2669 13c1 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 2669      00
 2670              		.loc 3 80 1 discriminator 8
 2671 13c6 4189C5   		movl	%eax, %r13d
 2672 13c9 488B8508 		movq	-504(%rbp), %rax
 2672      FEFFFF
 2673 13d0 4889C7   		movq	%rax, %rdi
 2674 13d3 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 2674      00
 2675              		.loc 3 80 1 discriminator 10
 2676 13d8 4889C1   		movq	%rax, %rcx
 2677 13db 488B85E8 		movq	-536(%rbp), %rax
 2677      FDFFFF
 2678 13e2 488B5008 		movq	8(%rax), %rdx
 2679 13e6 488B85E8 		movq	-536(%rbp), %rax
 2679      FDFFFF
 2680 13ed 488B7010 		movq	16(%rax), %rsi
 2681 13f1 488D8510 		leaq	-496(%rbp), %rax
 2681      FEFFFF
 2682 13f8 4589E8   		movl	%r13d, %r8d
 2683 13fb 4889C7   		movq	%rax, %rdi
 2684 13fe E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 2684      00
 2685              		.loc 3 80 1 discriminator 14
 2686 1403 488D8510 		leaq	-496(%rbp), %rax
 2686      FEFFFF
 2687 140a 4C89E2   		movq	%r12, %rdx
 2688 140d 4889C6   		movq	%rax, %rsi
 2689 1410 4889DF   		movq	%rbx, %rdi
 2690 1413 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2690      00
 2691              	.LEHE74:
 2692              		.loc 3 80 1 discriminator 16
 2693 1418 E8000000 		call	__cxa_end_catch@PLT
 2693      00
 2694              	.LBE46:
 2695 141d E9A80100 		jmp	.L127
 2695      00
 2696              	.L131:
 2697              	.LBB47:
 2698              		.loc 3 80 1 discriminator 5
 2699 1422 4889C7   		movq	%rax, %rdi
 2700 1425 E8000000 		call	__cxa_begin_catch@PLT
 2700      00
 2701 142a 48898500 		movq	%rax, -512(%rbp)
 2701      FEFFFF
 2702              	.LBB48:
 2703 1431 488D8530 		leaq	-464(%rbp), %rax
 2703      FEFFFF
 2704 1438 4889C7   		movq	%rax, %rdi
 2705              	.LEHB75:
 2706 143b E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 2706      00
 2707              	.LEHE75:
 2708              		.loc 3 80 1 discriminator 18
 2709 1440 488D8530 		leaq	-464(%rbp), %rax
 2709      FEFFFF
 2710 1447 488D1500 		leaq	.LC3(%rip), %rdx
 2710      000000
 2711 144e 4889D6   		movq	%rdx, %rsi
 2712 1451 4889C7   		movq	%rax, %rdi
 2713              	.LEHB76:
 2714 1454 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 2714      00
 2715 1459 4889C3   		movq	%rax, %rbx
 2716 145c 488B8500 		movq	-512(%rbp), %rax
 2716      FEFFFF
 2717 1463 488B00   		movq	(%rax), %rax
 2718 1466 4883C010 		addq	$16, %rax
 2719 146a 488B10   		movq	(%rax), %rdx
 2720 146d 488B8500 		movq	-512(%rbp), %rax
 2720      FEFFFF
 2721 1474 4889C7   		movq	%rax, %rdi
 2722 1477 FFD2     		call	*%rdx
 2723              	.LVL7:
 2724 1479 4889C6   		movq	%rax, %rsi
 2725 147c 4889DF   		movq	%rbx, %rdi
 2726 147f E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 2726      00
 2727              		.loc 3 80 1 discriminator 22
 2728 1484 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2728      00
 2729 1489 488B18   		movq	(%rax), %rbx
 2730 148c 488D8530 		leaq	-464(%rbp), %rax
 2730      FEFFFF
 2731 1493 4889C7   		movq	%rax, %rdi
 2732 1496 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 2732      00
 2733              		.loc 3 80 1 discriminator 24
 2734 149b 4889C2   		movq	%rax, %rdx
 2735 149e 488B85E8 		movq	-536(%rbp), %rax
 2735      FDFFFF
 2736 14a5 4883C008 		addq	$8, %rax
 2737 14a9 4889C6   		movq	%rax, %rsi
 2738 14ac 4889DF   		movq	%rbx, %rdi
 2739 14af E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2739      00
 2740              	.LEHE76:
 2741              		.loc 3 80 1 discriminator 28
 2742 14b4 488D8530 		leaq	-464(%rbp), %rax
 2742      FEFFFF
 2743 14bb 4889C7   		movq	%rax, %rdi
 2744              	.LEHB77:
 2745 14be E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 2745      00
 2746              	.LEHE77:
 2747              	.LBE48:
 2748              		.loc 3 80 1 discriminator 29
 2749 14c3 E8000000 		call	__cxa_end_catch@PLT
 2749      00
 2750              	.LBE47:
 2751 14c8 E9FD0000 		jmp	.L127
 2751      00
 2752              	.L147:
 2753              		.loc 3 80 1 discriminator 6
 2754 14cd 4889C7   		movq	%rax, %rdi
 2755 14d0 E8000000 		call	__cxa_begin_catch@PLT
 2755      00
 2756 14d5 80BDFFFD 		cmpb	$0, -513(%rbp)
 2756      FFFF00
 2757 14dc 7445     		je	.L134
 2758              	.LEHB78:
 2759              		.loc 3 80 1 discriminator 31
 2760 14de E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2760      00
 2761 14e3 488B18   		movq	(%rax), %rbx
 2762 14e6 488B85E8 		movq	-536(%rbp), %rax
 2762      FDFFFF
 2763 14ed 488D4808 		leaq	8(%rax), %rcx
 2764 14f1 488D8510 		leaq	-496(%rbp), %rax
 2764      FEFFFF
 2765 14f8 BA500000 		movl	$80, %edx
 2765      00
 2766 14fd 4889CE   		movq	%rcx, %rsi
 2767 1500 4889C7   		movq	%rax, %rdi
 2768 1503 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2768      00
 2769              		.loc 3 80 1 discriminator 36
 2770 1508 488D8510 		leaq	-496(%rbp), %rax
 2770      FEFFFF
 2771 150f 488D1500 		leaq	.LC4(%rip), %rdx
 2771      000000
 2772 1516 4889C6   		movq	%rax, %rsi
 2773 1519 4889DF   		movq	%rbx, %rdi
 2774 151c E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2774      00
 2775 1521 EB43     		jmp	.L135
 2776              	.L134:
 2777              		.loc 3 80 1 discriminator 32
 2778 1523 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2778      00
 2779 1528 488B18   		movq	(%rax), %rbx
 2780 152b 488B85E8 		movq	-536(%rbp), %rax
 2780      FDFFFF
 2781 1532 488D4808 		leaq	8(%rax), %rcx
 2782 1536 488D8510 		leaq	-496(%rbp), %rax
 2782      FEFFFF
 2783 153d BA500000 		movl	$80, %edx
 2783      00
 2784 1542 4889CE   		movq	%rcx, %rsi
 2785 1545 4889C7   		movq	%rax, %rdi
 2786 1548 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2786      00
 2787              		.loc 3 80 1 discriminator 43
 2788 154d 488D8510 		leaq	-496(%rbp), %rax
 2788      FEFFFF
 2789 1554 488D1500 		leaq	.LC5(%rip), %rdx
 2789      000000
 2790 155b 4889C6   		movq	%rax, %rsi
 2791 155e 4889DF   		movq	%rbx, %rdi
 2792 1561 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2792      00
 2793              	.LEHE78:
 2794              	.L135:
 2795              	.LEHB79:
 2796              		.loc 3 80 1 discriminator 46
 2797 1566 E8000000 		call	__cxa_end_catch@PLT
 2797      00
 2798 156b EB5D     		jmp	.L127
 2799              	.L143:
 2800 156d F30F1EFA 		endbr64
 2801              	.LBB50:
 2802              		.loc 3 80 1
 2803 1571 4889C3   		movq	%rax, %rbx
 2804 1574 E8000000 		call	__cxa_end_catch@PLT
 2804      00
 2805 1579 4889D8   		movq	%rbx, %rax
 2806 157c 4889C7   		movq	%rax, %rdi
 2807 157f E8000000 		call	_Unwind_Resume@PLT
 2807      00
 2808              	.LEHE79:
 2809              	.L145:
 2810 1584 F30F1EFA 		endbr64
 2811              	.LBE50:
 2812              	.LBB51:
 2813              	.LBB49:
 2814 1588 4889C3   		movq	%rax, %rbx
 2815 158b 488D8530 		leaq	-464(%rbp), %rax
 2815      FEFFFF
 2816 1592 4889C7   		movq	%rax, %rdi
 2817 1595 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 2817      00
 2818 159a EB07     		jmp	.L138
 2819              	.L144:
 2820 159c F30F1EFA 		endbr64
 2821              	.LBE49:
 2822 15a0 4889C3   		movq	%rax, %rbx
 2823              	.L138:
 2824 15a3 E8000000 		call	__cxa_end_catch@PLT
 2824      00
 2825 15a8 4889D8   		movq	%rbx, %rax
 2826 15ab 4889C7   		movq	%rax, %rdi
 2827              	.LEHB80:
 2828 15ae E8000000 		call	_Unwind_Resume@PLT
 2828      00
 2829              	.LEHE80:
 2830              	.L146:
 2831 15b3 F30F1EFA 		endbr64
 2832              	.LBE51:
 2833 15b7 4889C3   		movq	%rax, %rbx
 2834 15ba E8000000 		call	__cxa_end_catch@PLT
 2834      00
 2835 15bf 4889D8   		movq	%rbx, %rax
 2836 15c2 4889C7   		movq	%rax, %rdi
 2837              	.LEHB81:
 2838 15c5 E8000000 		call	_Unwind_Resume@PLT
 2838      00
 2839              	.LEHE81:
 2840              	.L127:
 2841 15ca 488B45D8 		movq	-40(%rbp), %rax
 2842 15ce 64482B04 		subq	%fs:40, %rax
 2842      25280000 
 2842      00
 2843 15d7 7405     		je	.L140
 2844 15d9 E8000000 		call	__stack_chk_fail@PLT
 2844      00
 2845              	.L140:
 2846 15de 4881C408 		addq	$520, %rsp
 2846      020000
 2847 15e5 5B       		popq	%rbx
 2848 15e6 415C     		popq	%r12
 2849 15e8 415D     		popq	%r13
 2850 15ea 5D       		popq	%rbp
 2851              		.cfi_def_cfa 7, 8
 2852 15eb C3       		ret
 2853              		.cfi_endproc
 2854              	.LFE1450:
 2855              		.section	.gcc_except_table
 2856              		.align 4
 2857              	.LLSDA1450:
 2858 01ec FF       		.byte	0xff
 2859 01ed 9B       		.byte	0x9b
 2860 01ee 55       		.uleb128 .LLSDATT1450-.LLSDATTD1450
 2861              	.LLSDATTD1450:
 2862 01ef 01       		.byte	0x1
 2863 01f0 3E       		.uleb128 .LLSDACSE1450-.LLSDACSB1450
 2864              	.LLSDACSB1450:
 2865 01f1 49       		.uleb128 .LEHB71-.LFB1450
 2866 01f2 05       		.uleb128 .LEHE71-.LEHB71
 2867 01f3 A701     		.uleb128 .L141-.LFB1450
 2868 01f5 05       		.uleb128 0x5
 2869 01f6 6D       		.uleb128 .LEHB72-.LFB1450
 2870 01f7 05       		.uleb128 .LEHE72-.LEHB72
 2871 01f8 8601     		.uleb128 .L142-.LFB1450
 2872 01fa 07       		.uleb128 0x7
 2873 01fb 7C       		.uleb128 .LEHB73-.LFB1450
 2874 01fc 05       		.uleb128 .LEHE73-.LEHB73
 2875 01fd A701     		.uleb128 .L141-.LFB1450
 2876 01ff 05       		.uleb128 0x5
 2877 0200 CF01     		.uleb128 .LEHB74-.LFB1450
 2878 0202 8901     		.uleb128 .LEHE74-.LEHB74
 2879 0204 AD05     		.uleb128 .L143-.LFB1450
 2880 0206 00       		.uleb128 0
 2881 0207 FB02     		.uleb128 .LEHB75-.LFB1450
 2882 0209 05       		.uleb128 .LEHE75-.LEHB75
 2883 020a DC05     		.uleb128 .L144-.LFB1450
 2884 020c 00       		.uleb128 0
 2885 020d 9403     		.uleb128 .LEHB76-.LFB1450
 2886 020f 60       		.uleb128 .LEHE76-.LEHB76
 2887 0210 C405     		.uleb128 .L145-.LFB1450
 2888 0212 00       		.uleb128 0
 2889 0213 FE03     		.uleb128 .LEHB77-.LFB1450
 2890 0215 05       		.uleb128 .LEHE77-.LEHB77
 2891 0216 DC05     		.uleb128 .L144-.LFB1450
 2892 0218 00       		.uleb128 0
 2893 0219 9E04     		.uleb128 .LEHB78-.LFB1450
 2894 021b 8801     		.uleb128 .LEHE78-.LEHB78
 2895 021d F305     		.uleb128 .L146-.LFB1450
 2896 021f 00       		.uleb128 0
 2897 0220 A605     		.uleb128 .LEHB79-.LFB1450
 2898 0222 1E       		.uleb128 .LEHE79-.LEHB79
 2899 0223 00       		.uleb128 0
 2900 0224 00       		.uleb128 0
 2901 0225 EE05     		.uleb128 .LEHB80-.LFB1450
 2902 0227 05       		.uleb128 .LEHE80-.LEHB80
 2903 0228 00       		.uleb128 0
 2904 0229 00       		.uleb128 0
 2905 022a 8506     		.uleb128 .LEHB81-.LFB1450
 2906 022c 05       		.uleb128 .LEHE81-.LEHB81
 2907 022d 00       		.uleb128 0
 2908 022e 00       		.uleb128 0
 2909              	.LLSDACSE1450:
 2910 022f 03       		.byte	0x3
 2911 0230 00       		.byte	0
 2912 0231 02       		.byte	0x2
 2913 0232 7D       		.byte	0x7d
 2914 0233 01       		.byte	0x1
 2915 0234 7D       		.byte	0x7d
 2916 0235 00       		.byte	0
 2917 0236 7D       		.byte	0x7d
 2918 0237 00       		.align 4
 2919 0238 00000000 		.long	0
 2920              	
 2921 023c 00000000 		.long	DW.ref._ZTISt9exception-.
 2922 0240 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 2923              	.LLSDATT1450:
 2924              		.text
 2926              		.section	.rodata
 2927              		.align 8
 2928              	.LC24:
 2929 03d0 3C3F786D 		.string	"<?xml version=\"1.0\"?><unittest-results tests=\"1\" failedtests=\"0\" failures=\"0\" tim
 2929      6C207665 
 2929      7273696F 
 2929      6E3D2231 
 2929      2E30223F 
 2930              		.text
 2931              		.align 2
 2933              	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelper7RunImplEv:
 2934              	.LFB1454:
  81:TestXmlTestReporter.cpp **** {
 2935              		.loc 3 81 1 is_stmt 1
 2936              		.cfi_startproc
 2937              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 2938              		.cfi_lsda 0x1b,.LLSDA1454
 2939 15ec F30F1EFA 		endbr64
 2940 15f0 55       		pushq	%rbp
 2941              		.cfi_def_cfa_offset 16
 2942              		.cfi_offset 6, -16
 2943 15f1 4889E5   		movq	%rsp, %rbp
 2944              		.cfi_def_cfa_register 6
 2945 15f4 53       		pushq	%rbx
 2946 15f5 4881EC98 		subq	$152, %rsp
 2946      000000
 2947              		.cfi_offset 3, -24
 2948 15fc 4889BD68 		movq	%rdi, -152(%rbp)
 2948      FFFFFF
 2949              		.loc 3 81 1
 2950 1603 64488B04 		movq	%fs:40, %rax
 2950      25280000 
 2950      00
 2951 160c 488945E8 		movq	%rax, -24(%rbp)
 2952 1610 31C0     		xorl	%eax, %eax
  82:TestXmlTestReporter.cpp ****     TestDetails const details("TestName", "DefaultSuite", "", 0);
 2953              		.loc 3 82 64
 2954 1612 488D4580 		leaq	-128(%rbp), %rax
 2955 1616 41B80000 		movl	$0, %r8d
 2955      0000
 2956 161c 488D1500 		leaq	.LC14(%rip), %rdx
 2956      000000
 2957 1623 4889D1   		movq	%rdx, %rcx
 2958 1626 488D1500 		leaq	.LC0(%rip), %rdx
 2958      000000
 2959 162d 488D3500 		leaq	.LC8(%rip), %rsi
 2959      000000
 2960 1634 4889C7   		movq	%rax, %rdi
 2961              	.LEHB82:
 2962 1637 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 2962      00
  83:TestXmlTestReporter.cpp **** 
  84:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(details);
 2963              		.loc 3 84 29
 2964 163c 488B8568 		movq	-152(%rbp), %rax
 2964      FFFFFF
 2965 1643 488D9078 		leaq	376(%rax), %rdx
 2965      010000
 2966 164a 488D4580 		leaq	-128(%rbp), %rax
 2967 164e 4889C6   		movq	%rax, %rsi
 2968 1651 4889D7   		movq	%rdx, %rdi
 2969 1654 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE@PLT
 2969      00
  85:TestXmlTestReporter.cpp ****     reporter.ReportSummary(1, 0, 0, 0.1f);
 2970              		.loc 3 85 27
 2971 1659 488B8568 		movq	-152(%rbp), %rax
 2971      FFFFFF
 2972 1660 488DB878 		leaq	376(%rax), %rdi
 2972      010000
 2973 1667 8B050000 		movl	.LC10(%rip), %eax
 2973      0000
 2974 166d 660F6EC0 		movd	%eax, %xmm0
 2975 1671 B9000000 		movl	$0, %ecx
 2975      00
 2976 1676 BA000000 		movl	$0, %edx
 2976      00
 2977 167b BE010000 		movl	$1, %esi
 2977      00
 2978 1680 E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif@PLT
 2978      00
 2979              	.LEHE82:
  86:TestXmlTestReporter.cpp **** 
  87:TestXmlTestReporter.cpp ****     const char *expected =
 2980              		.loc 3 87 17
 2981 1685 488D0500 		leaq	.LC24(%rip), %rax
 2981      000000
 2982 168c 48898578 		movq	%rax, -136(%rbp)
 2982      FFFFFF
 2983              	.LEHB83:
  88:TestXmlTestReporter.cpp **** "<?xml version=\"1.0\"?>"
  89:TestXmlTestReporter.cpp **** "<unittest-results tests=\"1\" failedtests=\"0\" failures=\"0\" time=\"0.1\">"
  90:TestXmlTestReporter.cpp **** "<test suite=\"DefaultSuite\" name=\"TestName\" time=\"0\"/>"
  91:TestXmlTestReporter.cpp **** "</unittest-results>";
  92:TestXmlTestReporter.cpp **** 
  93:TestXmlTestReporter.cpp ****     CHECK_EQUAL(expected, output.str());
 2984              		.loc 3 93 5
 2985 1693 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 2985      00
 2986 1698 488B08   		movq	(%rax), %rcx
 2987 169b 488D45A0 		leaq	-96(%rbp), %rax
 2988 169f BA5D0000 		movl	$93, %edx
 2988      00
 2989 16a4 4889CE   		movq	%rcx, %rsi
 2990 16a7 4889C7   		movq	%rax, %rdi
 2991 16aa E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2991      00
 2992              		.loc 3 93 5 is_stmt 0 discriminator 4
 2993 16af 488B9568 		movq	-152(%rbp), %rdx
 2993      FFFFFF
 2994 16b6 488D45C0 		leaq	-64(%rbp), %rax
 2995 16ba 4889D6   		movq	%rdx, %rsi
 2996 16bd 4889C7   		movq	%rax, %rdi
 2997 16c0 E8000000 		call	_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv@PLT
 2997      00
 2998              	.LEHE83:
 2999              	.LEHB84:
 3000              		.loc 3 93 5 discriminator 6
 3001 16c5 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3001      00
 3002 16ca 488B00   		movq	(%rax), %rax
 3003 16cd 488D4DA0 		leaq	-96(%rbp), %rcx
 3004 16d1 488D55C0 		leaq	-64(%rbp), %rdx
 3005 16d5 488DB578 		leaq	-136(%rbp), %rsi
 3005      FFFFFF
 3006 16dc 4889C7   		movq	%rax, %rdi
 3007 16df E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 3007      00
 3008              	.LEHE84:
 3009              		.loc 3 93 5 discriminator 10
 3010 16e4 488D45C0 		leaq	-64(%rbp), %rax
 3011 16e8 4889C7   		movq	%rax, %rdi
 3012              	.LEHB85:
 3013 16eb E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 3013      00
 3014              	.LEHE85:
  94:TestXmlTestReporter.cpp **** }
 3015              		.loc 3 94 1 is_stmt 1
 3016 16f0 EB7C     		jmp	.L148
 3017              	.L155:
 3018 16f2 F30F1EFA 		endbr64
  93:TestXmlTestReporter.cpp **** }
 3019              		.loc 3 93 5
 3020 16f6 4889C3   		movq	%rax, %rbx
 3021 16f9 488D45C0 		leaq	-64(%rbp), %rax
 3022 16fd 4889C7   		movq	%rax, %rdi
 3023 1700 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 3023      00
 3024 1705 4889D8   		movq	%rbx, %rax
 3025 1708 EB04     		jmp	.L150
 3026              	.L154:
 3027 170a F30F1EFA 		endbr64
 3028              	.L150:
  93:TestXmlTestReporter.cpp **** }
 3029              		.loc 3 93 5 is_stmt 0 discriminator 3
 3030 170e 4889C7   		movq	%rax, %rdi
 3031 1711 E8000000 		call	__cxa_begin_catch@PLT
 3031      00
 3032              	.LEHB86:
 3033 1716 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3033      00
 3034 171b 488B18   		movq	(%rax), %rbx
 3035 171e E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 3035      00
  93:TestXmlTestReporter.cpp **** }
 3036              		.loc 3 93 5 discriminator 15
 3037 1723 488B08   		movq	(%rax), %rcx
 3038 1726 488D45A0 		leaq	-96(%rbp), %rax
 3039 172a BA5D0000 		movl	$93, %edx
 3039      00
 3040 172f 4889CE   		movq	%rcx, %rsi
 3041 1732 4889C7   		movq	%rax, %rdi
 3042 1735 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 3042      00
  93:TestXmlTestReporter.cpp **** }
 3043              		.loc 3 93 5 discriminator 19
 3044 173a 488D45A0 		leaq	-96(%rbp), %rax
 3045 173e 488D1500 		leaq	.LC12(%rip), %rdx
 3045      000000
 3046 1745 4889C6   		movq	%rax, %rsi
 3047 1748 4889DF   		movq	%rbx, %rdi
 3048 174b E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3048      00
 3049              	.LEHE86:
 3050              	.LEHB87:
  93:TestXmlTestReporter.cpp **** }
 3051              		.loc 3 93 5 discriminator 21
 3052 1750 E8000000 		call	__cxa_end_catch@PLT
 3052      00
 3053              	.LEHE87:
 3054              		.loc 3 94 1 is_stmt 1 discriminator 21
 3055 1755 EB17     		jmp	.L148
 3056              	.L156:
 3057 1757 F30F1EFA 		endbr64
  93:TestXmlTestReporter.cpp **** }
 3058              		.loc 3 93 5
 3059 175b 4889C3   		movq	%rax, %rbx
 3060 175e E8000000 		call	__cxa_end_catch@PLT
 3060      00
 3061 1763 4889D8   		movq	%rbx, %rax
 3062 1766 4889C7   		movq	%rax, %rdi
 3063              	.LEHB88:
 3064 1769 E8000000 		call	_Unwind_Resume@PLT
 3064      00
 3065              	.LEHE88:
 3066              	.L148:
 3067              		.loc 3 94 1
 3068 176e 488B45E8 		movq	-24(%rbp), %rax
 3069 1772 64482B04 		subq	%fs:40, %rax
 3069      25280000 
 3069      00
 3070 177b 7405     		je	.L153
 3071 177d E8000000 		call	__stack_chk_fail@PLT
 3071      00
 3072              	.L153:
 3073 1782 488B5DF8 		movq	-8(%rbp), %rbx
 3074 1786 C9       		leave
 3075              		.cfi_def_cfa 7, 8
 3076 1787 C3       		ret
 3077              		.cfi_endproc
 3078              	.LFE1454:
 3079              		.section	.gcc_except_table
 3080              		.align 4
 3081              	.LLSDA1454:
 3082 0244 FF       		.byte	0xff
 3083 0245 9B       		.byte	0x9b
 3084 0246 31       		.uleb128 .LLSDATT1454-.LLSDATTD1454
 3085              	.LLSDATTD1454:
 3086 0247 01       		.byte	0x1
 3087 0248 26       		.uleb128 .LLSDACSE1454-.LLSDACSB1454
 3088              	.LLSDACSB1454:
 3089 0249 4B       		.uleb128 .LEHB82-.LFB1454
 3090 024a 4E       		.uleb128 .LEHE82-.LEHB82
 3091 024b 00       		.uleb128 0
 3092 024c 00       		.uleb128 0
 3093 024d A701     		.uleb128 .LEHB83-.LFB1454
 3094 024f 32       		.uleb128 .LEHE83-.LEHB83
 3095 0250 9E02     		.uleb128 .L154-.LFB1454
 3096 0252 01       		.uleb128 0x1
 3097 0253 D901     		.uleb128 .LEHB84-.LFB1454
 3098 0255 1F       		.uleb128 .LEHE84-.LEHB84
 3099 0256 8602     		.uleb128 .L155-.LFB1454
 3100 0258 03       		.uleb128 0x3
 3101 0259 FF01     		.uleb128 .LEHB85-.LFB1454
 3102 025b 05       		.uleb128 .LEHE85-.LEHB85
 3103 025c 9E02     		.uleb128 .L154-.LFB1454
 3104 025e 01       		.uleb128 0x1
 3105 025f AA02     		.uleb128 .LEHB86-.LFB1454
 3106 0261 3A       		.uleb128 .LEHE86-.LEHB86
 3107 0262 EB02     		.uleb128 .L156-.LFB1454
 3108 0264 00       		.uleb128 0
 3109 0265 E402     		.uleb128 .LEHB87-.LFB1454
 3110 0267 05       		.uleb128 .LEHE87-.LEHB87
 3111 0268 00       		.uleb128 0
 3112 0269 00       		.uleb128 0
 3113 026a FD02     		.uleb128 .LEHB88-.LFB1454
 3114 026c 05       		.uleb128 .LEHE88-.LEHB88
 3115 026d 00       		.uleb128 0
 3116 026e 00       		.uleb128 0
 3117              	.LLSDACSE1454:
 3118 026f 01       		.byte	0x1
 3119 0270 00       		.byte	0
 3120 0271 00       		.byte	0
 3121 0272 7D       		.byte	0x7d
 3122 0273 00       		.align 4
 3123 0274 00000000 		.long	0
 3124              	
 3125              	.LLSDATT1454:
 3126              		.text
 3128              		.align 2
 3130              	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperC2ERKN8UnitTest11
 3131              	.LFB1456:
  95:TestXmlTestReporter.cpp **** 
  96:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, SingleFailedTestReportSummaryFormat)
 3132              		.loc 3 96 1
 3133              		.cfi_startproc
 3134 1788 55       		pushq	%rbp
 3135              		.cfi_def_cfa_offset 16
 3136              		.cfi_offset 6, -16
 3137 1789 4889E5   		movq	%rsp, %rbp
 3138              		.cfi_def_cfa_register 6
 3139 178c 4883EC10 		subq	$16, %rsp
 3140 1790 48897DF8 		movq	%rdi, -8(%rbp)
 3141 1794 488975F0 		movq	%rsi, -16(%rbp)
 3142              	.LBB52:
 3143              		.loc 3 96 1
 3144 1798 488B45F8 		movq	-8(%rbp), %rax
 3145 179c 4889C7   		movq	%rax, %rdi
 3146 179f E85CE8FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 3146      FF
 3147 17a4 488B45F8 		movq	-8(%rbp), %rax
 3148 17a8 488B55F0 		movq	-16(%rbp), %rdx
 3149 17ac 488990A0 		movq	%rdx, 416(%rax)
 3149      010000
 3150              	.LBE52:
 3151 17b3 90       		nop
 3152 17b4 C9       		leave
 3153              		.cfi_def_cfa 7, 8
 3154 17b5 C3       		ret
 3155              		.cfi_endproc
 3156              	.LFE1456:
 3158              		.set	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperC1ERKN8Unit
 3159              		.section	.rodata
 3160 0472 00000000 		.align 8
 3160      0000
 3161              	.LC25:
 3162 0478 53696E67 		.string	"SingleFailedTestReportSummaryFormat"
 3162      6C654661 
 3162      696C6564 
 3162      54657374 
 3162      5265706F 
 3163              		.text
 3164              		.align 2
 3166              	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatC2Ev:
 3167              	.LFB1459:
 3168              		.loc 3 96 1
 3169              		.cfi_startproc
 3170 17b6 55       		pushq	%rbp
 3171              		.cfi_def_cfa_offset 16
 3172              		.cfi_offset 6, -16
 3173 17b7 4889E5   		movq	%rsp, %rbp
 3174              		.cfi_def_cfa_register 6
 3175 17ba 53       		pushq	%rbx
 3176 17bb 4883EC18 		subq	$24, %rsp
 3177              		.cfi_offset 3, -24
 3178 17bf 48897DE8 		movq	%rdi, -24(%rbp)
 3179              	.LBB53:
 3180              		.loc 3 96 1
 3181 17c3 488B5DE8 		movq	-24(%rbp), %rbx
 3182 17c7 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 3182      00
 3183 17cc 4889C2   		movq	%rax, %rdx
 3184 17cf 41B86000 		movl	$96, %r8d
 3184      0000
 3185 17d5 488D0500 		leaq	.LC1(%rip), %rax
 3185      000000
 3186 17dc 4889C1   		movq	%rax, %rcx
 3187 17df 488D0500 		leaq	.LC25(%rip), %rax
 3187      000000
 3188 17e6 4889C6   		movq	%rax, %rsi
 3189 17e9 4889DF   		movq	%rbx, %rdi
 3190 17ec E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 3190      00
 3191 17f1 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE(%rip),
 3191      000000
 3192 17f8 488B45E8 		movq	-24(%rbp), %rax
 3193 17fc 488910   		movq	%rdx, (%rax)
 3194              	.LBE53:
 3195 17ff 90       		nop
 3196 1800 488B5DF8 		movq	-8(%rbp), %rbx
 3197 1804 C9       		leave
 3198              		.cfi_def_cfa 7, 8
 3199 1805 C3       		ret
 3200              		.cfi_endproc
 3201              	.LFE1459:
 3203              		.set	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatC1Ev,_ZN12_GL
 3204              		.local	_ZN12_GLOBAL__N_169testXmlTestReporterFixtureSingleFailedTestReportSummaryFormatInstanceE
 3205              		.comm	_ZN12_GLOBAL__N_169testXmlTestReporterFixtureSingleFailedTestReportSummaryFormatInstanceE,56
 3206              		.local	_ZN12_GLOBAL__N_162adderXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE
 3207              		.comm	_ZN12_GLOBAL__N_162adderXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE,1,1
 3208              		.align 2
 3210              	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperD2Ev:
 3211              	.LFB1463:
 3212              		.loc 3 96 1
 3213              		.cfi_startproc
 3214 1806 55       		pushq	%rbp
 3215              		.cfi_def_cfa_offset 16
 3216              		.cfi_offset 6, -16
 3217 1807 4889E5   		movq	%rsp, %rbp
 3218              		.cfi_def_cfa_register 6
 3219 180a 4883EC10 		subq	$16, %rsp
 3220 180e 48897DF8 		movq	%rdi, -8(%rbp)
 3221              	.LBB54:
 3222              		.loc 3 96 1
 3223 1812 488B45F8 		movq	-8(%rbp), %rax
 3224 1816 4889C7   		movq	%rax, %rdi
 3225 1819 E83CE8FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 3225      FF
 3226              	.LBE54:
 3227 181e 90       		nop
 3228 181f C9       		leave
 3229              		.cfi_def_cfa 7, 8
 3230 1820 C3       		ret
 3231              		.cfi_endproc
 3232              	.LFE1463:
 3234              		.set	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperD1Ev,_ZN12_
 3235 1821 90       		.align 2
 3237              	_ZNK12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormat7RunImplEv:
 3238              	.LFB1461:
 3239              		.loc 3 96 1
 3240              		.cfi_startproc
 3241              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 3242              		.cfi_lsda 0x1b,.LLSDA1461
 3243 1822 F30F1EFA 		endbr64
 3244 1826 55       		pushq	%rbp
 3245              		.cfi_def_cfa_offset 16
 3246              		.cfi_offset 6, -16
 3247 1827 4889E5   		movq	%rsp, %rbp
 3248              		.cfi_def_cfa_register 6
 3249 182a 4155     		pushq	%r13
 3250 182c 4154     		pushq	%r12
 3251 182e 53       		pushq	%rbx
 3252 182f 4881EC08 		subq	$520, %rsp
 3252      020000
 3253              		.cfi_offset 13, -24
 3254              		.cfi_offset 12, -32
 3255              		.cfi_offset 3, -40
 3256 1836 4889BDE8 		movq	%rdi, -536(%rbp)
 3256      FDFFFF
 3257              		.loc 3 96 1
 3258 183d 64488B04 		movq	%fs:40, %rax
 3258      25280000 
 3258      00
 3259 1846 488945D8 		movq	%rax, -40(%rbp)
 3260 184a 31C0     		xorl	%eax, %eax
 3261 184c C685FFFD 		movb	$0, -513(%rbp)
 3261      FFFF00
 3262              	.LBB55:
 3263 1853 488B85E8 		movq	-536(%rbp), %rax
 3263      FDFFFF
 3264 185a 488D5008 		leaq	8(%rax), %rdx
 3265 185e 488D8530 		leaq	-464(%rbp), %rax
 3265      FEFFFF
 3266 1865 4889D6   		movq	%rdx, %rsi
 3267 1868 4889C7   		movq	%rax, %rdi
 3268              	.LEHB89:
 3269 186b E818FFFF 		call	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperC1ERKN8Unit
 3269      FF
 3270              	.LEHE89:
 3271              		.loc 3 96 1 is_stmt 0 discriminator 1
 3272 1870 C685FFFD 		movb	$1, -513(%rbp)
 3272      FFFF01
 3273 1877 488B85E8 		movq	-536(%rbp), %rax
 3273      FDFFFF
 3274 187e 488D5008 		leaq	8(%rax), %rdx
 3275 1882 488D8530 		leaq	-464(%rbp), %rax
 3275      FEFFFF
 3276 1889 4889D6   		movq	%rdx, %rsi
 3277 188c 4889C7   		movq	%rax, %rdi
 3278              	.LEHB90:
 3279 188f E8132200 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummar
 3279      00
 3280              	.LEHE90:
 3281              		.loc 3 96 1 discriminator 3
 3282 1894 488D8530 		leaq	-464(%rbp), %rax
 3282      FEFFFF
 3283 189b 4889C7   		movq	%rax, %rdi
 3284              	.LEHB91:
 3285 189e E863FFFF 		call	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperD1Ev
 3285      FF
 3286              	.LEHE91:
 3287              	.LBE55:
 3288              		.loc 3 96 1
 3289 18a3 E9840200 		jmp	.L160
 3289      00
 3290              	.L175:
 3291 18a8 F30F1EFA 		endbr64
 3292              	.LBB56:
 3293 18ac 4989C4   		movq	%rax, %r12
 3294 18af 4889D3   		movq	%rdx, %rbx
 3295 18b2 488D8530 		leaq	-464(%rbp), %rax
 3295      FEFFFF
 3296 18b9 4889C7   		movq	%rax, %rdi
 3297 18bc E845FFFF 		call	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperD1Ev
 3297      FF
 3298 18c1 4C89E0   		movq	%r12, %rax
 3299 18c4 4889DA   		movq	%rbx, %rdx
 3300 18c7 EB04     		jmp	.L162
 3301              	.L174:
 3302 18c9 F30F1EFA 		endbr64
 3303              	.L162:
 3304              	.LBE56:
 3305 18cd 4883FA01 		cmpq	$1, %rdx
 3306 18d1 740F     		je	.L163
 3307 18d3 4883FA02 		cmpq	$2, %rdx
 3308 18d7 0F84A700 		je	.L164
 3308      0000
 3309 18dd E94D0100 		jmp	.L180
 3309      00
 3310              	.L163:
 3311              	.LBB57:
 3312              		.loc 3 96 1 discriminator 4
 3313 18e2 4889C7   		movq	%rax, %rdi
 3314 18e5 E8000000 		call	__cxa_begin_catch@PLT
 3314      00
 3315 18ea 48898508 		movq	%rax, -504(%rbp)
 3315      FEFFFF
 3316              	.LEHB92:
 3317 18f1 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3317      00
 3318 18f6 488B18   		movq	(%rax), %rbx
 3319 18f9 488B8508 		movq	-504(%rbp), %rax
 3319      FEFFFF
 3320 1900 488B00   		movq	(%rax), %rax
 3321 1903 4883C010 		addq	$16, %rax
 3322 1907 488B10   		movq	(%rax), %rdx
 3323 190a 488B8508 		movq	-504(%rbp), %rax
 3323      FEFFFF
 3324 1911 4889C7   		movq	%rax, %rdi
 3325 1914 FFD2     		call	*%rdx
 3326              	.LVL8:
 3327 1916 4989C4   		movq	%rax, %r12
 3328 1919 488B8508 		movq	-504(%rbp), %rax
 3328      FEFFFF
 3329 1920 4889C7   		movq	%rax, %rdi
 3330 1923 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 3330      00
 3331              		.loc 3 96 1 discriminator 8
 3332 1928 4189C5   		movl	%eax, %r13d
 3333 192b 488B8508 		movq	-504(%rbp), %rax
 3333      FEFFFF
 3334 1932 4889C7   		movq	%rax, %rdi
 3335 1935 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 3335      00
 3336              		.loc 3 96 1 discriminator 10
 3337 193a 4889C1   		movq	%rax, %rcx
 3338 193d 488B85E8 		movq	-536(%rbp), %rax
 3338      FDFFFF
 3339 1944 488B5008 		movq	8(%rax), %rdx
 3340 1948 488B85E8 		movq	-536(%rbp), %rax
 3340      FDFFFF
 3341 194f 488B7010 		movq	16(%rax), %rsi
 3342 1953 488D8510 		leaq	-496(%rbp), %rax
 3342      FEFFFF
 3343 195a 4589E8   		movl	%r13d, %r8d
 3344 195d 4889C7   		movq	%rax, %rdi
 3345 1960 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 3345      00
 3346              		.loc 3 96 1 discriminator 14
 3347 1965 488D8510 		leaq	-496(%rbp), %rax
 3347      FEFFFF
 3348 196c 4C89E2   		movq	%r12, %rdx
 3349 196f 4889C6   		movq	%rax, %rsi
 3350 1972 4889DF   		movq	%rbx, %rdi
 3351 1975 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3351      00
 3352              	.LEHE92:
 3353              		.loc 3 96 1 discriminator 16
 3354 197a E8000000 		call	__cxa_end_catch@PLT
 3354      00
 3355              	.LBE57:
 3356 197f E9A80100 		jmp	.L160
 3356      00
 3357              	.L164:
 3358              	.LBB58:
 3359              		.loc 3 96 1 discriminator 5
 3360 1984 4889C7   		movq	%rax, %rdi
 3361 1987 E8000000 		call	__cxa_begin_catch@PLT
 3361      00
 3362 198c 48898500 		movq	%rax, -512(%rbp)
 3362      FEFFFF
 3363              	.LBB59:
 3364 1993 488D8530 		leaq	-464(%rbp), %rax
 3364      FEFFFF
 3365 199a 4889C7   		movq	%rax, %rdi
 3366              	.LEHB93:
 3367 199d E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 3367      00
 3368              	.LEHE93:
 3369              		.loc 3 96 1 discriminator 18
 3370 19a2 488D8530 		leaq	-464(%rbp), %rax
 3370      FEFFFF
 3371 19a9 488D1500 		leaq	.LC3(%rip), %rdx
 3371      000000
 3372 19b0 4889D6   		movq	%rdx, %rsi
 3373 19b3 4889C7   		movq	%rax, %rdi
 3374              	.LEHB94:
 3375 19b6 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 3375      00
 3376 19bb 4889C3   		movq	%rax, %rbx
 3377 19be 488B8500 		movq	-512(%rbp), %rax
 3377      FEFFFF
 3378 19c5 488B00   		movq	(%rax), %rax
 3379 19c8 4883C010 		addq	$16, %rax
 3380 19cc 488B10   		movq	(%rax), %rdx
 3381 19cf 488B8500 		movq	-512(%rbp), %rax
 3381      FEFFFF
 3382 19d6 4889C7   		movq	%rax, %rdi
 3383 19d9 FFD2     		call	*%rdx
 3384              	.LVL9:
 3385 19db 4889C6   		movq	%rax, %rsi
 3386 19de 4889DF   		movq	%rbx, %rdi
 3387 19e1 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 3387      00
 3388              		.loc 3 96 1 discriminator 22
 3389 19e6 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3389      00
 3390 19eb 488B18   		movq	(%rax), %rbx
 3391 19ee 488D8530 		leaq	-464(%rbp), %rax
 3391      FEFFFF
 3392 19f5 4889C7   		movq	%rax, %rdi
 3393 19f8 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 3393      00
 3394              		.loc 3 96 1 discriminator 24
 3395 19fd 4889C2   		movq	%rax, %rdx
 3396 1a00 488B85E8 		movq	-536(%rbp), %rax
 3396      FDFFFF
 3397 1a07 4883C008 		addq	$8, %rax
 3398 1a0b 4889C6   		movq	%rax, %rsi
 3399 1a0e 4889DF   		movq	%rbx, %rdi
 3400 1a11 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3400      00
 3401              	.LEHE94:
 3402              		.loc 3 96 1 discriminator 28
 3403 1a16 488D8530 		leaq	-464(%rbp), %rax
 3403      FEFFFF
 3404 1a1d 4889C7   		movq	%rax, %rdi
 3405              	.LEHB95:
 3406 1a20 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3406      00
 3407              	.LEHE95:
 3408              	.LBE59:
 3409              		.loc 3 96 1 discriminator 29
 3410 1a25 E8000000 		call	__cxa_end_catch@PLT
 3410      00
 3411              	.LBE58:
 3412 1a2a E9FD0000 		jmp	.L160
 3412      00
 3413              	.L180:
 3414              		.loc 3 96 1 discriminator 6
 3415 1a2f 4889C7   		movq	%rax, %rdi
 3416 1a32 E8000000 		call	__cxa_begin_catch@PLT
 3416      00
 3417 1a37 80BDFFFD 		cmpb	$0, -513(%rbp)
 3417      FFFF00
 3418 1a3e 7445     		je	.L167
 3419              	.LEHB96:
 3420              		.loc 3 96 1 discriminator 31
 3421 1a40 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3421      00
 3422 1a45 488B18   		movq	(%rax), %rbx
 3423 1a48 488B85E8 		movq	-536(%rbp), %rax
 3423      FDFFFF
 3424 1a4f 488D4808 		leaq	8(%rax), %rcx
 3425 1a53 488D8510 		leaq	-496(%rbp), %rax
 3425      FEFFFF
 3426 1a5a BA600000 		movl	$96, %edx
 3426      00
 3427 1a5f 4889CE   		movq	%rcx, %rsi
 3428 1a62 4889C7   		movq	%rax, %rdi
 3429 1a65 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 3429      00
 3430              		.loc 3 96 1 discriminator 36
 3431 1a6a 488D8510 		leaq	-496(%rbp), %rax
 3431      FEFFFF
 3432 1a71 488D1500 		leaq	.LC4(%rip), %rdx
 3432      000000
 3433 1a78 4889C6   		movq	%rax, %rsi
 3434 1a7b 4889DF   		movq	%rbx, %rdi
 3435 1a7e E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3435      00
 3436 1a83 EB43     		jmp	.L168
 3437              	.L167:
 3438              		.loc 3 96 1 discriminator 32
 3439 1a85 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3439      00
 3440 1a8a 488B18   		movq	(%rax), %rbx
 3441 1a8d 488B85E8 		movq	-536(%rbp), %rax
 3441      FDFFFF
 3442 1a94 488D4808 		leaq	8(%rax), %rcx
 3443 1a98 488D8510 		leaq	-496(%rbp), %rax
 3443      FEFFFF
 3444 1a9f BA600000 		movl	$96, %edx
 3444      00
 3445 1aa4 4889CE   		movq	%rcx, %rsi
 3446 1aa7 4889C7   		movq	%rax, %rdi
 3447 1aaa E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 3447      00
 3448              		.loc 3 96 1 discriminator 43
 3449 1aaf 488D8510 		leaq	-496(%rbp), %rax
 3449      FEFFFF
 3450 1ab6 488D1500 		leaq	.LC5(%rip), %rdx
 3450      000000
 3451 1abd 4889C6   		movq	%rax, %rsi
 3452 1ac0 4889DF   		movq	%rbx, %rdi
 3453 1ac3 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3453      00
 3454              	.LEHE96:
 3455              	.L168:
 3456              	.LEHB97:
 3457              		.loc 3 96 1 discriminator 46
 3458 1ac8 E8000000 		call	__cxa_end_catch@PLT
 3458      00
 3459 1acd EB5D     		jmp	.L160
 3460              	.L176:
 3461 1acf F30F1EFA 		endbr64
 3462              	.LBB61:
 3463              		.loc 3 96 1
 3464 1ad3 4889C3   		movq	%rax, %rbx
 3465 1ad6 E8000000 		call	__cxa_end_catch@PLT
 3465      00
 3466 1adb 4889D8   		movq	%rbx, %rax
 3467 1ade 4889C7   		movq	%rax, %rdi
 3468 1ae1 E8000000 		call	_Unwind_Resume@PLT
 3468      00
 3469              	.LEHE97:
 3470              	.L178:
 3471 1ae6 F30F1EFA 		endbr64
 3472              	.LBE61:
 3473              	.LBB62:
 3474              	.LBB60:
 3475 1aea 4889C3   		movq	%rax, %rbx
 3476 1aed 488D8530 		leaq	-464(%rbp), %rax
 3476      FEFFFF
 3477 1af4 4889C7   		movq	%rax, %rdi
 3478 1af7 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3478      00
 3479 1afc EB07     		jmp	.L171
 3480              	.L177:
 3481 1afe F30F1EFA 		endbr64
 3482              	.LBE60:
 3483 1b02 4889C3   		movq	%rax, %rbx
 3484              	.L171:
 3485 1b05 E8000000 		call	__cxa_end_catch@PLT
 3485      00
 3486 1b0a 4889D8   		movq	%rbx, %rax
 3487 1b0d 4889C7   		movq	%rax, %rdi
 3488              	.LEHB98:
 3489 1b10 E8000000 		call	_Unwind_Resume@PLT
 3489      00
 3490              	.LEHE98:
 3491              	.L179:
 3492 1b15 F30F1EFA 		endbr64
 3493              	.LBE62:
 3494 1b19 4889C3   		movq	%rax, %rbx
 3495 1b1c E8000000 		call	__cxa_end_catch@PLT
 3495      00
 3496 1b21 4889D8   		movq	%rbx, %rax
 3497 1b24 4889C7   		movq	%rax, %rdi
 3498              	.LEHB99:
 3499 1b27 E8000000 		call	_Unwind_Resume@PLT
 3499      00
 3500              	.LEHE99:
 3501              	.L160:
 3502 1b2c 488B45D8 		movq	-40(%rbp), %rax
 3503 1b30 64482B04 		subq	%fs:40, %rax
 3503      25280000 
 3503      00
 3504 1b39 7405     		je	.L173
 3505 1b3b E8000000 		call	__stack_chk_fail@PLT
 3505      00
 3506              	.L173:
 3507 1b40 4881C408 		addq	$520, %rsp
 3507      020000
 3508 1b47 5B       		popq	%rbx
 3509 1b48 415C     		popq	%r12
 3510 1b4a 415D     		popq	%r13
 3511 1b4c 5D       		popq	%rbp
 3512              		.cfi_def_cfa 7, 8
 3513 1b4d C3       		ret
 3514              		.cfi_endproc
 3515              	.LFE1461:
 3516              		.section	.gcc_except_table
 3517              		.align 4
 3518              	.LLSDA1461:
 3519 0278 FF       		.byte	0xff
 3520 0279 9B       		.byte	0x9b
 3521 027a 55       		.uleb128 .LLSDATT1461-.LLSDATTD1461
 3522              	.LLSDATTD1461:
 3523 027b 01       		.byte	0x1
 3524 027c 3E       		.uleb128 .LLSDACSE1461-.LLSDACSB1461
 3525              	.LLSDACSB1461:
 3526 027d 49       		.uleb128 .LEHB89-.LFB1461
 3527 027e 05       		.uleb128 .LEHE89-.LEHB89
 3528 027f A701     		.uleb128 .L174-.LFB1461
 3529 0281 05       		.uleb128 0x5
 3530 0282 6D       		.uleb128 .LEHB90-.LFB1461
 3531 0283 05       		.uleb128 .LEHE90-.LEHB90
 3532 0284 8601     		.uleb128 .L175-.LFB1461
 3533 0286 07       		.uleb128 0x7
 3534 0287 7C       		.uleb128 .LEHB91-.LFB1461
 3535 0288 05       		.uleb128 .LEHE91-.LEHB91
 3536 0289 A701     		.uleb128 .L174-.LFB1461
 3537 028b 05       		.uleb128 0x5
 3538 028c CF01     		.uleb128 .LEHB92-.LFB1461
 3539 028e 8901     		.uleb128 .LEHE92-.LEHB92
 3540 0290 AD05     		.uleb128 .L176-.LFB1461
 3541 0292 00       		.uleb128 0
 3542 0293 FB02     		.uleb128 .LEHB93-.LFB1461
 3543 0295 05       		.uleb128 .LEHE93-.LEHB93
 3544 0296 DC05     		.uleb128 .L177-.LFB1461
 3545 0298 00       		.uleb128 0
 3546 0299 9403     		.uleb128 .LEHB94-.LFB1461
 3547 029b 60       		.uleb128 .LEHE94-.LEHB94
 3548 029c C405     		.uleb128 .L178-.LFB1461
 3549 029e 00       		.uleb128 0
 3550 029f FE03     		.uleb128 .LEHB95-.LFB1461
 3551 02a1 05       		.uleb128 .LEHE95-.LEHB95
 3552 02a2 DC05     		.uleb128 .L177-.LFB1461
 3553 02a4 00       		.uleb128 0
 3554 02a5 9E04     		.uleb128 .LEHB96-.LFB1461
 3555 02a7 8801     		.uleb128 .LEHE96-.LEHB96
 3556 02a9 F305     		.uleb128 .L179-.LFB1461
 3557 02ab 00       		.uleb128 0
 3558 02ac A605     		.uleb128 .LEHB97-.LFB1461
 3559 02ae 1E       		.uleb128 .LEHE97-.LEHB97
 3560 02af 00       		.uleb128 0
 3561 02b0 00       		.uleb128 0
 3562 02b1 EE05     		.uleb128 .LEHB98-.LFB1461
 3563 02b3 05       		.uleb128 .LEHE98-.LEHB98
 3564 02b4 00       		.uleb128 0
 3565 02b5 00       		.uleb128 0
 3566 02b6 8506     		.uleb128 .LEHB99-.LFB1461
 3567 02b8 05       		.uleb128 .LEHE99-.LEHB99
 3568 02b9 00       		.uleb128 0
 3569 02ba 00       		.uleb128 0
 3570              	.LLSDACSE1461:
 3571 02bb 03       		.byte	0x3
 3572 02bc 00       		.byte	0
 3573 02bd 02       		.byte	0x2
 3574 02be 7D       		.byte	0x7d
 3575 02bf 01       		.byte	0x1
 3576 02c0 7D       		.byte	0x7d
 3577 02c1 00       		.byte	0
 3578 02c2 7D       		.byte	0x7d
 3579 02c3 00       		.align 4
 3580 02c4 00000000 		.long	0
 3581              	
 3582 02c8 00000000 		.long	DW.ref._ZTISt9exception-.
 3583 02cc 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 3584              	.LLSDATT1461:
 3585              		.text
 3587              		.section	.rodata
 3588              	.LC26:
 3589 049c 41204669 		.string	"A File"
 3589      6C6500
 3590              	.LC27:
 3591 04a3 41205465 		.string	"A Test"
 3591      737400
 3592              	.LC28:
 3593 04aa 41204661 		.string	"A Failure"
 3593      696C7572 
 3593      6500
 3594 04b4 00000000 		.align 8
 3595              	.LC29:
 3596 04b8 3C3F786D 		.string	"<?xml version=\"1.0\"?><unittest-results tests=\"1\" failedtests=\"1\" failures=\"1\" tim
 3596      6C207665 
 3596      7273696F 
 3596      6E3D2231 
 3596      2E30223F 
 3597              		.text
 3598              		.align 2
 3600              	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelper7RunImplEv:
 3601              	.LFB1465:
  97:TestXmlTestReporter.cpp **** {
 3602              		.loc 3 97 1 is_stmt 1
 3603              		.cfi_startproc
 3604              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 3605              		.cfi_lsda 0x1b,.LLSDA1465
 3606 1b4e F30F1EFA 		endbr64
 3607 1b52 55       		pushq	%rbp
 3608              		.cfi_def_cfa_offset 16
 3609              		.cfi_offset 6, -16
 3610 1b53 4889E5   		movq	%rsp, %rbp
 3611              		.cfi_def_cfa_register 6
 3612 1b56 53       		pushq	%rbx
 3613 1b57 4881EC98 		subq	$152, %rsp
 3613      000000
 3614              		.cfi_offset 3, -24
 3615 1b5e 4889BD68 		movq	%rdi, -152(%rbp)
 3615      FFFFFF
 3616              		.loc 3 97 1
 3617 1b65 64488B04 		movq	%fs:40, %rax
 3617      25280000 
 3617      00
 3618 1b6e 488945E8 		movq	%rax, -24(%rbp)
 3619 1b72 31C0     		xorl	%eax, %eax
  98:TestXmlTestReporter.cpp ****     TestDetails const details("A Test", "suite", "A File", 4321);
 3620              		.loc 3 98 64
 3621 1b74 488D4580 		leaq	-128(%rbp), %rax
 3622 1b78 41B8E110 		movl	$4321, %r8d
 3622      0000
 3623 1b7e 488D1500 		leaq	.LC26(%rip), %rdx
 3623      000000
 3624 1b85 4889D1   		movq	%rdx, %rcx
 3625 1b88 488D1500 		leaq	.LC7(%rip), %rdx
 3625      000000
 3626 1b8f 488D3500 		leaq	.LC27(%rip), %rsi
 3626      000000
 3627 1b96 4889C7   		movq	%rax, %rdi
 3628              	.LEHB100:
 3629 1b99 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 3629      00
  99:TestXmlTestReporter.cpp **** 
 100:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(details);
 3630              		.loc 3 100 29
 3631 1b9e 488B8568 		movq	-152(%rbp), %rax
 3631      FFFFFF
 3632 1ba5 488D9078 		leaq	376(%rax), %rdx
 3632      010000
 3633 1bac 488D4580 		leaq	-128(%rbp), %rax
 3634 1bb0 4889C6   		movq	%rax, %rsi
 3635 1bb3 4889D7   		movq	%rdx, %rdi
 3636 1bb6 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE@PLT
 3636      00
 101:TestXmlTestReporter.cpp ****     reporter.ReportFailure(details, "A Failure");
 3637              		.loc 3 101 27
 3638 1bbb 488B8568 		movq	-152(%rbp), %rax
 3638      FFFFFF
 3639 1bc2 488D8878 		leaq	376(%rax), %rcx
 3639      010000
 3640 1bc9 488D4580 		leaq	-128(%rbp), %rax
 3641 1bcd 488D1500 		leaq	.LC28(%rip), %rdx
 3641      000000
 3642 1bd4 4889C6   		movq	%rax, %rsi
 3643 1bd7 4889CF   		movq	%rcx, %rdi
 3644 1bda E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc@PLT
 3644      00
 102:TestXmlTestReporter.cpp ****     reporter.ReportSummary(1, 1, 1, 0.1f);
 3645              		.loc 3 102 27
 3646 1bdf 488B8568 		movq	-152(%rbp), %rax
 3646      FFFFFF
 3647 1be6 488DB878 		leaq	376(%rax), %rdi
 3647      010000
 3648 1bed 8B050000 		movl	.LC10(%rip), %eax
 3648      0000
 3649 1bf3 660F6EC0 		movd	%eax, %xmm0
 3650 1bf7 B9010000 		movl	$1, %ecx
 3650      00
 3651 1bfc BA010000 		movl	$1, %edx
 3651      00
 3652 1c01 BE010000 		movl	$1, %esi
 3652      00
 3653 1c06 E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif@PLT
 3653      00
 3654              	.LEHE100:
 103:TestXmlTestReporter.cpp **** 
 104:TestXmlTestReporter.cpp ****     const char *expected =
 3655              		.loc 3 104 17
 3656 1c0b 488D0500 		leaq	.LC29(%rip), %rax
 3656      000000
 3657 1c12 48898578 		movq	%rax, -136(%rbp)
 3657      FFFFFF
 3658              	.LEHB101:
 105:TestXmlTestReporter.cpp ****         "<?xml version=\"1.0\"?>"
 106:TestXmlTestReporter.cpp ****         "<unittest-results tests=\"1\" failedtests=\"1\" failures=\"1\" time=\"0.1\">"
 107:TestXmlTestReporter.cpp ****         "<test suite=\"suite\" name=\"A Test\" time=\"0\">"
 108:TestXmlTestReporter.cpp ****         "<failure message=\"A File(4321) : A Failure\"/>"
 109:TestXmlTestReporter.cpp ****         "</test>"
 110:TestXmlTestReporter.cpp ****         "</unittest-results>";
 111:TestXmlTestReporter.cpp **** 
 112:TestXmlTestReporter.cpp ****     CHECK_EQUAL(expected, output.str());
 3659              		.loc 3 112 5
 3660 1c19 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 3660      00
 3661 1c1e 488B08   		movq	(%rax), %rcx
 3662 1c21 488D45A0 		leaq	-96(%rbp), %rax
 3663 1c25 BA700000 		movl	$112, %edx
 3663      00
 3664 1c2a 4889CE   		movq	%rcx, %rsi
 3665 1c2d 4889C7   		movq	%rax, %rdi
 3666 1c30 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 3666      00
 3667              		.loc 3 112 5 is_stmt 0 discriminator 4
 3668 1c35 488B9568 		movq	-152(%rbp), %rdx
 3668      FFFFFF
 3669 1c3c 488D45C0 		leaq	-64(%rbp), %rax
 3670 1c40 4889D6   		movq	%rdx, %rsi
 3671 1c43 4889C7   		movq	%rax, %rdi
 3672 1c46 E8000000 		call	_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv@PLT
 3672      00
 3673              	.LEHE101:
 3674              	.LEHB102:
 3675              		.loc 3 112 5 discriminator 6
 3676 1c4b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3676      00
 3677 1c50 488B00   		movq	(%rax), %rax
 3678 1c53 488D4DA0 		leaq	-96(%rbp), %rcx
 3679 1c57 488D55C0 		leaq	-64(%rbp), %rdx
 3680 1c5b 488DB578 		leaq	-136(%rbp), %rsi
 3680      FFFFFF
 3681 1c62 4889C7   		movq	%rax, %rdi
 3682 1c65 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 3682      00
 3683              	.LEHE102:
 3684              		.loc 3 112 5 discriminator 10
 3685 1c6a 488D45C0 		leaq	-64(%rbp), %rax
 3686 1c6e 4889C7   		movq	%rax, %rdi
 3687              	.LEHB103:
 3688 1c71 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 3688      00
 3689              	.LEHE103:
 113:TestXmlTestReporter.cpp **** }
 3690              		.loc 3 113 1 is_stmt 1
 3691 1c76 EB7C     		jmp	.L181
 3692              	.L188:
 3693 1c78 F30F1EFA 		endbr64
 112:TestXmlTestReporter.cpp **** }
 3694              		.loc 3 112 5
 3695 1c7c 4889C3   		movq	%rax, %rbx
 3696 1c7f 488D45C0 		leaq	-64(%rbp), %rax
 3697 1c83 4889C7   		movq	%rax, %rdi
 3698 1c86 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 3698      00
 3699 1c8b 4889D8   		movq	%rbx, %rax
 3700 1c8e EB04     		jmp	.L183
 3701              	.L187:
 3702 1c90 F30F1EFA 		endbr64
 3703              	.L183:
 112:TestXmlTestReporter.cpp **** }
 3704              		.loc 3 112 5 is_stmt 0 discriminator 3
 3705 1c94 4889C7   		movq	%rax, %rdi
 3706 1c97 E8000000 		call	__cxa_begin_catch@PLT
 3706      00
 3707              	.LEHB104:
 3708 1c9c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3708      00
 3709 1ca1 488B18   		movq	(%rax), %rbx
 3710 1ca4 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 3710      00
 112:TestXmlTestReporter.cpp **** }
 3711              		.loc 3 112 5 discriminator 15
 3712 1ca9 488B08   		movq	(%rax), %rcx
 3713 1cac 488D45A0 		leaq	-96(%rbp), %rax
 3714 1cb0 BA700000 		movl	$112, %edx
 3714      00
 3715 1cb5 4889CE   		movq	%rcx, %rsi
 3716 1cb8 4889C7   		movq	%rax, %rdi
 3717 1cbb E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 3717      00
 112:TestXmlTestReporter.cpp **** }
 3718              		.loc 3 112 5 discriminator 19
 3719 1cc0 488D45A0 		leaq	-96(%rbp), %rax
 3720 1cc4 488D1500 		leaq	.LC12(%rip), %rdx
 3720      000000
 3721 1ccb 4889C6   		movq	%rax, %rsi
 3722 1cce 4889DF   		movq	%rbx, %rdi
 3723 1cd1 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3723      00
 3724              	.LEHE104:
 3725              	.LEHB105:
 112:TestXmlTestReporter.cpp **** }
 3726              		.loc 3 112 5 discriminator 21
 3727 1cd6 E8000000 		call	__cxa_end_catch@PLT
 3727      00
 3728              	.LEHE105:
 3729              		.loc 3 113 1 is_stmt 1 discriminator 21
 3730 1cdb EB17     		jmp	.L181
 3731              	.L189:
 3732 1cdd F30F1EFA 		endbr64
 112:TestXmlTestReporter.cpp **** }
 3733              		.loc 3 112 5
 3734 1ce1 4889C3   		movq	%rax, %rbx
 3735 1ce4 E8000000 		call	__cxa_end_catch@PLT
 3735      00
 3736 1ce9 4889D8   		movq	%rbx, %rax
 3737 1cec 4889C7   		movq	%rax, %rdi
 3738              	.LEHB106:
 3739 1cef E8000000 		call	_Unwind_Resume@PLT
 3739      00
 3740              	.LEHE106:
 3741              	.L181:
 3742              		.loc 3 113 1
 3743 1cf4 488B45E8 		movq	-24(%rbp), %rax
 3744 1cf8 64482B04 		subq	%fs:40, %rax
 3744      25280000 
 3744      00
 3745 1d01 7405     		je	.L186
 3746 1d03 E8000000 		call	__stack_chk_fail@PLT
 3746      00
 3747              	.L186:
 3748 1d08 488B5DF8 		movq	-8(%rbp), %rbx
 3749 1d0c C9       		leave
 3750              		.cfi_def_cfa 7, 8
 3751 1d0d C3       		ret
 3752              		.cfi_endproc
 3753              	.LFE1465:
 3754              		.section	.gcc_except_table
 3755              		.align 4
 3756              	.LLSDA1465:
 3757 02d0 FF       		.byte	0xff
 3758 02d1 9B       		.byte	0x9b
 3759 02d2 31       		.uleb128 .LLSDATT1465-.LLSDATTD1465
 3760              	.LLSDATTD1465:
 3761 02d3 01       		.byte	0x1
 3762 02d4 26       		.uleb128 .LLSDACSE1465-.LLSDACSB1465
 3763              	.LLSDACSB1465:
 3764 02d5 4B       		.uleb128 .LEHB100-.LFB1465
 3765 02d6 72       		.uleb128 .LEHE100-.LEHB100
 3766 02d7 00       		.uleb128 0
 3767 02d8 00       		.uleb128 0
 3768 02d9 CB01     		.uleb128 .LEHB101-.LFB1465
 3769 02db 32       		.uleb128 .LEHE101-.LEHB101
 3770 02dc C202     		.uleb128 .L187-.LFB1465
 3771 02de 01       		.uleb128 0x1
 3772 02df FD01     		.uleb128 .LEHB102-.LFB1465
 3773 02e1 1F       		.uleb128 .LEHE102-.LEHB102
 3774 02e2 AA02     		.uleb128 .L188-.LFB1465
 3775 02e4 03       		.uleb128 0x3
 3776 02e5 A302     		.uleb128 .LEHB103-.LFB1465
 3777 02e7 05       		.uleb128 .LEHE103-.LEHB103
 3778 02e8 C202     		.uleb128 .L187-.LFB1465
 3779 02ea 01       		.uleb128 0x1
 3780 02eb CE02     		.uleb128 .LEHB104-.LFB1465
 3781 02ed 3A       		.uleb128 .LEHE104-.LEHB104
 3782 02ee 8F03     		.uleb128 .L189-.LFB1465
 3783 02f0 00       		.uleb128 0
 3784 02f1 8803     		.uleb128 .LEHB105-.LFB1465
 3785 02f3 05       		.uleb128 .LEHE105-.LEHB105
 3786 02f4 00       		.uleb128 0
 3787 02f5 00       		.uleb128 0
 3788 02f6 A103     		.uleb128 .LEHB106-.LFB1465
 3789 02f8 05       		.uleb128 .LEHE106-.LEHB106
 3790 02f9 00       		.uleb128 0
 3791 02fa 00       		.uleb128 0
 3792              	.LLSDACSE1465:
 3793 02fb 01       		.byte	0x1
 3794 02fc 00       		.byte	0
 3795 02fd 00       		.byte	0
 3796 02fe 7D       		.byte	0x7d
 3797 02ff 00       		.align 4
 3798 0300 00000000 		.long	0
 3799              	
 3800              	.LLSDATT1465:
 3801              		.text
 3803              		.align 2
 3805              	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperC2ERKN8UnitTest11TestDetai
 3806              	.LFB1467:
 114:TestXmlTestReporter.cpp **** 
 115:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, FailureMessageIsXMLEscaped)
 3807              		.loc 3 115 1
 3808              		.cfi_startproc
 3809 1d0e 55       		pushq	%rbp
 3810              		.cfi_def_cfa_offset 16
 3811              		.cfi_offset 6, -16
 3812 1d0f 4889E5   		movq	%rsp, %rbp
 3813              		.cfi_def_cfa_register 6
 3814 1d12 4883EC10 		subq	$16, %rsp
 3815 1d16 48897DF8 		movq	%rdi, -8(%rbp)
 3816 1d1a 488975F0 		movq	%rsi, -16(%rbp)
 3817              	.LBB63:
 3818              		.loc 3 115 1
 3819 1d1e 488B45F8 		movq	-8(%rbp), %rax
 3820 1d22 4889C7   		movq	%rax, %rdi
 3821 1d25 E8D6E2FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 3821      FF
 3822 1d2a 488B45F8 		movq	-8(%rbp), %rax
 3823 1d2e 488B55F0 		movq	-16(%rbp), %rdx
 3824 1d32 488990A0 		movq	%rdx, 416(%rax)
 3824      010000
 3825              	.LBE63:
 3826 1d39 90       		nop
 3827 1d3a C9       		leave
 3828              		.cfi_def_cfa 7, 8
 3829 1d3b C3       		ret
 3830              		.cfi_endproc
 3831              	.LFE1467:
 3833              		.set	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperC1ERKN8UnitTest11Tes
 3834              		.section	.rodata
 3835              	.LC30:
 3836 0584 4661696C 		.string	"FailureMessageIsXMLEscaped"
 3836      7572654D 
 3836      65737361 
 3836      67654973 
 3836      584D4C45 
 3837              		.text
 3838              		.align 2
 3840              	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedC2Ev:
 3841              	.LFB1470:
 3842              		.loc 3 115 1
 3843              		.cfi_startproc
 3844 1d3c 55       		pushq	%rbp
 3845              		.cfi_def_cfa_offset 16
 3846              		.cfi_offset 6, -16
 3847 1d3d 4889E5   		movq	%rsp, %rbp
 3848              		.cfi_def_cfa_register 6
 3849 1d40 53       		pushq	%rbx
 3850 1d41 4883EC18 		subq	$24, %rsp
 3851              		.cfi_offset 3, -24
 3852 1d45 48897DE8 		movq	%rdi, -24(%rbp)
 3853              	.LBB64:
 3854              		.loc 3 115 1
 3855 1d49 488B5DE8 		movq	-24(%rbp), %rbx
 3856 1d4d E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 3856      00
 3857 1d52 4889C2   		movq	%rax, %rdx
 3858 1d55 41B87300 		movl	$115, %r8d
 3858      0000
 3859 1d5b 488D0500 		leaq	.LC1(%rip), %rax
 3859      000000
 3860 1d62 4889C1   		movq	%rax, %rcx
 3861 1d65 488D0500 		leaq	.LC30(%rip), %rax
 3861      000000
 3862 1d6c 4889C6   		movq	%rax, %rsi
 3863 1d6f 4889DF   		movq	%rbx, %rdi
 3864 1d72 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 3864      00
 3865 1d77 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE(%rip), %rdx
 3865      000000
 3866 1d7e 488B45E8 		movq	-24(%rbp), %rax
 3867 1d82 488910   		movq	%rdx, (%rax)
 3868              	.LBE64:
 3869 1d85 90       		nop
 3870 1d86 488B5DF8 		movq	-8(%rbp), %rbx
 3871 1d8a C9       		leave
 3872              		.cfi_def_cfa 7, 8
 3873 1d8b C3       		ret
 3874              		.cfi_endproc
 3875              	.LFE1470:
 3877              		.set	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedC1Ev,_ZN12_GLOBAL__N_1
 3878              		.local	_ZN12_GLOBAL__N_160testXmlTestReporterFixtureFailureMessageIsXMLEscapedInstanceE
 3879              		.comm	_ZN12_GLOBAL__N_160testXmlTestReporterFixtureFailureMessageIsXMLEscapedInstanceE,56,32
 3880              		.local	_ZN12_GLOBAL__N_153adderXmlTestReporterFixtureFailureMessageIsXMLEscapedE
 3881              		.comm	_ZN12_GLOBAL__N_153adderXmlTestReporterFixtureFailureMessageIsXMLEscapedE,1,1
 3882              		.align 2
 3884              	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperD2Ev:
 3885              	.LFB1474:
 3886              		.loc 3 115 1
 3887              		.cfi_startproc
 3888 1d8c 55       		pushq	%rbp
 3889              		.cfi_def_cfa_offset 16
 3890              		.cfi_offset 6, -16
 3891 1d8d 4889E5   		movq	%rsp, %rbp
 3892              		.cfi_def_cfa_register 6
 3893 1d90 4883EC10 		subq	$16, %rsp
 3894 1d94 48897DF8 		movq	%rdi, -8(%rbp)
 3895              	.LBB65:
 3896              		.loc 3 115 1
 3897 1d98 488B45F8 		movq	-8(%rbp), %rax
 3898 1d9c 4889C7   		movq	%rax, %rdi
 3899 1d9f E8B6E2FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 3899      FF
 3900              	.LBE65:
 3901 1da4 90       		nop
 3902 1da5 C9       		leave
 3903              		.cfi_def_cfa 7, 8
 3904 1da6 C3       		ret
 3905              		.cfi_endproc
 3906              	.LFE1474:
 3908              		.set	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperD1Ev,_ZN12_GLOBAL__N
 3909 1da7 90       		.align 2
 3911              	_ZNK12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscaped7RunImplEv:
 3912              	.LFB1472:
 3913              		.loc 3 115 1
 3914              		.cfi_startproc
 3915              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 3916              		.cfi_lsda 0x1b,.LLSDA1472
 3917 1da8 F30F1EFA 		endbr64
 3918 1dac 55       		pushq	%rbp
 3919              		.cfi_def_cfa_offset 16
 3920              		.cfi_offset 6, -16
 3921 1dad 4889E5   		movq	%rsp, %rbp
 3922              		.cfi_def_cfa_register 6
 3923 1db0 4155     		pushq	%r13
 3924 1db2 4154     		pushq	%r12
 3925 1db4 53       		pushq	%rbx
 3926 1db5 4881EC08 		subq	$520, %rsp
 3926      020000
 3927              		.cfi_offset 13, -24
 3928              		.cfi_offset 12, -32
 3929              		.cfi_offset 3, -40
 3930 1dbc 4889BDE8 		movq	%rdi, -536(%rbp)
 3930      FDFFFF
 3931              		.loc 3 115 1
 3932 1dc3 64488B04 		movq	%fs:40, %rax
 3932      25280000 
 3932      00
 3933 1dcc 488945D8 		movq	%rax, -40(%rbp)
 3934 1dd0 31C0     		xorl	%eax, %eax
 3935 1dd2 C685FFFD 		movb	$0, -513(%rbp)
 3935      FFFF00
 3936              	.LBB66:
 3937 1dd9 488B85E8 		movq	-536(%rbp), %rax
 3937      FDFFFF
 3938 1de0 488D5008 		leaq	8(%rax), %rdx
 3939 1de4 488D8530 		leaq	-464(%rbp), %rax
 3939      FEFFFF
 3940 1deb 4889D6   		movq	%rdx, %rsi
 3941 1dee 4889C7   		movq	%rax, %rdi
 3942              	.LEHB107:
 3943 1df1 E818FFFF 		call	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperC1ERKN8UnitTest11Tes
 3943      FF
 3944              	.LEHE107:
 3945              		.loc 3 115 1 is_stmt 0 discriminator 1
 3946 1df6 C685FFFD 		movb	$1, -513(%rbp)
 3946      FFFF01
 3947 1dfd 488B85E8 		movq	-536(%rbp), %rax
 3947      FDFFFF
 3948 1e04 488D5008 		leaq	8(%rax), %rdx
 3949 1e08 488D8530 		leaq	-464(%rbp), %rax
 3949      FEFFFF
 3950 1e0f 4889D6   		movq	%rdx, %rsi
 3951 1e12 4889C7   		movq	%rax, %rdi
 3952              	.LEHB108:
 3953 1e15 E87C1F00 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHe
 3953      00
 3954              	.LEHE108:
 3955              		.loc 3 115 1 discriminator 3
 3956 1e1a 488D8530 		leaq	-464(%rbp), %rax
 3956      FEFFFF
 3957 1e21 4889C7   		movq	%rax, %rdi
 3958              	.LEHB109:
 3959 1e24 E863FFFF 		call	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperD1Ev
 3959      FF
 3960              	.LEHE109:
 3961              	.LBE66:
 3962              		.loc 3 115 1
 3963 1e29 E9840200 		jmp	.L193
 3963      00
 3964              	.L208:
 3965 1e2e F30F1EFA 		endbr64
 3966              	.LBB67:
 3967 1e32 4989C4   		movq	%rax, %r12
 3968 1e35 4889D3   		movq	%rdx, %rbx
 3969 1e38 488D8530 		leaq	-464(%rbp), %rax
 3969      FEFFFF
 3970 1e3f 4889C7   		movq	%rax, %rdi
 3971 1e42 E845FFFF 		call	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperD1Ev
 3971      FF
 3972 1e47 4C89E0   		movq	%r12, %rax
 3973 1e4a 4889DA   		movq	%rbx, %rdx
 3974 1e4d EB04     		jmp	.L195
 3975              	.L207:
 3976 1e4f F30F1EFA 		endbr64
 3977              	.L195:
 3978              	.LBE67:
 3979 1e53 4883FA01 		cmpq	$1, %rdx
 3980 1e57 740F     		je	.L196
 3981 1e59 4883FA02 		cmpq	$2, %rdx
 3982 1e5d 0F84A700 		je	.L197
 3982      0000
 3983 1e63 E94D0100 		jmp	.L213
 3983      00
 3984              	.L196:
 3985              	.LBB68:
 3986              		.loc 3 115 1 discriminator 4
 3987 1e68 4889C7   		movq	%rax, %rdi
 3988 1e6b E8000000 		call	__cxa_begin_catch@PLT
 3988      00
 3989 1e70 48898508 		movq	%rax, -504(%rbp)
 3989      FEFFFF
 3990              	.LEHB110:
 3991 1e77 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3991      00
 3992 1e7c 488B18   		movq	(%rax), %rbx
 3993 1e7f 488B8508 		movq	-504(%rbp), %rax
 3993      FEFFFF
 3994 1e86 488B00   		movq	(%rax), %rax
 3995 1e89 4883C010 		addq	$16, %rax
 3996 1e8d 488B10   		movq	(%rax), %rdx
 3997 1e90 488B8508 		movq	-504(%rbp), %rax
 3997      FEFFFF
 3998 1e97 4889C7   		movq	%rax, %rdi
 3999 1e9a FFD2     		call	*%rdx
 4000              	.LVL10:
 4001 1e9c 4989C4   		movq	%rax, %r12
 4002 1e9f 488B8508 		movq	-504(%rbp), %rax
 4002      FEFFFF
 4003 1ea6 4889C7   		movq	%rax, %rdi
 4004 1ea9 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 4004      00
 4005              		.loc 3 115 1 discriminator 8
 4006 1eae 4189C5   		movl	%eax, %r13d
 4007 1eb1 488B8508 		movq	-504(%rbp), %rax
 4007      FEFFFF
 4008 1eb8 4889C7   		movq	%rax, %rdi
 4009 1ebb E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 4009      00
 4010              		.loc 3 115 1 discriminator 10
 4011 1ec0 4889C1   		movq	%rax, %rcx
 4012 1ec3 488B85E8 		movq	-536(%rbp), %rax
 4012      FDFFFF
 4013 1eca 488B5008 		movq	8(%rax), %rdx
 4014 1ece 488B85E8 		movq	-536(%rbp), %rax
 4014      FDFFFF
 4015 1ed5 488B7010 		movq	16(%rax), %rsi
 4016 1ed9 488D8510 		leaq	-496(%rbp), %rax
 4016      FEFFFF
 4017 1ee0 4589E8   		movl	%r13d, %r8d
 4018 1ee3 4889C7   		movq	%rax, %rdi
 4019 1ee6 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 4019      00
 4020              		.loc 3 115 1 discriminator 14
 4021 1eeb 488D8510 		leaq	-496(%rbp), %rax
 4021      FEFFFF
 4022 1ef2 4C89E2   		movq	%r12, %rdx
 4023 1ef5 4889C6   		movq	%rax, %rsi
 4024 1ef8 4889DF   		movq	%rbx, %rdi
 4025 1efb E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4025      00
 4026              	.LEHE110:
 4027              		.loc 3 115 1 discriminator 16
 4028 1f00 E8000000 		call	__cxa_end_catch@PLT
 4028      00
 4029              	.LBE68:
 4030 1f05 E9A80100 		jmp	.L193
 4030      00
 4031              	.L197:
 4032              	.LBB69:
 4033              		.loc 3 115 1 discriminator 5
 4034 1f0a 4889C7   		movq	%rax, %rdi
 4035 1f0d E8000000 		call	__cxa_begin_catch@PLT
 4035      00
 4036 1f12 48898500 		movq	%rax, -512(%rbp)
 4036      FEFFFF
 4037              	.LBB70:
 4038 1f19 488D8530 		leaq	-464(%rbp), %rax
 4038      FEFFFF
 4039 1f20 4889C7   		movq	%rax, %rdi
 4040              	.LEHB111:
 4041 1f23 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 4041      00
 4042              	.LEHE111:
 4043              		.loc 3 115 1 discriminator 18
 4044 1f28 488D8530 		leaq	-464(%rbp), %rax
 4044      FEFFFF
 4045 1f2f 488D1500 		leaq	.LC3(%rip), %rdx
 4045      000000
 4046 1f36 4889D6   		movq	%rdx, %rsi
 4047 1f39 4889C7   		movq	%rax, %rdi
 4048              	.LEHB112:
 4049 1f3c E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 4049      00
 4050 1f41 4889C3   		movq	%rax, %rbx
 4051 1f44 488B8500 		movq	-512(%rbp), %rax
 4051      FEFFFF
 4052 1f4b 488B00   		movq	(%rax), %rax
 4053 1f4e 4883C010 		addq	$16, %rax
 4054 1f52 488B10   		movq	(%rax), %rdx
 4055 1f55 488B8500 		movq	-512(%rbp), %rax
 4055      FEFFFF
 4056 1f5c 4889C7   		movq	%rax, %rdi
 4057 1f5f FFD2     		call	*%rdx
 4058              	.LVL11:
 4059 1f61 4889C6   		movq	%rax, %rsi
 4060 1f64 4889DF   		movq	%rbx, %rdi
 4061 1f67 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 4061      00
 4062              		.loc 3 115 1 discriminator 22
 4063 1f6c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4063      00
 4064 1f71 488B18   		movq	(%rax), %rbx
 4065 1f74 488D8530 		leaq	-464(%rbp), %rax
 4065      FEFFFF
 4066 1f7b 4889C7   		movq	%rax, %rdi
 4067 1f7e E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 4067      00
 4068              		.loc 3 115 1 discriminator 24
 4069 1f83 4889C2   		movq	%rax, %rdx
 4070 1f86 488B85E8 		movq	-536(%rbp), %rax
 4070      FDFFFF
 4071 1f8d 4883C008 		addq	$8, %rax
 4072 1f91 4889C6   		movq	%rax, %rsi
 4073 1f94 4889DF   		movq	%rbx, %rdi
 4074 1f97 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4074      00
 4075              	.LEHE112:
 4076              		.loc 3 115 1 discriminator 28
 4077 1f9c 488D8530 		leaq	-464(%rbp), %rax
 4077      FEFFFF
 4078 1fa3 4889C7   		movq	%rax, %rdi
 4079              	.LEHB113:
 4080 1fa6 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4080      00
 4081              	.LEHE113:
 4082              	.LBE70:
 4083              		.loc 3 115 1 discriminator 29
 4084 1fab E8000000 		call	__cxa_end_catch@PLT
 4084      00
 4085              	.LBE69:
 4086 1fb0 E9FD0000 		jmp	.L193
 4086      00
 4087              	.L213:
 4088              		.loc 3 115 1 discriminator 6
 4089 1fb5 4889C7   		movq	%rax, %rdi
 4090 1fb8 E8000000 		call	__cxa_begin_catch@PLT
 4090      00
 4091 1fbd 80BDFFFD 		cmpb	$0, -513(%rbp)
 4091      FFFF00
 4092 1fc4 7445     		je	.L200
 4093              	.LEHB114:
 4094              		.loc 3 115 1 discriminator 31
 4095 1fc6 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4095      00
 4096 1fcb 488B18   		movq	(%rax), %rbx
 4097 1fce 488B85E8 		movq	-536(%rbp), %rax
 4097      FDFFFF
 4098 1fd5 488D4808 		leaq	8(%rax), %rcx
 4099 1fd9 488D8510 		leaq	-496(%rbp), %rax
 4099      FEFFFF
 4100 1fe0 BA730000 		movl	$115, %edx
 4100      00
 4101 1fe5 4889CE   		movq	%rcx, %rsi
 4102 1fe8 4889C7   		movq	%rax, %rdi
 4103 1feb E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4103      00
 4104              		.loc 3 115 1 discriminator 36
 4105 1ff0 488D8510 		leaq	-496(%rbp), %rax
 4105      FEFFFF
 4106 1ff7 488D1500 		leaq	.LC4(%rip), %rdx
 4106      000000
 4107 1ffe 4889C6   		movq	%rax, %rsi
 4108 2001 4889DF   		movq	%rbx, %rdi
 4109 2004 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4109      00
 4110 2009 EB43     		jmp	.L201
 4111              	.L200:
 4112              		.loc 3 115 1 discriminator 32
 4113 200b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4113      00
 4114 2010 488B18   		movq	(%rax), %rbx
 4115 2013 488B85E8 		movq	-536(%rbp), %rax
 4115      FDFFFF
 4116 201a 488D4808 		leaq	8(%rax), %rcx
 4117 201e 488D8510 		leaq	-496(%rbp), %rax
 4117      FEFFFF
 4118 2025 BA730000 		movl	$115, %edx
 4118      00
 4119 202a 4889CE   		movq	%rcx, %rsi
 4120 202d 4889C7   		movq	%rax, %rdi
 4121 2030 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4121      00
 4122              		.loc 3 115 1 discriminator 43
 4123 2035 488D8510 		leaq	-496(%rbp), %rax
 4123      FEFFFF
 4124 203c 488D1500 		leaq	.LC5(%rip), %rdx
 4124      000000
 4125 2043 4889C6   		movq	%rax, %rsi
 4126 2046 4889DF   		movq	%rbx, %rdi
 4127 2049 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4127      00
 4128              	.LEHE114:
 4129              	.L201:
 4130              	.LEHB115:
 4131              		.loc 3 115 1 discriminator 46
 4132 204e E8000000 		call	__cxa_end_catch@PLT
 4132      00
 4133 2053 EB5D     		jmp	.L193
 4134              	.L209:
 4135 2055 F30F1EFA 		endbr64
 4136              	.LBB72:
 4137              		.loc 3 115 1
 4138 2059 4889C3   		movq	%rax, %rbx
 4139 205c E8000000 		call	__cxa_end_catch@PLT
 4139      00
 4140 2061 4889D8   		movq	%rbx, %rax
 4141 2064 4889C7   		movq	%rax, %rdi
 4142 2067 E8000000 		call	_Unwind_Resume@PLT
 4142      00
 4143              	.LEHE115:
 4144              	.L211:
 4145 206c F30F1EFA 		endbr64
 4146              	.LBE72:
 4147              	.LBB73:
 4148              	.LBB71:
 4149 2070 4889C3   		movq	%rax, %rbx
 4150 2073 488D8530 		leaq	-464(%rbp), %rax
 4150      FEFFFF
 4151 207a 4889C7   		movq	%rax, %rdi
 4152 207d E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4152      00
 4153 2082 EB07     		jmp	.L204
 4154              	.L210:
 4155 2084 F30F1EFA 		endbr64
 4156              	.LBE71:
 4157 2088 4889C3   		movq	%rax, %rbx
 4158              	.L204:
 4159 208b E8000000 		call	__cxa_end_catch@PLT
 4159      00
 4160 2090 4889D8   		movq	%rbx, %rax
 4161 2093 4889C7   		movq	%rax, %rdi
 4162              	.LEHB116:
 4163 2096 E8000000 		call	_Unwind_Resume@PLT
 4163      00
 4164              	.LEHE116:
 4165              	.L212:
 4166 209b F30F1EFA 		endbr64
 4167              	.LBE73:
 4168 209f 4889C3   		movq	%rax, %rbx
 4169 20a2 E8000000 		call	__cxa_end_catch@PLT
 4169      00
 4170 20a7 4889D8   		movq	%rbx, %rax
 4171 20aa 4889C7   		movq	%rax, %rdi
 4172              	.LEHB117:
 4173 20ad E8000000 		call	_Unwind_Resume@PLT
 4173      00
 4174              	.LEHE117:
 4175              	.L193:
 4176 20b2 488B45D8 		movq	-40(%rbp), %rax
 4177 20b6 64482B04 		subq	%fs:40, %rax
 4177      25280000 
 4177      00
 4178 20bf 7405     		je	.L206
 4179 20c1 E8000000 		call	__stack_chk_fail@PLT
 4179      00
 4180              	.L206:
 4181 20c6 4881C408 		addq	$520, %rsp
 4181      020000
 4182 20cd 5B       		popq	%rbx
 4183 20ce 415C     		popq	%r12
 4184 20d0 415D     		popq	%r13
 4185 20d2 5D       		popq	%rbp
 4186              		.cfi_def_cfa 7, 8
 4187 20d3 C3       		ret
 4188              		.cfi_endproc
 4189              	.LFE1472:
 4190              		.section	.gcc_except_table
 4191              		.align 4
 4192              	.LLSDA1472:
 4193 0304 FF       		.byte	0xff
 4194 0305 9B       		.byte	0x9b
 4195 0306 55       		.uleb128 .LLSDATT1472-.LLSDATTD1472
 4196              	.LLSDATTD1472:
 4197 0307 01       		.byte	0x1
 4198 0308 3E       		.uleb128 .LLSDACSE1472-.LLSDACSB1472
 4199              	.LLSDACSB1472:
 4200 0309 49       		.uleb128 .LEHB107-.LFB1472
 4201 030a 05       		.uleb128 .LEHE107-.LEHB107
 4202 030b A701     		.uleb128 .L207-.LFB1472
 4203 030d 05       		.uleb128 0x5
 4204 030e 6D       		.uleb128 .LEHB108-.LFB1472
 4205 030f 05       		.uleb128 .LEHE108-.LEHB108
 4206 0310 8601     		.uleb128 .L208-.LFB1472
 4207 0312 07       		.uleb128 0x7
 4208 0313 7C       		.uleb128 .LEHB109-.LFB1472
 4209 0314 05       		.uleb128 .LEHE109-.LEHB109
 4210 0315 A701     		.uleb128 .L207-.LFB1472
 4211 0317 05       		.uleb128 0x5
 4212 0318 CF01     		.uleb128 .LEHB110-.LFB1472
 4213 031a 8901     		.uleb128 .LEHE110-.LEHB110
 4214 031c AD05     		.uleb128 .L209-.LFB1472
 4215 031e 00       		.uleb128 0
 4216 031f FB02     		.uleb128 .LEHB111-.LFB1472
 4217 0321 05       		.uleb128 .LEHE111-.LEHB111
 4218 0322 DC05     		.uleb128 .L210-.LFB1472
 4219 0324 00       		.uleb128 0
 4220 0325 9403     		.uleb128 .LEHB112-.LFB1472
 4221 0327 60       		.uleb128 .LEHE112-.LEHB112
 4222 0328 C405     		.uleb128 .L211-.LFB1472
 4223 032a 00       		.uleb128 0
 4224 032b FE03     		.uleb128 .LEHB113-.LFB1472
 4225 032d 05       		.uleb128 .LEHE113-.LEHB113
 4226 032e DC05     		.uleb128 .L210-.LFB1472
 4227 0330 00       		.uleb128 0
 4228 0331 9E04     		.uleb128 .LEHB114-.LFB1472
 4229 0333 8801     		.uleb128 .LEHE114-.LEHB114
 4230 0335 F305     		.uleb128 .L212-.LFB1472
 4231 0337 00       		.uleb128 0
 4232 0338 A605     		.uleb128 .LEHB115-.LFB1472
 4233 033a 1E       		.uleb128 .LEHE115-.LEHB115
 4234 033b 00       		.uleb128 0
 4235 033c 00       		.uleb128 0
 4236 033d EE05     		.uleb128 .LEHB116-.LFB1472
 4237 033f 05       		.uleb128 .LEHE116-.LEHB116
 4238 0340 00       		.uleb128 0
 4239 0341 00       		.uleb128 0
 4240 0342 8506     		.uleb128 .LEHB117-.LFB1472
 4241 0344 05       		.uleb128 .LEHE117-.LEHB117
 4242 0345 00       		.uleb128 0
 4243 0346 00       		.uleb128 0
 4244              	.LLSDACSE1472:
 4245 0347 03       		.byte	0x3
 4246 0348 00       		.byte	0
 4247 0349 02       		.byte	0x2
 4248 034a 7D       		.byte	0x7d
 4249 034b 01       		.byte	0x1
 4250 034c 7D       		.byte	0x7d
 4251 034d 00       		.byte	0
 4252 034e 7D       		.byte	0x7d
 4253 034f 00       		.align 4
 4254 0350 00000000 		.long	0
 4255              	
 4256 0354 00000000 		.long	DW.ref._ZTISt9exception-.
 4257 0358 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 4258              	.LLSDATT1472:
 4259              		.text
 4261              		.section	.rodata
 4262              	.LC31:
 4263 059f 2227263C 		.string	"\"'&<>"
 4263      3E00
 4264 05a5 000000   		.align 8
 4265              	.LC32:
 4266 05a8 3C3F786D 		.string	"<?xml version=\"1.0\"?><unittest-results tests=\"1\" failedtests=\"1\" failures=\"1\" tim
 4266      6C207665 
 4266      7273696F 
 4266      6E3D2231 
 4266      2E30223F 
 4267              		.text
 4268              		.align 2
 4270              	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelper7RunImplEv:
 4271              	.LFB1476:
 116:TestXmlTestReporter.cpp **** {
 4272              		.loc 3 116 1 is_stmt 1
 4273              		.cfi_startproc
 4274              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 4275              		.cfi_lsda 0x1b,.LLSDA1476
 4276 20d4 F30F1EFA 		endbr64
 4277 20d8 55       		pushq	%rbp
 4278              		.cfi_def_cfa_offset 16
 4279              		.cfi_offset 6, -16
 4280 20d9 4889E5   		movq	%rsp, %rbp
 4281              		.cfi_def_cfa_register 6
 4282 20dc 53       		pushq	%rbx
 4283 20dd 4881EC98 		subq	$152, %rsp
 4283      000000
 4284              		.cfi_offset 3, -24
 4285 20e4 4889BD68 		movq	%rdi, -152(%rbp)
 4285      FFFFFF
 4286              		.loc 3 116 1
 4287 20eb 64488B04 		movq	%fs:40, %rax
 4287      25280000 
 4287      00
 4288 20f4 488945E8 		movq	%rax, -24(%rbp)
 4289 20f8 31C0     		xorl	%eax, %eax
 117:TestXmlTestReporter.cpp ****     TestDetails const details("TestName", "suite", "filename.h", 4321);
 4290              		.loc 3 117 70
 4291 20fa 488D4580 		leaq	-128(%rbp), %rax
 4292 20fe 41B8E110 		movl	$4321, %r8d
 4292      0000
 4293 2104 488D1500 		leaq	.LC6(%rip), %rdx
 4293      000000
 4294 210b 4889D1   		movq	%rdx, %rcx
 4295 210e 488D1500 		leaq	.LC7(%rip), %rdx
 4295      000000
 4296 2115 488D3500 		leaq	.LC8(%rip), %rsi
 4296      000000
 4297 211c 4889C7   		movq	%rax, %rdi
 4298              	.LEHB118:
 4299 211f E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 4299      00
 118:TestXmlTestReporter.cpp **** 
 119:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(details);
 4300              		.loc 3 119 29
 4301 2124 488B8568 		movq	-152(%rbp), %rax
 4301      FFFFFF
 4302 212b 488D9078 		leaq	376(%rax), %rdx
 4302      010000
 4303 2132 488D4580 		leaq	-128(%rbp), %rax
 4304 2136 4889C6   		movq	%rax, %rsi
 4305 2139 4889D7   		movq	%rdx, %rdi
 4306 213c E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE@PLT
 4306      00
 120:TestXmlTestReporter.cpp ****     reporter.ReportFailure(details, "\"\'&<>");
 4307              		.loc 3 120 27
 4308 2141 488B8568 		movq	-152(%rbp), %rax
 4308      FFFFFF
 4309 2148 488D8878 		leaq	376(%rax), %rcx
 4309      010000
 4310 214f 488D4580 		leaq	-128(%rbp), %rax
 4311 2153 488D1500 		leaq	.LC31(%rip), %rdx
 4311      000000
 4312 215a 4889C6   		movq	%rax, %rsi
 4313 215d 4889CF   		movq	%rcx, %rdi
 4314 2160 E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc@PLT
 4314      00
 121:TestXmlTestReporter.cpp ****     reporter.ReportTestFinish(details, 0.1f);
 4315              		.loc 3 121 30
 4316 2165 488B8568 		movq	-152(%rbp), %rax
 4316      FFFFFF
 4317 216c 488D8878 		leaq	376(%rax), %rcx
 4317      010000
 4318 2173 488D4580 		leaq	-128(%rbp), %rax
 4319 2177 8B150000 		movl	.LC10(%rip), %edx
 4319      0000
 4320 217d 660F6EC2 		movd	%edx, %xmm0
 4321 2181 4889C6   		movq	%rax, %rsi
 4322 2184 4889CF   		movq	%rcx, %rdi
 4323 2187 E8000000 		call	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf@PLT
 4323      00
 122:TestXmlTestReporter.cpp ****     reporter.ReportSummary(1, 1, 1, 0.1f);
 4324              		.loc 3 122 27
 4325 218c 488B8568 		movq	-152(%rbp), %rax
 4325      FFFFFF
 4326 2193 488DB878 		leaq	376(%rax), %rdi
 4326      010000
 4327 219a 8B050000 		movl	.LC10(%rip), %eax
 4327      0000
 4328 21a0 660F6EC0 		movd	%eax, %xmm0
 4329 21a4 B9010000 		movl	$1, %ecx
 4329      00
 4330 21a9 BA010000 		movl	$1, %edx
 4330      00
 4331 21ae BE010000 		movl	$1, %esi
 4331      00
 4332 21b3 E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif@PLT
 4332      00
 4333              	.LEHE118:
 123:TestXmlTestReporter.cpp **** 
 124:TestXmlTestReporter.cpp ****     char const* expected =
 4334              		.loc 3 124 17
 4335 21b8 488D0500 		leaq	.LC32(%rip), %rax
 4335      000000
 4336 21bf 48898578 		movq	%rax, -136(%rbp)
 4336      FFFFFF
 4337              	.LEHB119:
 125:TestXmlTestReporter.cpp ****         "<?xml version=\"1.0\"?>"
 126:TestXmlTestReporter.cpp ****         "<unittest-results tests=\"1\" failedtests=\"1\" failures=\"1\" time=\"0.1\">"
 127:TestXmlTestReporter.cpp ****         "<test suite=\"suite\" name=\"TestName\" time=\"0.1\">"
 128:TestXmlTestReporter.cpp ****         "<failure message=\"filename.h(4321) : &quot;&apos;&amp;&lt;&gt;\"/>"
 129:TestXmlTestReporter.cpp ****         "</test>"
 130:TestXmlTestReporter.cpp ****         "</unittest-results>";
 131:TestXmlTestReporter.cpp **** 
 132:TestXmlTestReporter.cpp ****     CHECK_EQUAL(expected, output.str());
 4338              		.loc 3 132 5
 4339 21c6 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 4339      00
 4340 21cb 488B08   		movq	(%rax), %rcx
 4341 21ce 488D45A0 		leaq	-96(%rbp), %rax
 4342 21d2 BA840000 		movl	$132, %edx
 4342      00
 4343 21d7 4889CE   		movq	%rcx, %rsi
 4344 21da 4889C7   		movq	%rax, %rdi
 4345 21dd E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4345      00
 4346              		.loc 3 132 5 is_stmt 0 discriminator 4
 4347 21e2 488B9568 		movq	-152(%rbp), %rdx
 4347      FFFFFF
 4348 21e9 488D45C0 		leaq	-64(%rbp), %rax
 4349 21ed 4889D6   		movq	%rdx, %rsi
 4350 21f0 4889C7   		movq	%rax, %rdi
 4351 21f3 E8000000 		call	_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv@PLT
 4351      00
 4352              	.LEHE119:
 4353              	.LEHB120:
 4354              		.loc 3 132 5 discriminator 6
 4355 21f8 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4355      00
 4356 21fd 488B00   		movq	(%rax), %rax
 4357 2200 488D4DA0 		leaq	-96(%rbp), %rcx
 4358 2204 488D55C0 		leaq	-64(%rbp), %rdx
 4359 2208 488DB578 		leaq	-136(%rbp), %rsi
 4359      FFFFFF
 4360 220f 4889C7   		movq	%rax, %rdi
 4361 2212 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 4361      00
 4362              	.LEHE120:
 4363              		.loc 3 132 5 discriminator 10
 4364 2217 488D45C0 		leaq	-64(%rbp), %rax
 4365 221b 4889C7   		movq	%rax, %rdi
 4366              	.LEHB121:
 4367 221e E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 4367      00
 4368              	.LEHE121:
 133:TestXmlTestReporter.cpp **** }
 4369              		.loc 3 133 1 is_stmt 1
 4370 2223 EB7C     		jmp	.L214
 4371              	.L221:
 4372 2225 F30F1EFA 		endbr64
 132:TestXmlTestReporter.cpp **** }
 4373              		.loc 3 132 5
 4374 2229 4889C3   		movq	%rax, %rbx
 4375 222c 488D45C0 		leaq	-64(%rbp), %rax
 4376 2230 4889C7   		movq	%rax, %rdi
 4377 2233 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 4377      00
 4378 2238 4889D8   		movq	%rbx, %rax
 4379 223b EB04     		jmp	.L216
 4380              	.L220:
 4381 223d F30F1EFA 		endbr64
 4382              	.L216:
 132:TestXmlTestReporter.cpp **** }
 4383              		.loc 3 132 5 is_stmt 0 discriminator 3
 4384 2241 4889C7   		movq	%rax, %rdi
 4385 2244 E8000000 		call	__cxa_begin_catch@PLT
 4385      00
 4386              	.LEHB122:
 4387 2249 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4387      00
 4388 224e 488B18   		movq	(%rax), %rbx
 4389 2251 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 4389      00
 132:TestXmlTestReporter.cpp **** }
 4390              		.loc 3 132 5 discriminator 15
 4391 2256 488B08   		movq	(%rax), %rcx
 4392 2259 488D45A0 		leaq	-96(%rbp), %rax
 4393 225d BA840000 		movl	$132, %edx
 4393      00
 4394 2262 4889CE   		movq	%rcx, %rsi
 4395 2265 4889C7   		movq	%rax, %rdi
 4396 2268 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4396      00
 132:TestXmlTestReporter.cpp **** }
 4397              		.loc 3 132 5 discriminator 19
 4398 226d 488D45A0 		leaq	-96(%rbp), %rax
 4399 2271 488D1500 		leaq	.LC12(%rip), %rdx
 4399      000000
 4400 2278 4889C6   		movq	%rax, %rsi
 4401 227b 4889DF   		movq	%rbx, %rdi
 4402 227e E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4402      00
 4403              	.LEHE122:
 4404              	.LEHB123:
 132:TestXmlTestReporter.cpp **** }
 4405              		.loc 3 132 5 discriminator 21
 4406 2283 E8000000 		call	__cxa_end_catch@PLT
 4406      00
 4407              	.LEHE123:
 4408              		.loc 3 133 1 is_stmt 1 discriminator 21
 4409 2288 EB17     		jmp	.L214
 4410              	.L222:
 4411 228a F30F1EFA 		endbr64
 132:TestXmlTestReporter.cpp **** }
 4412              		.loc 3 132 5
 4413 228e 4889C3   		movq	%rax, %rbx
 4414 2291 E8000000 		call	__cxa_end_catch@PLT
 4414      00
 4415 2296 4889D8   		movq	%rbx, %rax
 4416 2299 4889C7   		movq	%rax, %rdi
 4417              	.LEHB124:
 4418 229c E8000000 		call	_Unwind_Resume@PLT
 4418      00
 4419              	.LEHE124:
 4420              	.L214:
 4421              		.loc 3 133 1
 4422 22a1 488B45E8 		movq	-24(%rbp), %rax
 4423 22a5 64482B04 		subq	%fs:40, %rax
 4423      25280000 
 4423      00
 4424 22ae 7405     		je	.L219
 4425 22b0 E8000000 		call	__stack_chk_fail@PLT
 4425      00
 4426              	.L219:
 4427 22b5 488B5DF8 		movq	-8(%rbp), %rbx
 4428 22b9 C9       		leave
 4429              		.cfi_def_cfa 7, 8
 4430 22ba C3       		ret
 4431              		.cfi_endproc
 4432              	.LFE1476:
 4433              		.section	.gcc_except_table
 4434              		.align 4
 4435              	.LLSDA1476:
 4436 035c FF       		.byte	0xff
 4437 035d 9B       		.byte	0x9b
 4438 035e 31       		.uleb128 .LLSDATT1476-.LLSDATTD1476
 4439              	.LLSDATTD1476:
 4440 035f 01       		.byte	0x1
 4441 0360 27       		.uleb128 .LLSDACSE1476-.LLSDACSB1476
 4442              	.LLSDACSB1476:
 4443 0361 4B       		.uleb128 .LEHB118-.LFB1476
 4444 0362 9901     		.uleb128 .LEHE118-.LEHB118
 4445 0364 00       		.uleb128 0
 4446 0365 00       		.uleb128 0
 4447 0366 F201     		.uleb128 .LEHB119-.LFB1476
 4448 0368 32       		.uleb128 .LEHE119-.LEHB119
 4449 0369 E902     		.uleb128 .L220-.LFB1476
 4450 036b 01       		.uleb128 0x1
 4451 036c A402     		.uleb128 .LEHB120-.LFB1476
 4452 036e 1F       		.uleb128 .LEHE120-.LEHB120
 4453 036f D102     		.uleb128 .L221-.LFB1476
 4454 0371 03       		.uleb128 0x3
 4455 0372 CA02     		.uleb128 .LEHB121-.LFB1476
 4456 0374 05       		.uleb128 .LEHE121-.LEHB121
 4457 0375 E902     		.uleb128 .L220-.LFB1476
 4458 0377 01       		.uleb128 0x1
 4459 0378 F502     		.uleb128 .LEHB122-.LFB1476
 4460 037a 3A       		.uleb128 .LEHE122-.LEHB122
 4461 037b B603     		.uleb128 .L222-.LFB1476
 4462 037d 00       		.uleb128 0
 4463 037e AF03     		.uleb128 .LEHB123-.LFB1476
 4464 0380 05       		.uleb128 .LEHE123-.LEHB123
 4465 0381 00       		.uleb128 0
 4466 0382 00       		.uleb128 0
 4467 0383 C803     		.uleb128 .LEHB124-.LFB1476
 4468 0385 05       		.uleb128 .LEHE124-.LEHB124
 4469 0386 00       		.uleb128 0
 4470 0387 00       		.uleb128 0
 4471              	.LLSDACSE1476:
 4472 0388 01       		.byte	0x1
 4473 0389 00       		.byte	0
 4474 038a 00       		.byte	0
 4475 038b 7D       		.byte	0x7d
 4476              		.align 4
 4477 038c 00000000 		.long	0
 4478              	
 4479              	.LLSDATT1476:
 4480              		.text
 4482 22bb 90       		.align 2
 4484              	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperC2ERKN8UnitTest11TestDetailsE
 4485              	.LFB1478:
 134:TestXmlTestReporter.cpp **** 
 135:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, OneFailureAndOneSuccess)
 4486              		.loc 3 135 1
 4487              		.cfi_startproc
 4488 22bc 55       		pushq	%rbp
 4489              		.cfi_def_cfa_offset 16
 4490              		.cfi_offset 6, -16
 4491 22bd 4889E5   		movq	%rsp, %rbp
 4492              		.cfi_def_cfa_register 6
 4493 22c0 4883EC10 		subq	$16, %rsp
 4494 22c4 48897DF8 		movq	%rdi, -8(%rbp)
 4495 22c8 488975F0 		movq	%rsi, -16(%rbp)
 4496              	.LBB74:
 4497              		.loc 3 135 1
 4498 22cc 488B45F8 		movq	-8(%rbp), %rax
 4499 22d0 4889C7   		movq	%rax, %rdi
 4500 22d3 E828DDFF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 4500      FF
 4501 22d8 488B45F8 		movq	-8(%rbp), %rax
 4502 22dc 488B55F0 		movq	-16(%rbp), %rdx
 4503 22e0 488990A0 		movq	%rdx, 416(%rax)
 4503      010000
 4504              	.LBE74:
 4505 22e7 90       		nop
 4506 22e8 C9       		leave
 4507              		.cfi_def_cfa 7, 8
 4508 22e9 C3       		ret
 4509              		.cfi_endproc
 4510              	.LFE1478:
 4512              		.set	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperC1ERKN8UnitTest11TestDe
 4513              		.section	.rodata
 4514              	.LC33:
 4515 068c 4F6E6546 		.string	"OneFailureAndOneSuccess"
 4515      61696C75 
 4515      7265416E 
 4515      644F6E65 
 4515      53756363 
 4516              		.text
 4517              		.align 2
 4519              	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessC2Ev:
 4520              	.LFB1481:
 4521              		.loc 3 135 1
 4522              		.cfi_startproc
 4523 22ea 55       		pushq	%rbp
 4524              		.cfi_def_cfa_offset 16
 4525              		.cfi_offset 6, -16
 4526 22eb 4889E5   		movq	%rsp, %rbp
 4527              		.cfi_def_cfa_register 6
 4528 22ee 53       		pushq	%rbx
 4529 22ef 4883EC18 		subq	$24, %rsp
 4530              		.cfi_offset 3, -24
 4531 22f3 48897DE8 		movq	%rdi, -24(%rbp)
 4532              	.LBB75:
 4533              		.loc 3 135 1
 4534 22f7 488B5DE8 		movq	-24(%rbp), %rbx
 4535 22fb E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 4535      00
 4536 2300 4889C2   		movq	%rax, %rdx
 4537 2303 41B88700 		movl	$135, %r8d
 4537      0000
 4538 2309 488D0500 		leaq	.LC1(%rip), %rax
 4538      000000
 4539 2310 4889C1   		movq	%rax, %rcx
 4540 2313 488D0500 		leaq	.LC33(%rip), %rax
 4540      000000
 4541 231a 4889C6   		movq	%rax, %rsi
 4542 231d 4889DF   		movq	%rbx, %rdi
 4543 2320 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 4543      00
 4544 2325 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE(%rip), %rdx
 4544      000000
 4545 232c 488B45E8 		movq	-24(%rbp), %rax
 4546 2330 488910   		movq	%rdx, (%rax)
 4547              	.LBE75:
 4548 2333 90       		nop
 4549 2334 488B5DF8 		movq	-8(%rbp), %rbx
 4550 2338 C9       		leave
 4551              		.cfi_def_cfa 7, 8
 4552 2339 C3       		ret
 4553              		.cfi_endproc
 4554              	.LFE1481:
 4556              		.set	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessC1Ev,_ZN12_GLOBAL__N_149T
 4557              		.local	_ZN12_GLOBAL__N_157testXmlTestReporterFixtureOneFailureAndOneSuccessInstanceE
 4558              		.comm	_ZN12_GLOBAL__N_157testXmlTestReporterFixtureOneFailureAndOneSuccessInstanceE,56,32
 4559              		.local	_ZN12_GLOBAL__N_150adderXmlTestReporterFixtureOneFailureAndOneSuccessE
 4560              		.comm	_ZN12_GLOBAL__N_150adderXmlTestReporterFixtureOneFailureAndOneSuccessE,1,1
 4561              		.align 2
 4563              	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperD2Ev:
 4564              	.LFB1485:
 4565              		.loc 3 135 1
 4566              		.cfi_startproc
 4567 233a 55       		pushq	%rbp
 4568              		.cfi_def_cfa_offset 16
 4569              		.cfi_offset 6, -16
 4570 233b 4889E5   		movq	%rsp, %rbp
 4571              		.cfi_def_cfa_register 6
 4572 233e 4883EC10 		subq	$16, %rsp
 4573 2342 48897DF8 		movq	%rdi, -8(%rbp)
 4574              	.LBB76:
 4575              		.loc 3 135 1
 4576 2346 488B45F8 		movq	-8(%rbp), %rax
 4577 234a 4889C7   		movq	%rax, %rdi
 4578 234d E808DDFF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 4578      FF
 4579              	.LBE76:
 4580 2352 90       		nop
 4581 2353 C9       		leave
 4582              		.cfi_def_cfa 7, 8
 4583 2354 C3       		ret
 4584              		.cfi_endproc
 4585              	.LFE1485:
 4587              		.set	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperD1Ev,_ZN12_GLOBAL__N_15
 4588 2355 90       		.align 2
 4590              	_ZNK12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccess7RunImplEv:
 4591              	.LFB1483:
 4592              		.loc 3 135 1
 4593              		.cfi_startproc
 4594              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 4595              		.cfi_lsda 0x1b,.LLSDA1483
 4596 2356 F30F1EFA 		endbr64
 4597 235a 55       		pushq	%rbp
 4598              		.cfi_def_cfa_offset 16
 4599              		.cfi_offset 6, -16
 4600 235b 4889E5   		movq	%rsp, %rbp
 4601              		.cfi_def_cfa_register 6
 4602 235e 4155     		pushq	%r13
 4603 2360 4154     		pushq	%r12
 4604 2362 53       		pushq	%rbx
 4605 2363 4881EC08 		subq	$520, %rsp
 4605      020000
 4606              		.cfi_offset 13, -24
 4607              		.cfi_offset 12, -32
 4608              		.cfi_offset 3, -40
 4609 236a 4889BDE8 		movq	%rdi, -536(%rbp)
 4609      FDFFFF
 4610              		.loc 3 135 1
 4611 2371 64488B04 		movq	%fs:40, %rax
 4611      25280000 
 4611      00
 4612 237a 488945D8 		movq	%rax, -40(%rbp)
 4613 237e 31C0     		xorl	%eax, %eax
 4614 2380 C685FFFD 		movb	$0, -513(%rbp)
 4614      FFFF00
 4615              	.LBB77:
 4616 2387 488B85E8 		movq	-536(%rbp), %rax
 4616      FDFFFF
 4617 238e 488D5008 		leaq	8(%rax), %rdx
 4618 2392 488D8530 		leaq	-464(%rbp), %rax
 4618      FEFFFF
 4619 2399 4889D6   		movq	%rdx, %rsi
 4620 239c 4889C7   		movq	%rax, %rdi
 4621              	.LEHB125:
 4622 239f E818FFFF 		call	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperC1ERKN8UnitTest11TestDe
 4622      FF
 4623              	.LEHE125:
 4624              		.loc 3 135 1 is_stmt 0 discriminator 1
 4625 23a4 C685FFFD 		movb	$1, -513(%rbp)
 4625      FFFF01
 4626 23ab 488B85E8 		movq	-536(%rbp), %rax
 4626      FDFFFF
 4627 23b2 488D5008 		leaq	8(%rax), %rdx
 4628 23b6 488D8530 		leaq	-464(%rbp), %rax
 4628      FEFFFF
 4629 23bd 4889D6   		movq	%rdx, %rsi
 4630 23c0 4889C7   		movq	%rax, %rdi
 4631              	.LEHB126:
 4632 23c3 E8BD1C00 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelpe
 4632      00
 4633              	.LEHE126:
 4634              		.loc 3 135 1 discriminator 3
 4635 23c8 488D8530 		leaq	-464(%rbp), %rax
 4635      FEFFFF
 4636 23cf 4889C7   		movq	%rax, %rdi
 4637              	.LEHB127:
 4638 23d2 E863FFFF 		call	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperD1Ev
 4638      FF
 4639              	.LEHE127:
 4640              	.LBE77:
 4641              		.loc 3 135 1
 4642 23d7 E9840200 		jmp	.L226
 4642      00
 4643              	.L241:
 4644 23dc F30F1EFA 		endbr64
 4645              	.LBB78:
 4646 23e0 4989C4   		movq	%rax, %r12
 4647 23e3 4889D3   		movq	%rdx, %rbx
 4648 23e6 488D8530 		leaq	-464(%rbp), %rax
 4648      FEFFFF
 4649 23ed 4889C7   		movq	%rax, %rdi
 4650 23f0 E845FFFF 		call	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperD1Ev
 4650      FF
 4651 23f5 4C89E0   		movq	%r12, %rax
 4652 23f8 4889DA   		movq	%rbx, %rdx
 4653 23fb EB04     		jmp	.L228
 4654              	.L240:
 4655 23fd F30F1EFA 		endbr64
 4656              	.L228:
 4657              	.LBE78:
 4658 2401 4883FA01 		cmpq	$1, %rdx
 4659 2405 740F     		je	.L229
 4660 2407 4883FA02 		cmpq	$2, %rdx
 4661 240b 0F84A700 		je	.L230
 4661      0000
 4662 2411 E94D0100 		jmp	.L246
 4662      00
 4663              	.L229:
 4664              	.LBB79:
 4665              		.loc 3 135 1 discriminator 4
 4666 2416 4889C7   		movq	%rax, %rdi
 4667 2419 E8000000 		call	__cxa_begin_catch@PLT
 4667      00
 4668 241e 48898508 		movq	%rax, -504(%rbp)
 4668      FEFFFF
 4669              	.LEHB128:
 4670 2425 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4670      00
 4671 242a 488B18   		movq	(%rax), %rbx
 4672 242d 488B8508 		movq	-504(%rbp), %rax
 4672      FEFFFF
 4673 2434 488B00   		movq	(%rax), %rax
 4674 2437 4883C010 		addq	$16, %rax
 4675 243b 488B10   		movq	(%rax), %rdx
 4676 243e 488B8508 		movq	-504(%rbp), %rax
 4676      FEFFFF
 4677 2445 4889C7   		movq	%rax, %rdi
 4678 2448 FFD2     		call	*%rdx
 4679              	.LVL12:
 4680 244a 4989C4   		movq	%rax, %r12
 4681 244d 488B8508 		movq	-504(%rbp), %rax
 4681      FEFFFF
 4682 2454 4889C7   		movq	%rax, %rdi
 4683 2457 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 4683      00
 4684              		.loc 3 135 1 discriminator 8
 4685 245c 4189C5   		movl	%eax, %r13d
 4686 245f 488B8508 		movq	-504(%rbp), %rax
 4686      FEFFFF
 4687 2466 4889C7   		movq	%rax, %rdi
 4688 2469 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 4688      00
 4689              		.loc 3 135 1 discriminator 10
 4690 246e 4889C1   		movq	%rax, %rcx
 4691 2471 488B85E8 		movq	-536(%rbp), %rax
 4691      FDFFFF
 4692 2478 488B5008 		movq	8(%rax), %rdx
 4693 247c 488B85E8 		movq	-536(%rbp), %rax
 4693      FDFFFF
 4694 2483 488B7010 		movq	16(%rax), %rsi
 4695 2487 488D8510 		leaq	-496(%rbp), %rax
 4695      FEFFFF
 4696 248e 4589E8   		movl	%r13d, %r8d
 4697 2491 4889C7   		movq	%rax, %rdi
 4698 2494 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 4698      00
 4699              		.loc 3 135 1 discriminator 14
 4700 2499 488D8510 		leaq	-496(%rbp), %rax
 4700      FEFFFF
 4701 24a0 4C89E2   		movq	%r12, %rdx
 4702 24a3 4889C6   		movq	%rax, %rsi
 4703 24a6 4889DF   		movq	%rbx, %rdi
 4704 24a9 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4704      00
 4705              	.LEHE128:
 4706              		.loc 3 135 1 discriminator 16
 4707 24ae E8000000 		call	__cxa_end_catch@PLT
 4707      00
 4708              	.LBE79:
 4709 24b3 E9A80100 		jmp	.L226
 4709      00
 4710              	.L230:
 4711              	.LBB80:
 4712              		.loc 3 135 1 discriminator 5
 4713 24b8 4889C7   		movq	%rax, %rdi
 4714 24bb E8000000 		call	__cxa_begin_catch@PLT
 4714      00
 4715 24c0 48898500 		movq	%rax, -512(%rbp)
 4715      FEFFFF
 4716              	.LBB81:
 4717 24c7 488D8530 		leaq	-464(%rbp), %rax
 4717      FEFFFF
 4718 24ce 4889C7   		movq	%rax, %rdi
 4719              	.LEHB129:
 4720 24d1 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 4720      00
 4721              	.LEHE129:
 4722              		.loc 3 135 1 discriminator 18
 4723 24d6 488D8530 		leaq	-464(%rbp), %rax
 4723      FEFFFF
 4724 24dd 488D1500 		leaq	.LC3(%rip), %rdx
 4724      000000
 4725 24e4 4889D6   		movq	%rdx, %rsi
 4726 24e7 4889C7   		movq	%rax, %rdi
 4727              	.LEHB130:
 4728 24ea E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 4728      00
 4729 24ef 4889C3   		movq	%rax, %rbx
 4730 24f2 488B8500 		movq	-512(%rbp), %rax
 4730      FEFFFF
 4731 24f9 488B00   		movq	(%rax), %rax
 4732 24fc 4883C010 		addq	$16, %rax
 4733 2500 488B10   		movq	(%rax), %rdx
 4734 2503 488B8500 		movq	-512(%rbp), %rax
 4734      FEFFFF
 4735 250a 4889C7   		movq	%rax, %rdi
 4736 250d FFD2     		call	*%rdx
 4737              	.LVL13:
 4738 250f 4889C6   		movq	%rax, %rsi
 4739 2512 4889DF   		movq	%rbx, %rdi
 4740 2515 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 4740      00
 4741              		.loc 3 135 1 discriminator 22
 4742 251a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4742      00
 4743 251f 488B18   		movq	(%rax), %rbx
 4744 2522 488D8530 		leaq	-464(%rbp), %rax
 4744      FEFFFF
 4745 2529 4889C7   		movq	%rax, %rdi
 4746 252c E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 4746      00
 4747              		.loc 3 135 1 discriminator 24
 4748 2531 4889C2   		movq	%rax, %rdx
 4749 2534 488B85E8 		movq	-536(%rbp), %rax
 4749      FDFFFF
 4750 253b 4883C008 		addq	$8, %rax
 4751 253f 4889C6   		movq	%rax, %rsi
 4752 2542 4889DF   		movq	%rbx, %rdi
 4753 2545 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4753      00
 4754              	.LEHE130:
 4755              		.loc 3 135 1 discriminator 28
 4756 254a 488D8530 		leaq	-464(%rbp), %rax
 4756      FEFFFF
 4757 2551 4889C7   		movq	%rax, %rdi
 4758              	.LEHB131:
 4759 2554 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4759      00
 4760              	.LEHE131:
 4761              	.LBE81:
 4762              		.loc 3 135 1 discriminator 29
 4763 2559 E8000000 		call	__cxa_end_catch@PLT
 4763      00
 4764              	.LBE80:
 4765 255e E9FD0000 		jmp	.L226
 4765      00
 4766              	.L246:
 4767              		.loc 3 135 1 discriminator 6
 4768 2563 4889C7   		movq	%rax, %rdi
 4769 2566 E8000000 		call	__cxa_begin_catch@PLT
 4769      00
 4770 256b 80BDFFFD 		cmpb	$0, -513(%rbp)
 4770      FFFF00
 4771 2572 7445     		je	.L233
 4772              	.LEHB132:
 4773              		.loc 3 135 1 discriminator 31
 4774 2574 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4774      00
 4775 2579 488B18   		movq	(%rax), %rbx
 4776 257c 488B85E8 		movq	-536(%rbp), %rax
 4776      FDFFFF
 4777 2583 488D4808 		leaq	8(%rax), %rcx
 4778 2587 488D8510 		leaq	-496(%rbp), %rax
 4778      FEFFFF
 4779 258e BA870000 		movl	$135, %edx
 4779      00
 4780 2593 4889CE   		movq	%rcx, %rsi
 4781 2596 4889C7   		movq	%rax, %rdi
 4782 2599 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4782      00
 4783              		.loc 3 135 1 discriminator 36
 4784 259e 488D8510 		leaq	-496(%rbp), %rax
 4784      FEFFFF
 4785 25a5 488D1500 		leaq	.LC4(%rip), %rdx
 4785      000000
 4786 25ac 4889C6   		movq	%rax, %rsi
 4787 25af 4889DF   		movq	%rbx, %rdi
 4788 25b2 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4788      00
 4789 25b7 EB43     		jmp	.L234
 4790              	.L233:
 4791              		.loc 3 135 1 discriminator 32
 4792 25b9 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4792      00
 4793 25be 488B18   		movq	(%rax), %rbx
 4794 25c1 488B85E8 		movq	-536(%rbp), %rax
 4794      FDFFFF
 4795 25c8 488D4808 		leaq	8(%rax), %rcx
 4796 25cc 488D8510 		leaq	-496(%rbp), %rax
 4796      FEFFFF
 4797 25d3 BA870000 		movl	$135, %edx
 4797      00
 4798 25d8 4889CE   		movq	%rcx, %rsi
 4799 25db 4889C7   		movq	%rax, %rdi
 4800 25de E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4800      00
 4801              		.loc 3 135 1 discriminator 43
 4802 25e3 488D8510 		leaq	-496(%rbp), %rax
 4802      FEFFFF
 4803 25ea 488D1500 		leaq	.LC5(%rip), %rdx
 4803      000000
 4804 25f1 4889C6   		movq	%rax, %rsi
 4805 25f4 4889DF   		movq	%rbx, %rdi
 4806 25f7 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4806      00
 4807              	.LEHE132:
 4808              	.L234:
 4809              	.LEHB133:
 4810              		.loc 3 135 1 discriminator 46
 4811 25fc E8000000 		call	__cxa_end_catch@PLT
 4811      00
 4812 2601 EB5D     		jmp	.L226
 4813              	.L242:
 4814 2603 F30F1EFA 		endbr64
 4815              	.LBB83:
 4816              		.loc 3 135 1
 4817 2607 4889C3   		movq	%rax, %rbx
 4818 260a E8000000 		call	__cxa_end_catch@PLT
 4818      00
 4819 260f 4889D8   		movq	%rbx, %rax
 4820 2612 4889C7   		movq	%rax, %rdi
 4821 2615 E8000000 		call	_Unwind_Resume@PLT
 4821      00
 4822              	.LEHE133:
 4823              	.L244:
 4824 261a F30F1EFA 		endbr64
 4825              	.LBE83:
 4826              	.LBB84:
 4827              	.LBB82:
 4828 261e 4889C3   		movq	%rax, %rbx
 4829 2621 488D8530 		leaq	-464(%rbp), %rax
 4829      FEFFFF
 4830 2628 4889C7   		movq	%rax, %rdi
 4831 262b E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4831      00
 4832 2630 EB07     		jmp	.L237
 4833              	.L243:
 4834 2632 F30F1EFA 		endbr64
 4835              	.LBE82:
 4836 2636 4889C3   		movq	%rax, %rbx
 4837              	.L237:
 4838 2639 E8000000 		call	__cxa_end_catch@PLT
 4838      00
 4839 263e 4889D8   		movq	%rbx, %rax
 4840 2641 4889C7   		movq	%rax, %rdi
 4841              	.LEHB134:
 4842 2644 E8000000 		call	_Unwind_Resume@PLT
 4842      00
 4843              	.LEHE134:
 4844              	.L245:
 4845 2649 F30F1EFA 		endbr64
 4846              	.LBE84:
 4847 264d 4889C3   		movq	%rax, %rbx
 4848 2650 E8000000 		call	__cxa_end_catch@PLT
 4848      00
 4849 2655 4889D8   		movq	%rbx, %rax
 4850 2658 4889C7   		movq	%rax, %rdi
 4851              	.LEHB135:
 4852 265b E8000000 		call	_Unwind_Resume@PLT
 4852      00
 4853              	.LEHE135:
 4854              	.L226:
 4855 2660 488B45D8 		movq	-40(%rbp), %rax
 4856 2664 64482B04 		subq	%fs:40, %rax
 4856      25280000 
 4856      00
 4857 266d 7405     		je	.L239
 4858 266f E8000000 		call	__stack_chk_fail@PLT
 4858      00
 4859              	.L239:
 4860 2674 4881C408 		addq	$520, %rsp
 4860      020000
 4861 267b 5B       		popq	%rbx
 4862 267c 415C     		popq	%r12
 4863 267e 415D     		popq	%r13
 4864 2680 5D       		popq	%rbp
 4865              		.cfi_def_cfa 7, 8
 4866 2681 C3       		ret
 4867              		.cfi_endproc
 4868              	.LFE1483:
 4869              		.section	.gcc_except_table
 4870              		.align 4
 4871              	.LLSDA1483:
 4872 0390 FF       		.byte	0xff
 4873 0391 9B       		.byte	0x9b
 4874 0392 55       		.uleb128 .LLSDATT1483-.LLSDATTD1483
 4875              	.LLSDATTD1483:
 4876 0393 01       		.byte	0x1
 4877 0394 3E       		.uleb128 .LLSDACSE1483-.LLSDACSB1483
 4878              	.LLSDACSB1483:
 4879 0395 49       		.uleb128 .LEHB125-.LFB1483
 4880 0396 05       		.uleb128 .LEHE125-.LEHB125
 4881 0397 A701     		.uleb128 .L240-.LFB1483
 4882 0399 05       		.uleb128 0x5
 4883 039a 6D       		.uleb128 .LEHB126-.LFB1483
 4884 039b 05       		.uleb128 .LEHE126-.LEHB126
 4885 039c 8601     		.uleb128 .L241-.LFB1483
 4886 039e 07       		.uleb128 0x7
 4887 039f 7C       		.uleb128 .LEHB127-.LFB1483
 4888 03a0 05       		.uleb128 .LEHE127-.LEHB127
 4889 03a1 A701     		.uleb128 .L240-.LFB1483
 4890 03a3 05       		.uleb128 0x5
 4891 03a4 CF01     		.uleb128 .LEHB128-.LFB1483
 4892 03a6 8901     		.uleb128 .LEHE128-.LEHB128
 4893 03a8 AD05     		.uleb128 .L242-.LFB1483
 4894 03aa 00       		.uleb128 0
 4895 03ab FB02     		.uleb128 .LEHB129-.LFB1483
 4896 03ad 05       		.uleb128 .LEHE129-.LEHB129
 4897 03ae DC05     		.uleb128 .L243-.LFB1483
 4898 03b0 00       		.uleb128 0
 4899 03b1 9403     		.uleb128 .LEHB130-.LFB1483
 4900 03b3 60       		.uleb128 .LEHE130-.LEHB130
 4901 03b4 C405     		.uleb128 .L244-.LFB1483
 4902 03b6 00       		.uleb128 0
 4903 03b7 FE03     		.uleb128 .LEHB131-.LFB1483
 4904 03b9 05       		.uleb128 .LEHE131-.LEHB131
 4905 03ba DC05     		.uleb128 .L243-.LFB1483
 4906 03bc 00       		.uleb128 0
 4907 03bd 9E04     		.uleb128 .LEHB132-.LFB1483
 4908 03bf 8801     		.uleb128 .LEHE132-.LEHB132
 4909 03c1 F305     		.uleb128 .L245-.LFB1483
 4910 03c3 00       		.uleb128 0
 4911 03c4 A605     		.uleb128 .LEHB133-.LFB1483
 4912 03c6 1E       		.uleb128 .LEHE133-.LEHB133
 4913 03c7 00       		.uleb128 0
 4914 03c8 00       		.uleb128 0
 4915 03c9 EE05     		.uleb128 .LEHB134-.LFB1483
 4916 03cb 05       		.uleb128 .LEHE134-.LEHB134
 4917 03cc 00       		.uleb128 0
 4918 03cd 00       		.uleb128 0
 4919 03ce 8506     		.uleb128 .LEHB135-.LFB1483
 4920 03d0 05       		.uleb128 .LEHE135-.LEHB135
 4921 03d1 00       		.uleb128 0
 4922 03d2 00       		.uleb128 0
 4923              	.LLSDACSE1483:
 4924 03d3 03       		.byte	0x3
 4925 03d4 00       		.byte	0
 4926 03d5 02       		.byte	0x2
 4927 03d6 7D       		.byte	0x7d
 4928 03d7 01       		.byte	0x1
 4929 03d8 7D       		.byte	0x7d
 4930 03d9 00       		.byte	0
 4931 03da 7D       		.byte	0x7d
 4932 03db 00       		.align 4
 4933 03dc 00000000 		.long	0
 4934              	
 4935 03e0 00000000 		.long	DW.ref._ZTISt9exception-.
 4936 03e4 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 4937              	.LLSDATT1483:
 4938              		.text
 4940              		.section	.rodata
 4941              	.LC34:
 4942 06a4 6661696C 		.string	"fail.h"
 4942      2E6800
 4943              	.LC35:
 4944 06ab 4661696C 		.string	"FailedTest"
 4944      65645465 
 4944      737400
 4945              	.LC36:
 4946 06b6 65787065 		.string	"expected 1 but was 2"
 4946      63746564 
 4946      20312062 
 4946      75742077 
 4946      61732032 
 4947              	.LC37:
 4948 06cb 53756363 		.string	"SucceededTest"
 4948      65656465 
 4948      64546573 
 4948      7400
 4949 06d9 00000000 		.align 8
 4949      000000
 4950              	.LC39:
 4951 06e0 3C3F786D 		.ascii	"<?xml versio"
 4951      6C207665 
 4951      7273696F 
 4952 06ec 6E3D2231 		.string	"n=\"1.0\"?><unittest-results tests=\"2\" failedtests=\"1\" failures=\"1\" time=\"1.1\"><t
 4952      2E30223F 
 4952      3E3C756E 
 4952      69747465 
 4952      73742D72 
 4953              		.text
 4954              		.align 2
 4956              	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelper7RunImplEv:
 4957              	.LFB1487:
 136:TestXmlTestReporter.cpp **** {
 4958              		.loc 3 136 1 is_stmt 1
 4959              		.cfi_startproc
 4960              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 4961              		.cfi_lsda 0x1b,.LLSDA1487
 4962 2682 F30F1EFA 		endbr64
 4963 2686 55       		pushq	%rbp
 4964              		.cfi_def_cfa_offset 16
 4965              		.cfi_offset 6, -16
 4966 2687 4889E5   		movq	%rsp, %rbp
 4967              		.cfi_def_cfa_register 6
 4968 268a 53       		pushq	%rbx
 4969 268b 4881ECB8 		subq	$184, %rsp
 4969      000000
 4970              		.cfi_offset 3, -24
 4971 2692 4889BD48 		movq	%rdi, -184(%rbp)
 4971      FFFFFF
 4972              		.loc 3 136 1
 4973 2699 64488B04 		movq	%fs:40, %rax
 4973      25280000 
 4973      00
 4974 26a2 488945E8 		movq	%rax, -24(%rbp)
 4975 26a6 31C0     		xorl	%eax, %eax
 137:TestXmlTestReporter.cpp ****     TestDetails const failedDetails("FailedTest", "suite", "fail.h", 1);
 4976              		.loc 3 137 71
 4977 26a8 488D8560 		leaq	-160(%rbp), %rax
 4977      FFFFFF
 4978 26af 41B80100 		movl	$1, %r8d
 4978      0000
 4979 26b5 488D1500 		leaq	.LC34(%rip), %rdx
 4979      000000
 4980 26bc 4889D1   		movq	%rdx, %rcx
 4981 26bf 488D1500 		leaq	.LC7(%rip), %rdx
 4981      000000
 4982 26c6 488D3500 		leaq	.LC35(%rip), %rsi
 4982      000000
 4983 26cd 4889C7   		movq	%rax, %rdi
 4984              	.LEHB136:
 4985 26d0 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 4985      00
 138:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(failedDetails);
 4986              		.loc 3 138 29
 4987 26d5 488B8548 		movq	-184(%rbp), %rax
 4987      FFFFFF
 4988 26dc 488D9078 		leaq	376(%rax), %rdx
 4988      010000
 4989 26e3 488D8560 		leaq	-160(%rbp), %rax
 4989      FFFFFF
 4990 26ea 4889C6   		movq	%rax, %rsi
 4991 26ed 4889D7   		movq	%rdx, %rdi
 4992 26f0 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE@PLT
 4992      00
 139:TestXmlTestReporter.cpp ****     reporter.ReportFailure(failedDetails, "expected 1 but was 2");
 4993              		.loc 3 139 27
 4994 26f5 488B8548 		movq	-184(%rbp), %rax
 4994      FFFFFF
 4995 26fc 488D8878 		leaq	376(%rax), %rcx
 4995      010000
 4996 2703 488D8560 		leaq	-160(%rbp), %rax
 4996      FFFFFF
 4997 270a 488D1500 		leaq	.LC36(%rip), %rdx
 4997      000000
 4998 2711 4889C6   		movq	%rax, %rsi
 4999 2714 4889CF   		movq	%rcx, %rdi
 5000 2717 E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc@PLT
 5000      00
 140:TestXmlTestReporter.cpp ****     reporter.ReportTestFinish(failedDetails, 0.1f);
 5001              		.loc 3 140 30
 5002 271c 488B8548 		movq	-184(%rbp), %rax
 5002      FFFFFF
 5003 2723 488D8878 		leaq	376(%rax), %rcx
 5003      010000
 5004 272a 488D8560 		leaq	-160(%rbp), %rax
 5004      FFFFFF
 5005 2731 8B150000 		movl	.LC10(%rip), %edx
 5005      0000
 5006 2737 660F6EC2 		movd	%edx, %xmm0
 5007 273b 4889C6   		movq	%rax, %rsi
 5008 273e 4889CF   		movq	%rcx, %rdi
 5009 2741 E8000000 		call	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf@PLT
 5009      00
 141:TestXmlTestReporter.cpp **** 
 142:TestXmlTestReporter.cpp ****     TestDetails const succeededDetails("SucceededTest", "suite", "", 0);
 5010              		.loc 3 142 71
 5011 2746 488D4580 		leaq	-128(%rbp), %rax
 5012 274a 41B80000 		movl	$0, %r8d
 5012      0000
 5013 2750 488D1500 		leaq	.LC14(%rip), %rdx
 5013      000000
 5014 2757 4889D1   		movq	%rdx, %rcx
 5015 275a 488D1500 		leaq	.LC7(%rip), %rdx
 5015      000000
 5016 2761 488D3500 		leaq	.LC37(%rip), %rsi
 5016      000000
 5017 2768 4889C7   		movq	%rax, %rdi
 5018 276b E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 5018      00
 143:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(succeededDetails);
 5019              		.loc 3 143 29
 5020 2770 488B8548 		movq	-184(%rbp), %rax
 5020      FFFFFF
 5021 2777 488D9078 		leaq	376(%rax), %rdx
 5021      010000
 5022 277e 488D4580 		leaq	-128(%rbp), %rax
 5023 2782 4889C6   		movq	%rax, %rsi
 5024 2785 4889D7   		movq	%rdx, %rdi
 5025 2788 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE@PLT
 5025      00
 144:TestXmlTestReporter.cpp ****     reporter.ReportTestFinish(succeededDetails, 1.0f);
 5026              		.loc 3 144 30
 5027 278d 488B8548 		movq	-184(%rbp), %rax
 5027      FFFFFF
 5028 2794 488D8878 		leaq	376(%rax), %rcx
 5028      010000
 5029 279b 488D4580 		leaq	-128(%rbp), %rax
 5030 279f 8B150000 		movl	.LC16(%rip), %edx
 5030      0000
 5031 27a5 660F6EC2 		movd	%edx, %xmm0
 5032 27a9 4889C6   		movq	%rax, %rsi
 5033 27ac 4889CF   		movq	%rcx, %rdi
 5034 27af E8000000 		call	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf@PLT
 5034      00
 145:TestXmlTestReporter.cpp ****     reporter.ReportSummary(2, 1, 1, 1.1f);
 5035              		.loc 3 145 27
 5036 27b4 488B8548 		movq	-184(%rbp), %rax
 5036      FFFFFF
 5037 27bb 488DB878 		leaq	376(%rax), %rdi
 5037      010000
 5038 27c2 8B050000 		movl	.LC38(%rip), %eax
 5038      0000
 5039 27c8 660F6EC0 		movd	%eax, %xmm0
 5040 27cc B9010000 		movl	$1, %ecx
 5040      00
 5041 27d1 BA010000 		movl	$1, %edx
 5041      00
 5042 27d6 BE020000 		movl	$2, %esi
 5042      00
 5043 27db E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif@PLT
 5043      00
 5044              	.LEHE136:
 146:TestXmlTestReporter.cpp **** 
 147:TestXmlTestReporter.cpp ****     char const* expected =
 5045              		.loc 3 147 17
 5046 27e0 488D0500 		leaq	.LC39(%rip), %rax
 5046      000000
 5047 27e7 48898558 		movq	%rax, -168(%rbp)
 5047      FFFFFF
 5048              	.LEHB137:
 148:TestXmlTestReporter.cpp ****         "<?xml version=\"1.0\"?>"
 149:TestXmlTestReporter.cpp ****         "<unittest-results tests=\"2\" failedtests=\"1\" failures=\"1\" time=\"1.1\">"
 150:TestXmlTestReporter.cpp ****         "<test suite=\"suite\" name=\"FailedTest\" time=\"0.1\">"
 151:TestXmlTestReporter.cpp ****         "<failure message=\"fail.h(1) : expected 1 but was 2\"/>"
 152:TestXmlTestReporter.cpp ****         "</test>"
 153:TestXmlTestReporter.cpp ****         "<test suite=\"suite\" name=\"SucceededTest\" time=\"1\"/>"
 154:TestXmlTestReporter.cpp ****         "</unittest-results>";
 155:TestXmlTestReporter.cpp **** 
 156:TestXmlTestReporter.cpp ****     CHECK_EQUAL(expected, output.str());
 5049              		.loc 3 156 5
 5050 27ee E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 5050      00
 5051 27f3 488B08   		movq	(%rax), %rcx
 5052 27f6 488D45A0 		leaq	-96(%rbp), %rax
 5053 27fa BA9C0000 		movl	$156, %edx
 5053      00
 5054 27ff 4889CE   		movq	%rcx, %rsi
 5055 2802 4889C7   		movq	%rax, %rdi
 5056 2805 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 5056      00
 5057              		.loc 3 156 5 is_stmt 0 discriminator 4
 5058 280a 488B9548 		movq	-184(%rbp), %rdx
 5058      FFFFFF
 5059 2811 488D45C0 		leaq	-64(%rbp), %rax
 5060 2815 4889D6   		movq	%rdx, %rsi
 5061 2818 4889C7   		movq	%rax, %rdi
 5062 281b E8000000 		call	_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv@PLT
 5062      00
 5063              	.LEHE137:
 5064              	.LEHB138:
 5065              		.loc 3 156 5 discriminator 6
 5066 2820 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5066      00
 5067 2825 488B00   		movq	(%rax), %rax
 5068 2828 488D4DA0 		leaq	-96(%rbp), %rcx
 5069 282c 488D55C0 		leaq	-64(%rbp), %rdx
 5070 2830 488DB558 		leaq	-168(%rbp), %rsi
 5070      FFFFFF
 5071 2837 4889C7   		movq	%rax, %rdi
 5072 283a E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 5072      00
 5073              	.LEHE138:
 5074              		.loc 3 156 5 discriminator 10
 5075 283f 488D45C0 		leaq	-64(%rbp), %rax
 5076 2843 4889C7   		movq	%rax, %rdi
 5077              	.LEHB139:
 5078 2846 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 5078      00
 5079              	.LEHE139:
 157:TestXmlTestReporter.cpp **** }
 5080              		.loc 3 157 1 is_stmt 1
 5081 284b EB7C     		jmp	.L247
 5082              	.L254:
 5083 284d F30F1EFA 		endbr64
 156:TestXmlTestReporter.cpp **** }
 5084              		.loc 3 156 5
 5085 2851 4889C3   		movq	%rax, %rbx
 5086 2854 488D45C0 		leaq	-64(%rbp), %rax
 5087 2858 4889C7   		movq	%rax, %rdi
 5088 285b E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 5088      00
 5089 2860 4889D8   		movq	%rbx, %rax
 5090 2863 EB04     		jmp	.L249
 5091              	.L253:
 5092 2865 F30F1EFA 		endbr64
 5093              	.L249:
 156:TestXmlTestReporter.cpp **** }
 5094              		.loc 3 156 5 is_stmt 0 discriminator 3
 5095 2869 4889C7   		movq	%rax, %rdi
 5096 286c E8000000 		call	__cxa_begin_catch@PLT
 5096      00
 5097              	.LEHB140:
 5098 2871 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5098      00
 5099 2876 488B18   		movq	(%rax), %rbx
 5100 2879 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 5100      00
 156:TestXmlTestReporter.cpp **** }
 5101              		.loc 3 156 5 discriminator 15
 5102 287e 488B08   		movq	(%rax), %rcx
 5103 2881 488D45A0 		leaq	-96(%rbp), %rax
 5104 2885 BA9C0000 		movl	$156, %edx
 5104      00
 5105 288a 4889CE   		movq	%rcx, %rsi
 5106 288d 4889C7   		movq	%rax, %rdi
 5107 2890 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 5107      00
 156:TestXmlTestReporter.cpp **** }
 5108              		.loc 3 156 5 discriminator 19
 5109 2895 488D45A0 		leaq	-96(%rbp), %rax
 5110 2899 488D1500 		leaq	.LC12(%rip), %rdx
 5110      000000
 5111 28a0 4889C6   		movq	%rax, %rsi
 5112 28a3 4889DF   		movq	%rbx, %rdi
 5113 28a6 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5113      00
 5114              	.LEHE140:
 5115              	.LEHB141:
 156:TestXmlTestReporter.cpp **** }
 5116              		.loc 3 156 5 discriminator 21
 5117 28ab E8000000 		call	__cxa_end_catch@PLT
 5117      00
 5118              	.LEHE141:
 5119              		.loc 3 157 1 is_stmt 1 discriminator 21
 5120 28b0 EB17     		jmp	.L247
 5121              	.L255:
 5122 28b2 F30F1EFA 		endbr64
 156:TestXmlTestReporter.cpp **** }
 5123              		.loc 3 156 5
 5124 28b6 4889C3   		movq	%rax, %rbx
 5125 28b9 E8000000 		call	__cxa_end_catch@PLT
 5125      00
 5126 28be 4889D8   		movq	%rbx, %rax
 5127 28c1 4889C7   		movq	%rax, %rdi
 5128              	.LEHB142:
 5129 28c4 E8000000 		call	_Unwind_Resume@PLT
 5129      00
 5130              	.LEHE142:
 5131              	.L247:
 5132              		.loc 3 157 1
 5133 28c9 488B45E8 		movq	-24(%rbp), %rax
 5134 28cd 64482B04 		subq	%fs:40, %rax
 5134      25280000 
 5134      00
 5135 28d6 7405     		je	.L252
 5136 28d8 E8000000 		call	__stack_chk_fail@PLT
 5136      00
 5137              	.L252:
 5138 28dd 488B5DF8 		movq	-8(%rbp), %rbx
 5139 28e1 C9       		leave
 5140              		.cfi_def_cfa 7, 8
 5141 28e2 C3       		ret
 5142              		.cfi_endproc
 5143              	.LFE1487:
 5144              		.section	.gcc_except_table
 5145              		.align 4
 5146              	.LLSDA1487:
 5147 03e8 FF       		.byte	0xff
 5148 03e9 9B       		.byte	0x9b
 5149 03ea 31       		.uleb128 .LLSDATT1487-.LLSDATTD1487
 5150              	.LLSDATTD1487:
 5151 03eb 01       		.byte	0x1
 5152 03ec 27       		.uleb128 .LLSDACSE1487-.LLSDACSB1487
 5153              	.LLSDACSB1487:
 5154 03ed 4E       		.uleb128 .LEHB136-.LFB1487
 5155 03ee 9002     		.uleb128 .LEHE136-.LEHB136
 5156 03f0 00       		.uleb128 0
 5157 03f1 00       		.uleb128 0
 5158 03f2 EC02     		.uleb128 .LEHB137-.LFB1487
 5159 03f4 32       		.uleb128 .LEHE137-.LEHB137
 5160 03f5 E303     		.uleb128 .L253-.LFB1487
 5161 03f7 01       		.uleb128 0x1
 5162 03f8 9E03     		.uleb128 .LEHB138-.LFB1487
 5163 03fa 1F       		.uleb128 .LEHE138-.LEHB138
 5164 03fb CB03     		.uleb128 .L254-.LFB1487
 5165 03fd 03       		.uleb128 0x3
 5166 03fe C403     		.uleb128 .LEHB139-.LFB1487
 5167 0400 05       		.uleb128 .LEHE139-.LEHB139
 5168 0401 E303     		.uleb128 .L253-.LFB1487
 5169 0403 01       		.uleb128 0x1
 5170 0404 EF03     		.uleb128 .LEHB140-.LFB1487
 5171 0406 3A       		.uleb128 .LEHE140-.LEHB140
 5172 0407 B004     		.uleb128 .L255-.LFB1487
 5173 0409 00       		.uleb128 0
 5174 040a A904     		.uleb128 .LEHB141-.LFB1487
 5175 040c 05       		.uleb128 .LEHE141-.LEHB141
 5176 040d 00       		.uleb128 0
 5177 040e 00       		.uleb128 0
 5178 040f C204     		.uleb128 .LEHB142-.LFB1487
 5179 0411 05       		.uleb128 .LEHE142-.LEHB142
 5180 0412 00       		.uleb128 0
 5181 0413 00       		.uleb128 0
 5182              	.LLSDACSE1487:
 5183 0414 01       		.byte	0x1
 5184 0415 00       		.byte	0
 5185 0416 00       		.byte	0
 5186 0417 7D       		.byte	0x7d
 5187              		.align 4
 5188 0418 00000000 		.long	0
 5189              	
 5190              	.LLSDATT1487:
 5191              		.text
 5193 28e3 90       		.align 2
 5195              	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperC2ERKN8UnitTest11TestDetailsE:
 5196              	.LFB1489:
 158:TestXmlTestReporter.cpp **** 
 159:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, MultipleFailures)
 5197              		.loc 3 159 1
 5198              		.cfi_startproc
 5199 28e4 55       		pushq	%rbp
 5200              		.cfi_def_cfa_offset 16
 5201              		.cfi_offset 6, -16
 5202 28e5 4889E5   		movq	%rsp, %rbp
 5203              		.cfi_def_cfa_register 6
 5204 28e8 4883EC10 		subq	$16, %rsp
 5205 28ec 48897DF8 		movq	%rdi, -8(%rbp)
 5206 28f0 488975F0 		movq	%rsi, -16(%rbp)
 5207              	.LBB85:
 5208              		.loc 3 159 1
 5209 28f4 488B45F8 		movq	-8(%rbp), %rax
 5210 28f8 4889C7   		movq	%rax, %rdi
 5211 28fb E800D7FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 5211      FF
 5212 2900 488B45F8 		movq	-8(%rbp), %rax
 5213 2904 488B55F0 		movq	-16(%rbp), %rdx
 5214 2908 488990A0 		movq	%rdx, 416(%rax)
 5214      010000
 5215              	.LBE85:
 5216 290f 90       		nop
 5217 2910 C9       		leave
 5218              		.cfi_def_cfa 7, 8
 5219 2911 C3       		ret
 5220              		.cfi_endproc
 5221              	.LFE1489:
 5223              		.set	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperC1ERKN8UnitTest11TestDetailsE,
 5224              		.section	.rodata
 5225              	.LC40:
 5226 07ed 4D756C74 		.string	"MultipleFailures"
 5226      69706C65 
 5226      4661696C 
 5226      75726573 
 5226      00
 5227              		.text
 5228              		.align 2
 5230              	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresC2Ev:
 5231              	.LFB1492:
 5232              		.loc 3 159 1
 5233              		.cfi_startproc
 5234 2912 55       		pushq	%rbp
 5235              		.cfi_def_cfa_offset 16
 5236              		.cfi_offset 6, -16
 5237 2913 4889E5   		movq	%rsp, %rbp
 5238              		.cfi_def_cfa_register 6
 5239 2916 53       		pushq	%rbx
 5240 2917 4883EC18 		subq	$24, %rsp
 5241              		.cfi_offset 3, -24
 5242 291b 48897DE8 		movq	%rdi, -24(%rbp)
 5243              	.LBB86:
 5244              		.loc 3 159 1
 5245 291f 488B5DE8 		movq	-24(%rbp), %rbx
 5246 2923 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 5246      00
 5247 2928 4889C2   		movq	%rax, %rdx
 5248 292b 41B89F00 		movl	$159, %r8d
 5248      0000
 5249 2931 488D0500 		leaq	.LC1(%rip), %rax
 5249      000000
 5250 2938 4889C1   		movq	%rax, %rcx
 5251 293b 488D0500 		leaq	.LC40(%rip), %rax
 5251      000000
 5252 2942 4889C6   		movq	%rax, %rsi
 5253 2945 4889DF   		movq	%rbx, %rdi
 5254 2948 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 5254      00
 5255 294d 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE(%rip), %rdx
 5255      000000
 5256 2954 488B45E8 		movq	-24(%rbp), %rax
 5257 2958 488910   		movq	%rdx, (%rax)
 5258              	.LBE86:
 5259 295b 90       		nop
 5260 295c 488B5DF8 		movq	-8(%rbp), %rbx
 5261 2960 C9       		leave
 5262              		.cfi_def_cfa 7, 8
 5263 2961 C3       		ret
 5264              		.cfi_endproc
 5265              	.LFE1492:
 5267              		.set	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresC1Ev,_ZN12_GLOBAL__N_142TestXmlT
 5268              		.local	_ZN12_GLOBAL__N_150testXmlTestReporterFixtureMultipleFailuresInstanceE
 5269              		.comm	_ZN12_GLOBAL__N_150testXmlTestReporterFixtureMultipleFailuresInstanceE,56,32
 5270              		.local	_ZN12_GLOBAL__N_143adderXmlTestReporterFixtureMultipleFailuresE
 5271              		.comm	_ZN12_GLOBAL__N_143adderXmlTestReporterFixtureMultipleFailuresE,1,1
 5272              		.align 2
 5274              	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperD2Ev:
 5275              	.LFB1496:
 5276              		.loc 3 159 1
 5277              		.cfi_startproc
 5278 2962 55       		pushq	%rbp
 5279              		.cfi_def_cfa_offset 16
 5280              		.cfi_offset 6, -16
 5281 2963 4889E5   		movq	%rsp, %rbp
 5282              		.cfi_def_cfa_register 6
 5283 2966 4883EC10 		subq	$16, %rsp
 5284 296a 48897DF8 		movq	%rdi, -8(%rbp)
 5285              	.LBB87:
 5286              		.loc 3 159 1
 5287 296e 488B45F8 		movq	-8(%rbp), %rax
 5288 2972 4889C7   		movq	%rax, %rdi
 5289 2975 E8E0D6FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 5289      FF
 5290              	.LBE87:
 5291 297a 90       		nop
 5292 297b C9       		leave
 5293              		.cfi_def_cfa 7, 8
 5294 297c C3       		ret
 5295              		.cfi_endproc
 5296              	.LFE1496:
 5298              		.set	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperD1Ev,_ZN12_GLOBAL__N_144XmlTes
 5299 297d 90       		.align 2
 5301              	_ZNK12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailures7RunImplEv:
 5302              	.LFB1494:
 5303              		.loc 3 159 1
 5304              		.cfi_startproc
 5305              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 5306              		.cfi_lsda 0x1b,.LLSDA1494
 5307 297e F30F1EFA 		endbr64
 5308 2982 55       		pushq	%rbp
 5309              		.cfi_def_cfa_offset 16
 5310              		.cfi_offset 6, -16
 5311 2983 4889E5   		movq	%rsp, %rbp
 5312              		.cfi_def_cfa_register 6
 5313 2986 4155     		pushq	%r13
 5314 2988 4154     		pushq	%r12
 5315 298a 53       		pushq	%rbx
 5316 298b 4881EC08 		subq	$520, %rsp
 5316      020000
 5317              		.cfi_offset 13, -24
 5318              		.cfi_offset 12, -32
 5319              		.cfi_offset 3, -40
 5320 2992 4889BDE8 		movq	%rdi, -536(%rbp)
 5320      FDFFFF
 5321              		.loc 3 159 1
 5322 2999 64488B04 		movq	%fs:40, %rax
 5322      25280000 
 5322      00
 5323 29a2 488945D8 		movq	%rax, -40(%rbp)
 5324 29a6 31C0     		xorl	%eax, %eax
 5325 29a8 C685FFFD 		movb	$0, -513(%rbp)
 5325      FFFF00
 5326              	.LBB88:
 5327 29af 488B85E8 		movq	-536(%rbp), %rax
 5327      FDFFFF
 5328 29b6 488D5008 		leaq	8(%rax), %rdx
 5329 29ba 488D8530 		leaq	-464(%rbp), %rax
 5329      FEFFFF
 5330 29c1 4889D6   		movq	%rdx, %rsi
 5331 29c4 4889C7   		movq	%rax, %rdi
 5332              	.LEHB143:
 5333 29c7 E818FFFF 		call	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperC1ERKN8UnitTest11TestDetailsE
 5333      FF
 5334              	.LEHE143:
 5335              		.loc 3 159 1 is_stmt 0 discriminator 1
 5336 29cc C685FFFD 		movb	$1, -513(%rbp)
 5336      FFFF01
 5337 29d3 488B85E8 		movq	-536(%rbp), %rax
 5337      FDFFFF
 5338 29da 488D5008 		leaq	8(%rax), %rdx
 5339 29de 488D8530 		leaq	-464(%rbp), %rax
 5339      FEFFFF
 5340 29e5 4889D6   		movq	%rdx, %rsi
 5341 29e8 4889C7   		movq	%rax, %rdi
 5342              	.LEHB144:
 5343 29eb E8841900 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperEEEvRT
 5343      00
 5344              	.LEHE144:
 5345              		.loc 3 159 1 discriminator 3
 5346 29f0 488D8530 		leaq	-464(%rbp), %rax
 5346      FEFFFF
 5347 29f7 4889C7   		movq	%rax, %rdi
 5348              	.LEHB145:
 5349 29fa E863FFFF 		call	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperD1Ev
 5349      FF
 5350              	.LEHE145:
 5351              	.LBE88:
 5352              		.loc 3 159 1
 5353 29ff E9840200 		jmp	.L259
 5353      00
 5354              	.L274:
 5355 2a04 F30F1EFA 		endbr64
 5356              	.LBB89:
 5357 2a08 4989C4   		movq	%rax, %r12
 5358 2a0b 4889D3   		movq	%rdx, %rbx
 5359 2a0e 488D8530 		leaq	-464(%rbp), %rax
 5359      FEFFFF
 5360 2a15 4889C7   		movq	%rax, %rdi
 5361 2a18 E845FFFF 		call	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperD1Ev
 5361      FF
 5362 2a1d 4C89E0   		movq	%r12, %rax
 5363 2a20 4889DA   		movq	%rbx, %rdx
 5364 2a23 EB04     		jmp	.L261
 5365              	.L273:
 5366 2a25 F30F1EFA 		endbr64
 5367              	.L261:
 5368              	.LBE89:
 5369 2a29 4883FA01 		cmpq	$1, %rdx
 5370 2a2d 740F     		je	.L262
 5371 2a2f 4883FA02 		cmpq	$2, %rdx
 5372 2a33 0F84A700 		je	.L263
 5372      0000
 5373 2a39 E94D0100 		jmp	.L279
 5373      00
 5374              	.L262:
 5375              	.LBB90:
 5376              		.loc 3 159 1 discriminator 4
 5377 2a3e 4889C7   		movq	%rax, %rdi
 5378 2a41 E8000000 		call	__cxa_begin_catch@PLT
 5378      00
 5379 2a46 48898508 		movq	%rax, -504(%rbp)
 5379      FEFFFF
 5380              	.LEHB146:
 5381 2a4d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5381      00
 5382 2a52 488B18   		movq	(%rax), %rbx
 5383 2a55 488B8508 		movq	-504(%rbp), %rax
 5383      FEFFFF
 5384 2a5c 488B00   		movq	(%rax), %rax
 5385 2a5f 4883C010 		addq	$16, %rax
 5386 2a63 488B10   		movq	(%rax), %rdx
 5387 2a66 488B8508 		movq	-504(%rbp), %rax
 5387      FEFFFF
 5388 2a6d 4889C7   		movq	%rax, %rdi
 5389 2a70 FFD2     		call	*%rdx
 5390              	.LVL14:
 5391 2a72 4989C4   		movq	%rax, %r12
 5392 2a75 488B8508 		movq	-504(%rbp), %rax
 5392      FEFFFF
 5393 2a7c 4889C7   		movq	%rax, %rdi
 5394 2a7f E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 5394      00
 5395              		.loc 3 159 1 discriminator 8
 5396 2a84 4189C5   		movl	%eax, %r13d
 5397 2a87 488B8508 		movq	-504(%rbp), %rax
 5397      FEFFFF
 5398 2a8e 4889C7   		movq	%rax, %rdi
 5399 2a91 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 5399      00
 5400              		.loc 3 159 1 discriminator 10
 5401 2a96 4889C1   		movq	%rax, %rcx
 5402 2a99 488B85E8 		movq	-536(%rbp), %rax
 5402      FDFFFF
 5403 2aa0 488B5008 		movq	8(%rax), %rdx
 5404 2aa4 488B85E8 		movq	-536(%rbp), %rax
 5404      FDFFFF
 5405 2aab 488B7010 		movq	16(%rax), %rsi
 5406 2aaf 488D8510 		leaq	-496(%rbp), %rax
 5406      FEFFFF
 5407 2ab6 4589E8   		movl	%r13d, %r8d
 5408 2ab9 4889C7   		movq	%rax, %rdi
 5409 2abc E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 5409      00
 5410              		.loc 3 159 1 discriminator 14
 5411 2ac1 488D8510 		leaq	-496(%rbp), %rax
 5411      FEFFFF
 5412 2ac8 4C89E2   		movq	%r12, %rdx
 5413 2acb 4889C6   		movq	%rax, %rsi
 5414 2ace 4889DF   		movq	%rbx, %rdi
 5415 2ad1 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5415      00
 5416              	.LEHE146:
 5417              		.loc 3 159 1 discriminator 16
 5418 2ad6 E8000000 		call	__cxa_end_catch@PLT
 5418      00
 5419              	.LBE90:
 5420 2adb E9A80100 		jmp	.L259
 5420      00
 5421              	.L263:
 5422              	.LBB91:
 5423              		.loc 3 159 1 discriminator 5
 5424 2ae0 4889C7   		movq	%rax, %rdi
 5425 2ae3 E8000000 		call	__cxa_begin_catch@PLT
 5425      00
 5426 2ae8 48898500 		movq	%rax, -512(%rbp)
 5426      FEFFFF
 5427              	.LBB92:
 5428 2aef 488D8530 		leaq	-464(%rbp), %rax
 5428      FEFFFF
 5429 2af6 4889C7   		movq	%rax, %rdi
 5430              	.LEHB147:
 5431 2af9 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5431      00
 5432              	.LEHE147:
 5433              		.loc 3 159 1 discriminator 18
 5434 2afe 488D8530 		leaq	-464(%rbp), %rax
 5434      FEFFFF
 5435 2b05 488D1500 		leaq	.LC3(%rip), %rdx
 5435      000000
 5436 2b0c 4889D6   		movq	%rdx, %rsi
 5437 2b0f 4889C7   		movq	%rax, %rdi
 5438              	.LEHB148:
 5439 2b12 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5439      00
 5440 2b17 4889C3   		movq	%rax, %rbx
 5441 2b1a 488B8500 		movq	-512(%rbp), %rax
 5441      FEFFFF
 5442 2b21 488B00   		movq	(%rax), %rax
 5443 2b24 4883C010 		addq	$16, %rax
 5444 2b28 488B10   		movq	(%rax), %rdx
 5445 2b2b 488B8500 		movq	-512(%rbp), %rax
 5445      FEFFFF
 5446 2b32 4889C7   		movq	%rax, %rdi
 5447 2b35 FFD2     		call	*%rdx
 5448              	.LVL15:
 5449 2b37 4889C6   		movq	%rax, %rsi
 5450 2b3a 4889DF   		movq	%rbx, %rdi
 5451 2b3d E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5451      00
 5452              		.loc 3 159 1 discriminator 22
 5453 2b42 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5453      00
 5454 2b47 488B18   		movq	(%rax), %rbx
 5455 2b4a 488D8530 		leaq	-464(%rbp), %rax
 5455      FEFFFF
 5456 2b51 4889C7   		movq	%rax, %rdi
 5457 2b54 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 5457      00
 5458              		.loc 3 159 1 discriminator 24
 5459 2b59 4889C2   		movq	%rax, %rdx
 5460 2b5c 488B85E8 		movq	-536(%rbp), %rax
 5460      FDFFFF
 5461 2b63 4883C008 		addq	$8, %rax
 5462 2b67 4889C6   		movq	%rax, %rsi
 5463 2b6a 4889DF   		movq	%rbx, %rdi
 5464 2b6d E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5464      00
 5465              	.LEHE148:
 5466              		.loc 3 159 1 discriminator 28
 5467 2b72 488D8530 		leaq	-464(%rbp), %rax
 5467      FEFFFF
 5468 2b79 4889C7   		movq	%rax, %rdi
 5469              	.LEHB149:
 5470 2b7c E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5470      00
 5471              	.LEHE149:
 5472              	.LBE92:
 5473              		.loc 3 159 1 discriminator 29
 5474 2b81 E8000000 		call	__cxa_end_catch@PLT
 5474      00
 5475              	.LBE91:
 5476 2b86 E9FD0000 		jmp	.L259
 5476      00
 5477              	.L279:
 5478              		.loc 3 159 1 discriminator 6
 5479 2b8b 4889C7   		movq	%rax, %rdi
 5480 2b8e E8000000 		call	__cxa_begin_catch@PLT
 5480      00
 5481 2b93 80BDFFFD 		cmpb	$0, -513(%rbp)
 5481      FFFF00
 5482 2b9a 7445     		je	.L266
 5483              	.LEHB150:
 5484              		.loc 3 159 1 discriminator 31
 5485 2b9c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5485      00
 5486 2ba1 488B18   		movq	(%rax), %rbx
 5487 2ba4 488B85E8 		movq	-536(%rbp), %rax
 5487      FDFFFF
 5488 2bab 488D4808 		leaq	8(%rax), %rcx
 5489 2baf 488D8510 		leaq	-496(%rbp), %rax
 5489      FEFFFF
 5490 2bb6 BA9F0000 		movl	$159, %edx
 5490      00
 5491 2bbb 4889CE   		movq	%rcx, %rsi
 5492 2bbe 4889C7   		movq	%rax, %rdi
 5493 2bc1 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 5493      00
 5494              		.loc 3 159 1 discriminator 36
 5495 2bc6 488D8510 		leaq	-496(%rbp), %rax
 5495      FEFFFF
 5496 2bcd 488D1500 		leaq	.LC4(%rip), %rdx
 5496      000000
 5497 2bd4 4889C6   		movq	%rax, %rsi
 5498 2bd7 4889DF   		movq	%rbx, %rdi
 5499 2bda E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5499      00
 5500 2bdf EB43     		jmp	.L267
 5501              	.L266:
 5502              		.loc 3 159 1 discriminator 32
 5503 2be1 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5503      00
 5504 2be6 488B18   		movq	(%rax), %rbx
 5505 2be9 488B85E8 		movq	-536(%rbp), %rax
 5505      FDFFFF
 5506 2bf0 488D4808 		leaq	8(%rax), %rcx
 5507 2bf4 488D8510 		leaq	-496(%rbp), %rax
 5507      FEFFFF
 5508 2bfb BA9F0000 		movl	$159, %edx
 5508      00
 5509 2c00 4889CE   		movq	%rcx, %rsi
 5510 2c03 4889C7   		movq	%rax, %rdi
 5511 2c06 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 5511      00
 5512              		.loc 3 159 1 discriminator 43
 5513 2c0b 488D8510 		leaq	-496(%rbp), %rax
 5513      FEFFFF
 5514 2c12 488D1500 		leaq	.LC5(%rip), %rdx
 5514      000000
 5515 2c19 4889C6   		movq	%rax, %rsi
 5516 2c1c 4889DF   		movq	%rbx, %rdi
 5517 2c1f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5517      00
 5518              	.LEHE150:
 5519              	.L267:
 5520              	.LEHB151:
 5521              		.loc 3 159 1 discriminator 46
 5522 2c24 E8000000 		call	__cxa_end_catch@PLT
 5522      00
 5523 2c29 EB5D     		jmp	.L259
 5524              	.L275:
 5525 2c2b F30F1EFA 		endbr64
 5526              	.LBB94:
 5527              		.loc 3 159 1
 5528 2c2f 4889C3   		movq	%rax, %rbx
 5529 2c32 E8000000 		call	__cxa_end_catch@PLT
 5529      00
 5530 2c37 4889D8   		movq	%rbx, %rax
 5531 2c3a 4889C7   		movq	%rax, %rdi
 5532 2c3d E8000000 		call	_Unwind_Resume@PLT
 5532      00
 5533              	.LEHE151:
 5534              	.L277:
 5535 2c42 F30F1EFA 		endbr64
 5536              	.LBE94:
 5537              	.LBB95:
 5538              	.LBB93:
 5539 2c46 4889C3   		movq	%rax, %rbx
 5540 2c49 488D8530 		leaq	-464(%rbp), %rax
 5540      FEFFFF
 5541 2c50 4889C7   		movq	%rax, %rdi
 5542 2c53 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5542      00
 5543 2c58 EB07     		jmp	.L270
 5544              	.L276:
 5545 2c5a F30F1EFA 		endbr64
 5546              	.LBE93:
 5547 2c5e 4889C3   		movq	%rax, %rbx
 5548              	.L270:
 5549 2c61 E8000000 		call	__cxa_end_catch@PLT
 5549      00
 5550 2c66 4889D8   		movq	%rbx, %rax
 5551 2c69 4889C7   		movq	%rax, %rdi
 5552              	.LEHB152:
 5553 2c6c E8000000 		call	_Unwind_Resume@PLT
 5553      00
 5554              	.LEHE152:
 5555              	.L278:
 5556 2c71 F30F1EFA 		endbr64
 5557              	.LBE95:
 5558 2c75 4889C3   		movq	%rax, %rbx
 5559 2c78 E8000000 		call	__cxa_end_catch@PLT
 5559      00
 5560 2c7d 4889D8   		movq	%rbx, %rax
 5561 2c80 4889C7   		movq	%rax, %rdi
 5562              	.LEHB153:
 5563 2c83 E8000000 		call	_Unwind_Resume@PLT
 5563      00
 5564              	.LEHE153:
 5565              	.L259:
 5566 2c88 488B45D8 		movq	-40(%rbp), %rax
 5567 2c8c 64482B04 		subq	%fs:40, %rax
 5567      25280000 
 5567      00
 5568 2c95 7405     		je	.L272
 5569 2c97 E8000000 		call	__stack_chk_fail@PLT
 5569      00
 5570              	.L272:
 5571 2c9c 4881C408 		addq	$520, %rsp
 5571      020000
 5572 2ca3 5B       		popq	%rbx
 5573 2ca4 415C     		popq	%r12
 5574 2ca6 415D     		popq	%r13
 5575 2ca8 5D       		popq	%rbp
 5576              		.cfi_def_cfa 7, 8
 5577 2ca9 C3       		ret
 5578              		.cfi_endproc
 5579              	.LFE1494:
 5580              		.section	.gcc_except_table
 5581              		.align 4
 5582              	.LLSDA1494:
 5583 041c FF       		.byte	0xff
 5584 041d 9B       		.byte	0x9b
 5585 041e 55       		.uleb128 .LLSDATT1494-.LLSDATTD1494
 5586              	.LLSDATTD1494:
 5587 041f 01       		.byte	0x1
 5588 0420 3E       		.uleb128 .LLSDACSE1494-.LLSDACSB1494
 5589              	.LLSDACSB1494:
 5590 0421 49       		.uleb128 .LEHB143-.LFB1494
 5591 0422 05       		.uleb128 .LEHE143-.LEHB143
 5592 0423 A701     		.uleb128 .L273-.LFB1494
 5593 0425 05       		.uleb128 0x5
 5594 0426 6D       		.uleb128 .LEHB144-.LFB1494
 5595 0427 05       		.uleb128 .LEHE144-.LEHB144
 5596 0428 8601     		.uleb128 .L274-.LFB1494
 5597 042a 07       		.uleb128 0x7
 5598 042b 7C       		.uleb128 .LEHB145-.LFB1494
 5599 042c 05       		.uleb128 .LEHE145-.LEHB145
 5600 042d A701     		.uleb128 .L273-.LFB1494
 5601 042f 05       		.uleb128 0x5
 5602 0430 CF01     		.uleb128 .LEHB146-.LFB1494
 5603 0432 8901     		.uleb128 .LEHE146-.LEHB146
 5604 0434 AD05     		.uleb128 .L275-.LFB1494
 5605 0436 00       		.uleb128 0
 5606 0437 FB02     		.uleb128 .LEHB147-.LFB1494
 5607 0439 05       		.uleb128 .LEHE147-.LEHB147
 5608 043a DC05     		.uleb128 .L276-.LFB1494
 5609 043c 00       		.uleb128 0
 5610 043d 9403     		.uleb128 .LEHB148-.LFB1494
 5611 043f 60       		.uleb128 .LEHE148-.LEHB148
 5612 0440 C405     		.uleb128 .L277-.LFB1494
 5613 0442 00       		.uleb128 0
 5614 0443 FE03     		.uleb128 .LEHB149-.LFB1494
 5615 0445 05       		.uleb128 .LEHE149-.LEHB149
 5616 0446 DC05     		.uleb128 .L276-.LFB1494
 5617 0448 00       		.uleb128 0
 5618 0449 9E04     		.uleb128 .LEHB150-.LFB1494
 5619 044b 8801     		.uleb128 .LEHE150-.LEHB150
 5620 044d F305     		.uleb128 .L278-.LFB1494
 5621 044f 00       		.uleb128 0
 5622 0450 A605     		.uleb128 .LEHB151-.LFB1494
 5623 0452 1E       		.uleb128 .LEHE151-.LEHB151
 5624 0453 00       		.uleb128 0
 5625 0454 00       		.uleb128 0
 5626 0455 EE05     		.uleb128 .LEHB152-.LFB1494
 5627 0457 05       		.uleb128 .LEHE152-.LEHB152
 5628 0458 00       		.uleb128 0
 5629 0459 00       		.uleb128 0
 5630 045a 8506     		.uleb128 .LEHB153-.LFB1494
 5631 045c 05       		.uleb128 .LEHE153-.LEHB153
 5632 045d 00       		.uleb128 0
 5633 045e 00       		.uleb128 0
 5634              	.LLSDACSE1494:
 5635 045f 03       		.byte	0x3
 5636 0460 00       		.byte	0
 5637 0461 02       		.byte	0x2
 5638 0462 7D       		.byte	0x7d
 5639 0463 01       		.byte	0x1
 5640 0464 7D       		.byte	0x7d
 5641 0465 00       		.byte	0
 5642 0466 7D       		.byte	0x7d
 5643 0467 00       		.align 4
 5644 0468 00000000 		.long	0
 5645              	
 5646 046c 00000000 		.long	DW.ref._ZTISt9exception-.
 5647 0470 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 5648              	.LLSDATT1494:
 5649              		.text
 5651              		.section	.rodata
 5652              	.LC41:
 5653 07fe 65787065 		.string	"expected one but was two"
 5653      63746564 
 5653      206F6E65 
 5653      20627574 
 5653      20776173 
 5654 0817 00       		.align 8
 5655              	.LC42:
 5656 0818 3C3F786D 		.ascii	"<?xml version=\"1.0\""
 5656      6C207665 
 5656      7273696F 
 5656      6E3D2231 
 5656      2E3022
 5657 082b 3F3E3C75 		.string	"?><unittest-results tests=\"1\" failedtests=\"1\" failures=\"2\" time=\"1.1\"><test suite
 5657      6E697474 
 5657      6573742D 
 5657      72657375 
 5657      6C747320 
 5658              		.text
 5659              		.align 2
 5661              	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelper7RunImplEv:
 5662              	.LFB1498:
 160:TestXmlTestReporter.cpp **** {
 5663              		.loc 3 160 1 is_stmt 1
 5664              		.cfi_startproc
 5665              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 5666              		.cfi_lsda 0x1b,.LLSDA1498
 5667 2caa F30F1EFA 		endbr64
 5668 2cae 55       		pushq	%rbp
 5669              		.cfi_def_cfa_offset 16
 5670              		.cfi_offset 6, -16
 5671 2caf 4889E5   		movq	%rsp, %rbp
 5672              		.cfi_def_cfa_register 6
 5673 2cb2 53       		pushq	%rbx
 5674 2cb3 4881ECB8 		subq	$184, %rsp
 5674      000000
 5675              		.cfi_offset 3, -24
 5676 2cba 4889BD48 		movq	%rdi, -184(%rbp)
 5676      FFFFFF
 5677              		.loc 3 160 1
 5678 2cc1 64488B04 		movq	%fs:40, %rax
 5678      25280000 
 5678      00
 5679 2cca 488945E8 		movq	%rax, -24(%rbp)
 5680 2cce 31C0     		xorl	%eax, %eax
 161:TestXmlTestReporter.cpp ****     TestDetails const failedDetails1("FailedTest", "suite", "fail.h", 1);
 5681              		.loc 3 161 72
 5682 2cd0 488D8560 		leaq	-160(%rbp), %rax
 5682      FFFFFF
 5683 2cd7 41B80100 		movl	$1, %r8d
 5683      0000
 5684 2cdd 488D1500 		leaq	.LC34(%rip), %rdx
 5684      000000
 5685 2ce4 4889D1   		movq	%rdx, %rcx
 5686 2ce7 488D1500 		leaq	.LC7(%rip), %rdx
 5686      000000
 5687 2cee 488D3500 		leaq	.LC35(%rip), %rsi
 5687      000000
 5688 2cf5 4889C7   		movq	%rax, %rdi
 5689              	.LEHB154:
 5690 2cf8 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 5690      00
 162:TestXmlTestReporter.cpp ****     TestDetails const failedDetails2("FailedTest", "suite", "fail.h", 31);
 5691              		.loc 3 162 73
 5692 2cfd 488D4580 		leaq	-128(%rbp), %rax
 5693 2d01 41B81F00 		movl	$31, %r8d
 5693      0000
 5694 2d07 488D1500 		leaq	.LC34(%rip), %rdx
 5694      000000
 5695 2d0e 4889D1   		movq	%rdx, %rcx
 5696 2d11 488D1500 		leaq	.LC7(%rip), %rdx
 5696      000000
 5697 2d18 488D3500 		leaq	.LC35(%rip), %rsi
 5697      000000
 5698 2d1f 4889C7   		movq	%rax, %rdi
 5699 2d22 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 5699      00
 163:TestXmlTestReporter.cpp **** 
 164:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(failedDetails1);
 5700              		.loc 3 164 29
 5701 2d27 488B8548 		movq	-184(%rbp), %rax
 5701      FFFFFF
 5702 2d2e 488D9078 		leaq	376(%rax), %rdx
 5702      010000
 5703 2d35 488D8560 		leaq	-160(%rbp), %rax
 5703      FFFFFF
 5704 2d3c 4889C6   		movq	%rax, %rsi
 5705 2d3f 4889D7   		movq	%rdx, %rdi
 5706 2d42 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE@PLT
 5706      00
 165:TestXmlTestReporter.cpp ****     reporter.ReportFailure(failedDetails1, "expected 1 but was 2");
 5707              		.loc 3 165 27
 5708 2d47 488B8548 		movq	-184(%rbp), %rax
 5708      FFFFFF
 5709 2d4e 488D8878 		leaq	376(%rax), %rcx
 5709      010000
 5710 2d55 488D8560 		leaq	-160(%rbp), %rax
 5710      FFFFFF
 5711 2d5c 488D1500 		leaq	.LC36(%rip), %rdx
 5711      000000
 5712 2d63 4889C6   		movq	%rax, %rsi
 5713 2d66 4889CF   		movq	%rcx, %rdi
 5714 2d69 E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc@PLT
 5714      00
 166:TestXmlTestReporter.cpp ****     reporter.ReportFailure(failedDetails2, "expected one but was two");
 5715              		.loc 3 166 27
 5716 2d6e 488B8548 		movq	-184(%rbp), %rax
 5716      FFFFFF
 5717 2d75 488D8878 		leaq	376(%rax), %rcx
 5717      010000
 5718 2d7c 488D4580 		leaq	-128(%rbp), %rax
 5719 2d80 488D1500 		leaq	.LC41(%rip), %rdx
 5719      000000
 5720 2d87 4889C6   		movq	%rax, %rsi
 5721 2d8a 4889CF   		movq	%rcx, %rdi
 5722 2d8d E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc@PLT
 5722      00
 167:TestXmlTestReporter.cpp ****     reporter.ReportTestFinish(failedDetails1, 0.1f);
 5723              		.loc 3 167 30
 5724 2d92 488B8548 		movq	-184(%rbp), %rax
 5724      FFFFFF
 5725 2d99 488D8878 		leaq	376(%rax), %rcx
 5725      010000
 5726 2da0 488D8560 		leaq	-160(%rbp), %rax
 5726      FFFFFF
 5727 2da7 8B150000 		movl	.LC10(%rip), %edx
 5727      0000
 5728 2dad 660F6EC2 		movd	%edx, %xmm0
 5729 2db1 4889C6   		movq	%rax, %rsi
 5730 2db4 4889CF   		movq	%rcx, %rdi
 5731 2db7 E8000000 		call	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf@PLT
 5731      00
 168:TestXmlTestReporter.cpp **** 
 169:TestXmlTestReporter.cpp ****     reporter.ReportSummary(1, 1, 2, 1.1f);
 5732              		.loc 3 169 27
 5733 2dbc 488B8548 		movq	-184(%rbp), %rax
 5733      FFFFFF
 5734 2dc3 488DB878 		leaq	376(%rax), %rdi
 5734      010000
 5735 2dca 8B050000 		movl	.LC38(%rip), %eax
 5735      0000
 5736 2dd0 660F6EC0 		movd	%eax, %xmm0
 5737 2dd4 B9020000 		movl	$2, %ecx
 5737      00
 5738 2dd9 BA010000 		movl	$1, %edx
 5738      00
 5739 2dde BE010000 		movl	$1, %esi
 5739      00
 5740 2de3 E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif@PLT
 5740      00
 5741              	.LEHE154:
 170:TestXmlTestReporter.cpp **** 
 171:TestXmlTestReporter.cpp ****     char const* expected =
 5742              		.loc 3 171 17
 5743 2de8 488D0500 		leaq	.LC42(%rip), %rax
 5743      000000
 5744 2def 48898558 		movq	%rax, -168(%rbp)
 5744      FFFFFF
 5745              	.LEHB155:
 172:TestXmlTestReporter.cpp ****         "<?xml version=\"1.0\"?>"
 173:TestXmlTestReporter.cpp ****         "<unittest-results tests=\"1\" failedtests=\"1\" failures=\"2\" time=\"1.1\">"
 174:TestXmlTestReporter.cpp ****         "<test suite=\"suite\" name=\"FailedTest\" time=\"0.1\">"
 175:TestXmlTestReporter.cpp ****         "<failure message=\"fail.h(1) : expected 1 but was 2\"/>"
 176:TestXmlTestReporter.cpp ****         "<failure message=\"fail.h(31) : expected one but was two\"/>"
 177:TestXmlTestReporter.cpp ****         "</test>"
 178:TestXmlTestReporter.cpp ****         "</unittest-results>";
 179:TestXmlTestReporter.cpp **** 
 180:TestXmlTestReporter.cpp ****     CHECK_EQUAL(expected, output.str());
 5746              		.loc 3 180 5
 5747 2df6 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 5747      00
 5748 2dfb 488B08   		movq	(%rax), %rcx
 5749 2dfe 488D45A0 		leaq	-96(%rbp), %rax
 5750 2e02 BAB40000 		movl	$180, %edx
 5750      00
 5751 2e07 4889CE   		movq	%rcx, %rsi
 5752 2e0a 4889C7   		movq	%rax, %rdi
 5753 2e0d E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 5753      00
 5754              		.loc 3 180 5 is_stmt 0 discriminator 4
 5755 2e12 488B9548 		movq	-184(%rbp), %rdx
 5755      FFFFFF
 5756 2e19 488D45C0 		leaq	-64(%rbp), %rax
 5757 2e1d 4889D6   		movq	%rdx, %rsi
 5758 2e20 4889C7   		movq	%rax, %rdi
 5759 2e23 E8000000 		call	_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv@PLT
 5759      00
 5760              	.LEHE155:
 5761              	.LEHB156:
 5762              		.loc 3 180 5 discriminator 6
 5763 2e28 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5763      00
 5764 2e2d 488B00   		movq	(%rax), %rax
 5765 2e30 488D4DA0 		leaq	-96(%rbp), %rcx
 5766 2e34 488D55C0 		leaq	-64(%rbp), %rdx
 5767 2e38 488DB558 		leaq	-168(%rbp), %rsi
 5767      FFFFFF
 5768 2e3f 4889C7   		movq	%rax, %rdi
 5769 2e42 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 5769      00
 5770              	.LEHE156:
 5771              		.loc 3 180 5 discriminator 10
 5772 2e47 488D45C0 		leaq	-64(%rbp), %rax
 5773 2e4b 4889C7   		movq	%rax, %rdi
 5774              	.LEHB157:
 5775 2e4e E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 5775      00
 5776              	.LEHE157:
 181:TestXmlTestReporter.cpp **** }
 5777              		.loc 3 181 1 is_stmt 1
 5778 2e53 EB7C     		jmp	.L280
 5779              	.L287:
 5780 2e55 F30F1EFA 		endbr64
 180:TestXmlTestReporter.cpp **** }
 5781              		.loc 3 180 5
 5782 2e59 4889C3   		movq	%rax, %rbx
 5783 2e5c 488D45C0 		leaq	-64(%rbp), %rax
 5784 2e60 4889C7   		movq	%rax, %rdi
 5785 2e63 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 5785      00
 5786 2e68 4889D8   		movq	%rbx, %rax
 5787 2e6b EB04     		jmp	.L282
 5788              	.L286:
 5789 2e6d F30F1EFA 		endbr64
 5790              	.L282:
 180:TestXmlTestReporter.cpp **** }
 5791              		.loc 3 180 5 is_stmt 0 discriminator 3
 5792 2e71 4889C7   		movq	%rax, %rdi
 5793 2e74 E8000000 		call	__cxa_begin_catch@PLT
 5793      00
 5794              	.LEHB158:
 5795 2e79 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5795      00
 5796 2e7e 488B18   		movq	(%rax), %rbx
 5797 2e81 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 5797      00
 180:TestXmlTestReporter.cpp **** }
 5798              		.loc 3 180 5 discriminator 15
 5799 2e86 488B08   		movq	(%rax), %rcx
 5800 2e89 488D45A0 		leaq	-96(%rbp), %rax
 5801 2e8d BAB40000 		movl	$180, %edx
 5801      00
 5802 2e92 4889CE   		movq	%rcx, %rsi
 5803 2e95 4889C7   		movq	%rax, %rdi
 5804 2e98 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 5804      00
 180:TestXmlTestReporter.cpp **** }
 5805              		.loc 3 180 5 discriminator 19
 5806 2e9d 488D45A0 		leaq	-96(%rbp), %rax
 5807 2ea1 488D1500 		leaq	.LC12(%rip), %rdx
 5807      000000
 5808 2ea8 4889C6   		movq	%rax, %rsi
 5809 2eab 4889DF   		movq	%rbx, %rdi
 5810 2eae E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5810      00
 5811              	.LEHE158:
 5812              	.LEHB159:
 180:TestXmlTestReporter.cpp **** }
 5813              		.loc 3 180 5 discriminator 21
 5814 2eb3 E8000000 		call	__cxa_end_catch@PLT
 5814      00
 5815              	.LEHE159:
 5816              		.loc 3 181 1 is_stmt 1 discriminator 21
 5817 2eb8 EB17     		jmp	.L280
 5818              	.L288:
 5819 2eba F30F1EFA 		endbr64
 180:TestXmlTestReporter.cpp **** }
 5820              		.loc 3 180 5
 5821 2ebe 4889C3   		movq	%rax, %rbx
 5822 2ec1 E8000000 		call	__cxa_end_catch@PLT
 5822      00
 5823 2ec6 4889D8   		movq	%rbx, %rax
 5824 2ec9 4889C7   		movq	%rax, %rdi
 5825              	.LEHB160:
 5826 2ecc E8000000 		call	_Unwind_Resume@PLT
 5826      00
 5827              	.LEHE160:
 5828              	.L280:
 5829              		.loc 3 181 1
 5830 2ed1 488B45E8 		movq	-24(%rbp), %rax
 5831 2ed5 64482B04 		subq	%fs:40, %rax
 5831      25280000 
 5831      00
 5832 2ede 7405     		je	.L285
 5833 2ee0 E8000000 		call	__stack_chk_fail@PLT
 5833      00
 5834              	.L285:
 5835 2ee5 488B5DF8 		movq	-8(%rbp), %rbx
 5836 2ee9 C9       		leave
 5837              		.cfi_def_cfa 7, 8
 5838 2eea C3       		ret
 5839              		.cfi_endproc
 5840              	.LFE1498:
 5841              		.section	.gcc_except_table
 5842              		.align 4
 5843              	.LLSDA1498:
 5844 0474 FF       		.byte	0xff
 5845 0475 9B       		.byte	0x9b
 5846 0476 31       		.uleb128 .LLSDATT1498-.LLSDATTD1498
 5847              	.LLSDATTD1498:
 5848 0477 01       		.byte	0x1
 5849 0478 27       		.uleb128 .LLSDACSE1498-.LLSDACSB1498
 5850              	.LLSDACSB1498:
 5851 0479 4E       		.uleb128 .LEHB154-.LFB1498
 5852 047a F001     		.uleb128 .LEHE154-.LEHB154
 5853 047c 00       		.uleb128 0
 5854 047d 00       		.uleb128 0
 5855 047e CC02     		.uleb128 .LEHB155-.LFB1498
 5856 0480 32       		.uleb128 .LEHE155-.LEHB155
 5857 0481 C303     		.uleb128 .L286-.LFB1498
 5858 0483 01       		.uleb128 0x1
 5859 0484 FE02     		.uleb128 .LEHB156-.LFB1498
 5860 0486 1F       		.uleb128 .LEHE156-.LEHB156
 5861 0487 AB03     		.uleb128 .L287-.LFB1498
 5862 0489 03       		.uleb128 0x3
 5863 048a A403     		.uleb128 .LEHB157-.LFB1498
 5864 048c 05       		.uleb128 .LEHE157-.LEHB157
 5865 048d C303     		.uleb128 .L286-.LFB1498
 5866 048f 01       		.uleb128 0x1
 5867 0490 CF03     		.uleb128 .LEHB158-.LFB1498
 5868 0492 3A       		.uleb128 .LEHE158-.LEHB158
 5869 0493 9004     		.uleb128 .L288-.LFB1498
 5870 0495 00       		.uleb128 0
 5871 0496 8904     		.uleb128 .LEHB159-.LFB1498
 5872 0498 05       		.uleb128 .LEHE159-.LEHB159
 5873 0499 00       		.uleb128 0
 5874 049a 00       		.uleb128 0
 5875 049b A204     		.uleb128 .LEHB160-.LFB1498
 5876 049d 05       		.uleb128 .LEHE160-.LEHB160
 5877 049e 00       		.uleb128 0
 5878 049f 00       		.uleb128 0
 5879              	.LLSDACSE1498:
 5880 04a0 01       		.byte	0x1
 5881 04a1 00       		.byte	0
 5882 04a2 00       		.byte	0
 5883 04a3 7D       		.byte	0x7d
 5884              		.align 4
 5885 04a4 00000000 		.long	0
 5886              	
 5887              	.LLSDATT1498:
 5888              		.text
 5890              		.section	.rodata
 5891              	.LC43:
 5892 092c 556E6861 		.string	"Unhandled system exception"
 5892      6E646C65 
 5892      64207379 
 5892      7374656D 
 5892      20657863 
 5893              	.LC44:
 5894 0947 556E6861 		.string	"Unhandled exception: Crash!"
 5894      6E646C65 
 5894      64206578 
 5894      63657074 
 5894      696F6E3A 
 5895              		.text
 5897              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelper
 5898              	.LFB1526:
 5899              		.file 4 "../ExecuteTest.h"
   1:../ExecuteTest.h **** #ifndef UNITTEST_EXECUTE_TEST_H
   2:../ExecuteTest.h **** #define UNITTEST_EXECUTE_TEST_H
   3:../ExecuteTest.h **** 
   4:../ExecuteTest.h **** #include "TestDetails.h"
   5:../ExecuteTest.h **** #include "MemoryOutStream.h"
   6:../ExecuteTest.h **** #include "AssertException.h"
   7:../ExecuteTest.h **** #include "CurrentTest.h"
   8:../ExecuteTest.h **** 
   9:../ExecuteTest.h **** #ifdef UNITTEST_POSIX
  10:../ExecuteTest.h **** 	#include "PosixUtils/SignalTranslator.h"
  11:../ExecuteTest.h **** #endif
  12:../ExecuteTest.h **** 
  13:../ExecuteTest.h **** namespace UnitTest {
  14:../ExecuteTest.h **** 
  15:../ExecuteTest.h **** template< typename T >
  16:../ExecuteTest.h **** void ExecuteTest(T& testObject, TestDetails const& details)
 5900              		.loc 4 16 6
 5901              		.cfi_startproc
 5902              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 5903              		.cfi_lsda 0x1b,.LLSDA1526
 5904 2eeb F30F1EFA 		endbr64
 5905 2eef 55       		pushq	%rbp
 5906              		.cfi_def_cfa_offset 16
 5907              		.cfi_offset 6, -16
 5908 2ef0 4889E5   		movq	%rsp, %rbp
 5909              		.cfi_def_cfa_register 6
 5910 2ef3 4155     		pushq	%r13
 5911 2ef5 4154     		pushq	%r12
 5912 2ef7 53       		pushq	%rbx
 5913 2ef8 4881EC58 		subq	$1624, %rsp
 5913      060000
 5914              		.cfi_offset 13, -24
 5915              		.cfi_offset 12, -32
 5916              		.cfi_offset 3, -40
 5917 2eff 4889BD98 		movq	%rdi, -1640(%rbp)
 5917      F9FFFF
 5918 2f06 4889B590 		movq	%rsi, -1648(%rbp)
 5918      F9FFFF
 5919              		.loc 4 16 6
 5920 2f0d 64488B04 		movq	%fs:40, %rax
 5920      25280000 
 5920      00
 5921 2f16 488945D8 		movq	%rax, -40(%rbp)
 5922 2f1a 31C0     		xorl	%eax, %eax
 5923              	.LEHB161:
  17:../ExecuteTest.h **** {
  18:../ExecuteTest.h **** 	CurrentTest::Details() = &details;
 5924              		.loc 4 18 22
 5925 2f1c E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 5925      00
 5926              	.LEHE161:
 5927              		.loc 4 18 25
 5928 2f21 488B9590 		movq	-1648(%rbp), %rdx
 5928      F9FFFF
 5929 2f28 488910   		movq	%rdx, (%rax)
 5930              	.LBB96:
  19:../ExecuteTest.h **** 
  20:../ExecuteTest.h **** 	try
  21:../ExecuteTest.h **** 	{
  22:../ExecuteTest.h **** #ifdef UNITTEST_POSIX
  23:../ExecuteTest.h **** 		UNITTEST_THROW_SIGNALS
 5931              		.loc 4 23 3
 5932 2f2b 488D8570 		leaq	-1168(%rbp), %rax
 5932      FBFFFF
 5933 2f32 4889C7   		movq	%rax, %rdi
 5934              	.LEHB162:
 5935 2f35 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev@PLT
 5935      00
 5936              	.LEHE162:
 5937              		.loc 4 23 3 is_stmt 0 discriminator 1
 5938 2f3a 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 5938      000000
 5939 2f41 BE010000 		movl	$1, %esi
 5939      00
 5940 2f46 4889C7   		movq	%rax, %rdi
 5941 2f49 E8000000 		call	__sigsetjmp@PLT
 5941      00
 5942 2f4e F30F1EFA 		endbr64
 5943 2f52 85C0     		testl	%eax, %eax
 5944 2f54 0F95C0   		setne	%al
 5945 2f57 84C0     		testb	%al, %al
 5946 2f59 742B     		je	.L291
 5947              		.loc 4 23 3 discriminator 4
 5948 2f5b BF080000 		movl	$8, %edi
 5948      00
 5949 2f60 E8000000 		call	__cxa_allocate_exception@PLT
 5949      00
 5950 2f65 488D1500 		leaq	.LC43(%rip), %rdx
 5950      000000
 5951 2f6c 488910   		movq	%rdx, (%rax)
 5952 2f6f BA000000 		movl	$0, %edx
 5952      00
 5953 2f74 488D0D00 		leaq	_ZTIPKc(%rip), %rcx
 5953      000000
 5954 2f7b 4889CE   		movq	%rcx, %rsi
 5955 2f7e 4889C7   		movq	%rax, %rdi
 5956              	.LEHB163:
 5957 2f81 E8000000 		call	__cxa_throw@PLT
 5957      00
 5958              	.L291:
  24:../ExecuteTest.h **** #endif
  25:../ExecuteTest.h **** 		testObject.RunImpl();
 5959              		.loc 4 25 21 is_stmt 1
 5960 2f86 488B8598 		movq	-1640(%rbp), %rax
 5960      F9FFFF
 5961 2f8d 4889C7   		movq	%rax, %rdi
 5962 2f90 E8DDD4FF 		call	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelper7RunImplEv
 5962      FF
 5963              	.LEHE163:
  26:../ExecuteTest.h **** 	}
 5964              		.loc 4 26 2
 5965 2f95 488D8570 		leaq	-1168(%rbp), %rax
 5965      FBFFFF
 5966 2f9c 4889C7   		movq	%rax, %rdi
 5967              	.LEHB164:
 5968 2f9f E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 5968      00
 5969              	.LEHE164:
 5970              	.LBE96:
  27:../ExecuteTest.h **** 	catch (AssertException const& e)
  28:../ExecuteTest.h **** 	{
  29:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(
  30:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
  31:../ExecuteTest.h **** 	}
  32:../ExecuteTest.h **** 	catch (std::exception const& e)
  33:../ExecuteTest.h **** 	{
  34:../ExecuteTest.h **** 		MemoryOutStream stream;
  35:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
  36:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
  37:../ExecuteTest.h **** 	}
  38:../ExecuteTest.h **** 	catch (...)
  39:../ExecuteTest.h **** 	{
  40:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, "Unhandled exception: Crash!");
  41:../ExecuteTest.h **** 	}
  42:../ExecuteTest.h **** }
 5971              		.loc 4 42 1
 5972 2fa4 E90F0200 		jmp	.L289
 5972      00
 5973              	.L304:
 5974 2fa9 F30F1EFA 		endbr64
 5975              	.LBB97:
  26:../ExecuteTest.h **** 	}
 5976              		.loc 4 26 2
 5977 2fad 4989C4   		movq	%rax, %r12
 5978 2fb0 4889D3   		movq	%rdx, %rbx
 5979 2fb3 488D8570 		leaq	-1168(%rbp), %rax
 5979      FBFFFF
 5980 2fba 4889C7   		movq	%rax, %rdi
 5981 2fbd E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 5981      00
 5982 2fc2 4C89E0   		movq	%r12, %rax
 5983 2fc5 4889DA   		movq	%rbx, %rdx
 5984 2fc8 EB04     		jmp	.L293
 5985              	.L303:
 5986 2fca F30F1EFA 		endbr64
 5987              	.L293:
 5988              	.LBE97:
  27:../ExecuteTest.h **** 	catch (AssertException const& e)
 5989              		.loc 4 27 2
 5990 2fce 4883FA01 		cmpq	$1, %rdx
 5991 2fd2 740F     		je	.L294
 5992 2fd4 4883FA02 		cmpq	$2, %rdx
 5993 2fd8 0F84A600 		je	.L295
 5993      0000
 5994 2fde E9480100 		jmp	.L309
 5994      00
 5995              	.L294:
 5996              	.LBB98:
  27:../ExecuteTest.h **** 	catch (AssertException const& e)
 5997              		.loc 4 27 2 is_stmt 0 discriminator 1
 5998 2fe3 4889C7   		movq	%rax, %rdi
 5999 2fe6 E8000000 		call	__cxa_begin_catch@PLT
 5999      00
  27:../ExecuteTest.h **** 	catch (AssertException const& e)
 6000              		.loc 4 27 32 is_stmt 1 discriminator 1
 6001 2feb 488985A8 		movq	%rax, -1624(%rbp)
 6001      F9FFFF
 6002              	.LEHB165:
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6003              		.loc 4 29 23 discriminator 1
 6004 2ff2 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 6004      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6005              		.loc 4 29 40 discriminator 2
 6006 2ff7 488B18   		movq	(%rax), %rbx
  30:../ExecuteTest.h **** 	}
 6007              		.loc 4 30 90 discriminator 2
 6008 2ffa 488B85A8 		movq	-1624(%rbp), %rax
 6008      F9FFFF
 6009 3001 488B00   		movq	(%rax), %rax
 6010 3004 4883C010 		addq	$16, %rax
 6011 3008 488B10   		movq	(%rax), %rdx
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6012              		.loc 4 29 40 discriminator 2
 6013 300b 488B85A8 		movq	-1624(%rbp), %rax
 6013      F9FFFF
 6014 3012 4889C7   		movq	%rax, %rdi
 6015 3015 FFD2     		call	*%rdx
 6016              	.LVL16:
 6017 3017 4989C4   		movq	%rax, %r12
  30:../ExecuteTest.h **** 	}
 6018              		.loc 4 30 4 discriminator 2
 6019 301a 488B85A8 		movq	-1624(%rbp), %rax
 6019      F9FFFF
 6020 3021 4889C7   		movq	%rax, %rdi
 6021 3024 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 6021      00
 6022 3029 4189C5   		movl	%eax, %r13d
 6023 302c 488B85A8 		movq	-1624(%rbp), %rax
 6023      F9FFFF
 6024 3033 4889C7   		movq	%rax, %rdi
 6025 3036 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 6025      00
  30:../ExecuteTest.h **** 	}
 6026              		.loc 4 30 4 is_stmt 0 discriminator 1
 6027 303b 4889C1   		movq	%rax, %rcx
  30:../ExecuteTest.h **** 	}
 6028              		.loc 4 30 42 is_stmt 1 discriminator 1
 6029 303e 488B8590 		movq	-1648(%rbp), %rax
 6029      F9FFFF
 6030 3045 488B10   		movq	(%rax), %rdx
  30:../ExecuteTest.h **** 	}
 6031              		.loc 4 30 24 discriminator 1
 6032 3048 488B8590 		movq	-1648(%rbp), %rax
 6032      F9FFFF
 6033 304f 488B7008 		movq	8(%rax), %rsi
  30:../ExecuteTest.h **** 	}
 6034              		.loc 4 30 4 discriminator 1
 6035 3053 488D85B0 		leaq	-1616(%rbp), %rax
 6035      F9FFFF
 6036 305a 4589E8   		movl	%r13d, %r8d
 6037 305d 4889C7   		movq	%rax, %rdi
 6038 3060 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 6038      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6039              		.loc 4 29 40
 6040 3065 488D85B0 		leaq	-1616(%rbp), %rax
 6040      F9FFFF
 6041 306c 4C89E2   		movq	%r12, %rdx
 6042 306f 4889C6   		movq	%rax, %rsi
 6043 3072 4889DF   		movq	%rbx, %rdi
 6044 3075 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6044      00
 6045              	.LEHE165:
  27:../ExecuteTest.h **** 	catch (AssertException const& e)
 6046              		.loc 4 27 2
 6047 307a E8000000 		call	__cxa_end_catch@PLT
 6047      00
 6048              	.LBE98:
 6049              		.loc 4 42 1
 6050 307f E9340100 		jmp	.L289
 6050      00
 6051              	.L295:
 6052              	.LBB99:
  32:../ExecuteTest.h **** 	{
 6053              		.loc 4 32 2
 6054 3084 4889C7   		movq	%rax, %rdi
 6055 3087 E8000000 		call	__cxa_begin_catch@PLT
 6055      00
  32:../ExecuteTest.h **** 	{
 6056              		.loc 4 32 31
 6057 308c 488985A0 		movq	%rax, -1632(%rbp)
 6057      F9FFFF
 6058              	.LBB100:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6059              		.loc 4 34 19
 6060 3093 488D85D0 		leaq	-1584(%rbp), %rax
 6060      F9FFFF
 6061 309a 4889C7   		movq	%rax, %rdi
 6062              	.LEHB166:
 6063 309d E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6063      00
 6064              	.LEHE166:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6065              		.loc 4 35 37
 6066 30a2 488D85D0 		leaq	-1584(%rbp), %rax
 6066      F9FFFF
 6067 30a9 488D1500 		leaq	.LC3(%rip), %rdx
 6067      000000
 6068 30b0 4889D6   		movq	%rdx, %rsi
 6069 30b3 4889C7   		movq	%rax, %rdi
 6070              	.LEHB167:
 6071 30b6 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6071      00
 6072 30bb 4889C3   		movq	%rax, %rbx
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6073              		.loc 4 35 46
 6074 30be 488B85A0 		movq	-1632(%rbp), %rax
 6074      F9FFFF
 6075 30c5 488B00   		movq	(%rax), %rax
 6076 30c8 4883C010 		addq	$16, %rax
 6077 30cc 488B10   		movq	(%rax), %rdx
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6078              		.loc 4 35 37
 6079 30cf 488B85A0 		movq	-1632(%rbp), %rax
 6079      F9FFFF
 6080 30d6 4889C7   		movq	%rax, %rdi
 6081 30d9 FFD2     		call	*%rdx
 6082              	.LVL17:
 6083 30db 4889C6   		movq	%rax, %rsi
 6084 30de 4889DF   		movq	%rbx, %rdi
 6085 30e1 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6085      00
  36:../ExecuteTest.h **** 	}
 6086              		.loc 4 36 23
 6087 30e6 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 6087      00
  36:../ExecuteTest.h **** 	}
 6088              		.loc 4 36 40
 6089 30eb 488B18   		movq	(%rax), %rbx
 6090 30ee 488D85D0 		leaq	-1584(%rbp), %rax
 6090      F9FFFF
 6091 30f5 4889C7   		movq	%rax, %rdi
 6092 30f8 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 6092      00
  36:../ExecuteTest.h **** 	}
 6093              		.loc 4 36 40 is_stmt 0 discriminator 1
 6094 30fd 4889C2   		movq	%rax, %rdx
 6095 3100 488B8590 		movq	-1648(%rbp), %rax
 6095      F9FFFF
 6096 3107 4889C6   		movq	%rax, %rsi
 6097 310a 4889DF   		movq	%rbx, %rdi
 6098 310d E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6098      00
 6099              	.LEHE167:
  37:../ExecuteTest.h **** 	catch (...)
 6100              		.loc 4 37 2 is_stmt 1
 6101 3112 488D85D0 		leaq	-1584(%rbp), %rax
 6101      F9FFFF
 6102 3119 4889C7   		movq	%rax, %rdi
 6103              	.LEHB168:
 6104 311c E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6104      00
 6105              	.LEHE168:
 6106              	.LBE100:
  32:../ExecuteTest.h **** 	{
 6107              		.loc 4 32 2
 6108 3121 E8000000 		call	__cxa_end_catch@PLT
 6108      00
 6109              	.LBE99:
 6110              		.loc 4 42 1
 6111 3126 E98D0000 		jmp	.L289
 6111      00
 6112              	.L309:
  38:../ExecuteTest.h **** 	{
 6113              		.loc 4 38 2
 6114 312b 4889C7   		movq	%rax, %rdi
 6115 312e E8000000 		call	__cxa_begin_catch@PLT
 6115      00
 6116              	.LEHB169:
  40:../ExecuteTest.h **** 	}
 6117              		.loc 4 40 23
 6118 3133 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 6118      00
  40:../ExecuteTest.h **** 	}
 6119              		.loc 4 40 40
 6120 3138 488B00   		movq	(%rax), %rax
 6121 313b 488B8D90 		movq	-1648(%rbp), %rcx
 6121      F9FFFF
 6122 3142 488D1500 		leaq	.LC44(%rip), %rdx
 6122      000000
 6123 3149 4889CE   		movq	%rcx, %rsi
 6124 314c 4889C7   		movq	%rax, %rdi
 6125 314f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6125      00
 6126              	.LEHE169:
 6127              	.LEHB170:
  38:../ExecuteTest.h **** 	{
 6128              		.loc 4 38 2
 6129 3154 E8000000 		call	__cxa_end_catch@PLT
 6129      00
 6130              		.loc 4 42 1
 6131 3159 EB5D     		jmp	.L289
 6132              	.L305:
 6133 315b F30F1EFA 		endbr64
 6134              	.LBB102:
  27:../ExecuteTest.h **** 	{
 6135              		.loc 4 27 2
 6136 315f 4889C3   		movq	%rax, %rbx
 6137 3162 E8000000 		call	__cxa_end_catch@PLT
 6137      00
 6138 3167 4889D8   		movq	%rbx, %rax
 6139 316a 4889C7   		movq	%rax, %rdi
 6140 316d E8000000 		call	_Unwind_Resume@PLT
 6140      00
 6141              	.LEHE170:
 6142              	.L307:
 6143 3172 F30F1EFA 		endbr64
 6144              	.LBE102:
 6145              	.LBB103:
 6146              	.LBB101:
  37:../ExecuteTest.h **** 	catch (...)
 6147              		.loc 4 37 2
 6148 3176 4889C3   		movq	%rax, %rbx
 6149 3179 488D85D0 		leaq	-1584(%rbp), %rax
 6149      F9FFFF
 6150 3180 4889C7   		movq	%rax, %rdi
 6151 3183 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6151      00
 6152 3188 EB07     		jmp	.L300
 6153              	.L306:
 6154 318a F30F1EFA 		endbr64
 6155              	.LBE101:
  32:../ExecuteTest.h **** 	{
 6156              		.loc 4 32 2
 6157 318e 4889C3   		movq	%rax, %rbx
 6158              	.L300:
 6159 3191 E8000000 		call	__cxa_end_catch@PLT
 6159      00
 6160 3196 4889D8   		movq	%rbx, %rax
 6161 3199 4889C7   		movq	%rax, %rdi
 6162              	.LEHB171:
 6163 319c E8000000 		call	_Unwind_Resume@PLT
 6163      00
 6164              	.LEHE171:
 6165              	.L308:
 6166 31a1 F30F1EFA 		endbr64
 6167              	.LBE103:
  38:../ExecuteTest.h **** 	{
 6168              		.loc 4 38 2
 6169 31a5 4889C3   		movq	%rax, %rbx
 6170 31a8 E8000000 		call	__cxa_end_catch@PLT
 6170      00
 6171 31ad 4889D8   		movq	%rbx, %rax
 6172 31b0 4889C7   		movq	%rax, %rdi
 6173              	.LEHB172:
 6174 31b3 E8000000 		call	_Unwind_Resume@PLT
 6174      00
 6175              	.LEHE172:
 6176              	.L289:
 6177              		.loc 4 42 1
 6178 31b8 488B45D8 		movq	-40(%rbp), %rax
 6179 31bc 64482B04 		subq	%fs:40, %rax
 6179      25280000 
 6179      00
 6180 31c5 7405     		je	.L302
 6181 31c7 E8000000 		call	__stack_chk_fail@PLT
 6181      00
 6182              	.L302:
 6183 31cc 4881C458 		addq	$1624, %rsp
 6183      060000
 6184 31d3 5B       		popq	%rbx
 6185 31d4 415C     		popq	%r12
 6186 31d6 415D     		popq	%r13
 6187 31d8 5D       		popq	%rbp
 6188              		.cfi_def_cfa 7, 8
 6189 31d9 C3       		ret
 6190              		.cfi_endproc
 6191              	.LFE1526:
 6192              		.section	.gcc_except_table
 6193              		.align 4
 6194              	.LLSDA1526:
 6195 04a8 FF       		.byte	0xff
 6196 04a9 9B       		.byte	0x9b
 6197 04aa 59       		.uleb128 .LLSDATT1526-.LLSDATTD1526
 6198              	.LLSDATTD1526:
 6199 04ab 01       		.byte	0x1
 6200 04ac 43       		.uleb128 .LLSDACSE1526-.LLSDACSB1526
 6201              	.LLSDACSB1526:
 6202 04ad 31       		.uleb128 .LEHB161-.LFB1526
 6203 04ae 05       		.uleb128 .LEHE161-.LEHB161
 6204 04af 00       		.uleb128 0
 6205 04b0 00       		.uleb128 0
 6206 04b1 4A       		.uleb128 .LEHB162-.LFB1526
 6207 04b2 05       		.uleb128 .LEHE162-.LEHB162
 6208 04b3 DF01     		.uleb128 .L303-.LFB1526
 6209 04b5 05       		.uleb128 0x5
 6210 04b6 9601     		.uleb128 .LEHB163-.LFB1526
 6211 04b8 14       		.uleb128 .LEHE163-.LEHB163
 6212 04b9 BE01     		.uleb128 .L304-.LFB1526
 6213 04bb 07       		.uleb128 0x7
 6214 04bc B401     		.uleb128 .LEHB164-.LFB1526
 6215 04be 05       		.uleb128 .LEHE164-.LEHB164
 6216 04bf DF01     		.uleb128 .L303-.LFB1526
 6217 04c1 05       		.uleb128 0x5
 6218 04c2 8702     		.uleb128 .LEHB165-.LFB1526
 6219 04c4 8801     		.uleb128 .LEHE165-.LEHB165
 6220 04c6 F004     		.uleb128 .L305-.LFB1526
 6221 04c8 00       		.uleb128 0
 6222 04c9 B203     		.uleb128 .LEHB166-.LFB1526
 6223 04cb 05       		.uleb128 .LEHE166-.LEHB166
 6224 04cc 9F05     		.uleb128 .L306-.LFB1526
 6225 04ce 00       		.uleb128 0
 6226 04cf CB03     		.uleb128 .LEHB167-.LFB1526
 6227 04d1 5C       		.uleb128 .LEHE167-.LEHB167
 6228 04d2 8705     		.uleb128 .L307-.LFB1526
 6229 04d4 00       		.uleb128 0
 6230 04d5 B104     		.uleb128 .LEHB168-.LFB1526
 6231 04d7 05       		.uleb128 .LEHE168-.LEHB168
 6232 04d8 9F05     		.uleb128 .L306-.LFB1526
 6233 04da 00       		.uleb128 0
 6234 04db C804     		.uleb128 .LEHB169-.LFB1526
 6235 04dd 21       		.uleb128 .LEHE169-.LEHB169
 6236 04de B605     		.uleb128 .L308-.LFB1526
 6237 04e0 00       		.uleb128 0
 6238 04e1 E904     		.uleb128 .LEHB170-.LFB1526
 6239 04e3 1E       		.uleb128 .LEHE170-.LEHB170
 6240 04e4 00       		.uleb128 0
 6241 04e5 00       		.uleb128 0
 6242 04e6 B105     		.uleb128 .LEHB171-.LFB1526
 6243 04e8 05       		.uleb128 .LEHE171-.LEHB171
 6244 04e9 00       		.uleb128 0
 6245 04ea 00       		.uleb128 0
 6246 04eb C805     		.uleb128 .LEHB172-.LFB1526
 6247 04ed 05       		.uleb128 .LEHE172-.LEHB172
 6248 04ee 00       		.uleb128 0
 6249 04ef 00       		.uleb128 0
 6250              	.LLSDACSE1526:
 6251 04f0 03       		.byte	0x3
 6252 04f1 00       		.byte	0
 6253 04f2 02       		.byte	0x2
 6254 04f3 7D       		.byte	0x7d
 6255 04f4 01       		.byte	0x1
 6256 04f5 7D       		.byte	0x7d
 6257 04f6 00       		.byte	0
 6258 04f7 7D       		.byte	0x7d
 6259              		.align 4
 6260 04f8 00000000 		.long	0
 6261              	
 6262 04fc 00000000 		.long	DW.ref._ZTISt9exception-.
 6263 0500 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 6264              	.LLSDATT1526:
 6265              		.text
 6267              		.section	.rodata
 6268              	.LC45:
 6269 0963 45787065 		.string	"Expected "
 6269      63746564 
 6269      2000
 6270              	.LC46:
 6271 096d 20627574 		.string	" but was "
 6271      20776173 
 6271      2000
 6272              		.section	.text._ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEv
 6273              		.weak	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Tes
 6275              	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11TestResult
 6276              	.LFB1529:
 6277              		.file 5 "../Checks.h"
   1:../Checks.h   **** #ifndef UNITTEST_CHECKS_H
   2:../Checks.h   **** #define UNITTEST_CHECKS_H
   3:../Checks.h   **** 
   4:../Checks.h   **** #include "Config.h"
   5:../Checks.h   **** #include "TestResults.h"
   6:../Checks.h   **** #include "MemoryOutStream.h"
   7:../Checks.h   **** 
   8:../Checks.h   **** namespace UnitTest {
   9:../Checks.h   **** 
  10:../Checks.h   **** 
  11:../Checks.h   **** template< typename Value >
  12:../Checks.h   **** bool Check(Value const value)
  13:../Checks.h   **** {
  14:../Checks.h   ****     return !!value; // doing double negative to avoid silly VS warnings
  15:../Checks.h   **** }
  16:../Checks.h   **** 
  17:../Checks.h   **** 
  18:../Checks.h   **** template< typename Expected, typename Actual >
  19:../Checks.h   **** void CheckEqual(TestResults& results, Expected const& expected, Actual const& actual, TestDetails c
 6278              		.loc 5 19 6
 6279              		.cfi_startproc
 6280              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 6281              		.cfi_lsda 0x1b,.LLSDA1529
 6282 0000 F30F1EFA 		endbr64
 6283 0004 55       		pushq	%rbp
 6284              		.cfi_def_cfa_offset 16
 6285              		.cfi_offset 6, -16
 6286 0005 4889E5   		movq	%rsp, %rbp
 6287              		.cfi_def_cfa_register 6
 6288 0008 53       		pushq	%rbx
 6289 0009 4881ECC8 		subq	$456, %rsp
 6289      010000
 6290              		.cfi_offset 3, -24
 6291 0010 4889BD48 		movq	%rdi, -440(%rbp)
 6291      FEFFFF
 6292 0017 4889B540 		movq	%rsi, -448(%rbp)
 6292      FEFFFF
 6293 001e 48899538 		movq	%rdx, -456(%rbp)
 6293      FEFFFF
 6294 0025 48898D30 		movq	%rcx, -464(%rbp)
 6294      FEFFFF
 6295              		.loc 5 19 6
 6296 002c 64488B04 		movq	%fs:40, %rax
 6296      25280000 
 6296      00
 6297 0035 488945E8 		movq	%rax, -24(%rbp)
 6298 0039 31C0     		xorl	%eax, %eax
 6299              	.LBB104:
  20:../Checks.h   **** {
  21:../Checks.h   ****     if (!(expected == actual))
 6300              		.loc 5 21 20
 6301 003b 488B8540 		movq	-448(%rbp), %rax
 6301      FEFFFF
 6302 0042 488B00   		movq	(%rax), %rax
 6303 0045 488B9538 		movq	-456(%rbp), %rdx
 6303      FEFFFF
 6304 004c 4889D6   		movq	%rdx, %rsi
 6305 004f 4889C7   		movq	%rax, %rdi
 6306              	.LEHB173:
 6307 0052 E8000000 		call	_ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE
 6307      00
 6308 0057 83F001   		xorl	$1, %eax
 6309              		.loc 5 21 5
 6310 005a 84C0     		testb	%al, %al
 6311 005c 0F84C700 		je	.L315
 6311      0000
 6312              	.LBB105:
  22:../Checks.h   ****     {
  23:../Checks.h   ****         UnitTest::MemoryOutStream stream;
 6313              		.loc 5 23 35
 6314 0062 488D8550 		leaq	-432(%rbp), %rax
 6314      FEFFFF
 6315 0069 4889C7   		movq	%rax, %rdi
 6316 006c E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6316      00
 6317              	.LEHE173:
  24:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 6318              		.loc 5 24 58
 6319 0071 488D8550 		leaq	-432(%rbp), %rax
 6319      FEFFFF
 6320 0078 488D1500 		leaq	.LC45(%rip), %rdx
 6320      000000
 6321 007f 4889D6   		movq	%rdx, %rsi
 6322 0082 4889C7   		movq	%rax, %rdi
 6323              	.LEHB174:
 6324 0085 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6324      00
 6325 008a 4889C2   		movq	%rax, %rdx
 6326 008d 488B8540 		movq	-448(%rbp), %rax
 6326      FEFFFF
 6327 0094 488B00   		movq	(%rax), %rax
 6328 0097 4889C6   		movq	%rax, %rsi
 6329 009a 4889D7   		movq	%rdx, %rdi
 6330 009d E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6330      00
 6331              		.loc 5 24 58 is_stmt 0 discriminator 1
 6332 00a2 4889C2   		movq	%rax, %rdx
 6333 00a5 488D0500 		leaq	.LC46(%rip), %rax
 6333      000000
 6334 00ac 4889C6   		movq	%rax, %rsi
 6335 00af 4889D7   		movq	%rdx, %rdi
 6336 00b2 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6336      00
 6337              		.loc 5 24 58 discriminator 2
 6338 00b7 4889C2   		movq	%rax, %rdx
 6339 00ba 488B8538 		movq	-456(%rbp), %rax
 6339      FEFFFF
 6340 00c1 4889C6   		movq	%rax, %rsi
 6341 00c4 4889D7   		movq	%rdx, %rdi
 6342 00c7 E8000000 		call	_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5
 6342      00
  25:../Checks.h   **** 
  26:../Checks.h   ****         results.OnTestFailure(details, stream.GetText());
 6343              		.loc 5 26 30 is_stmt 1
 6344 00cc 488D8550 		leaq	-432(%rbp), %rax
 6344      FEFFFF
 6345 00d3 4889C7   		movq	%rax, %rdi
 6346 00d6 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 6346      00
 6347 00db 4889C2   		movq	%rax, %rdx
 6348 00de 488B8D30 		movq	-464(%rbp), %rcx
 6348      FEFFFF
 6349 00e5 488B8548 		movq	-440(%rbp), %rax
 6349      FEFFFF
 6350 00ec 4889CE   		movq	%rcx, %rsi
 6351 00ef 4889C7   		movq	%rax, %rdi
 6352 00f2 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6352      00
 6353              	.LEHE174:
  27:../Checks.h   ****     }
 6354              		.loc 5 27 5
 6355 00f7 488D8550 		leaq	-432(%rbp), %rax
 6355      FEFFFF
 6356 00fe 4889C7   		movq	%rax, %rdi
 6357              	.LEHB175:
 6358 0101 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6358      00
 6359              	.LEHE175:
 6360              	.LBE105:
 6361              	.LBE104:
  28:../Checks.h   **** }
 6362              		.loc 5 28 1
 6363 0106 EB21     		jmp	.L315
 6364              	.L314:
 6365 0108 F30F1EFA 		endbr64
 6366              	.LBB107:
 6367              	.LBB106:
  27:../Checks.h   ****     }
 6368              		.loc 5 27 5
 6369 010c 4889C3   		movq	%rax, %rbx
 6370 010f 488D8550 		leaq	-432(%rbp), %rax
 6370      FEFFFF
 6371 0116 4889C7   		movq	%rax, %rdi
 6372 0119 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6372      00
 6373 011e 4889D8   		movq	%rbx, %rax
 6374 0121 4889C7   		movq	%rax, %rdi
 6375              	.LEHB176:
 6376 0124 E8000000 		call	_Unwind_Resume@PLT
 6376      00
 6377              	.LEHE176:
 6378              	.L315:
 6379              	.LBE106:
 6380              	.LBE107:
 6381              		.loc 5 28 1
 6382 0129 90       		nop
 6383 012a 488B45E8 		movq	-24(%rbp), %rax
 6384 012e 64482B04 		subq	%fs:40, %rax
 6384      25280000 
 6384      00
 6385 0137 7405     		je	.L313
 6386 0139 E8000000 		call	__stack_chk_fail@PLT
 6386      00
 6387              	.L313:
 6388 013e 488B5DF8 		movq	-8(%rbp), %rbx
 6389 0142 C9       		leave
 6390              		.cfi_def_cfa 7, 8
 6391 0143 C3       		ret
 6392              		.cfi_endproc
 6393              	.LFE1529:
 6394              		.section	.gcc_except_table
 6395              	.LLSDA1529:
 6396 0504 FF       		.byte	0xff
 6397 0505 FF       		.byte	0xff
 6398 0506 01       		.byte	0x1
 6399 0507 14       		.uleb128 .LLSDACSE1529-.LLSDACSB1529
 6400              	.LLSDACSB1529:
 6401 0508 52       		.uleb128 .LEHB173-.LFB1529
 6402 0509 1F       		.uleb128 .LEHE173-.LEHB173
 6403 050a 00       		.uleb128 0
 6404 050b 00       		.uleb128 0
 6405 050c 8501     		.uleb128 .LEHB174-.LFB1529
 6406 050e 72       		.uleb128 .LEHE174-.LEHB174
 6407 050f 8802     		.uleb128 .L314-.LFB1529
 6408 0511 00       		.uleb128 0
 6409 0512 8102     		.uleb128 .LEHB175-.LFB1529
 6410 0514 05       		.uleb128 .LEHE175-.LEHB175
 6411 0515 00       		.uleb128 0
 6412 0516 00       		.uleb128 0
 6413 0517 A402     		.uleb128 .LEHB176-.LFB1529
 6414 0519 05       		.uleb128 .LEHE176-.LEHB176
 6415 051a 00       		.uleb128 0
 6416 051b 00       		.uleb128 0
 6417              	.LLSDACSE1529:
 6418              		.section	.text._ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEv
 6420              		.text
 6422              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIs
 6423              	.LFB1530:
  16:../ExecuteTest.h **** {
 6424              		.loc 4 16 6
 6425              		.cfi_startproc
 6426              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 6427              		.cfi_lsda 0x1b,.LLSDA1530
 6428 31da F30F1EFA 		endbr64
 6429 31de 55       		pushq	%rbp
 6430              		.cfi_def_cfa_offset 16
 6431              		.cfi_offset 6, -16
 6432 31df 4889E5   		movq	%rsp, %rbp
 6433              		.cfi_def_cfa_register 6
 6434 31e2 4155     		pushq	%r13
 6435 31e4 4154     		pushq	%r12
 6436 31e6 53       		pushq	%rbx
 6437 31e7 4881EC58 		subq	$1624, %rsp
 6437      060000
 6438              		.cfi_offset 13, -24
 6439              		.cfi_offset 12, -32
 6440              		.cfi_offset 3, -40
 6441 31ee 4889BD98 		movq	%rdi, -1640(%rbp)
 6441      F9FFFF
 6442 31f5 4889B590 		movq	%rsi, -1648(%rbp)
 6442      F9FFFF
  16:../ExecuteTest.h **** {
 6443              		.loc 4 16 6
 6444 31fc 64488B04 		movq	%fs:40, %rax
 6444      25280000 
 6444      00
 6445 3205 488945D8 		movq	%rax, -40(%rbp)
 6446 3209 31C0     		xorl	%eax, %eax
 6447              	.LEHB177:
  18:../ExecuteTest.h **** 
 6448              		.loc 4 18 22
 6449 320b E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 6449      00
 6450              	.LEHE177:
  18:../ExecuteTest.h **** 
 6451              		.loc 4 18 25
 6452 3210 488B9590 		movq	-1648(%rbp), %rdx
 6452      F9FFFF
 6453 3217 488910   		movq	%rdx, (%rax)
 6454              	.LBB108:
  23:../ExecuteTest.h **** #endif
 6455              		.loc 4 23 3
 6456 321a 488D8570 		leaq	-1168(%rbp), %rax
 6456      FBFFFF
 6457 3221 4889C7   		movq	%rax, %rdi
 6458              	.LEHB178:
 6459 3224 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev@PLT
 6459      00
 6460              	.LEHE178:
  23:../ExecuteTest.h **** #endif
 6461              		.loc 4 23 3 is_stmt 0 discriminator 1
 6462 3229 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 6462      000000
 6463 3230 BE010000 		movl	$1, %esi
 6463      00
 6464 3235 4889C7   		movq	%rax, %rdi
 6465 3238 E8000000 		call	__sigsetjmp@PLT
 6465      00
 6466 323d F30F1EFA 		endbr64
 6467 3241 85C0     		testl	%eax, %eax
 6468 3243 0F95C0   		setne	%al
 6469 3246 84C0     		testb	%al, %al
 6470 3248 742B     		je	.L318
  23:../ExecuteTest.h **** #endif
 6471              		.loc 4 23 3 discriminator 4
 6472 324a BF080000 		movl	$8, %edi
 6472      00
 6473 324f E8000000 		call	__cxa_allocate_exception@PLT
 6473      00
 6474 3254 488D1500 		leaq	.LC43(%rip), %rdx
 6474      000000
 6475 325b 488910   		movq	%rdx, (%rax)
 6476 325e BA000000 		movl	$0, %edx
 6476      00
 6477 3263 488D0D00 		leaq	_ZTIPKc(%rip), %rcx
 6477      000000
 6478 326a 4889CE   		movq	%rcx, %rsi
 6479 326d 4889C7   		movq	%rax, %rdi
 6480              	.LEHB179:
 6481 3270 E8000000 		call	__cxa_throw@PLT
 6481      00
 6482              	.L318:
  25:../ExecuteTest.h **** 	}
 6483              		.loc 4 25 21 is_stmt 1
 6484 3275 488B8598 		movq	-1640(%rbp), %rax
 6484      F9FFFF
 6485 327c 4889C7   		movq	%rax, %rdi
 6486 327f E89CD7FF 		call	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelper7RunIm
 6486      FF
 6487              	.LEHE179:
  26:../ExecuteTest.h **** 	catch (AssertException const& e)
 6488              		.loc 4 26 2
 6489 3284 488D8570 		leaq	-1168(%rbp), %rax
 6489      FBFFFF
 6490 328b 4889C7   		movq	%rax, %rdi
 6491              	.LEHB180:
 6492 328e E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 6492      00
 6493              	.LEHE180:
 6494              	.LBE108:
 6495              		.loc 4 42 1
 6496 3293 E90F0200 		jmp	.L316
 6496      00
 6497              	.L331:
 6498 3298 F30F1EFA 		endbr64
 6499              	.LBB109:
  26:../ExecuteTest.h **** 	catch (AssertException const& e)
 6500              		.loc 4 26 2
 6501 329c 4989C4   		movq	%rax, %r12
 6502 329f 4889D3   		movq	%rdx, %rbx
 6503 32a2 488D8570 		leaq	-1168(%rbp), %rax
 6503      FBFFFF
 6504 32a9 4889C7   		movq	%rax, %rdi
 6505 32ac E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 6505      00
 6506 32b1 4C89E0   		movq	%r12, %rax
 6507 32b4 4889DA   		movq	%rbx, %rdx
 6508 32b7 EB04     		jmp	.L320
 6509              	.L330:
 6510 32b9 F30F1EFA 		endbr64
 6511              	.L320:
 6512              	.LBE109:
  27:../ExecuteTest.h **** 	{
 6513              		.loc 4 27 2
 6514 32bd 4883FA01 		cmpq	$1, %rdx
 6515 32c1 740F     		je	.L321
 6516 32c3 4883FA02 		cmpq	$2, %rdx
 6517 32c7 0F84A600 		je	.L322
 6517      0000
 6518 32cd E9480100 		jmp	.L336
 6518      00
 6519              	.L321:
 6520              	.LBB110:
  27:../ExecuteTest.h **** 	{
 6521              		.loc 4 27 2 is_stmt 0 discriminator 1
 6522 32d2 4889C7   		movq	%rax, %rdi
 6523 32d5 E8000000 		call	__cxa_begin_catch@PLT
 6523      00
  27:../ExecuteTest.h **** 	{
 6524              		.loc 4 27 32 is_stmt 1 discriminator 1
 6525 32da 488985A8 		movq	%rax, -1624(%rbp)
 6525      F9FFFF
 6526              	.LEHB181:
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6527              		.loc 4 29 23 discriminator 1
 6528 32e1 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 6528      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6529              		.loc 4 29 40 discriminator 2
 6530 32e6 488B18   		movq	(%rax), %rbx
  30:../ExecuteTest.h **** 	}
 6531              		.loc 4 30 90 discriminator 2
 6532 32e9 488B85A8 		movq	-1624(%rbp), %rax
 6532      F9FFFF
 6533 32f0 488B00   		movq	(%rax), %rax
 6534 32f3 4883C010 		addq	$16, %rax
 6535 32f7 488B10   		movq	(%rax), %rdx
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6536              		.loc 4 29 40 discriminator 2
 6537 32fa 488B85A8 		movq	-1624(%rbp), %rax
 6537      F9FFFF
 6538 3301 4889C7   		movq	%rax, %rdi
 6539 3304 FFD2     		call	*%rdx
 6540              	.LVL18:
 6541 3306 4989C4   		movq	%rax, %r12
  30:../ExecuteTest.h **** 	}
 6542              		.loc 4 30 4 discriminator 2
 6543 3309 488B85A8 		movq	-1624(%rbp), %rax
 6543      F9FFFF
 6544 3310 4889C7   		movq	%rax, %rdi
 6545 3313 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 6545      00
 6546 3318 4189C5   		movl	%eax, %r13d
 6547 331b 488B85A8 		movq	-1624(%rbp), %rax
 6547      F9FFFF
 6548 3322 4889C7   		movq	%rax, %rdi
 6549 3325 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 6549      00
  30:../ExecuteTest.h **** 	}
 6550              		.loc 4 30 4 is_stmt 0 discriminator 1
 6551 332a 4889C1   		movq	%rax, %rcx
  30:../ExecuteTest.h **** 	}
 6552              		.loc 4 30 42 is_stmt 1 discriminator 1
 6553 332d 488B8590 		movq	-1648(%rbp), %rax
 6553      F9FFFF
 6554 3334 488B10   		movq	(%rax), %rdx
  30:../ExecuteTest.h **** 	}
 6555              		.loc 4 30 24 discriminator 1
 6556 3337 488B8590 		movq	-1648(%rbp), %rax
 6556      F9FFFF
 6557 333e 488B7008 		movq	8(%rax), %rsi
  30:../ExecuteTest.h **** 	}
 6558              		.loc 4 30 4 discriminator 1
 6559 3342 488D85B0 		leaq	-1616(%rbp), %rax
 6559      F9FFFF
 6560 3349 4589E8   		movl	%r13d, %r8d
 6561 334c 4889C7   		movq	%rax, %rdi
 6562 334f E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 6562      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6563              		.loc 4 29 40
 6564 3354 488D85B0 		leaq	-1616(%rbp), %rax
 6564      F9FFFF
 6565 335b 4C89E2   		movq	%r12, %rdx
 6566 335e 4889C6   		movq	%rax, %rsi
 6567 3361 4889DF   		movq	%rbx, %rdi
 6568 3364 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6568      00
 6569              	.LEHE181:
  27:../ExecuteTest.h **** 	{
 6570              		.loc 4 27 2
 6571 3369 E8000000 		call	__cxa_end_catch@PLT
 6571      00
 6572              	.LBE110:
 6573              		.loc 4 42 1
 6574 336e E9340100 		jmp	.L316
 6574      00
 6575              	.L322:
 6576              	.LBB111:
  32:../ExecuteTest.h **** 	{
 6577              		.loc 4 32 2
 6578 3373 4889C7   		movq	%rax, %rdi
 6579 3376 E8000000 		call	__cxa_begin_catch@PLT
 6579      00
  32:../ExecuteTest.h **** 	{
 6580              		.loc 4 32 31
 6581 337b 488985A0 		movq	%rax, -1632(%rbp)
 6581      F9FFFF
 6582              	.LBB112:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6583              		.loc 4 34 19
 6584 3382 488D85D0 		leaq	-1584(%rbp), %rax
 6584      F9FFFF
 6585 3389 4889C7   		movq	%rax, %rdi
 6586              	.LEHB182:
 6587 338c E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6587      00
 6588              	.LEHE182:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6589              		.loc 4 35 37
 6590 3391 488D85D0 		leaq	-1584(%rbp), %rax
 6590      F9FFFF
 6591 3398 488D1500 		leaq	.LC3(%rip), %rdx
 6591      000000
 6592 339f 4889D6   		movq	%rdx, %rsi
 6593 33a2 4889C7   		movq	%rax, %rdi
 6594              	.LEHB183:
 6595 33a5 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6595      00
 6596 33aa 4889C3   		movq	%rax, %rbx
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6597              		.loc 4 35 46
 6598 33ad 488B85A0 		movq	-1632(%rbp), %rax
 6598      F9FFFF
 6599 33b4 488B00   		movq	(%rax), %rax
 6600 33b7 4883C010 		addq	$16, %rax
 6601 33bb 488B10   		movq	(%rax), %rdx
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6602              		.loc 4 35 37
 6603 33be 488B85A0 		movq	-1632(%rbp), %rax
 6603      F9FFFF
 6604 33c5 4889C7   		movq	%rax, %rdi
 6605 33c8 FFD2     		call	*%rdx
 6606              	.LVL19:
 6607 33ca 4889C6   		movq	%rax, %rsi
 6608 33cd 4889DF   		movq	%rbx, %rdi
 6609 33d0 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6609      00
  36:../ExecuteTest.h **** 	}
 6610              		.loc 4 36 23
 6611 33d5 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 6611      00
  36:../ExecuteTest.h **** 	}
 6612              		.loc 4 36 40
 6613 33da 488B18   		movq	(%rax), %rbx
 6614 33dd 488D85D0 		leaq	-1584(%rbp), %rax
 6614      F9FFFF
 6615 33e4 4889C7   		movq	%rax, %rdi
 6616 33e7 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 6616      00
  36:../ExecuteTest.h **** 	}
 6617              		.loc 4 36 40 is_stmt 0 discriminator 1
 6618 33ec 4889C2   		movq	%rax, %rdx
 6619 33ef 488B8590 		movq	-1648(%rbp), %rax
 6619      F9FFFF
 6620 33f6 4889C6   		movq	%rax, %rsi
 6621 33f9 4889DF   		movq	%rbx, %rdi
 6622 33fc E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6622      00
 6623              	.LEHE183:
  37:../ExecuteTest.h **** 	catch (...)
 6624              		.loc 4 37 2 is_stmt 1
 6625 3401 488D85D0 		leaq	-1584(%rbp), %rax
 6625      F9FFFF
 6626 3408 4889C7   		movq	%rax, %rdi
 6627              	.LEHB184:
 6628 340b E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6628      00
 6629              	.LEHE184:
 6630              	.LBE112:
  32:../ExecuteTest.h **** 	{
 6631              		.loc 4 32 2
 6632 3410 E8000000 		call	__cxa_end_catch@PLT
 6632      00
 6633              	.LBE111:
 6634              		.loc 4 42 1
 6635 3415 E98D0000 		jmp	.L316
 6635      00
 6636              	.L336:
  38:../ExecuteTest.h **** 	{
 6637              		.loc 4 38 2
 6638 341a 4889C7   		movq	%rax, %rdi
 6639 341d E8000000 		call	__cxa_begin_catch@PLT
 6639      00
 6640              	.LEHB185:
  40:../ExecuteTest.h **** 	}
 6641              		.loc 4 40 23
 6642 3422 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 6642      00
  40:../ExecuteTest.h **** 	}
 6643              		.loc 4 40 40
 6644 3427 488B00   		movq	(%rax), %rax
 6645 342a 488B8D90 		movq	-1648(%rbp), %rcx
 6645      F9FFFF
 6646 3431 488D1500 		leaq	.LC44(%rip), %rdx
 6646      000000
 6647 3438 4889CE   		movq	%rcx, %rsi
 6648 343b 4889C7   		movq	%rax, %rdi
 6649 343e E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6649      00
 6650              	.LEHE185:
 6651              	.LEHB186:
  38:../ExecuteTest.h **** 	{
 6652              		.loc 4 38 2
 6653 3443 E8000000 		call	__cxa_end_catch@PLT
 6653      00
 6654              		.loc 4 42 1
 6655 3448 EB5D     		jmp	.L316
 6656              	.L332:
 6657 344a F30F1EFA 		endbr64
 6658              	.LBB114:
  27:../ExecuteTest.h **** 	{
 6659              		.loc 4 27 2
 6660 344e 4889C3   		movq	%rax, %rbx
 6661 3451 E8000000 		call	__cxa_end_catch@PLT
 6661      00
 6662 3456 4889D8   		movq	%rbx, %rax
 6663 3459 4889C7   		movq	%rax, %rdi
 6664 345c E8000000 		call	_Unwind_Resume@PLT
 6664      00
 6665              	.LEHE186:
 6666              	.L334:
 6667 3461 F30F1EFA 		endbr64
 6668              	.LBE114:
 6669              	.LBB115:
 6670              	.LBB113:
  37:../ExecuteTest.h **** 	catch (...)
 6671              		.loc 4 37 2
 6672 3465 4889C3   		movq	%rax, %rbx
 6673 3468 488D85D0 		leaq	-1584(%rbp), %rax
 6673      F9FFFF
 6674 346f 4889C7   		movq	%rax, %rdi
 6675 3472 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6675      00
 6676 3477 EB07     		jmp	.L327
 6677              	.L333:
 6678 3479 F30F1EFA 		endbr64
 6679              	.LBE113:
  32:../ExecuteTest.h **** 	{
 6680              		.loc 4 32 2
 6681 347d 4889C3   		movq	%rax, %rbx
 6682              	.L327:
 6683 3480 E8000000 		call	__cxa_end_catch@PLT
 6683      00
 6684 3485 4889D8   		movq	%rbx, %rax
 6685 3488 4889C7   		movq	%rax, %rdi
 6686              	.LEHB187:
 6687 348b E8000000 		call	_Unwind_Resume@PLT
 6687      00
 6688              	.LEHE187:
 6689              	.L335:
 6690 3490 F30F1EFA 		endbr64
 6691              	.LBE115:
  38:../ExecuteTest.h **** 	{
 6692              		.loc 4 38 2
 6693 3494 4889C3   		movq	%rax, %rbx
 6694 3497 E8000000 		call	__cxa_end_catch@PLT
 6694      00
 6695 349c 4889D8   		movq	%rbx, %rax
 6696 349f 4889C7   		movq	%rax, %rdi
 6697              	.LEHB188:
 6698 34a2 E8000000 		call	_Unwind_Resume@PLT
 6698      00
 6699              	.LEHE188:
 6700              	.L316:
 6701              		.loc 4 42 1
 6702 34a7 488B45D8 		movq	-40(%rbp), %rax
 6703 34ab 64482B04 		subq	%fs:40, %rax
 6703      25280000 
 6703      00
 6704 34b4 7405     		je	.L329
 6705 34b6 E8000000 		call	__stack_chk_fail@PLT
 6705      00
 6706              	.L329:
 6707 34bb 4881C458 		addq	$1624, %rsp
 6707      060000
 6708 34c2 5B       		popq	%rbx
 6709 34c3 415C     		popq	%r12
 6710 34c5 415D     		popq	%r13
 6711 34c7 5D       		popq	%rbp
 6712              		.cfi_def_cfa 7, 8
 6713 34c8 C3       		ret
 6714              		.cfi_endproc
 6715              	.LFE1530:
 6716              		.section	.gcc_except_table
 6717              		.align 4
 6718              	.LLSDA1530:
 6719 051c FF       		.byte	0xff
 6720 051d 9B       		.byte	0x9b
 6721 051e 59       		.uleb128 .LLSDATT1530-.LLSDATTD1530
 6722              	.LLSDATTD1530:
 6723 051f 01       		.byte	0x1
 6724 0520 43       		.uleb128 .LLSDACSE1530-.LLSDACSB1530
 6725              	.LLSDACSB1530:
 6726 0521 31       		.uleb128 .LEHB177-.LFB1530
 6727 0522 05       		.uleb128 .LEHE177-.LEHB177
 6728 0523 00       		.uleb128 0
 6729 0524 00       		.uleb128 0
 6730 0525 4A       		.uleb128 .LEHB178-.LFB1530
 6731 0526 05       		.uleb128 .LEHE178-.LEHB178
 6732 0527 DF01     		.uleb128 .L330-.LFB1530
 6733 0529 05       		.uleb128 0x5
 6734 052a 9601     		.uleb128 .LEHB179-.LFB1530
 6735 052c 14       		.uleb128 .LEHE179-.LEHB179
 6736 052d BE01     		.uleb128 .L331-.LFB1530
 6737 052f 07       		.uleb128 0x7
 6738 0530 B401     		.uleb128 .LEHB180-.LFB1530
 6739 0532 05       		.uleb128 .LEHE180-.LEHB180
 6740 0533 DF01     		.uleb128 .L330-.LFB1530
 6741 0535 05       		.uleb128 0x5
 6742 0536 8702     		.uleb128 .LEHB181-.LFB1530
 6743 0538 8801     		.uleb128 .LEHE181-.LEHB181
 6744 053a F004     		.uleb128 .L332-.LFB1530
 6745 053c 00       		.uleb128 0
 6746 053d B203     		.uleb128 .LEHB182-.LFB1530
 6747 053f 05       		.uleb128 .LEHE182-.LEHB182
 6748 0540 9F05     		.uleb128 .L333-.LFB1530
 6749 0542 00       		.uleb128 0
 6750 0543 CB03     		.uleb128 .LEHB183-.LFB1530
 6751 0545 5C       		.uleb128 .LEHE183-.LEHB183
 6752 0546 8705     		.uleb128 .L334-.LFB1530
 6753 0548 00       		.uleb128 0
 6754 0549 B104     		.uleb128 .LEHB184-.LFB1530
 6755 054b 05       		.uleb128 .LEHE184-.LEHB184
 6756 054c 9F05     		.uleb128 .L333-.LFB1530
 6757 054e 00       		.uleb128 0
 6758 054f C804     		.uleb128 .LEHB185-.LFB1530
 6759 0551 21       		.uleb128 .LEHE185-.LEHB185
 6760 0552 B605     		.uleb128 .L335-.LFB1530
 6761 0554 00       		.uleb128 0
 6762 0555 E904     		.uleb128 .LEHB186-.LFB1530
 6763 0557 1E       		.uleb128 .LEHE186-.LEHB186
 6764 0558 00       		.uleb128 0
 6765 0559 00       		.uleb128 0
 6766 055a B105     		.uleb128 .LEHB187-.LFB1530
 6767 055c 05       		.uleb128 .LEHE187-.LEHB187
 6768 055d 00       		.uleb128 0
 6769 055e 00       		.uleb128 0
 6770 055f C805     		.uleb128 .LEHB188-.LFB1530
 6771 0561 05       		.uleb128 .LEHE188-.LEHB188
 6772 0562 00       		.uleb128 0
 6773 0563 00       		.uleb128 0
 6774              	.LLSDACSE1530:
 6775 0564 03       		.byte	0x3
 6776 0565 00       		.byte	0
 6777 0566 02       		.byte	0x2
 6778 0567 7D       		.byte	0x7d
 6779 0568 01       		.byte	0x1
 6780 0569 7D       		.byte	0x7d
 6781 056a 00       		.byte	0
 6782 056b 7D       		.byte	0x7d
 6783              		.align 4
 6784 056c 00000000 		.long	0
 6785              	
 6786 0570 00000000 		.long	DW.ref._ZTISt9exception-.
 6787 0574 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 6788              	.LLSDATT1530:
 6789              		.text
 6791              		.section	.text._ZN8UnitTest5CheckIbEEbT_,"axG",@progbits,_ZN8UnitTest5CheckIbEEbT_,comdat
 6792              		.weak	_ZN8UnitTest5CheckIbEEbT_
 6794              	_ZN8UnitTest5CheckIbEEbT_:
 6795              	.LFB1532:
  12:../Checks.h   **** {
 6796              		.loc 5 12 6
 6797              		.cfi_startproc
 6798 0000 F30F1EFA 		endbr64
 6799 0004 55       		pushq	%rbp
 6800              		.cfi_def_cfa_offset 16
 6801              		.cfi_offset 6, -16
 6802 0005 4889E5   		movq	%rsp, %rbp
 6803              		.cfi_def_cfa_register 6
 6804 0008 89F8     		movl	%edi, %eax
 6805 000a 8845FC   		movb	%al, -4(%rbp)
  14:../Checks.h   **** }
 6806              		.loc 5 14 14
 6807 000d 0FB645FC 		movzbl	-4(%rbp), %eax
  15:../Checks.h   **** 
 6808              		.loc 5 15 1
 6809 0011 5D       		popq	%rbp
 6810              		.cfi_def_cfa 7, 8
 6811 0012 C3       		ret
 6812              		.cfi_endproc
 6813              	.LFE1532:
 6815              		.text
 6817              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperEEEv
 6818              	.LFB1533:
  16:../ExecuteTest.h **** {
 6819              		.loc 4 16 6
 6820              		.cfi_startproc
 6821              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 6822              		.cfi_lsda 0x1b,.LLSDA1533
 6823 34c9 F30F1EFA 		endbr64
 6824 34cd 55       		pushq	%rbp
 6825              		.cfi_def_cfa_offset 16
 6826              		.cfi_offset 6, -16
 6827 34ce 4889E5   		movq	%rsp, %rbp
 6828              		.cfi_def_cfa_register 6
 6829 34d1 4155     		pushq	%r13
 6830 34d3 4154     		pushq	%r12
 6831 34d5 53       		pushq	%rbx
 6832 34d6 4881EC58 		subq	$1624, %rsp
 6832      060000
 6833              		.cfi_offset 13, -24
 6834              		.cfi_offset 12, -32
 6835              		.cfi_offset 3, -40
 6836 34dd 4889BD98 		movq	%rdi, -1640(%rbp)
 6836      F9FFFF
 6837 34e4 4889B590 		movq	%rsi, -1648(%rbp)
 6837      F9FFFF
  16:../ExecuteTest.h **** {
 6838              		.loc 4 16 6
 6839 34eb 64488B04 		movq	%fs:40, %rax
 6839      25280000 
 6839      00
 6840 34f4 488945D8 		movq	%rax, -40(%rbp)
 6841 34f8 31C0     		xorl	%eax, %eax
 6842              	.LEHB189:
  18:../ExecuteTest.h **** 
 6843              		.loc 4 18 22
 6844 34fa E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 6844      00
 6845              	.LEHE189:
  18:../ExecuteTest.h **** 
 6846              		.loc 4 18 25
 6847 34ff 488B9590 		movq	-1648(%rbp), %rdx
 6847      F9FFFF
 6848 3506 488910   		movq	%rdx, (%rax)
 6849              	.LBB116:
  23:../ExecuteTest.h **** #endif
 6850              		.loc 4 23 3
 6851 3509 488D8570 		leaq	-1168(%rbp), %rax
 6851      FBFFFF
 6852 3510 4889C7   		movq	%rax, %rdi
 6853              	.LEHB190:
 6854 3513 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev@PLT
 6854      00
 6855              	.LEHE190:
  23:../ExecuteTest.h **** #endif
 6856              		.loc 4 23 3 is_stmt 0 discriminator 1
 6857 3518 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 6857      000000
 6858 351f BE010000 		movl	$1, %esi
 6858      00
 6859 3524 4889C7   		movq	%rax, %rdi
 6860 3527 E8000000 		call	__sigsetjmp@PLT
 6860      00
 6861 352c F30F1EFA 		endbr64
 6862 3530 85C0     		testl	%eax, %eax
 6863 3532 0F95C0   		setne	%al
 6864 3535 84C0     		testb	%al, %al
 6865 3537 742B     		je	.L341
  23:../ExecuteTest.h **** #endif
 6866              		.loc 4 23 3 discriminator 4
 6867 3539 BF080000 		movl	$8, %edi
 6867      00
 6868 353e E8000000 		call	__cxa_allocate_exception@PLT
 6868      00
 6869 3543 488D1500 		leaq	.LC43(%rip), %rdx
 6869      000000
 6870 354a 488910   		movq	%rdx, (%rax)
 6871 354d BA000000 		movl	$0, %edx
 6871      00
 6872 3552 488D0D00 		leaq	_ZTIPKc(%rip), %rcx
 6872      000000
 6873 3559 4889CE   		movq	%rcx, %rsi
 6874 355c 4889C7   		movq	%rax, %rdi
 6875              	.LEHB191:
 6876 355f E8000000 		call	__cxa_throw@PLT
 6876      00
 6877              	.L341:
  25:../ExecuteTest.h **** 	}
 6878              		.loc 4 25 21 is_stmt 1
 6879 3564 488B8598 		movq	-1640(%rbp), %rax
 6879      F9FFFF
 6880 356b 4889C7   		movq	%rax, %rdi
 6881 356e E86FDBFF 		call	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelper7RunImplEv
 6881      FF
 6882              	.LEHE191:
  26:../ExecuteTest.h **** 	catch (AssertException const& e)
 6883              		.loc 4 26 2
 6884 3573 488D8570 		leaq	-1168(%rbp), %rax
 6884      FBFFFF
 6885 357a 4889C7   		movq	%rax, %rdi
 6886              	.LEHB192:
 6887 357d E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 6887      00
 6888              	.LEHE192:
 6889              	.LBE116:
 6890              		.loc 4 42 1
 6891 3582 E90F0200 		jmp	.L339
 6891      00
 6892              	.L354:
 6893 3587 F30F1EFA 		endbr64
 6894              	.LBB117:
  26:../ExecuteTest.h **** 	catch (AssertException const& e)
 6895              		.loc 4 26 2
 6896 358b 4989C4   		movq	%rax, %r12
 6897 358e 4889D3   		movq	%rdx, %rbx
 6898 3591 488D8570 		leaq	-1168(%rbp), %rax
 6898      FBFFFF
 6899 3598 4889C7   		movq	%rax, %rdi
 6900 359b E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 6900      00
 6901 35a0 4C89E0   		movq	%r12, %rax
 6902 35a3 4889DA   		movq	%rbx, %rdx
 6903 35a6 EB04     		jmp	.L343
 6904              	.L353:
 6905 35a8 F30F1EFA 		endbr64
 6906              	.L343:
 6907              	.LBE117:
  27:../ExecuteTest.h **** 	{
 6908              		.loc 4 27 2
 6909 35ac 4883FA01 		cmpq	$1, %rdx
 6910 35b0 740F     		je	.L344
 6911 35b2 4883FA02 		cmpq	$2, %rdx
 6912 35b6 0F84A600 		je	.L345
 6912      0000
 6913 35bc E9480100 		jmp	.L359
 6913      00
 6914              	.L344:
 6915              	.LBB118:
  27:../ExecuteTest.h **** 	{
 6916              		.loc 4 27 2 is_stmt 0 discriminator 1
 6917 35c1 4889C7   		movq	%rax, %rdi
 6918 35c4 E8000000 		call	__cxa_begin_catch@PLT
 6918      00
  27:../ExecuteTest.h **** 	{
 6919              		.loc 4 27 32 is_stmt 1 discriminator 1
 6920 35c9 488985A8 		movq	%rax, -1624(%rbp)
 6920      F9FFFF
 6921              	.LEHB193:
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6922              		.loc 4 29 23 discriminator 1
 6923 35d0 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 6923      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6924              		.loc 4 29 40 discriminator 2
 6925 35d5 488B18   		movq	(%rax), %rbx
  30:../ExecuteTest.h **** 	}
 6926              		.loc 4 30 90 discriminator 2
 6927 35d8 488B85A8 		movq	-1624(%rbp), %rax
 6927      F9FFFF
 6928 35df 488B00   		movq	(%rax), %rax
 6929 35e2 4883C010 		addq	$16, %rax
 6930 35e6 488B10   		movq	(%rax), %rdx
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6931              		.loc 4 29 40 discriminator 2
 6932 35e9 488B85A8 		movq	-1624(%rbp), %rax
 6932      F9FFFF
 6933 35f0 4889C7   		movq	%rax, %rdi
 6934 35f3 FFD2     		call	*%rdx
 6935              	.LVL20:
 6936 35f5 4989C4   		movq	%rax, %r12
  30:../ExecuteTest.h **** 	}
 6937              		.loc 4 30 4 discriminator 2
 6938 35f8 488B85A8 		movq	-1624(%rbp), %rax
 6938      F9FFFF
 6939 35ff 4889C7   		movq	%rax, %rdi
 6940 3602 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 6940      00
 6941 3607 4189C5   		movl	%eax, %r13d
 6942 360a 488B85A8 		movq	-1624(%rbp), %rax
 6942      F9FFFF
 6943 3611 4889C7   		movq	%rax, %rdi
 6944 3614 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 6944      00
  30:../ExecuteTest.h **** 	}
 6945              		.loc 4 30 4 is_stmt 0 discriminator 1
 6946 3619 4889C1   		movq	%rax, %rcx
  30:../ExecuteTest.h **** 	}
 6947              		.loc 4 30 42 is_stmt 1 discriminator 1
 6948 361c 488B8590 		movq	-1648(%rbp), %rax
 6948      F9FFFF
 6949 3623 488B10   		movq	(%rax), %rdx
  30:../ExecuteTest.h **** 	}
 6950              		.loc 4 30 24 discriminator 1
 6951 3626 488B8590 		movq	-1648(%rbp), %rax
 6951      F9FFFF
 6952 362d 488B7008 		movq	8(%rax), %rsi
  30:../ExecuteTest.h **** 	}
 6953              		.loc 4 30 4 discriminator 1
 6954 3631 488D85B0 		leaq	-1616(%rbp), %rax
 6954      F9FFFF
 6955 3638 4589E8   		movl	%r13d, %r8d
 6956 363b 4889C7   		movq	%rax, %rdi
 6957 363e E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 6957      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6958              		.loc 4 29 40
 6959 3643 488D85B0 		leaq	-1616(%rbp), %rax
 6959      F9FFFF
 6960 364a 4C89E2   		movq	%r12, %rdx
 6961 364d 4889C6   		movq	%rax, %rsi
 6962 3650 4889DF   		movq	%rbx, %rdi
 6963 3653 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6963      00
 6964              	.LEHE193:
  27:../ExecuteTest.h **** 	{
 6965              		.loc 4 27 2
 6966 3658 E8000000 		call	__cxa_end_catch@PLT
 6966      00
 6967              	.LBE118:
 6968              		.loc 4 42 1
 6969 365d E9340100 		jmp	.L339
 6969      00
 6970              	.L345:
 6971              	.LBB119:
  32:../ExecuteTest.h **** 	{
 6972              		.loc 4 32 2
 6973 3662 4889C7   		movq	%rax, %rdi
 6974 3665 E8000000 		call	__cxa_begin_catch@PLT
 6974      00
  32:../ExecuteTest.h **** 	{
 6975              		.loc 4 32 31
 6976 366a 488985A0 		movq	%rax, -1632(%rbp)
 6976      F9FFFF
 6977              	.LBB120:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6978              		.loc 4 34 19
 6979 3671 488D85D0 		leaq	-1584(%rbp), %rax
 6979      F9FFFF
 6980 3678 4889C7   		movq	%rax, %rdi
 6981              	.LEHB194:
 6982 367b E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6982      00
 6983              	.LEHE194:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6984              		.loc 4 35 37
 6985 3680 488D85D0 		leaq	-1584(%rbp), %rax
 6985      F9FFFF
 6986 3687 488D1500 		leaq	.LC3(%rip), %rdx
 6986      000000
 6987 368e 4889D6   		movq	%rdx, %rsi
 6988 3691 4889C7   		movq	%rax, %rdi
 6989              	.LEHB195:
 6990 3694 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6990      00
 6991 3699 4889C3   		movq	%rax, %rbx
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6992              		.loc 4 35 46
 6993 369c 488B85A0 		movq	-1632(%rbp), %rax
 6993      F9FFFF
 6994 36a3 488B00   		movq	(%rax), %rax
 6995 36a6 4883C010 		addq	$16, %rax
 6996 36aa 488B10   		movq	(%rax), %rdx
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6997              		.loc 4 35 37
 6998 36ad 488B85A0 		movq	-1632(%rbp), %rax
 6998      F9FFFF
 6999 36b4 4889C7   		movq	%rax, %rdi
 7000 36b7 FFD2     		call	*%rdx
 7001              	.LVL21:
 7002 36b9 4889C6   		movq	%rax, %rsi
 7003 36bc 4889DF   		movq	%rbx, %rdi
 7004 36bf E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 7004      00
  36:../ExecuteTest.h **** 	}
 7005              		.loc 4 36 23
 7006 36c4 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 7006      00
  36:../ExecuteTest.h **** 	}
 7007              		.loc 4 36 40
 7008 36c9 488B18   		movq	(%rax), %rbx
 7009 36cc 488D85D0 		leaq	-1584(%rbp), %rax
 7009      F9FFFF
 7010 36d3 4889C7   		movq	%rax, %rdi
 7011 36d6 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 7011      00
  36:../ExecuteTest.h **** 	}
 7012              		.loc 4 36 40 is_stmt 0 discriminator 1
 7013 36db 4889C2   		movq	%rax, %rdx
 7014 36de 488B8590 		movq	-1648(%rbp), %rax
 7014      F9FFFF
 7015 36e5 4889C6   		movq	%rax, %rsi
 7016 36e8 4889DF   		movq	%rbx, %rdi
 7017 36eb E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 7017      00
 7018              	.LEHE195:
  37:../ExecuteTest.h **** 	catch (...)
 7019              		.loc 4 37 2 is_stmt 1
 7020 36f0 488D85D0 		leaq	-1584(%rbp), %rax
 7020      F9FFFF
 7021 36f7 4889C7   		movq	%rax, %rdi
 7022              	.LEHB196:
 7023 36fa E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7023      00
 7024              	.LEHE196:
 7025              	.LBE120:
  32:../ExecuteTest.h **** 	{
 7026              		.loc 4 32 2
 7027 36ff E8000000 		call	__cxa_end_catch@PLT
 7027      00
 7028              	.LBE119:
 7029              		.loc 4 42 1
 7030 3704 E98D0000 		jmp	.L339
 7030      00
 7031              	.L359:
  38:../ExecuteTest.h **** 	{
 7032              		.loc 4 38 2
 7033 3709 4889C7   		movq	%rax, %rdi
 7034 370c E8000000 		call	__cxa_begin_catch@PLT
 7034      00
 7035              	.LEHB197:
  40:../ExecuteTest.h **** 	}
 7036              		.loc 4 40 23
 7037 3711 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 7037      00
  40:../ExecuteTest.h **** 	}
 7038              		.loc 4 40 40
 7039 3716 488B00   		movq	(%rax), %rax
 7040 3719 488B8D90 		movq	-1648(%rbp), %rcx
 7040      F9FFFF
 7041 3720 488D1500 		leaq	.LC44(%rip), %rdx
 7041      000000
 7042 3727 4889CE   		movq	%rcx, %rsi
 7043 372a 4889C7   		movq	%rax, %rdi
 7044 372d E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 7044      00
 7045              	.LEHE197:
 7046              	.LEHB198:
  38:../ExecuteTest.h **** 	{
 7047              		.loc 4 38 2
 7048 3732 E8000000 		call	__cxa_end_catch@PLT
 7048      00
 7049              		.loc 4 42 1
 7050 3737 EB5D     		jmp	.L339
 7051              	.L355:
 7052 3739 F30F1EFA 		endbr64
 7053              	.LBB122:
  27:../ExecuteTest.h **** 	{
 7054              		.loc 4 27 2
 7055 373d 4889C3   		movq	%rax, %rbx
 7056 3740 E8000000 		call	__cxa_end_catch@PLT
 7056      00
 7057 3745 4889D8   		movq	%rbx, %rax
 7058 3748 4889C7   		movq	%rax, %rdi
 7059 374b E8000000 		call	_Unwind_Resume@PLT
 7059      00
 7060              	.LEHE198:
 7061              	.L357:
 7062 3750 F30F1EFA 		endbr64
 7063              	.LBE122:
 7064              	.LBB123:
 7065              	.LBB121:
  37:../ExecuteTest.h **** 	catch (...)
 7066              		.loc 4 37 2
 7067 3754 4889C3   		movq	%rax, %rbx
 7068 3757 488D85D0 		leaq	-1584(%rbp), %rax
 7068      F9FFFF
 7069 375e 4889C7   		movq	%rax, %rdi
 7070 3761 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7070      00
 7071 3766 EB07     		jmp	.L350
 7072              	.L356:
 7073 3768 F30F1EFA 		endbr64
 7074              	.LBE121:
  32:../ExecuteTest.h **** 	{
 7075              		.loc 4 32 2
 7076 376c 4889C3   		movq	%rax, %rbx
 7077              	.L350:
 7078 376f E8000000 		call	__cxa_end_catch@PLT
 7078      00
 7079 3774 4889D8   		movq	%rbx, %rax
 7080 3777 4889C7   		movq	%rax, %rdi
 7081              	.LEHB199:
 7082 377a E8000000 		call	_Unwind_Resume@PLT
 7082      00
 7083              	.LEHE199:
 7084              	.L358:
 7085 377f F30F1EFA 		endbr64
 7086              	.LBE123:
  38:../ExecuteTest.h **** 	{
 7087              		.loc 4 38 2
 7088 3783 4889C3   		movq	%rax, %rbx
 7089 3786 E8000000 		call	__cxa_end_catch@PLT
 7089      00
 7090 378b 4889D8   		movq	%rbx, %rax
 7091 378e 4889C7   		movq	%rax, %rdi
 7092              	.LEHB200:
 7093 3791 E8000000 		call	_Unwind_Resume@PLT
 7093      00
 7094              	.LEHE200:
 7095              	.L339:
 7096              		.loc 4 42 1
 7097 3796 488B45D8 		movq	-40(%rbp), %rax
 7098 379a 64482B04 		subq	%fs:40, %rax
 7098      25280000 
 7098      00
 7099 37a3 7405     		je	.L352
 7100 37a5 E8000000 		call	__stack_chk_fail@PLT
 7100      00
 7101              	.L352:
 7102 37aa 4881C458 		addq	$1624, %rsp
 7102      060000
 7103 37b1 5B       		popq	%rbx
 7104 37b2 415C     		popq	%r12
 7105 37b4 415D     		popq	%r13
 7106 37b6 5D       		popq	%rbp
 7107              		.cfi_def_cfa 7, 8
 7108 37b7 C3       		ret
 7109              		.cfi_endproc
 7110              	.LFE1533:
 7111              		.section	.gcc_except_table
 7112              		.align 4
 7113              	.LLSDA1533:
 7114 0578 FF       		.byte	0xff
 7115 0579 9B       		.byte	0x9b
 7116 057a 59       		.uleb128 .LLSDATT1533-.LLSDATTD1533
 7117              	.LLSDATTD1533:
 7118 057b 01       		.byte	0x1
 7119 057c 43       		.uleb128 .LLSDACSE1533-.LLSDACSB1533
 7120              	.LLSDACSB1533:
 7121 057d 31       		.uleb128 .LEHB189-.LFB1533
 7122 057e 05       		.uleb128 .LEHE189-.LEHB189
 7123 057f 00       		.uleb128 0
 7124 0580 00       		.uleb128 0
 7125 0581 4A       		.uleb128 .LEHB190-.LFB1533
 7126 0582 05       		.uleb128 .LEHE190-.LEHB190
 7127 0583 DF01     		.uleb128 .L353-.LFB1533
 7128 0585 05       		.uleb128 0x5
 7129 0586 9601     		.uleb128 .LEHB191-.LFB1533
 7130 0588 14       		.uleb128 .LEHE191-.LEHB191
 7131 0589 BE01     		.uleb128 .L354-.LFB1533
 7132 058b 07       		.uleb128 0x7
 7133 058c B401     		.uleb128 .LEHB192-.LFB1533
 7134 058e 05       		.uleb128 .LEHE192-.LEHB192
 7135 058f DF01     		.uleb128 .L353-.LFB1533
 7136 0591 05       		.uleb128 0x5
 7137 0592 8702     		.uleb128 .LEHB193-.LFB1533
 7138 0594 8801     		.uleb128 .LEHE193-.LEHB193
 7139 0596 F004     		.uleb128 .L355-.LFB1533
 7140 0598 00       		.uleb128 0
 7141 0599 B203     		.uleb128 .LEHB194-.LFB1533
 7142 059b 05       		.uleb128 .LEHE194-.LEHB194
 7143 059c 9F05     		.uleb128 .L356-.LFB1533
 7144 059e 00       		.uleb128 0
 7145 059f CB03     		.uleb128 .LEHB195-.LFB1533
 7146 05a1 5C       		.uleb128 .LEHE195-.LEHB195
 7147 05a2 8705     		.uleb128 .L357-.LFB1533
 7148 05a4 00       		.uleb128 0
 7149 05a5 B104     		.uleb128 .LEHB196-.LFB1533
 7150 05a7 05       		.uleb128 .LEHE196-.LEHB196
 7151 05a8 9F05     		.uleb128 .L356-.LFB1533
 7152 05aa 00       		.uleb128 0
 7153 05ab C804     		.uleb128 .LEHB197-.LFB1533
 7154 05ad 21       		.uleb128 .LEHE197-.LEHB197
 7155 05ae B605     		.uleb128 .L358-.LFB1533
 7156 05b0 00       		.uleb128 0
 7157 05b1 E904     		.uleb128 .LEHB198-.LFB1533
 7158 05b3 1E       		.uleb128 .LEHE198-.LEHB198
 7159 05b4 00       		.uleb128 0
 7160 05b5 00       		.uleb128 0
 7161 05b6 B105     		.uleb128 .LEHB199-.LFB1533
 7162 05b8 05       		.uleb128 .LEHE199-.LEHB199
 7163 05b9 00       		.uleb128 0
 7164 05ba 00       		.uleb128 0
 7165 05bb C805     		.uleb128 .LEHB200-.LFB1533
 7166 05bd 05       		.uleb128 .LEHE200-.LEHB200
 7167 05be 00       		.uleb128 0
 7168 05bf 00       		.uleb128 0
 7169              	.LLSDACSE1533:
 7170 05c0 03       		.byte	0x3
 7171 05c1 00       		.byte	0
 7172 05c2 02       		.byte	0x2
 7173 05c3 7D       		.byte	0x7d
 7174 05c4 01       		.byte	0x1
 7175 05c5 7D       		.byte	0x7d
 7176 05c6 00       		.byte	0
 7177 05c7 7D       		.byte	0x7d
 7178              		.align 4
 7179 05c8 00000000 		.long	0
 7180              	
 7181 05cc 00000000 		.long	DW.ref._ZTISt9exception-.
 7182 05d0 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 7183              	.LLSDATT1533:
 7184              		.text
 7187              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryF
 7188              	.LFB1534:
  16:../ExecuteTest.h **** {
 7189              		.loc 4 16 6
 7190              		.cfi_startproc
 7191              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 7192              		.cfi_lsda 0x1b,.LLSDA1534
 7193 37b8 F30F1EFA 		endbr64
 7194 37bc 55       		pushq	%rbp
 7195              		.cfi_def_cfa_offset 16
 7196              		.cfi_offset 6, -16
 7197 37bd 4889E5   		movq	%rsp, %rbp
 7198              		.cfi_def_cfa_register 6
 7199 37c0 4155     		pushq	%r13
 7200 37c2 4154     		pushq	%r12
 7201 37c4 53       		pushq	%rbx
 7202 37c5 4881EC58 		subq	$1624, %rsp
 7202      060000
 7203              		.cfi_offset 13, -24
 7204              		.cfi_offset 12, -32
 7205              		.cfi_offset 3, -40
 7206 37cc 4889BD98 		movq	%rdi, -1640(%rbp)
 7206      F9FFFF
 7207 37d3 4889B590 		movq	%rsi, -1648(%rbp)
 7207      F9FFFF
  16:../ExecuteTest.h **** {
 7208              		.loc 4 16 6
 7209 37da 64488B04 		movq	%fs:40, %rax
 7209      25280000 
 7209      00
 7210 37e3 488945D8 		movq	%rax, -40(%rbp)
 7211 37e7 31C0     		xorl	%eax, %eax
 7212              	.LEHB201:
  18:../ExecuteTest.h **** 
 7213              		.loc 4 18 22
 7214 37e9 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 7214      00
 7215              	.LEHE201:
  18:../ExecuteTest.h **** 
 7216              		.loc 4 18 25
 7217 37ee 488B9590 		movq	-1648(%rbp), %rdx
 7217      F9FFFF
 7218 37f5 488910   		movq	%rdx, (%rax)
 7219              	.LBB124:
  23:../ExecuteTest.h **** #endif
 7220              		.loc 4 23 3
 7221 37f8 488D8570 		leaq	-1168(%rbp), %rax
 7221      FBFFFF
 7222 37ff 4889C7   		movq	%rax, %rdi
 7223              	.LEHB202:
 7224 3802 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev@PLT
 7224      00
 7225              	.LEHE202:
  23:../ExecuteTest.h **** #endif
 7226              		.loc 4 23 3 is_stmt 0 discriminator 1
 7227 3807 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 7227      000000
 7228 380e BE010000 		movl	$1, %esi
 7228      00
 7229 3813 4889C7   		movq	%rax, %rdi
 7230 3816 E8000000 		call	__sigsetjmp@PLT
 7230      00
 7231 381b F30F1EFA 		endbr64
 7232 381f 85C0     		testl	%eax, %eax
 7233 3821 0F95C0   		setne	%al
 7234 3824 84C0     		testb	%al, %al
 7235 3826 742B     		je	.L362
  23:../ExecuteTest.h **** #endif
 7236              		.loc 4 23 3 discriminator 4
 7237 3828 BF080000 		movl	$8, %edi
 7237      00
 7238 382d E8000000 		call	__cxa_allocate_exception@PLT
 7238      00
 7239 3832 488D1500 		leaq	.LC43(%rip), %rdx
 7239      000000
 7240 3839 488910   		movq	%rdx, (%rax)
 7241 383c BA000000 		movl	$0, %edx
 7241      00
 7242 3841 488D0D00 		leaq	_ZTIPKc(%rip), %rcx
 7242      000000
 7243 3848 4889CE   		movq	%rcx, %rsi
 7244 384b 4889C7   		movq	%rax, %rdi
 7245              	.LEHB203:
 7246 384e E8000000 		call	__cxa_throw@PLT
 7246      00
 7247              	.L362:
  25:../ExecuteTest.h **** 	}
 7248              		.loc 4 25 21 is_stmt 1
 7249 3853 488B8598 		movq	-1640(%rbp), %rax
 7249      F9FFFF
 7250 385a 4889C7   		movq	%rax, %rdi
 7251 385d E88ADDFF 		call	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelper7RunImp
 7251      FF
 7252              	.LEHE203:
  26:../ExecuteTest.h **** 	catch (AssertException const& e)
 7253              		.loc 4 26 2
 7254 3862 488D8570 		leaq	-1168(%rbp), %rax
 7254      FBFFFF
 7255 3869 4889C7   		movq	%rax, %rdi
 7256              	.LEHB204:
 7257 386c E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 7257      00
 7258              	.LEHE204:
 7259              	.LBE124:
 7260              		.loc 4 42 1
 7261 3871 E90F0200 		jmp	.L360
 7261      00
 7262              	.L375:
 7263 3876 F30F1EFA 		endbr64
 7264              	.LBB125:
  26:../ExecuteTest.h **** 	catch (AssertException const& e)
 7265              		.loc 4 26 2
 7266 387a 4989C4   		movq	%rax, %r12
 7267 387d 4889D3   		movq	%rdx, %rbx
 7268 3880 488D8570 		leaq	-1168(%rbp), %rax
 7268      FBFFFF
 7269 3887 4889C7   		movq	%rax, %rdi
 7270 388a E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 7270      00
 7271 388f 4C89E0   		movq	%r12, %rax
 7272 3892 4889DA   		movq	%rbx, %rdx
 7273 3895 EB04     		jmp	.L364
 7274              	.L374:
 7275 3897 F30F1EFA 		endbr64
 7276              	.L364:
 7277              	.LBE125:
  27:../ExecuteTest.h **** 	{
 7278              		.loc 4 27 2
 7279 389b 4883FA01 		cmpq	$1, %rdx
 7280 389f 740F     		je	.L365
 7281 38a1 4883FA02 		cmpq	$2, %rdx
 7282 38a5 0F84A600 		je	.L366
 7282      0000
 7283 38ab E9480100 		jmp	.L380
 7283      00
 7284              	.L365:
 7285              	.LBB126:
  27:../ExecuteTest.h **** 	{
 7286              		.loc 4 27 2 is_stmt 0 discriminator 1
 7287 38b0 4889C7   		movq	%rax, %rdi
 7288 38b3 E8000000 		call	__cxa_begin_catch@PLT
 7288      00
  27:../ExecuteTest.h **** 	{
 7289              		.loc 4 27 32 is_stmt 1 discriminator 1
 7290 38b8 488985A8 		movq	%rax, -1624(%rbp)
 7290      F9FFFF
 7291              	.LEHB205:
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7292              		.loc 4 29 23 discriminator 1
 7293 38bf E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 7293      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7294              		.loc 4 29 40 discriminator 2
 7295 38c4 488B18   		movq	(%rax), %rbx
  30:../ExecuteTest.h **** 	}
 7296              		.loc 4 30 90 discriminator 2
 7297 38c7 488B85A8 		movq	-1624(%rbp), %rax
 7297      F9FFFF
 7298 38ce 488B00   		movq	(%rax), %rax
 7299 38d1 4883C010 		addq	$16, %rax
 7300 38d5 488B10   		movq	(%rax), %rdx
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7301              		.loc 4 29 40 discriminator 2
 7302 38d8 488B85A8 		movq	-1624(%rbp), %rax
 7302      F9FFFF
 7303 38df 4889C7   		movq	%rax, %rdi
 7304 38e2 FFD2     		call	*%rdx
 7305              	.LVL22:
 7306 38e4 4989C4   		movq	%rax, %r12
  30:../ExecuteTest.h **** 	}
 7307              		.loc 4 30 4 discriminator 2
 7308 38e7 488B85A8 		movq	-1624(%rbp), %rax
 7308      F9FFFF
 7309 38ee 4889C7   		movq	%rax, %rdi
 7310 38f1 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 7310      00
 7311 38f6 4189C5   		movl	%eax, %r13d
 7312 38f9 488B85A8 		movq	-1624(%rbp), %rax
 7312      F9FFFF
 7313 3900 4889C7   		movq	%rax, %rdi
 7314 3903 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 7314      00
  30:../ExecuteTest.h **** 	}
 7315              		.loc 4 30 4 is_stmt 0 discriminator 1
 7316 3908 4889C1   		movq	%rax, %rcx
  30:../ExecuteTest.h **** 	}
 7317              		.loc 4 30 42 is_stmt 1 discriminator 1
 7318 390b 488B8590 		movq	-1648(%rbp), %rax
 7318      F9FFFF
 7319 3912 488B10   		movq	(%rax), %rdx
  30:../ExecuteTest.h **** 	}
 7320              		.loc 4 30 24 discriminator 1
 7321 3915 488B8590 		movq	-1648(%rbp), %rax
 7321      F9FFFF
 7322 391c 488B7008 		movq	8(%rax), %rsi
  30:../ExecuteTest.h **** 	}
 7323              		.loc 4 30 4 discriminator 1
 7324 3920 488D85B0 		leaq	-1616(%rbp), %rax
 7324      F9FFFF
 7325 3927 4589E8   		movl	%r13d, %r8d
 7326 392a 4889C7   		movq	%rax, %rdi
 7327 392d E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 7327      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7328              		.loc 4 29 40
 7329 3932 488D85B0 		leaq	-1616(%rbp), %rax
 7329      F9FFFF
 7330 3939 4C89E2   		movq	%r12, %rdx
 7331 393c 4889C6   		movq	%rax, %rsi
 7332 393f 4889DF   		movq	%rbx, %rdi
 7333 3942 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 7333      00
 7334              	.LEHE205:
  27:../ExecuteTest.h **** 	{
 7335              		.loc 4 27 2
 7336 3947 E8000000 		call	__cxa_end_catch@PLT
 7336      00
 7337              	.LBE126:
 7338              		.loc 4 42 1
 7339 394c E9340100 		jmp	.L360
 7339      00
 7340              	.L366:
 7341              	.LBB127:
  32:../ExecuteTest.h **** 	{
 7342              		.loc 4 32 2
 7343 3951 4889C7   		movq	%rax, %rdi
 7344 3954 E8000000 		call	__cxa_begin_catch@PLT
 7344      00
  32:../ExecuteTest.h **** 	{
 7345              		.loc 4 32 31
 7346 3959 488985A0 		movq	%rax, -1632(%rbp)
 7346      F9FFFF
 7347              	.LBB128:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7348              		.loc 4 34 19
 7349 3960 488D85D0 		leaq	-1584(%rbp), %rax
 7349      F9FFFF
 7350 3967 4889C7   		movq	%rax, %rdi
 7351              	.LEHB206:
 7352 396a E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 7352      00
 7353              	.LEHE206:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7354              		.loc 4 35 37
 7355 396f 488D85D0 		leaq	-1584(%rbp), %rax
 7355      F9FFFF
 7356 3976 488D1500 		leaq	.LC3(%rip), %rdx
 7356      000000
 7357 397d 4889D6   		movq	%rdx, %rsi
 7358 3980 4889C7   		movq	%rax, %rdi
 7359              	.LEHB207:
 7360 3983 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 7360      00
 7361 3988 4889C3   		movq	%rax, %rbx
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7362              		.loc 4 35 46
 7363 398b 488B85A0 		movq	-1632(%rbp), %rax
 7363      F9FFFF
 7364 3992 488B00   		movq	(%rax), %rax
 7365 3995 4883C010 		addq	$16, %rax
 7366 3999 488B10   		movq	(%rax), %rdx
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7367              		.loc 4 35 37
 7368 399c 488B85A0 		movq	-1632(%rbp), %rax
 7368      F9FFFF
 7369 39a3 4889C7   		movq	%rax, %rdi
 7370 39a6 FFD2     		call	*%rdx
 7371              	.LVL23:
 7372 39a8 4889C6   		movq	%rax, %rsi
 7373 39ab 4889DF   		movq	%rbx, %rdi
 7374 39ae E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 7374      00
  36:../ExecuteTest.h **** 	}
 7375              		.loc 4 36 23
 7376 39b3 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 7376      00
  36:../ExecuteTest.h **** 	}
 7377              		.loc 4 36 40
 7378 39b8 488B18   		movq	(%rax), %rbx
 7379 39bb 488D85D0 		leaq	-1584(%rbp), %rax
 7379      F9FFFF
 7380 39c2 4889C7   		movq	%rax, %rdi
 7381 39c5 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 7381      00
  36:../ExecuteTest.h **** 	}
 7382              		.loc 4 36 40 is_stmt 0 discriminator 1
 7383 39ca 4889C2   		movq	%rax, %rdx
 7384 39cd 488B8590 		movq	-1648(%rbp), %rax
 7384      F9FFFF
 7385 39d4 4889C6   		movq	%rax, %rsi
 7386 39d7 4889DF   		movq	%rbx, %rdi
 7387 39da E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 7387      00
 7388              	.LEHE207:
  37:../ExecuteTest.h **** 	catch (...)
 7389              		.loc 4 37 2 is_stmt 1
 7390 39df 488D85D0 		leaq	-1584(%rbp), %rax
 7390      F9FFFF
 7391 39e6 4889C7   		movq	%rax, %rdi
 7392              	.LEHB208:
 7393 39e9 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7393      00
 7394              	.LEHE208:
 7395              	.LBE128:
  32:../ExecuteTest.h **** 	{
 7396              		.loc 4 32 2
 7397 39ee E8000000 		call	__cxa_end_catch@PLT
 7397      00
 7398              	.LBE127:
 7399              		.loc 4 42 1
 7400 39f3 E98D0000 		jmp	.L360
 7400      00
 7401              	.L380:
  38:../ExecuteTest.h **** 	{
 7402              		.loc 4 38 2
 7403 39f8 4889C7   		movq	%rax, %rdi
 7404 39fb E8000000 		call	__cxa_begin_catch@PLT
 7404      00
 7405              	.LEHB209:
  40:../ExecuteTest.h **** 	}
 7406              		.loc 4 40 23
 7407 3a00 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 7407      00
  40:../ExecuteTest.h **** 	}
 7408              		.loc 4 40 40
 7409 3a05 488B00   		movq	(%rax), %rax
 7410 3a08 488B8D90 		movq	-1648(%rbp), %rcx
 7410      F9FFFF
 7411 3a0f 488D1500 		leaq	.LC44(%rip), %rdx
 7411      000000
 7412 3a16 4889CE   		movq	%rcx, %rsi
 7413 3a19 4889C7   		movq	%rax, %rdi
 7414 3a1c E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 7414      00
 7415              	.LEHE209:
 7416              	.LEHB210:
  38:../ExecuteTest.h **** 	{
 7417              		.loc 4 38 2
 7418 3a21 E8000000 		call	__cxa_end_catch@PLT
 7418      00
 7419              		.loc 4 42 1
 7420 3a26 EB5D     		jmp	.L360
 7421              	.L376:
 7422 3a28 F30F1EFA 		endbr64
 7423              	.LBB130:
  27:../ExecuteTest.h **** 	{
 7424              		.loc 4 27 2
 7425 3a2c 4889C3   		movq	%rax, %rbx
 7426 3a2f E8000000 		call	__cxa_end_catch@PLT
 7426      00
 7427 3a34 4889D8   		movq	%rbx, %rax
 7428 3a37 4889C7   		movq	%rax, %rdi
 7429 3a3a E8000000 		call	_Unwind_Resume@PLT
 7429      00
 7430              	.LEHE210:
 7431              	.L378:
 7432 3a3f F30F1EFA 		endbr64
 7433              	.LBE130:
 7434              	.LBB131:
 7435              	.LBB129:
  37:../ExecuteTest.h **** 	catch (...)
 7436              		.loc 4 37 2
 7437 3a43 4889C3   		movq	%rax, %rbx
 7438 3a46 488D85D0 		leaq	-1584(%rbp), %rax
 7438      F9FFFF
 7439 3a4d 4889C7   		movq	%rax, %rdi
 7440 3a50 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7440      00
 7441 3a55 EB07     		jmp	.L371
 7442              	.L377:
 7443 3a57 F30F1EFA 		endbr64
 7444              	.LBE129:
  32:../ExecuteTest.h **** 	{
 7445              		.loc 4 32 2
 7446 3a5b 4889C3   		movq	%rax, %rbx
 7447              	.L371:
 7448 3a5e E8000000 		call	__cxa_end_catch@PLT
 7448      00
 7449 3a63 4889D8   		movq	%rbx, %rax
 7450 3a66 4889C7   		movq	%rax, %rdi
 7451              	.LEHB211:
 7452 3a69 E8000000 		call	_Unwind_Resume@PLT
 7452      00
 7453              	.LEHE211:
 7454              	.L379:
 7455 3a6e F30F1EFA 		endbr64
 7456              	.LBE131:
  38:../ExecuteTest.h **** 	{
 7457              		.loc 4 38 2
 7458 3a72 4889C3   		movq	%rax, %rbx
 7459 3a75 E8000000 		call	__cxa_end_catch@PLT
 7459      00
 7460 3a7a 4889D8   		movq	%rbx, %rax
 7461 3a7d 4889C7   		movq	%rax, %rdi
 7462              	.LEHB212:
 7463 3a80 E8000000 		call	_Unwind_Resume@PLT
 7463      00
 7464              	.LEHE212:
 7465              	.L360:
 7466              		.loc 4 42 1
 7467 3a85 488B45D8 		movq	-40(%rbp), %rax
 7468 3a89 64482B04 		subq	%fs:40, %rax
 7468      25280000 
 7468      00
 7469 3a92 7405     		je	.L373
 7470 3a94 E8000000 		call	__stack_chk_fail@PLT
 7470      00
 7471              	.L373:
 7472 3a99 4881C458 		addq	$1624, %rsp
 7472      060000
 7473 3aa0 5B       		popq	%rbx
 7474 3aa1 415C     		popq	%r12
 7475 3aa3 415D     		popq	%r13
 7476 3aa5 5D       		popq	%rbp
 7477              		.cfi_def_cfa 7, 8
 7478 3aa6 C3       		ret
 7479              		.cfi_endproc
 7480              	.LFE1534:
 7481              		.section	.gcc_except_table
 7482              		.align 4
 7483              	.LLSDA1534:
 7484 05d4 FF       		.byte	0xff
 7485 05d5 9B       		.byte	0x9b
 7486 05d6 59       		.uleb128 .LLSDATT1534-.LLSDATTD1534
 7487              	.LLSDATTD1534:
 7488 05d7 01       		.byte	0x1
 7489 05d8 43       		.uleb128 .LLSDACSE1534-.LLSDACSB1534
 7490              	.LLSDACSB1534:
 7491 05d9 31       		.uleb128 .LEHB201-.LFB1534
 7492 05da 05       		.uleb128 .LEHE201-.LEHB201
 7493 05db 00       		.uleb128 0
 7494 05dc 00       		.uleb128 0
 7495 05dd 4A       		.uleb128 .LEHB202-.LFB1534
 7496 05de 05       		.uleb128 .LEHE202-.LEHB202
 7497 05df DF01     		.uleb128 .L374-.LFB1534
 7498 05e1 05       		.uleb128 0x5
 7499 05e2 9601     		.uleb128 .LEHB203-.LFB1534
 7500 05e4 14       		.uleb128 .LEHE203-.LEHB203
 7501 05e5 BE01     		.uleb128 .L375-.LFB1534
 7502 05e7 07       		.uleb128 0x7
 7503 05e8 B401     		.uleb128 .LEHB204-.LFB1534
 7504 05ea 05       		.uleb128 .LEHE204-.LEHB204
 7505 05eb DF01     		.uleb128 .L374-.LFB1534
 7506 05ed 05       		.uleb128 0x5
 7507 05ee 8702     		.uleb128 .LEHB205-.LFB1534
 7508 05f0 8801     		.uleb128 .LEHE205-.LEHB205
 7509 05f2 F004     		.uleb128 .L376-.LFB1534
 7510 05f4 00       		.uleb128 0
 7511 05f5 B203     		.uleb128 .LEHB206-.LFB1534
 7512 05f7 05       		.uleb128 .LEHE206-.LEHB206
 7513 05f8 9F05     		.uleb128 .L377-.LFB1534
 7514 05fa 00       		.uleb128 0
 7515 05fb CB03     		.uleb128 .LEHB207-.LFB1534
 7516 05fd 5C       		.uleb128 .LEHE207-.LEHB207
 7517 05fe 8705     		.uleb128 .L378-.LFB1534
 7518 0600 00       		.uleb128 0
 7519 0601 B104     		.uleb128 .LEHB208-.LFB1534
 7520 0603 05       		.uleb128 .LEHE208-.LEHB208
 7521 0604 9F05     		.uleb128 .L377-.LFB1534
 7522 0606 00       		.uleb128 0
 7523 0607 C804     		.uleb128 .LEHB209-.LFB1534
 7524 0609 21       		.uleb128 .LEHE209-.LEHB209
 7525 060a B605     		.uleb128 .L379-.LFB1534
 7526 060c 00       		.uleb128 0
 7527 060d E904     		.uleb128 .LEHB210-.LFB1534
 7528 060f 1E       		.uleb128 .LEHE210-.LEHB210
 7529 0610 00       		.uleb128 0
 7530 0611 00       		.uleb128 0
 7531 0612 B105     		.uleb128 .LEHB211-.LFB1534
 7532 0614 05       		.uleb128 .LEHE211-.LEHB211
 7533 0615 00       		.uleb128 0
 7534 0616 00       		.uleb128 0
 7535 0617 C805     		.uleb128 .LEHB212-.LFB1534
 7536 0619 05       		.uleb128 .LEHE212-.LEHB212
 7537 061a 00       		.uleb128 0
 7538 061b 00       		.uleb128 0
 7539              	.LLSDACSE1534:
 7540 061c 03       		.byte	0x3
 7541 061d 00       		.byte	0
 7542 061e 02       		.byte	0x2
 7543 061f 7D       		.byte	0x7d
 7544 0620 01       		.byte	0x1
 7545 0621 7D       		.byte	0x7d
 7546 0622 00       		.byte	0
 7547 0623 7D       		.byte	0x7d
 7548              		.align 4
 7549 0624 00000000 		.long	0
 7550              	
 7551 0628 00000000 		.long	DW.ref._ZTISt9exception-.
 7552 062c 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 7553              	.LLSDATT1534:
 7554              		.text
 7557              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryForma
 7558              	.LFB1535:
  16:../ExecuteTest.h **** {
 7559              		.loc 4 16 6
 7560              		.cfi_startproc
 7561              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 7562              		.cfi_lsda 0x1b,.LLSDA1535
 7563 3aa7 F30F1EFA 		endbr64
 7564 3aab 55       		pushq	%rbp
 7565              		.cfi_def_cfa_offset 16
 7566              		.cfi_offset 6, -16
 7567 3aac 4889E5   		movq	%rsp, %rbp
 7568              		.cfi_def_cfa_register 6
 7569 3aaf 4155     		pushq	%r13
 7570 3ab1 4154     		pushq	%r12
 7571 3ab3 53       		pushq	%rbx
 7572 3ab4 4881EC58 		subq	$1624, %rsp
 7572      060000
 7573              		.cfi_offset 13, -24
 7574              		.cfi_offset 12, -32
 7575              		.cfi_offset 3, -40
 7576 3abb 4889BD98 		movq	%rdi, -1640(%rbp)
 7576      F9FFFF
 7577 3ac2 4889B590 		movq	%rsi, -1648(%rbp)
 7577      F9FFFF
  16:../ExecuteTest.h **** {
 7578              		.loc 4 16 6
 7579 3ac9 64488B04 		movq	%fs:40, %rax
 7579      25280000 
 7579      00
 7580 3ad2 488945D8 		movq	%rax, -40(%rbp)
 7581 3ad6 31C0     		xorl	%eax, %eax
 7582              	.LEHB213:
  18:../ExecuteTest.h **** 
 7583              		.loc 4 18 22
 7584 3ad8 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 7584      00
 7585              	.LEHE213:
  18:../ExecuteTest.h **** 
 7586              		.loc 4 18 25
 7587 3add 488B9590 		movq	-1648(%rbp), %rdx
 7587      F9FFFF
 7588 3ae4 488910   		movq	%rdx, (%rax)
 7589              	.LBB132:
  23:../ExecuteTest.h **** #endif
 7590              		.loc 4 23 3
 7591 3ae7 488D8570 		leaq	-1168(%rbp), %rax
 7591      FBFFFF
 7592 3aee 4889C7   		movq	%rax, %rdi
 7593              	.LEHB214:
 7594 3af1 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev@PLT
 7594      00
 7595              	.LEHE214:
  23:../ExecuteTest.h **** #endif
 7596              		.loc 4 23 3 is_stmt 0 discriminator 1
 7597 3af6 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 7597      000000
 7598 3afd BE010000 		movl	$1, %esi
 7598      00
 7599 3b02 4889C7   		movq	%rax, %rdi
 7600 3b05 E8000000 		call	__sigsetjmp@PLT
 7600      00
 7601 3b0a F30F1EFA 		endbr64
 7602 3b0e 85C0     		testl	%eax, %eax
 7603 3b10 0F95C0   		setne	%al
 7604 3b13 84C0     		testb	%al, %al
 7605 3b15 742B     		je	.L383
  23:../ExecuteTest.h **** #endif
 7606              		.loc 4 23 3 discriminator 4
 7607 3b17 BF080000 		movl	$8, %edi
 7607      00
 7608 3b1c E8000000 		call	__cxa_allocate_exception@PLT
 7608      00
 7609 3b21 488D1500 		leaq	.LC43(%rip), %rdx
 7609      000000
 7610 3b28 488910   		movq	%rdx, (%rax)
 7611 3b2b BA000000 		movl	$0, %edx
 7611      00
 7612 3b30 488D0D00 		leaq	_ZTIPKc(%rip), %rcx
 7612      000000
 7613 3b37 4889CE   		movq	%rcx, %rsi
 7614 3b3a 4889C7   		movq	%rax, %rdi
 7615              	.LEHB215:
 7616 3b3d E8000000 		call	__cxa_throw@PLT
 7616      00
 7617              	.L383:
  25:../ExecuteTest.h **** 	}
 7618              		.loc 4 25 21 is_stmt 1
 7619 3b42 488B8598 		movq	-1640(%rbp), %rax
 7619      F9FFFF
 7620 3b49 4889C7   		movq	%rax, %rdi
 7621 3b4c E8FDDFFF 		call	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelper7RunImplEv
 7621      FF
 7622              	.LEHE215:
  26:../ExecuteTest.h **** 	catch (AssertException const& e)
 7623              		.loc 4 26 2
 7624 3b51 488D8570 		leaq	-1168(%rbp), %rax
 7624      FBFFFF
 7625 3b58 4889C7   		movq	%rax, %rdi
 7626              	.LEHB216:
 7627 3b5b E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 7627      00
 7628              	.LEHE216:
 7629              	.LBE132:
 7630              		.loc 4 42 1
 7631 3b60 E90F0200 		jmp	.L381
 7631      00
 7632              	.L396:
 7633 3b65 F30F1EFA 		endbr64
 7634              	.LBB133:
  26:../ExecuteTest.h **** 	catch (AssertException const& e)
 7635              		.loc 4 26 2
 7636 3b69 4989C4   		movq	%rax, %r12
 7637 3b6c 4889D3   		movq	%rdx, %rbx
 7638 3b6f 488D8570 		leaq	-1168(%rbp), %rax
 7638      FBFFFF
 7639 3b76 4889C7   		movq	%rax, %rdi
 7640 3b79 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 7640      00
 7641 3b7e 4C89E0   		movq	%r12, %rax
 7642 3b81 4889DA   		movq	%rbx, %rdx
 7643 3b84 EB04     		jmp	.L385
 7644              	.L395:
 7645 3b86 F30F1EFA 		endbr64
 7646              	.L385:
 7647              	.LBE133:
  27:../ExecuteTest.h **** 	{
 7648              		.loc 4 27 2
 7649 3b8a 4883FA01 		cmpq	$1, %rdx
 7650 3b8e 740F     		je	.L386
 7651 3b90 4883FA02 		cmpq	$2, %rdx
 7652 3b94 0F84A600 		je	.L387
 7652      0000
 7653 3b9a E9480100 		jmp	.L401
 7653      00
 7654              	.L386:
 7655              	.LBB134:
  27:../ExecuteTest.h **** 	{
 7656              		.loc 4 27 2 is_stmt 0 discriminator 1
 7657 3b9f 4889C7   		movq	%rax, %rdi
 7658 3ba2 E8000000 		call	__cxa_begin_catch@PLT
 7658      00
  27:../ExecuteTest.h **** 	{
 7659              		.loc 4 27 32 is_stmt 1 discriminator 1
 7660 3ba7 488985A8 		movq	%rax, -1624(%rbp)
 7660      F9FFFF
 7661              	.LEHB217:
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7662              		.loc 4 29 23 discriminator 1
 7663 3bae E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 7663      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7664              		.loc 4 29 40 discriminator 2
 7665 3bb3 488B18   		movq	(%rax), %rbx
  30:../ExecuteTest.h **** 	}
 7666              		.loc 4 30 90 discriminator 2
 7667 3bb6 488B85A8 		movq	-1624(%rbp), %rax
 7667      F9FFFF
 7668 3bbd 488B00   		movq	(%rax), %rax
 7669 3bc0 4883C010 		addq	$16, %rax
 7670 3bc4 488B10   		movq	(%rax), %rdx
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7671              		.loc 4 29 40 discriminator 2
 7672 3bc7 488B85A8 		movq	-1624(%rbp), %rax
 7672      F9FFFF
 7673 3bce 4889C7   		movq	%rax, %rdi
 7674 3bd1 FFD2     		call	*%rdx
 7675              	.LVL24:
 7676 3bd3 4989C4   		movq	%rax, %r12
  30:../ExecuteTest.h **** 	}
 7677              		.loc 4 30 4 discriminator 2
 7678 3bd6 488B85A8 		movq	-1624(%rbp), %rax
 7678      F9FFFF
 7679 3bdd 4889C7   		movq	%rax, %rdi
 7680 3be0 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 7680      00
 7681 3be5 4189C5   		movl	%eax, %r13d
 7682 3be8 488B85A8 		movq	-1624(%rbp), %rax
 7682      F9FFFF
 7683 3bef 4889C7   		movq	%rax, %rdi
 7684 3bf2 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 7684      00
  30:../ExecuteTest.h **** 	}
 7685              		.loc 4 30 4 is_stmt 0 discriminator 1
 7686 3bf7 4889C1   		movq	%rax, %rcx
  30:../ExecuteTest.h **** 	}
 7687              		.loc 4 30 42 is_stmt 1 discriminator 1
 7688 3bfa 488B8590 		movq	-1648(%rbp), %rax
 7688      F9FFFF
 7689 3c01 488B10   		movq	(%rax), %rdx
  30:../ExecuteTest.h **** 	}
 7690              		.loc 4 30 24 discriminator 1
 7691 3c04 488B8590 		movq	-1648(%rbp), %rax
 7691      F9FFFF
 7692 3c0b 488B7008 		movq	8(%rax), %rsi
  30:../ExecuteTest.h **** 	}
 7693              		.loc 4 30 4 discriminator 1
 7694 3c0f 488D85B0 		leaq	-1616(%rbp), %rax
 7694      F9FFFF
 7695 3c16 4589E8   		movl	%r13d, %r8d
 7696 3c19 4889C7   		movq	%rax, %rdi
 7697 3c1c E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 7697      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7698              		.loc 4 29 40
 7699 3c21 488D85B0 		leaq	-1616(%rbp), %rax
 7699      F9FFFF
 7700 3c28 4C89E2   		movq	%r12, %rdx
 7701 3c2b 4889C6   		movq	%rax, %rsi
 7702 3c2e 4889DF   		movq	%rbx, %rdi
 7703 3c31 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 7703      00
 7704              	.LEHE217:
  27:../ExecuteTest.h **** 	{
 7705              		.loc 4 27 2
 7706 3c36 E8000000 		call	__cxa_end_catch@PLT
 7706      00
 7707              	.LBE134:
 7708              		.loc 4 42 1
 7709 3c3b E9340100 		jmp	.L381
 7709      00
 7710              	.L387:
 7711              	.LBB135:
  32:../ExecuteTest.h **** 	{
 7712              		.loc 4 32 2
 7713 3c40 4889C7   		movq	%rax, %rdi
 7714 3c43 E8000000 		call	__cxa_begin_catch@PLT
 7714      00
  32:../ExecuteTest.h **** 	{
 7715              		.loc 4 32 31
 7716 3c48 488985A0 		movq	%rax, -1632(%rbp)
 7716      F9FFFF
 7717              	.LBB136:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7718              		.loc 4 34 19
 7719 3c4f 488D85D0 		leaq	-1584(%rbp), %rax
 7719      F9FFFF
 7720 3c56 4889C7   		movq	%rax, %rdi
 7721              	.LEHB218:
 7722 3c59 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 7722      00
 7723              	.LEHE218:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7724              		.loc 4 35 37
 7725 3c5e 488D85D0 		leaq	-1584(%rbp), %rax
 7725      F9FFFF
 7726 3c65 488D1500 		leaq	.LC3(%rip), %rdx
 7726      000000
 7727 3c6c 4889D6   		movq	%rdx, %rsi
 7728 3c6f 4889C7   		movq	%rax, %rdi
 7729              	.LEHB219:
 7730 3c72 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 7730      00
 7731 3c77 4889C3   		movq	%rax, %rbx
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7732              		.loc 4 35 46
 7733 3c7a 488B85A0 		movq	-1632(%rbp), %rax
 7733      F9FFFF
 7734 3c81 488B00   		movq	(%rax), %rax
 7735 3c84 4883C010 		addq	$16, %rax
 7736 3c88 488B10   		movq	(%rax), %rdx
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7737              		.loc 4 35 37
 7738 3c8b 488B85A0 		movq	-1632(%rbp), %rax
 7738      F9FFFF
 7739 3c92 4889C7   		movq	%rax, %rdi
 7740 3c95 FFD2     		call	*%rdx
 7741              	.LVL25:
 7742 3c97 4889C6   		movq	%rax, %rsi
 7743 3c9a 4889DF   		movq	%rbx, %rdi
 7744 3c9d E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 7744      00
  36:../ExecuteTest.h **** 	}
 7745              		.loc 4 36 23
 7746 3ca2 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 7746      00
  36:../ExecuteTest.h **** 	}
 7747              		.loc 4 36 40
 7748 3ca7 488B18   		movq	(%rax), %rbx
 7749 3caa 488D85D0 		leaq	-1584(%rbp), %rax
 7749      F9FFFF
 7750 3cb1 4889C7   		movq	%rax, %rdi
 7751 3cb4 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 7751      00
  36:../ExecuteTest.h **** 	}
 7752              		.loc 4 36 40 is_stmt 0 discriminator 1
 7753 3cb9 4889C2   		movq	%rax, %rdx
 7754 3cbc 488B8590 		movq	-1648(%rbp), %rax
 7754      F9FFFF
 7755 3cc3 4889C6   		movq	%rax, %rsi
 7756 3cc6 4889DF   		movq	%rbx, %rdi
 7757 3cc9 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 7757      00
 7758              	.LEHE219:
  37:../ExecuteTest.h **** 	catch (...)
 7759              		.loc 4 37 2 is_stmt 1
 7760 3cce 488D85D0 		leaq	-1584(%rbp), %rax
 7760      F9FFFF
 7761 3cd5 4889C7   		movq	%rax, %rdi
 7762              	.LEHB220:
 7763 3cd8 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7763      00
 7764              	.LEHE220:
 7765              	.LBE136:
  32:../ExecuteTest.h **** 	{
 7766              		.loc 4 32 2
 7767 3cdd E8000000 		call	__cxa_end_catch@PLT
 7767      00
 7768              	.LBE135:
 7769              		.loc 4 42 1
 7770 3ce2 E98D0000 		jmp	.L381
 7770      00
 7771              	.L401:
  38:../ExecuteTest.h **** 	{
 7772              		.loc 4 38 2
 7773 3ce7 4889C7   		movq	%rax, %rdi
 7774 3cea E8000000 		call	__cxa_begin_catch@PLT
 7774      00
 7775              	.LEHB221:
  40:../ExecuteTest.h **** 	}
 7776              		.loc 4 40 23
 7777 3cef E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 7777      00
  40:../ExecuteTest.h **** 	}
 7778              		.loc 4 40 40
 7779 3cf4 488B00   		movq	(%rax), %rax
 7780 3cf7 488B8D90 		movq	-1648(%rbp), %rcx
 7780      F9FFFF
 7781 3cfe 488D1500 		leaq	.LC44(%rip), %rdx
 7781      000000
 7782 3d05 4889CE   		movq	%rcx, %rsi
 7783 3d08 4889C7   		movq	%rax, %rdi
 7784 3d0b E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 7784      00
 7785              	.LEHE221:
 7786              	.LEHB222:
  38:../ExecuteTest.h **** 	{
 7787              		.loc 4 38 2
 7788 3d10 E8000000 		call	__cxa_end_catch@PLT
 7788      00
 7789              		.loc 4 42 1
 7790 3d15 EB5D     		jmp	.L381
 7791              	.L397:
 7792 3d17 F30F1EFA 		endbr64
 7793              	.LBB138:
  27:../ExecuteTest.h **** 	{
 7794              		.loc 4 27 2
 7795 3d1b 4889C3   		movq	%rax, %rbx
 7796 3d1e E8000000 		call	__cxa_end_catch@PLT
 7796      00
 7797 3d23 4889D8   		movq	%rbx, %rax
 7798 3d26 4889C7   		movq	%rax, %rdi
 7799 3d29 E8000000 		call	_Unwind_Resume@PLT
 7799      00
 7800              	.LEHE222:
 7801              	.L399:
 7802 3d2e F30F1EFA 		endbr64
 7803              	.LBE138:
 7804              	.LBB139:
 7805              	.LBB137:
  37:../ExecuteTest.h **** 	catch (...)
 7806              		.loc 4 37 2
 7807 3d32 4889C3   		movq	%rax, %rbx
 7808 3d35 488D85D0 		leaq	-1584(%rbp), %rax
 7808      F9FFFF
 7809 3d3c 4889C7   		movq	%rax, %rdi
 7810 3d3f E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7810      00
 7811 3d44 EB07     		jmp	.L392
 7812              	.L398:
 7813 3d46 F30F1EFA 		endbr64
 7814              	.LBE137:
  32:../ExecuteTest.h **** 	{
 7815              		.loc 4 32 2
 7816 3d4a 4889C3   		movq	%rax, %rbx
 7817              	.L392:
 7818 3d4d E8000000 		call	__cxa_end_catch@PLT
 7818      00
 7819 3d52 4889D8   		movq	%rbx, %rax
 7820 3d55 4889C7   		movq	%rax, %rdi
 7821              	.LEHB223:
 7822 3d58 E8000000 		call	_Unwind_Resume@PLT
 7822      00
 7823              	.LEHE223:
 7824              	.L400:
 7825 3d5d F30F1EFA 		endbr64
 7826              	.LBE139:
  38:../ExecuteTest.h **** 	{
 7827              		.loc 4 38 2
 7828 3d61 4889C3   		movq	%rax, %rbx
 7829 3d64 E8000000 		call	__cxa_end_catch@PLT
 7829      00
 7830 3d69 4889D8   		movq	%rbx, %rax
 7831 3d6c 4889C7   		movq	%rax, %rdi
 7832              	.LEHB224:
 7833 3d6f E8000000 		call	_Unwind_Resume@PLT
 7833      00
 7834              	.LEHE224:
 7835              	.L381:
 7836              		.loc 4 42 1
 7837 3d74 488B45D8 		movq	-40(%rbp), %rax
 7838 3d78 64482B04 		subq	%fs:40, %rax
 7838      25280000 
 7838      00
 7839 3d81 7405     		je	.L394
 7840 3d83 E8000000 		call	__stack_chk_fail@PLT
 7840      00
 7841              	.L394:
 7842 3d88 4881C458 		addq	$1624, %rsp
 7842      060000
 7843 3d8f 5B       		popq	%rbx
 7844 3d90 415C     		popq	%r12
 7845 3d92 415D     		popq	%r13
 7846 3d94 5D       		popq	%rbp
 7847              		.cfi_def_cfa 7, 8
 7848 3d95 C3       		ret
 7849              		.cfi_endproc
 7850              	.LFE1535:
 7851              		.section	.gcc_except_table
 7852              		.align 4
 7853              	.LLSDA1535:
 7854 0630 FF       		.byte	0xff
 7855 0631 9B       		.byte	0x9b
 7856 0632 59       		.uleb128 .LLSDATT1535-.LLSDATTD1535
 7857              	.LLSDATTD1535:
 7858 0633 01       		.byte	0x1
 7859 0634 43       		.uleb128 .LLSDACSE1535-.LLSDACSB1535
 7860              	.LLSDACSB1535:
 7861 0635 31       		.uleb128 .LEHB213-.LFB1535
 7862 0636 05       		.uleb128 .LEHE213-.LEHB213
 7863 0637 00       		.uleb128 0
 7864 0638 00       		.uleb128 0
 7865 0639 4A       		.uleb128 .LEHB214-.LFB1535
 7866 063a 05       		.uleb128 .LEHE214-.LEHB214
 7867 063b DF01     		.uleb128 .L395-.LFB1535
 7868 063d 05       		.uleb128 0x5
 7869 063e 9601     		.uleb128 .LEHB215-.LFB1535
 7870 0640 14       		.uleb128 .LEHE215-.LEHB215
 7871 0641 BE01     		.uleb128 .L396-.LFB1535
 7872 0643 07       		.uleb128 0x7
 7873 0644 B401     		.uleb128 .LEHB216-.LFB1535
 7874 0646 05       		.uleb128 .LEHE216-.LEHB216
 7875 0647 DF01     		.uleb128 .L395-.LFB1535
 7876 0649 05       		.uleb128 0x5
 7877 064a 8702     		.uleb128 .LEHB217-.LFB1535
 7878 064c 8801     		.uleb128 .LEHE217-.LEHB217
 7879 064e F004     		.uleb128 .L397-.LFB1535
 7880 0650 00       		.uleb128 0
 7881 0651 B203     		.uleb128 .LEHB218-.LFB1535
 7882 0653 05       		.uleb128 .LEHE218-.LEHB218
 7883 0654 9F05     		.uleb128 .L398-.LFB1535
 7884 0656 00       		.uleb128 0
 7885 0657 CB03     		.uleb128 .LEHB219-.LFB1535
 7886 0659 5C       		.uleb128 .LEHE219-.LEHB219
 7887 065a 8705     		.uleb128 .L399-.LFB1535
 7888 065c 00       		.uleb128 0
 7889 065d B104     		.uleb128 .LEHB220-.LFB1535
 7890 065f 05       		.uleb128 .LEHE220-.LEHB220
 7891 0660 9F05     		.uleb128 .L398-.LFB1535
 7892 0662 00       		.uleb128 0
 7893 0663 C804     		.uleb128 .LEHB221-.LFB1535
 7894 0665 21       		.uleb128 .LEHE221-.LEHB221
 7895 0666 B605     		.uleb128 .L400-.LFB1535
 7896 0668 00       		.uleb128 0
 7897 0669 E904     		.uleb128 .LEHB222-.LFB1535
 7898 066b 1E       		.uleb128 .LEHE222-.LEHB222
 7899 066c 00       		.uleb128 0
 7900 066d 00       		.uleb128 0
 7901 066e B105     		.uleb128 .LEHB223-.LFB1535
 7902 0670 05       		.uleb128 .LEHE223-.LEHB223
 7903 0671 00       		.uleb128 0
 7904 0672 00       		.uleb128 0
 7905 0673 C805     		.uleb128 .LEHB224-.LFB1535
 7906 0675 05       		.uleb128 .LEHE224-.LEHB224
 7907 0676 00       		.uleb128 0
 7908 0677 00       		.uleb128 0
 7909              	.LLSDACSE1535:
 7910 0678 03       		.byte	0x3
 7911 0679 00       		.byte	0
 7912 067a 02       		.byte	0x2
 7913 067b 7D       		.byte	0x7d
 7914 067c 01       		.byte	0x1
 7915 067d 7D       		.byte	0x7d
 7916 067e 00       		.byte	0
 7917 067f 7D       		.byte	0x7d
 7918              		.align 4
 7919 0680 00000000 		.long	0
 7920              	
 7921 0684 00000000 		.long	DW.ref._ZTISt9exception-.
 7922 0688 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 7923              	.LLSDATT1535:
 7924              		.text
 7927              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEE
 7928              	.LFB1536:
  16:../ExecuteTest.h **** {
 7929              		.loc 4 16 6
 7930              		.cfi_startproc
 7931              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 7932              		.cfi_lsda 0x1b,.LLSDA1536
 7933 3d96 F30F1EFA 		endbr64
 7934 3d9a 55       		pushq	%rbp
 7935              		.cfi_def_cfa_offset 16
 7936              		.cfi_offset 6, -16
 7937 3d9b 4889E5   		movq	%rsp, %rbp
 7938              		.cfi_def_cfa_register 6
 7939 3d9e 4155     		pushq	%r13
 7940 3da0 4154     		pushq	%r12
 7941 3da2 53       		pushq	%rbx
 7942 3da3 4881EC58 		subq	$1624, %rsp
 7942      060000
 7943              		.cfi_offset 13, -24
 7944              		.cfi_offset 12, -32
 7945              		.cfi_offset 3, -40
 7946 3daa 4889BD98 		movq	%rdi, -1640(%rbp)
 7946      F9FFFF
 7947 3db1 4889B590 		movq	%rsi, -1648(%rbp)
 7947      F9FFFF
  16:../ExecuteTest.h **** {
 7948              		.loc 4 16 6
 7949 3db8 64488B04 		movq	%fs:40, %rax
 7949      25280000 
 7949      00
 7950 3dc1 488945D8 		movq	%rax, -40(%rbp)
 7951 3dc5 31C0     		xorl	%eax, %eax
 7952              	.LEHB225:
  18:../ExecuteTest.h **** 
 7953              		.loc 4 18 22
 7954 3dc7 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 7954      00
 7955              	.LEHE225:
  18:../ExecuteTest.h **** 
 7956              		.loc 4 18 25
 7957 3dcc 488B9590 		movq	-1648(%rbp), %rdx
 7957      F9FFFF
 7958 3dd3 488910   		movq	%rdx, (%rax)
 7959              	.LBB140:
  23:../ExecuteTest.h **** #endif
 7960              		.loc 4 23 3
 7961 3dd6 488D8570 		leaq	-1168(%rbp), %rax
 7961      FBFFFF
 7962 3ddd 4889C7   		movq	%rax, %rdi
 7963              	.LEHB226:
 7964 3de0 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev@PLT
 7964      00
 7965              	.LEHE226:
  23:../ExecuteTest.h **** #endif
 7966              		.loc 4 23 3 is_stmt 0 discriminator 1
 7967 3de5 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 7967      000000
 7968 3dec BE010000 		movl	$1, %esi
 7968      00
 7969 3df1 4889C7   		movq	%rax, %rdi
 7970 3df4 E8000000 		call	__sigsetjmp@PLT
 7970      00
 7971 3df9 F30F1EFA 		endbr64
 7972 3dfd 85C0     		testl	%eax, %eax
 7973 3dff 0F95C0   		setne	%al
 7974 3e02 84C0     		testb	%al, %al
 7975 3e04 742B     		je	.L404
  23:../ExecuteTest.h **** #endif
 7976              		.loc 4 23 3 discriminator 4
 7977 3e06 BF080000 		movl	$8, %edi
 7977      00
 7978 3e0b E8000000 		call	__cxa_allocate_exception@PLT
 7978      00
 7979 3e10 488D1500 		leaq	.LC43(%rip), %rdx
 7979      000000
 7980 3e17 488910   		movq	%rdx, (%rax)
 7981 3e1a BA000000 		movl	$0, %edx
 7981      00
 7982 3e1f 488D0D00 		leaq	_ZTIPKc(%rip), %rcx
 7982      000000
 7983 3e26 4889CE   		movq	%rcx, %rsi
 7984 3e29 4889C7   		movq	%rax, %rdi
 7985              	.LEHB227:
 7986 3e2c E8000000 		call	__cxa_throw@PLT
 7986      00
 7987              	.L404:
  25:../ExecuteTest.h **** 	}
 7988              		.loc 4 25 21 is_stmt 1
 7989 3e31 488B8598 		movq	-1640(%rbp), %rax
 7989      F9FFFF
 7990 3e38 4889C7   		movq	%rax, %rdi
 7991 3e3b E894E2FF 		call	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelper7RunImplEv
 7991      FF
 7992              	.LEHE227:
  26:../ExecuteTest.h **** 	catch (AssertException const& e)
 7993              		.loc 4 26 2
 7994 3e40 488D8570 		leaq	-1168(%rbp), %rax
 7994      FBFFFF
 7995 3e47 4889C7   		movq	%rax, %rdi
 7996              	.LEHB228:
 7997 3e4a E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 7997      00
 7998              	.LEHE228:
 7999              	.LBE140:
 8000              		.loc 4 42 1
 8001 3e4f E90F0200 		jmp	.L402
 8001      00
 8002              	.L417:
 8003 3e54 F30F1EFA 		endbr64
 8004              	.LBB141:
  26:../ExecuteTest.h **** 	catch (AssertException const& e)
 8005              		.loc 4 26 2
 8006 3e58 4989C4   		movq	%rax, %r12
 8007 3e5b 4889D3   		movq	%rdx, %rbx
 8008 3e5e 488D8570 		leaq	-1168(%rbp), %rax
 8008      FBFFFF
 8009 3e65 4889C7   		movq	%rax, %rdi
 8010 3e68 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 8010      00
 8011 3e6d 4C89E0   		movq	%r12, %rax
 8012 3e70 4889DA   		movq	%rbx, %rdx
 8013 3e73 EB04     		jmp	.L406
 8014              	.L416:
 8015 3e75 F30F1EFA 		endbr64
 8016              	.L406:
 8017              	.LBE141:
  27:../ExecuteTest.h **** 	{
 8018              		.loc 4 27 2
 8019 3e79 4883FA01 		cmpq	$1, %rdx
 8020 3e7d 740F     		je	.L407
 8021 3e7f 4883FA02 		cmpq	$2, %rdx
 8022 3e83 0F84A600 		je	.L408
 8022      0000
 8023 3e89 E9480100 		jmp	.L422
 8023      00
 8024              	.L407:
 8025              	.LBB142:
  27:../ExecuteTest.h **** 	{
 8026              		.loc 4 27 2 is_stmt 0 discriminator 1
 8027 3e8e 4889C7   		movq	%rax, %rdi
 8028 3e91 E8000000 		call	__cxa_begin_catch@PLT
 8028      00
  27:../ExecuteTest.h **** 	{
 8029              		.loc 4 27 32 is_stmt 1 discriminator 1
 8030 3e96 488985A8 		movq	%rax, -1624(%rbp)
 8030      F9FFFF
 8031              	.LEHB229:
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8032              		.loc 4 29 23 discriminator 1
 8033 3e9d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 8033      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8034              		.loc 4 29 40 discriminator 2
 8035 3ea2 488B18   		movq	(%rax), %rbx
  30:../ExecuteTest.h **** 	}
 8036              		.loc 4 30 90 discriminator 2
 8037 3ea5 488B85A8 		movq	-1624(%rbp), %rax
 8037      F9FFFF
 8038 3eac 488B00   		movq	(%rax), %rax
 8039 3eaf 4883C010 		addq	$16, %rax
 8040 3eb3 488B10   		movq	(%rax), %rdx
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8041              		.loc 4 29 40 discriminator 2
 8042 3eb6 488B85A8 		movq	-1624(%rbp), %rax
 8042      F9FFFF
 8043 3ebd 4889C7   		movq	%rax, %rdi
 8044 3ec0 FFD2     		call	*%rdx
 8045              	.LVL26:
 8046 3ec2 4989C4   		movq	%rax, %r12
  30:../ExecuteTest.h **** 	}
 8047              		.loc 4 30 4 discriminator 2
 8048 3ec5 488B85A8 		movq	-1624(%rbp), %rax
 8048      F9FFFF
 8049 3ecc 4889C7   		movq	%rax, %rdi
 8050 3ecf E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 8050      00
 8051 3ed4 4189C5   		movl	%eax, %r13d
 8052 3ed7 488B85A8 		movq	-1624(%rbp), %rax
 8052      F9FFFF
 8053 3ede 4889C7   		movq	%rax, %rdi
 8054 3ee1 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 8054      00
  30:../ExecuteTest.h **** 	}
 8055              		.loc 4 30 4 is_stmt 0 discriminator 1
 8056 3ee6 4889C1   		movq	%rax, %rcx
  30:../ExecuteTest.h **** 	}
 8057              		.loc 4 30 42 is_stmt 1 discriminator 1
 8058 3ee9 488B8590 		movq	-1648(%rbp), %rax
 8058      F9FFFF
 8059 3ef0 488B10   		movq	(%rax), %rdx
  30:../ExecuteTest.h **** 	}
 8060              		.loc 4 30 24 discriminator 1
 8061 3ef3 488B8590 		movq	-1648(%rbp), %rax
 8061      F9FFFF
 8062 3efa 488B7008 		movq	8(%rax), %rsi
  30:../ExecuteTest.h **** 	}
 8063              		.loc 4 30 4 discriminator 1
 8064 3efe 488D85B0 		leaq	-1616(%rbp), %rax
 8064      F9FFFF
 8065 3f05 4589E8   		movl	%r13d, %r8d
 8066 3f08 4889C7   		movq	%rax, %rdi
 8067 3f0b E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 8067      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8068              		.loc 4 29 40
 8069 3f10 488D85B0 		leaq	-1616(%rbp), %rax
 8069      F9FFFF
 8070 3f17 4C89E2   		movq	%r12, %rdx
 8071 3f1a 4889C6   		movq	%rax, %rsi
 8072 3f1d 4889DF   		movq	%rbx, %rdi
 8073 3f20 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 8073      00
 8074              	.LEHE229:
  27:../ExecuteTest.h **** 	{
 8075              		.loc 4 27 2
 8076 3f25 E8000000 		call	__cxa_end_catch@PLT
 8076      00
 8077              	.LBE142:
 8078              		.loc 4 42 1
 8079 3f2a E9340100 		jmp	.L402
 8079      00
 8080              	.L408:
 8081              	.LBB143:
  32:../ExecuteTest.h **** 	{
 8082              		.loc 4 32 2
 8083 3f2f 4889C7   		movq	%rax, %rdi
 8084 3f32 E8000000 		call	__cxa_begin_catch@PLT
 8084      00
  32:../ExecuteTest.h **** 	{
 8085              		.loc 4 32 31
 8086 3f37 488985A0 		movq	%rax, -1632(%rbp)
 8086      F9FFFF
 8087              	.LBB144:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 8088              		.loc 4 34 19
 8089 3f3e 488D85D0 		leaq	-1584(%rbp), %rax
 8089      F9FFFF
 8090 3f45 4889C7   		movq	%rax, %rdi
 8091              	.LEHB230:
 8092 3f48 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 8092      00
 8093              	.LEHE230:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 8094              		.loc 4 35 37
 8095 3f4d 488D85D0 		leaq	-1584(%rbp), %rax
 8095      F9FFFF
 8096 3f54 488D1500 		leaq	.LC3(%rip), %rdx
 8096      000000
 8097 3f5b 4889D6   		movq	%rdx, %rsi
 8098 3f5e 4889C7   		movq	%rax, %rdi
 8099              	.LEHB231:
 8100 3f61 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 8100      00
 8101 3f66 4889C3   		movq	%rax, %rbx
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 8102              		.loc 4 35 46
 8103 3f69 488B85A0 		movq	-1632(%rbp), %rax
 8103      F9FFFF
 8104 3f70 488B00   		movq	(%rax), %rax
 8105 3f73 4883C010 		addq	$16, %rax
 8106 3f77 488B10   		movq	(%rax), %rdx
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 8107              		.loc 4 35 37
 8108 3f7a 488B85A0 		movq	-1632(%rbp), %rax
 8108      F9FFFF
 8109 3f81 4889C7   		movq	%rax, %rdi
 8110 3f84 FFD2     		call	*%rdx
 8111              	.LVL27:
 8112 3f86 4889C6   		movq	%rax, %rsi
 8113 3f89 4889DF   		movq	%rbx, %rdi
 8114 3f8c E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 8114      00
  36:../ExecuteTest.h **** 	}
 8115              		.loc 4 36 23
 8116 3f91 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 8116      00
  36:../ExecuteTest.h **** 	}
 8117              		.loc 4 36 40
 8118 3f96 488B18   		movq	(%rax), %rbx
 8119 3f99 488D85D0 		leaq	-1584(%rbp), %rax
 8119      F9FFFF
 8120 3fa0 4889C7   		movq	%rax, %rdi
 8121 3fa3 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 8121      00
  36:../ExecuteTest.h **** 	}
 8122              		.loc 4 36 40 is_stmt 0 discriminator 1
 8123 3fa8 4889C2   		movq	%rax, %rdx
 8124 3fab 488B8590 		movq	-1648(%rbp), %rax
 8124      F9FFFF
 8125 3fb2 4889C6   		movq	%rax, %rsi
 8126 3fb5 4889DF   		movq	%rbx, %rdi
 8127 3fb8 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 8127      00
 8128              	.LEHE231:
  37:../ExecuteTest.h **** 	catch (...)
 8129              		.loc 4 37 2 is_stmt 1
 8130 3fbd 488D85D0 		leaq	-1584(%rbp), %rax
 8130      F9FFFF
 8131 3fc4 4889C7   		movq	%rax, %rdi
 8132              	.LEHB232:
 8133 3fc7 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 8133      00
 8134              	.LEHE232:
 8135              	.LBE144:
  32:../ExecuteTest.h **** 	{
 8136              		.loc 4 32 2
 8137 3fcc E8000000 		call	__cxa_end_catch@PLT
 8137      00
 8138              	.LBE143:
 8139              		.loc 4 42 1
 8140 3fd1 E98D0000 		jmp	.L402
 8140      00
 8141              	.L422:
  38:../ExecuteTest.h **** 	{
 8142              		.loc 4 38 2
 8143 3fd6 4889C7   		movq	%rax, %rdi
 8144 3fd9 E8000000 		call	__cxa_begin_catch@PLT
 8144      00
 8145              	.LEHB233:
  40:../ExecuteTest.h **** 	}
 8146              		.loc 4 40 23
 8147 3fde E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 8147      00
  40:../ExecuteTest.h **** 	}
 8148              		.loc 4 40 40
 8149 3fe3 488B00   		movq	(%rax), %rax
 8150 3fe6 488B8D90 		movq	-1648(%rbp), %rcx
 8150      F9FFFF
 8151 3fed 488D1500 		leaq	.LC44(%rip), %rdx
 8151      000000
 8152 3ff4 4889CE   		movq	%rcx, %rsi
 8153 3ff7 4889C7   		movq	%rax, %rdi
 8154 3ffa E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 8154      00
 8155              	.LEHE233:
 8156              	.LEHB234:
  38:../ExecuteTest.h **** 	{
 8157              		.loc 4 38 2
 8158 3fff E8000000 		call	__cxa_end_catch@PLT
 8158      00
 8159              		.loc 4 42 1
 8160 4004 EB5D     		jmp	.L402
 8161              	.L418:
 8162 4006 F30F1EFA 		endbr64
 8163              	.LBB146:
  27:../ExecuteTest.h **** 	{
 8164              		.loc 4 27 2
 8165 400a 4889C3   		movq	%rax, %rbx
 8166 400d E8000000 		call	__cxa_end_catch@PLT
 8166      00
 8167 4012 4889D8   		movq	%rbx, %rax
 8168 4015 4889C7   		movq	%rax, %rdi
 8169 4018 E8000000 		call	_Unwind_Resume@PLT
 8169      00
 8170              	.LEHE234:
 8171              	.L420:
 8172 401d F30F1EFA 		endbr64
 8173              	.LBE146:
 8174              	.LBB147:
 8175              	.LBB145:
  37:../ExecuteTest.h **** 	catch (...)
 8176              		.loc 4 37 2
 8177 4021 4889C3   		movq	%rax, %rbx
 8178 4024 488D85D0 		leaq	-1584(%rbp), %rax
 8178      F9FFFF
 8179 402b 4889C7   		movq	%rax, %rdi
 8180 402e E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 8180      00
 8181 4033 EB07     		jmp	.L413
 8182              	.L419:
 8183 4035 F30F1EFA 		endbr64
 8184              	.LBE145:
  32:../ExecuteTest.h **** 	{
 8185              		.loc 4 32 2
 8186 4039 4889C3   		movq	%rax, %rbx
 8187              	.L413:
 8188 403c E8000000 		call	__cxa_end_catch@PLT
 8188      00
 8189 4041 4889D8   		movq	%rbx, %rax
 8190 4044 4889C7   		movq	%rax, %rdi
 8191              	.LEHB235:
 8192 4047 E8000000 		call	_Unwind_Resume@PLT
 8192      00
 8193              	.LEHE235:
 8194              	.L421:
 8195 404c F30F1EFA 		endbr64
 8196              	.LBE147:
  38:../ExecuteTest.h **** 	{
 8197              		.loc 4 38 2
 8198 4050 4889C3   		movq	%rax, %rbx
 8199 4053 E8000000 		call	__cxa_end_catch@PLT
 8199      00
 8200 4058 4889D8   		movq	%rbx, %rax
 8201 405b 4889C7   		movq	%rax, %rdi
 8202              	.LEHB236:
 8203 405e E8000000 		call	_Unwind_Resume@PLT
 8203      00
 8204              	.LEHE236:
 8205              	.L402:
 8206              		.loc 4 42 1
 8207 4063 488B45D8 		movq	-40(%rbp), %rax
 8208 4067 64482B04 		subq	%fs:40, %rax
 8208      25280000 
 8208      00
 8209 4070 7405     		je	.L415
 8210 4072 E8000000 		call	__stack_chk_fail@PLT
 8210      00
 8211              	.L415:
 8212 4077 4881C458 		addq	$1624, %rsp
 8212      060000
 8213 407e 5B       		popq	%rbx
 8214 407f 415C     		popq	%r12
 8215 4081 415D     		popq	%r13
 8216 4083 5D       		popq	%rbp
 8217              		.cfi_def_cfa 7, 8
 8218 4084 C3       		ret
 8219              		.cfi_endproc
 8220              	.LFE1536:
 8221              		.section	.gcc_except_table
 8222              		.align 4
 8223              	.LLSDA1536:
 8224 068c FF       		.byte	0xff
 8225 068d 9B       		.byte	0x9b
 8226 068e 59       		.uleb128 .LLSDATT1536-.LLSDATTD1536
 8227              	.LLSDATTD1536:
 8228 068f 01       		.byte	0x1
 8229 0690 43       		.uleb128 .LLSDACSE1536-.LLSDACSB1536
 8230              	.LLSDACSB1536:
 8231 0691 31       		.uleb128 .LEHB225-.LFB1536
 8232 0692 05       		.uleb128 .LEHE225-.LEHB225
 8233 0693 00       		.uleb128 0
 8234 0694 00       		.uleb128 0
 8235 0695 4A       		.uleb128 .LEHB226-.LFB1536
 8236 0696 05       		.uleb128 .LEHE226-.LEHB226
 8237 0697 DF01     		.uleb128 .L416-.LFB1536
 8238 0699 05       		.uleb128 0x5
 8239 069a 9601     		.uleb128 .LEHB227-.LFB1536
 8240 069c 14       		.uleb128 .LEHE227-.LEHB227
 8241 069d BE01     		.uleb128 .L417-.LFB1536
 8242 069f 07       		.uleb128 0x7
 8243 06a0 B401     		.uleb128 .LEHB228-.LFB1536
 8244 06a2 05       		.uleb128 .LEHE228-.LEHB228
 8245 06a3 DF01     		.uleb128 .L416-.LFB1536
 8246 06a5 05       		.uleb128 0x5
 8247 06a6 8702     		.uleb128 .LEHB229-.LFB1536
 8248 06a8 8801     		.uleb128 .LEHE229-.LEHB229
 8249 06aa F004     		.uleb128 .L418-.LFB1536
 8250 06ac 00       		.uleb128 0
 8251 06ad B203     		.uleb128 .LEHB230-.LFB1536
 8252 06af 05       		.uleb128 .LEHE230-.LEHB230
 8253 06b0 9F05     		.uleb128 .L419-.LFB1536
 8254 06b2 00       		.uleb128 0
 8255 06b3 CB03     		.uleb128 .LEHB231-.LFB1536
 8256 06b5 5C       		.uleb128 .LEHE231-.LEHB231
 8257 06b6 8705     		.uleb128 .L420-.LFB1536
 8258 06b8 00       		.uleb128 0
 8259 06b9 B104     		.uleb128 .LEHB232-.LFB1536
 8260 06bb 05       		.uleb128 .LEHE232-.LEHB232
 8261 06bc 9F05     		.uleb128 .L419-.LFB1536
 8262 06be 00       		.uleb128 0
 8263 06bf C804     		.uleb128 .LEHB233-.LFB1536
 8264 06c1 21       		.uleb128 .LEHE233-.LEHB233
 8265 06c2 B605     		.uleb128 .L421-.LFB1536
 8266 06c4 00       		.uleb128 0
 8267 06c5 E904     		.uleb128 .LEHB234-.LFB1536
 8268 06c7 1E       		.uleb128 .LEHE234-.LEHB234
 8269 06c8 00       		.uleb128 0
 8270 06c9 00       		.uleb128 0
 8271 06ca B105     		.uleb128 .LEHB235-.LFB1536
 8272 06cc 05       		.uleb128 .LEHE235-.LEHB235
 8273 06cd 00       		.uleb128 0
 8274 06ce 00       		.uleb128 0
 8275 06cf C805     		.uleb128 .LEHB236-.LFB1536
 8276 06d1 05       		.uleb128 .LEHE236-.LEHB236
 8277 06d2 00       		.uleb128 0
 8278 06d3 00       		.uleb128 0
 8279              	.LLSDACSE1536:
 8280 06d4 03       		.byte	0x3
 8281 06d5 00       		.byte	0
 8282 06d6 02       		.byte	0x2
 8283 06d7 7D       		.byte	0x7d
 8284 06d8 01       		.byte	0x1
 8285 06d9 7D       		.byte	0x7d
 8286 06da 00       		.byte	0
 8287 06db 7D       		.byte	0x7d
 8288              		.align 4
 8289 06dc 00000000 		.long	0
 8290              	
 8291 06e0 00000000 		.long	DW.ref._ZTISt9exception-.
 8292 06e4 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 8293              	.LLSDATT1536:
 8294              		.text
 8297              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperEEEvR
 8298              	.LFB1537:
  16:../ExecuteTest.h **** {
 8299              		.loc 4 16 6
 8300              		.cfi_startproc
 8301              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8302              		.cfi_lsda 0x1b,.LLSDA1537
 8303 4085 F30F1EFA 		endbr64
 8304 4089 55       		pushq	%rbp
 8305              		.cfi_def_cfa_offset 16
 8306              		.cfi_offset 6, -16
 8307 408a 4889E5   		movq	%rsp, %rbp
 8308              		.cfi_def_cfa_register 6
 8309 408d 4155     		pushq	%r13
 8310 408f 4154     		pushq	%r12
 8311 4091 53       		pushq	%rbx
 8312 4092 4881EC58 		subq	$1624, %rsp
 8312      060000
 8313              		.cfi_offset 13, -24
 8314              		.cfi_offset 12, -32
 8315              		.cfi_offset 3, -40
 8316 4099 4889BD98 		movq	%rdi, -1640(%rbp)
 8316      F9FFFF
 8317 40a0 4889B590 		movq	%rsi, -1648(%rbp)
 8317      F9FFFF
  16:../ExecuteTest.h **** {
 8318              		.loc 4 16 6
 8319 40a7 64488B04 		movq	%fs:40, %rax
 8319      25280000 
 8319      00
 8320 40b0 488945D8 		movq	%rax, -40(%rbp)
 8321 40b4 31C0     		xorl	%eax, %eax
 8322              	.LEHB237:
  18:../ExecuteTest.h **** 
 8323              		.loc 4 18 22
 8324 40b6 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 8324      00
 8325              	.LEHE237:
  18:../ExecuteTest.h **** 
 8326              		.loc 4 18 25
 8327 40bb 488B9590 		movq	-1648(%rbp), %rdx
 8327      F9FFFF
 8328 40c2 488910   		movq	%rdx, (%rax)
 8329              	.LBB148:
  23:../ExecuteTest.h **** #endif
 8330              		.loc 4 23 3
 8331 40c5 488D8570 		leaq	-1168(%rbp), %rax
 8331      FBFFFF
 8332 40cc 4889C7   		movq	%rax, %rdi
 8333              	.LEHB238:
 8334 40cf E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev@PLT
 8334      00
 8335              	.LEHE238:
  23:../ExecuteTest.h **** #endif
 8336              		.loc 4 23 3 is_stmt 0 discriminator 1
 8337 40d4 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 8337      000000
 8338 40db BE010000 		movl	$1, %esi
 8338      00
 8339 40e0 4889C7   		movq	%rax, %rdi
 8340 40e3 E8000000 		call	__sigsetjmp@PLT
 8340      00
 8341 40e8 F30F1EFA 		endbr64
 8342 40ec 85C0     		testl	%eax, %eax
 8343 40ee 0F95C0   		setne	%al
 8344 40f1 84C0     		testb	%al, %al
 8345 40f3 742B     		je	.L425
  23:../ExecuteTest.h **** #endif
 8346              		.loc 4 23 3 discriminator 4
 8347 40f5 BF080000 		movl	$8, %edi
 8347      00
 8348 40fa E8000000 		call	__cxa_allocate_exception@PLT
 8348      00
 8349 40ff 488D1500 		leaq	.LC43(%rip), %rdx
 8349      000000
 8350 4106 488910   		movq	%rdx, (%rax)
 8351 4109 BA000000 		movl	$0, %edx
 8351      00
 8352 410e 488D0D00 		leaq	_ZTIPKc(%rip), %rcx
 8352      000000
 8353 4115 4889CE   		movq	%rcx, %rsi
 8354 4118 4889C7   		movq	%rax, %rdi
 8355              	.LEHB239:
 8356 411b E8000000 		call	__cxa_throw@PLT
 8356      00
 8357              	.L425:
  25:../ExecuteTest.h **** 	}
 8358              		.loc 4 25 21 is_stmt 1
 8359 4120 488B8598 		movq	-1640(%rbp), %rax
 8359      F9FFFF
 8360 4127 4889C7   		movq	%rax, %rdi
 8361 412a E853E5FF 		call	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelper7RunImplEv
 8361      FF
 8362              	.LEHE239:
  26:../ExecuteTest.h **** 	catch (AssertException const& e)
 8363              		.loc 4 26 2
 8364 412f 488D8570 		leaq	-1168(%rbp), %rax
 8364      FBFFFF
 8365 4136 4889C7   		movq	%rax, %rdi
 8366              	.LEHB240:
 8367 4139 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 8367      00
 8368              	.LEHE240:
 8369              	.LBE148:
 8370              		.loc 4 42 1
 8371 413e E90F0200 		jmp	.L423
 8371      00
 8372              	.L438:
 8373 4143 F30F1EFA 		endbr64
 8374              	.LBB149:
  26:../ExecuteTest.h **** 	catch (AssertException const& e)
 8375              		.loc 4 26 2
 8376 4147 4989C4   		movq	%rax, %r12
 8377 414a 4889D3   		movq	%rdx, %rbx
 8378 414d 488D8570 		leaq	-1168(%rbp), %rax
 8378      FBFFFF
 8379 4154 4889C7   		movq	%rax, %rdi
 8380 4157 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 8380      00
 8381 415c 4C89E0   		movq	%r12, %rax
 8382 415f 4889DA   		movq	%rbx, %rdx
 8383 4162 EB04     		jmp	.L427
 8384              	.L437:
 8385 4164 F30F1EFA 		endbr64
 8386              	.L427:
 8387              	.LBE149:
  27:../ExecuteTest.h **** 	{
 8388              		.loc 4 27 2
 8389 4168 4883FA01 		cmpq	$1, %rdx
 8390 416c 740F     		je	.L428
 8391 416e 4883FA02 		cmpq	$2, %rdx
 8392 4172 0F84A600 		je	.L429
 8392      0000
 8393 4178 E9480100 		jmp	.L443
 8393      00
 8394              	.L428:
 8395              	.LBB150:
  27:../ExecuteTest.h **** 	{
 8396              		.loc 4 27 2 is_stmt 0 discriminator 1
 8397 417d 4889C7   		movq	%rax, %rdi
 8398 4180 E8000000 		call	__cxa_begin_catch@PLT
 8398      00
  27:../ExecuteTest.h **** 	{
 8399              		.loc 4 27 32 is_stmt 1 discriminator 1
 8400 4185 488985A8 		movq	%rax, -1624(%rbp)
 8400      F9FFFF
 8401              	.LEHB241:
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8402              		.loc 4 29 23 discriminator 1
 8403 418c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 8403      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8404              		.loc 4 29 40 discriminator 2
 8405 4191 488B18   		movq	(%rax), %rbx
  30:../ExecuteTest.h **** 	}
 8406              		.loc 4 30 90 discriminator 2
 8407 4194 488B85A8 		movq	-1624(%rbp), %rax
 8407      F9FFFF
 8408 419b 488B00   		movq	(%rax), %rax
 8409 419e 4883C010 		addq	$16, %rax
 8410 41a2 488B10   		movq	(%rax), %rdx
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8411              		.loc 4 29 40 discriminator 2
 8412 41a5 488B85A8 		movq	-1624(%rbp), %rax
 8412      F9FFFF
 8413 41ac 4889C7   		movq	%rax, %rdi
 8414 41af FFD2     		call	*%rdx
 8415              	.LVL28:
 8416 41b1 4989C4   		movq	%rax, %r12
  30:../ExecuteTest.h **** 	}
 8417              		.loc 4 30 4 discriminator 2
 8418 41b4 488B85A8 		movq	-1624(%rbp), %rax
 8418      F9FFFF
 8419 41bb 4889C7   		movq	%rax, %rdi
 8420 41be E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 8420      00
 8421 41c3 4189C5   		movl	%eax, %r13d
 8422 41c6 488B85A8 		movq	-1624(%rbp), %rax
 8422      F9FFFF
 8423 41cd 4889C7   		movq	%rax, %rdi
 8424 41d0 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 8424      00
  30:../ExecuteTest.h **** 	}
 8425              		.loc 4 30 4 is_stmt 0 discriminator 1
 8426 41d5 4889C1   		movq	%rax, %rcx
  30:../ExecuteTest.h **** 	}
 8427              		.loc 4 30 42 is_stmt 1 discriminator 1
 8428 41d8 488B8590 		movq	-1648(%rbp), %rax
 8428      F9FFFF
 8429 41df 488B10   		movq	(%rax), %rdx
  30:../ExecuteTest.h **** 	}
 8430              		.loc 4 30 24 discriminator 1
 8431 41e2 488B8590 		movq	-1648(%rbp), %rax
 8431      F9FFFF
 8432 41e9 488B7008 		movq	8(%rax), %rsi
  30:../ExecuteTest.h **** 	}
 8433              		.loc 4 30 4 discriminator 1
 8434 41ed 488D85B0 		leaq	-1616(%rbp), %rax
 8434      F9FFFF
 8435 41f4 4589E8   		movl	%r13d, %r8d
 8436 41f7 4889C7   		movq	%rax, %rdi
 8437 41fa E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 8437      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8438              		.loc 4 29 40
 8439 41ff 488D85B0 		leaq	-1616(%rbp), %rax
 8439      F9FFFF
 8440 4206 4C89E2   		movq	%r12, %rdx
 8441 4209 4889C6   		movq	%rax, %rsi
 8442 420c 4889DF   		movq	%rbx, %rdi
 8443 420f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 8443      00
 8444              	.LEHE241:
  27:../ExecuteTest.h **** 	{
 8445              		.loc 4 27 2
 8446 4214 E8000000 		call	__cxa_end_catch@PLT
 8446      00
 8447              	.LBE150:
 8448              		.loc 4 42 1
 8449 4219 E9340100 		jmp	.L423
 8449      00
 8450              	.L429:
 8451              	.LBB151:
  32:../ExecuteTest.h **** 	{
 8452              		.loc 4 32 2
 8453 421e 4889C7   		movq	%rax, %rdi
 8454 4221 E8000000 		call	__cxa_begin_catch@PLT
 8454      00
  32:../ExecuteTest.h **** 	{
 8455              		.loc 4 32 31
 8456 4226 488985A0 		movq	%rax, -1632(%rbp)
 8456      F9FFFF
 8457              	.LBB152:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 8458              		.loc 4 34 19
 8459 422d 488D85D0 		leaq	-1584(%rbp), %rax
 8459      F9FFFF
 8460 4234 4889C7   		movq	%rax, %rdi
 8461              	.LEHB242:
 8462 4237 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 8462      00
 8463              	.LEHE242:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 8464              		.loc 4 35 37
 8465 423c 488D85D0 		leaq	-1584(%rbp), %rax
 8465      F9FFFF
 8466 4243 488D1500 		leaq	.LC3(%rip), %rdx
 8466      000000
 8467 424a 4889D6   		movq	%rdx, %rsi
 8468 424d 4889C7   		movq	%rax, %rdi
 8469              	.LEHB243:
 8470 4250 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 8470      00
 8471 4255 4889C3   		movq	%rax, %rbx
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 8472              		.loc 4 35 46
 8473 4258 488B85A0 		movq	-1632(%rbp), %rax
 8473      F9FFFF
 8474 425f 488B00   		movq	(%rax), %rax
 8475 4262 4883C010 		addq	$16, %rax
 8476 4266 488B10   		movq	(%rax), %rdx
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 8477              		.loc 4 35 37
 8478 4269 488B85A0 		movq	-1632(%rbp), %rax
 8478      F9FFFF
 8479 4270 4889C7   		movq	%rax, %rdi
 8480 4273 FFD2     		call	*%rdx
 8481              	.LVL29:
 8482 4275 4889C6   		movq	%rax, %rsi
 8483 4278 4889DF   		movq	%rbx, %rdi
 8484 427b E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 8484      00
  36:../ExecuteTest.h **** 	}
 8485              		.loc 4 36 23
 8486 4280 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 8486      00
  36:../ExecuteTest.h **** 	}
 8487              		.loc 4 36 40
 8488 4285 488B18   		movq	(%rax), %rbx
 8489 4288 488D85D0 		leaq	-1584(%rbp), %rax
 8489      F9FFFF
 8490 428f 4889C7   		movq	%rax, %rdi
 8491 4292 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 8491      00
  36:../ExecuteTest.h **** 	}
 8492              		.loc 4 36 40 is_stmt 0 discriminator 1
 8493 4297 4889C2   		movq	%rax, %rdx
 8494 429a 488B8590 		movq	-1648(%rbp), %rax
 8494      F9FFFF
 8495 42a1 4889C6   		movq	%rax, %rsi
 8496 42a4 4889DF   		movq	%rbx, %rdi
 8497 42a7 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 8497      00
 8498              	.LEHE243:
  37:../ExecuteTest.h **** 	catch (...)
 8499              		.loc 4 37 2 is_stmt 1
 8500 42ac 488D85D0 		leaq	-1584(%rbp), %rax
 8500      F9FFFF
 8501 42b3 4889C7   		movq	%rax, %rdi
 8502              	.LEHB244:
 8503 42b6 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 8503      00
 8504              	.LEHE244:
 8505              	.LBE152:
  32:../ExecuteTest.h **** 	{
 8506              		.loc 4 32 2
 8507 42bb E8000000 		call	__cxa_end_catch@PLT
 8507      00
 8508              	.LBE151:
 8509              		.loc 4 42 1
 8510 42c0 E98D0000 		jmp	.L423
 8510      00
 8511              	.L443:
  38:../ExecuteTest.h **** 	{
 8512              		.loc 4 38 2
 8513 42c5 4889C7   		movq	%rax, %rdi
 8514 42c8 E8000000 		call	__cxa_begin_catch@PLT
 8514      00
 8515              	.LEHB245:
  40:../ExecuteTest.h **** 	}
 8516              		.loc 4 40 23
 8517 42cd E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 8517      00
  40:../ExecuteTest.h **** 	}
 8518              		.loc 4 40 40
 8519 42d2 488B00   		movq	(%rax), %rax
 8520 42d5 488B8D90 		movq	-1648(%rbp), %rcx
 8520      F9FFFF
 8521 42dc 488D1500 		leaq	.LC44(%rip), %rdx
 8521      000000
 8522 42e3 4889CE   		movq	%rcx, %rsi
 8523 42e6 4889C7   		movq	%rax, %rdi
 8524 42e9 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 8524      00
 8525              	.LEHE245:
 8526              	.LEHB246:
  38:../ExecuteTest.h **** 	{
 8527              		.loc 4 38 2
 8528 42ee E8000000 		call	__cxa_end_catch@PLT
 8528      00
 8529              		.loc 4 42 1
 8530 42f3 EB5D     		jmp	.L423
 8531              	.L439:
 8532 42f5 F30F1EFA 		endbr64
 8533              	.LBB154:
  27:../ExecuteTest.h **** 	{
 8534              		.loc 4 27 2
 8535 42f9 4889C3   		movq	%rax, %rbx
 8536 42fc E8000000 		call	__cxa_end_catch@PLT
 8536      00
 8537 4301 4889D8   		movq	%rbx, %rax
 8538 4304 4889C7   		movq	%rax, %rdi
 8539 4307 E8000000 		call	_Unwind_Resume@PLT
 8539      00
 8540              	.LEHE246:
 8541              	.L441:
 8542 430c F30F1EFA 		endbr64
 8543              	.LBE154:
 8544              	.LBB155:
 8545              	.LBB153:
  37:../ExecuteTest.h **** 	catch (...)
 8546              		.loc 4 37 2
 8547 4310 4889C3   		movq	%rax, %rbx
 8548 4313 488D85D0 		leaq	-1584(%rbp), %rax
 8548      F9FFFF
 8549 431a 4889C7   		movq	%rax, %rdi
 8550 431d E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 8550      00
 8551 4322 EB07     		jmp	.L434
 8552              	.L440:
 8553 4324 F30F1EFA 		endbr64
 8554              	.LBE153:
  32:../ExecuteTest.h **** 	{
 8555              		.loc 4 32 2
 8556 4328 4889C3   		movq	%rax, %rbx
 8557              	.L434:
 8558 432b E8000000 		call	__cxa_end_catch@PLT
 8558      00
 8559 4330 4889D8   		movq	%rbx, %rax
 8560 4333 4889C7   		movq	%rax, %rdi
 8561              	.LEHB247:
 8562 4336 E8000000 		call	_Unwind_Resume@PLT
 8562      00
 8563              	.LEHE247:
 8564              	.L442:
 8565 433b F30F1EFA 		endbr64
 8566              	.LBE155:
  38:../ExecuteTest.h **** 	{
 8567              		.loc 4 38 2
 8568 433f 4889C3   		movq	%rax, %rbx
 8569 4342 E8000000 		call	__cxa_end_catch@PLT
 8569      00
 8570 4347 4889D8   		movq	%rbx, %rax
 8571 434a 4889C7   		movq	%rax, %rdi
 8572              	.LEHB248:
 8573 434d E8000000 		call	_Unwind_Resume@PLT
 8573      00
 8574              	.LEHE248:
 8575              	.L423:
 8576              		.loc 4 42 1
 8577 4352 488B45D8 		movq	-40(%rbp), %rax
 8578 4356 64482B04 		subq	%fs:40, %rax
 8578      25280000 
 8578      00
 8579 435f 7405     		je	.L436
 8580 4361 E8000000 		call	__stack_chk_fail@PLT
 8580      00
 8581              	.L436:
 8582 4366 4881C458 		addq	$1624, %rsp
 8582      060000
 8583 436d 5B       		popq	%rbx
 8584 436e 415C     		popq	%r12
 8585 4370 415D     		popq	%r13
 8586 4372 5D       		popq	%rbp
 8587              		.cfi_def_cfa 7, 8
 8588 4373 C3       		ret
 8589              		.cfi_endproc
 8590              	.LFE1537:
 8591              		.section	.gcc_except_table
 8592              		.align 4
 8593              	.LLSDA1537:
 8594 06e8 FF       		.byte	0xff
 8595 06e9 9B       		.byte	0x9b
 8596 06ea 59       		.uleb128 .LLSDATT1537-.LLSDATTD1537
 8597              	.LLSDATTD1537:
 8598 06eb 01       		.byte	0x1
 8599 06ec 43       		.uleb128 .LLSDACSE1537-.LLSDACSB1537
 8600              	.LLSDACSB1537:
 8601 06ed 31       		.uleb128 .LEHB237-.LFB1537
 8602 06ee 05       		.uleb128 .LEHE237-.LEHB237
 8603 06ef 00       		.uleb128 0
 8604 06f0 00       		.uleb128 0
 8605 06f1 4A       		.uleb128 .LEHB238-.LFB1537
 8606 06f2 05       		.uleb128 .LEHE238-.LEHB238
 8607 06f3 DF01     		.uleb128 .L437-.LFB1537
 8608 06f5 05       		.uleb128 0x5
 8609 06f6 9601     		.uleb128 .LEHB239-.LFB1537
 8610 06f8 14       		.uleb128 .LEHE239-.LEHB239
 8611 06f9 BE01     		.uleb128 .L438-.LFB1537
 8612 06fb 07       		.uleb128 0x7
 8613 06fc B401     		.uleb128 .LEHB240-.LFB1537
 8614 06fe 05       		.uleb128 .LEHE240-.LEHB240
 8615 06ff DF01     		.uleb128 .L437-.LFB1537
 8616 0701 05       		.uleb128 0x5
 8617 0702 8702     		.uleb128 .LEHB241-.LFB1537
 8618 0704 8801     		.uleb128 .LEHE241-.LEHB241
 8619 0706 F004     		.uleb128 .L439-.LFB1537
 8620 0708 00       		.uleb128 0
 8621 0709 B203     		.uleb128 .LEHB242-.LFB1537
 8622 070b 05       		.uleb128 .LEHE242-.LEHB242
 8623 070c 9F05     		.uleb128 .L440-.LFB1537
 8624 070e 00       		.uleb128 0
 8625 070f CB03     		.uleb128 .LEHB243-.LFB1537
 8626 0711 5C       		.uleb128 .LEHE243-.LEHB243
 8627 0712 8705     		.uleb128 .L441-.LFB1537
 8628 0714 00       		.uleb128 0
 8629 0715 B104     		.uleb128 .LEHB244-.LFB1537
 8630 0717 05       		.uleb128 .LEHE244-.LEHB244
 8631 0718 9F05     		.uleb128 .L440-.LFB1537
 8632 071a 00       		.uleb128 0
 8633 071b C804     		.uleb128 .LEHB245-.LFB1537
 8634 071d 21       		.uleb128 .LEHE245-.LEHB245
 8635 071e B605     		.uleb128 .L442-.LFB1537
 8636 0720 00       		.uleb128 0
 8637 0721 E904     		.uleb128 .LEHB246-.LFB1537
 8638 0723 1E       		.uleb128 .LEHE246-.LEHB246
 8639 0724 00       		.uleb128 0
 8640 0725 00       		.uleb128 0
 8641 0726 B105     		.uleb128 .LEHB247-.LFB1537
 8642 0728 05       		.uleb128 .LEHE247-.LEHB247
 8643 0729 00       		.uleb128 0
 8644 072a 00       		.uleb128 0
 8645 072b C805     		.uleb128 .LEHB248-.LFB1537
 8646 072d 05       		.uleb128 .LEHE248-.LEHB248
 8647 072e 00       		.uleb128 0
 8648 072f 00       		.uleb128 0
 8649              	.LLSDACSE1537:
 8650 0730 03       		.byte	0x3
 8651 0731 00       		.byte	0
 8652 0732 02       		.byte	0x2
 8653 0733 7D       		.byte	0x7d
 8654 0734 01       		.byte	0x1
 8655 0735 7D       		.byte	0x7d
 8656 0736 00       		.byte	0
 8657 0737 7D       		.byte	0x7d
 8658              		.align 4
 8659 0738 00000000 		.long	0
 8660              	
 8661 073c 00000000 		.long	DW.ref._ZTISt9exception-.
 8662 0740 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 8663              	.LLSDATT1537:
 8664              		.text
 8667              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperEEEvRT_RKNS_
 8668              	.LFB1538:
  16:../ExecuteTest.h **** {
 8669              		.loc 4 16 6
 8670              		.cfi_startproc
 8671              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8672              		.cfi_lsda 0x1b,.LLSDA1538
 8673 4374 F30F1EFA 		endbr64
 8674 4378 55       		pushq	%rbp
 8675              		.cfi_def_cfa_offset 16
 8676              		.cfi_offset 6, -16
 8677 4379 4889E5   		movq	%rsp, %rbp
 8678              		.cfi_def_cfa_register 6
 8679 437c 4155     		pushq	%r13
 8680 437e 4154     		pushq	%r12
 8681 4380 53       		pushq	%rbx
 8682 4381 4881EC58 		subq	$1624, %rsp
 8682      060000
 8683              		.cfi_offset 13, -24
 8684              		.cfi_offset 12, -32
 8685              		.cfi_offset 3, -40
 8686 4388 4889BD98 		movq	%rdi, -1640(%rbp)
 8686      F9FFFF
 8687 438f 4889B590 		movq	%rsi, -1648(%rbp)
 8687      F9FFFF
  16:../ExecuteTest.h **** {
 8688              		.loc 4 16 6
 8689 4396 64488B04 		movq	%fs:40, %rax
 8689      25280000 
 8689      00
 8690 439f 488945D8 		movq	%rax, -40(%rbp)
 8691 43a3 31C0     		xorl	%eax, %eax
 8692              	.LEHB249:
  18:../ExecuteTest.h **** 
 8693              		.loc 4 18 22
 8694 43a5 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 8694      00
 8695              	.LEHE249:
  18:../ExecuteTest.h **** 
 8696              		.loc 4 18 25
 8697 43aa 488B9590 		movq	-1648(%rbp), %rdx
 8697      F9FFFF
 8698 43b1 488910   		movq	%rdx, (%rax)
 8699              	.LBB156:
  23:../ExecuteTest.h **** #endif
 8700              		.loc 4 23 3
 8701 43b4 488D8570 		leaq	-1168(%rbp), %rax
 8701      FBFFFF
 8702 43bb 4889C7   		movq	%rax, %rdi
 8703              	.LEHB250:
 8704 43be E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev@PLT
 8704      00
 8705              	.LEHE250:
  23:../ExecuteTest.h **** #endif
 8706              		.loc 4 23 3 is_stmt 0 discriminator 1
 8707 43c3 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 8707      000000
 8708 43ca BE010000 		movl	$1, %esi
 8708      00
 8709 43cf 4889C7   		movq	%rax, %rdi
 8710 43d2 E8000000 		call	__sigsetjmp@PLT
 8710      00
 8711 43d7 F30F1EFA 		endbr64
 8712 43db 85C0     		testl	%eax, %eax
 8713 43dd 0F95C0   		setne	%al
 8714 43e0 84C0     		testb	%al, %al
 8715 43e2 742B     		je	.L446
  23:../ExecuteTest.h **** #endif
 8716              		.loc 4 23 3 discriminator 4
 8717 43e4 BF080000 		movl	$8, %edi
 8717      00
 8718 43e9 E8000000 		call	__cxa_allocate_exception@PLT
 8718      00
 8719 43ee 488D1500 		leaq	.LC43(%rip), %rdx
 8719      000000
 8720 43f5 488910   		movq	%rdx, (%rax)
 8721 43f8 BA000000 		movl	$0, %edx
 8721      00
 8722 43fd 488D0D00 		leaq	_ZTIPKc(%rip), %rcx
 8722      000000
 8723 4404 4889CE   		movq	%rcx, %rsi
 8724 4407 4889C7   		movq	%rax, %rdi
 8725              	.LEHB251:
 8726 440a E8000000 		call	__cxa_throw@PLT
 8726      00
 8727              	.L446:
  25:../ExecuteTest.h **** 	}
 8728              		.loc 4 25 21 is_stmt 1
 8729 440f 488B8598 		movq	-1640(%rbp), %rax
 8729      F9FFFF
 8730 4416 4889C7   		movq	%rax, %rdi
 8731 4419 E88CE8FF 		call	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelper7RunImplEv
 8731      FF
 8732              	.LEHE251:
  26:../ExecuteTest.h **** 	catch (AssertException const& e)
 8733              		.loc 4 26 2
 8734 441e 488D8570 		leaq	-1168(%rbp), %rax
 8734      FBFFFF
 8735 4425 4889C7   		movq	%rax, %rdi
 8736              	.LEHB252:
 8737 4428 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 8737      00
 8738              	.LEHE252:
 8739              	.LBE156:
 8740              		.loc 4 42 1
 8741 442d E90F0200 		jmp	.L444
 8741      00
 8742              	.L459:
 8743 4432 F30F1EFA 		endbr64
 8744              	.LBB157:
  26:../ExecuteTest.h **** 	catch (AssertException const& e)
 8745              		.loc 4 26 2
 8746 4436 4989C4   		movq	%rax, %r12
 8747 4439 4889D3   		movq	%rdx, %rbx
 8748 443c 488D8570 		leaq	-1168(%rbp), %rax
 8748      FBFFFF
 8749 4443 4889C7   		movq	%rax, %rdi
 8750 4446 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 8750      00
 8751 444b 4C89E0   		movq	%r12, %rax
 8752 444e 4889DA   		movq	%rbx, %rdx
 8753 4451 EB04     		jmp	.L448
 8754              	.L458:
 8755 4453 F30F1EFA 		endbr64
 8756              	.L448:
 8757              	.LBE157:
  27:../ExecuteTest.h **** 	{
 8758              		.loc 4 27 2
 8759 4457 4883FA01 		cmpq	$1, %rdx
 8760 445b 740F     		je	.L449
 8761 445d 4883FA02 		cmpq	$2, %rdx
 8762 4461 0F84A600 		je	.L450
 8762      0000
 8763 4467 E9480100 		jmp	.L464
 8763      00
 8764              	.L449:
 8765              	.LBB158:
  27:../ExecuteTest.h **** 	{
 8766              		.loc 4 27 2 is_stmt 0 discriminator 1
 8767 446c 4889C7   		movq	%rax, %rdi
 8768 446f E8000000 		call	__cxa_begin_catch@PLT
 8768      00
  27:../ExecuteTest.h **** 	{
 8769              		.loc 4 27 32 is_stmt 1 discriminator 1
 8770 4474 488985A8 		movq	%rax, -1624(%rbp)
 8770      F9FFFF
 8771              	.LEHB253:
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8772              		.loc 4 29 23 discriminator 1
 8773 447b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 8773      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8774              		.loc 4 29 40 discriminator 2
 8775 4480 488B18   		movq	(%rax), %rbx
  30:../ExecuteTest.h **** 	}
 8776              		.loc 4 30 90 discriminator 2
 8777 4483 488B85A8 		movq	-1624(%rbp), %rax
 8777      F9FFFF
 8778 448a 488B00   		movq	(%rax), %rax
 8779 448d 4883C010 		addq	$16, %rax
 8780 4491 488B10   		movq	(%rax), %rdx
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8781              		.loc 4 29 40 discriminator 2
 8782 4494 488B85A8 		movq	-1624(%rbp), %rax
 8782      F9FFFF
 8783 449b 4889C7   		movq	%rax, %rdi
 8784 449e FFD2     		call	*%rdx
 8785              	.LVL30:
 8786 44a0 4989C4   		movq	%rax, %r12
  30:../ExecuteTest.h **** 	}
 8787              		.loc 4 30 4 discriminator 2
 8788 44a3 488B85A8 		movq	-1624(%rbp), %rax
 8788      F9FFFF
 8789 44aa 4889C7   		movq	%rax, %rdi
 8790 44ad E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 8790      00
 8791 44b2 4189C5   		movl	%eax, %r13d
 8792 44b5 488B85A8 		movq	-1624(%rbp), %rax
 8792      F9FFFF
 8793 44bc 4889C7   		movq	%rax, %rdi
 8794 44bf E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 8794      00
  30:../ExecuteTest.h **** 	}
 8795              		.loc 4 30 4 is_stmt 0 discriminator 1
 8796 44c4 4889C1   		movq	%rax, %rcx
  30:../ExecuteTest.h **** 	}
 8797              		.loc 4 30 42 is_stmt 1 discriminator 1
 8798 44c7 488B8590 		movq	-1648(%rbp), %rax
 8798      F9FFFF
 8799 44ce 488B10   		movq	(%rax), %rdx
  30:../ExecuteTest.h **** 	}
 8800              		.loc 4 30 24 discriminator 1
 8801 44d1 488B8590 		movq	-1648(%rbp), %rax
 8801      F9FFFF
 8802 44d8 488B7008 		movq	8(%rax), %rsi
  30:../ExecuteTest.h **** 	}
 8803              		.loc 4 30 4 discriminator 1
 8804 44dc 488D85B0 		leaq	-1616(%rbp), %rax
 8804      F9FFFF
 8805 44e3 4589E8   		movl	%r13d, %r8d
 8806 44e6 4889C7   		movq	%rax, %rdi
 8807 44e9 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 8807      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8808              		.loc 4 29 40
 8809 44ee 488D85B0 		leaq	-1616(%rbp), %rax
 8809      F9FFFF
 8810 44f5 4C89E2   		movq	%r12, %rdx
 8811 44f8 4889C6   		movq	%rax, %rsi
 8812 44fb 4889DF   		movq	%rbx, %rdi
 8813 44fe E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 8813      00
 8814              	.LEHE253:
  27:../ExecuteTest.h **** 	{
 8815              		.loc 4 27 2
 8816 4503 E8000000 		call	__cxa_end_catch@PLT
 8816      00
 8817              	.LBE158:
 8818              		.loc 4 42 1
 8819 4508 E9340100 		jmp	.L444
 8819      00
 8820              	.L450:
 8821              	.LBB159:
  32:../ExecuteTest.h **** 	{
 8822              		.loc 4 32 2
 8823 450d 4889C7   		movq	%rax, %rdi
 8824 4510 E8000000 		call	__cxa_begin_catch@PLT
 8824      00
  32:../ExecuteTest.h **** 	{
 8825              		.loc 4 32 31
 8826 4515 488985A0 		movq	%rax, -1632(%rbp)
 8826      F9FFFF
 8827              	.LBB160:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 8828              		.loc 4 34 19
 8829 451c 488D85D0 		leaq	-1584(%rbp), %rax
 8829      F9FFFF
 8830 4523 4889C7   		movq	%rax, %rdi
 8831              	.LEHB254:
 8832 4526 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 8832      00
 8833              	.LEHE254:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 8834              		.loc 4 35 37
 8835 452b 488D85D0 		leaq	-1584(%rbp), %rax
 8835      F9FFFF
 8836 4532 488D1500 		leaq	.LC3(%rip), %rdx
 8836      000000
 8837 4539 4889D6   		movq	%rdx, %rsi
 8838 453c 4889C7   		movq	%rax, %rdi
 8839              	.LEHB255:
 8840 453f E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 8840      00
 8841 4544 4889C3   		movq	%rax, %rbx
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 8842              		.loc 4 35 46
 8843 4547 488B85A0 		movq	-1632(%rbp), %rax
 8843      F9FFFF
 8844 454e 488B00   		movq	(%rax), %rax
 8845 4551 4883C010 		addq	$16, %rax
 8846 4555 488B10   		movq	(%rax), %rdx
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 8847              		.loc 4 35 37
 8848 4558 488B85A0 		movq	-1632(%rbp), %rax
 8848      F9FFFF
 8849 455f 4889C7   		movq	%rax, %rdi
 8850 4562 FFD2     		call	*%rdx
 8851              	.LVL31:
 8852 4564 4889C6   		movq	%rax, %rsi
 8853 4567 4889DF   		movq	%rbx, %rdi
 8854 456a E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 8854      00
  36:../ExecuteTest.h **** 	}
 8855              		.loc 4 36 23
 8856 456f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 8856      00
  36:../ExecuteTest.h **** 	}
 8857              		.loc 4 36 40
 8858 4574 488B18   		movq	(%rax), %rbx
 8859 4577 488D85D0 		leaq	-1584(%rbp), %rax
 8859      F9FFFF
 8860 457e 4889C7   		movq	%rax, %rdi
 8861 4581 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 8861      00
  36:../ExecuteTest.h **** 	}
 8862              		.loc 4 36 40 is_stmt 0 discriminator 1
 8863 4586 4889C2   		movq	%rax, %rdx
 8864 4589 488B8590 		movq	-1648(%rbp), %rax
 8864      F9FFFF
 8865 4590 4889C6   		movq	%rax, %rsi
 8866 4593 4889DF   		movq	%rbx, %rdi
 8867 4596 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 8867      00
 8868              	.LEHE255:
  37:../ExecuteTest.h **** 	catch (...)
 8869              		.loc 4 37 2 is_stmt 1
 8870 459b 488D85D0 		leaq	-1584(%rbp), %rax
 8870      F9FFFF
 8871 45a2 4889C7   		movq	%rax, %rdi
 8872              	.LEHB256:
 8873 45a5 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 8873      00
 8874              	.LEHE256:
 8875              	.LBE160:
  32:../ExecuteTest.h **** 	{
 8876              		.loc 4 32 2
 8877 45aa E8000000 		call	__cxa_end_catch@PLT
 8877      00
 8878              	.LBE159:
 8879              		.loc 4 42 1
 8880 45af E98D0000 		jmp	.L444
 8880      00
 8881              	.L464:
  38:../ExecuteTest.h **** 	{
 8882              		.loc 4 38 2
 8883 45b4 4889C7   		movq	%rax, %rdi
 8884 45b7 E8000000 		call	__cxa_begin_catch@PLT
 8884      00
 8885              	.LEHB257:
  40:../ExecuteTest.h **** 	}
 8886              		.loc 4 40 23
 8887 45bc E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 8887      00
  40:../ExecuteTest.h **** 	}
 8888              		.loc 4 40 40
 8889 45c1 488B00   		movq	(%rax), %rax
 8890 45c4 488B8D90 		movq	-1648(%rbp), %rcx
 8890      F9FFFF
 8891 45cb 488D1500 		leaq	.LC44(%rip), %rdx
 8891      000000
 8892 45d2 4889CE   		movq	%rcx, %rsi
 8893 45d5 4889C7   		movq	%rax, %rdi
 8894 45d8 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 8894      00
 8895              	.LEHE257:
 8896              	.LEHB258:
  38:../ExecuteTest.h **** 	{
 8897              		.loc 4 38 2
 8898 45dd E8000000 		call	__cxa_end_catch@PLT
 8898      00
 8899              		.loc 4 42 1
 8900 45e2 EB5D     		jmp	.L444
 8901              	.L460:
 8902 45e4 F30F1EFA 		endbr64
 8903              	.LBB162:
  27:../ExecuteTest.h **** 	{
 8904              		.loc 4 27 2
 8905 45e8 4889C3   		movq	%rax, %rbx
 8906 45eb E8000000 		call	__cxa_end_catch@PLT
 8906      00
 8907 45f0 4889D8   		movq	%rbx, %rax
 8908 45f3 4889C7   		movq	%rax, %rdi
 8909 45f6 E8000000 		call	_Unwind_Resume@PLT
 8909      00
 8910              	.LEHE258:
 8911              	.L462:
 8912 45fb F30F1EFA 		endbr64
 8913              	.LBE162:
 8914              	.LBB163:
 8915              	.LBB161:
  37:../ExecuteTest.h **** 	catch (...)
 8916              		.loc 4 37 2
 8917 45ff 4889C3   		movq	%rax, %rbx
 8918 4602 488D85D0 		leaq	-1584(%rbp), %rax
 8918      F9FFFF
 8919 4609 4889C7   		movq	%rax, %rdi
 8920 460c E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 8920      00
 8921 4611 EB07     		jmp	.L455
 8922              	.L461:
 8923 4613 F30F1EFA 		endbr64
 8924              	.LBE161:
  32:../ExecuteTest.h **** 	{
 8925              		.loc 4 32 2
 8926 4617 4889C3   		movq	%rax, %rbx
 8927              	.L455:
 8928 461a E8000000 		call	__cxa_end_catch@PLT
 8928      00
 8929 461f 4889D8   		movq	%rbx, %rax
 8930 4622 4889C7   		movq	%rax, %rdi
 8931              	.LEHB259:
 8932 4625 E8000000 		call	_Unwind_Resume@PLT
 8932      00
 8933              	.LEHE259:
 8934              	.L463:
 8935 462a F30F1EFA 		endbr64
 8936              	.LBE163:
  38:../ExecuteTest.h **** 	{
 8937              		.loc 4 38 2
 8938 462e 4889C3   		movq	%rax, %rbx
 8939 4631 E8000000 		call	__cxa_end_catch@PLT
 8939      00
 8940 4636 4889D8   		movq	%rbx, %rax
 8941 4639 4889C7   		movq	%rax, %rdi
 8942              	.LEHB260:
 8943 463c E8000000 		call	_Unwind_Resume@PLT
 8943      00
 8944              	.LEHE260:
 8945              	.L444:
 8946              		.loc 4 42 1
 8947 4641 488B45D8 		movq	-40(%rbp), %rax
 8948 4645 64482B04 		subq	%fs:40, %rax
 8948      25280000 
 8948      00
 8949 464e 7405     		je	.L457
 8950 4650 E8000000 		call	__stack_chk_fail@PLT
 8950      00
 8951              	.L457:
 8952 4655 4881C458 		addq	$1624, %rsp
 8952      060000
 8953 465c 5B       		popq	%rbx
 8954 465d 415C     		popq	%r12
 8955 465f 415D     		popq	%r13
 8956 4661 5D       		popq	%rbp
 8957              		.cfi_def_cfa 7, 8
 8958 4662 C3       		ret
 8959              		.cfi_endproc
 8960              	.LFE1538:
 8961              		.section	.gcc_except_table
 8962              		.align 4
 8963              	.LLSDA1538:
 8964 0744 FF       		.byte	0xff
 8965 0745 9B       		.byte	0x9b
 8966 0746 59       		.uleb128 .LLSDATT1538-.LLSDATTD1538
 8967              	.LLSDATTD1538:
 8968 0747 01       		.byte	0x1
 8969 0748 43       		.uleb128 .LLSDACSE1538-.LLSDACSB1538
 8970              	.LLSDACSB1538:
 8971 0749 31       		.uleb128 .LEHB249-.LFB1538
 8972 074a 05       		.uleb128 .LEHE249-.LEHB249
 8973 074b 00       		.uleb128 0
 8974 074c 00       		.uleb128 0
 8975 074d 4A       		.uleb128 .LEHB250-.LFB1538
 8976 074e 05       		.uleb128 .LEHE250-.LEHB250
 8977 074f DF01     		.uleb128 .L458-.LFB1538
 8978 0751 05       		.uleb128 0x5
 8979 0752 9601     		.uleb128 .LEHB251-.LFB1538
 8980 0754 14       		.uleb128 .LEHE251-.LEHB251
 8981 0755 BE01     		.uleb128 .L459-.LFB1538
 8982 0757 07       		.uleb128 0x7
 8983 0758 B401     		.uleb128 .LEHB252-.LFB1538
 8984 075a 05       		.uleb128 .LEHE252-.LEHB252
 8985 075b DF01     		.uleb128 .L458-.LFB1538
 8986 075d 05       		.uleb128 0x5
 8987 075e 8702     		.uleb128 .LEHB253-.LFB1538
 8988 0760 8801     		.uleb128 .LEHE253-.LEHB253
 8989 0762 F004     		.uleb128 .L460-.LFB1538
 8990 0764 00       		.uleb128 0
 8991 0765 B203     		.uleb128 .LEHB254-.LFB1538
 8992 0767 05       		.uleb128 .LEHE254-.LEHB254
 8993 0768 9F05     		.uleb128 .L461-.LFB1538
 8994 076a 00       		.uleb128 0
 8995 076b CB03     		.uleb128 .LEHB255-.LFB1538
 8996 076d 5C       		.uleb128 .LEHE255-.LEHB255
 8997 076e 8705     		.uleb128 .L462-.LFB1538
 8998 0770 00       		.uleb128 0
 8999 0771 B104     		.uleb128 .LEHB256-.LFB1538
 9000 0773 05       		.uleb128 .LEHE256-.LEHB256
 9001 0774 9F05     		.uleb128 .L461-.LFB1538
 9002 0776 00       		.uleb128 0
 9003 0777 C804     		.uleb128 .LEHB257-.LFB1538
 9004 0779 21       		.uleb128 .LEHE257-.LEHB257
 9005 077a B605     		.uleb128 .L463-.LFB1538
 9006 077c 00       		.uleb128 0
 9007 077d E904     		.uleb128 .LEHB258-.LFB1538
 9008 077f 1E       		.uleb128 .LEHE258-.LEHB258
 9009 0780 00       		.uleb128 0
 9010 0781 00       		.uleb128 0
 9011 0782 B105     		.uleb128 .LEHB259-.LFB1538
 9012 0784 05       		.uleb128 .LEHE259-.LEHB259
 9013 0785 00       		.uleb128 0
 9014 0786 00       		.uleb128 0
 9015 0787 C805     		.uleb128 .LEHB260-.LFB1538
 9016 0789 05       		.uleb128 .LEHE260-.LEHB260
 9017 078a 00       		.uleb128 0
 9018 078b 00       		.uleb128 0
 9019              	.LLSDACSE1538:
 9020 078c 03       		.byte	0x3
 9021 078d 00       		.byte	0
 9022 078e 02       		.byte	0x2
 9023 078f 7D       		.byte	0x7d
 9024 0790 01       		.byte	0x1
 9025 0791 7D       		.byte	0x7d
 9026 0792 00       		.byte	0
 9027 0793 7D       		.byte	0x7d
 9028              		.align 4
 9029 0794 00000000 		.long	0
 9030              	
 9031 0798 00000000 		.long	DW.ref._ZTISt9exception-.
 9032 079c 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 9033              	.LLSDATT1538:
 9034              		.text
 9036              		.section	.text._ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE,"axG",
 9037              		.weak	_ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE
 9039              	_ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE:
 9040              	.LFB1570:
 9041              		.file 6 "/usr/include/c++/11/bits/basic_string.h"
   1:/usr/include/c++/11/bits/basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/usr/include/c++/11/bits/basic_string.h **** 
   3:/usr/include/c++/11/bits/basic_string.h **** // Copyright (C) 1997-2021 Free Software Foundation, Inc.
   4:/usr/include/c++/11/bits/basic_string.h **** //
   5:/usr/include/c++/11/bits/basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/11/bits/basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/11/bits/basic_string.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/11/bits/basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/11/bits/basic_string.h **** // any later version.
  10:/usr/include/c++/11/bits/basic_string.h **** 
  11:/usr/include/c++/11/bits/basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/11/bits/basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/11/bits/basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/11/bits/basic_string.h **** // GNU General Public License for more details.
  15:/usr/include/c++/11/bits/basic_string.h **** 
  16:/usr/include/c++/11/bits/basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/11/bits/basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/11/bits/basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/11/bits/basic_string.h **** 
  20:/usr/include/c++/11/bits/basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/11/bits/basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/11/bits/basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/11/bits/basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/11/bits/basic_string.h **** 
  25:/usr/include/c++/11/bits/basic_string.h **** /** @file bits/basic_string.h
  26:/usr/include/c++/11/bits/basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/11/bits/basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/c++/11/bits/basic_string.h ****  */
  29:/usr/include/c++/11/bits/basic_string.h **** 
  30:/usr/include/c++/11/bits/basic_string.h **** //
  31:/usr/include/c++/11/bits/basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:/usr/include/c++/11/bits/basic_string.h **** //
  33:/usr/include/c++/11/bits/basic_string.h **** 
  34:/usr/include/c++/11/bits/basic_string.h **** #ifndef _BASIC_STRING_H
  35:/usr/include/c++/11/bits/basic_string.h **** #define _BASIC_STRING_H 1
  36:/usr/include/c++/11/bits/basic_string.h **** 
  37:/usr/include/c++/11/bits/basic_string.h **** #pragma GCC system_header
  38:/usr/include/c++/11/bits/basic_string.h **** 
  39:/usr/include/c++/11/bits/basic_string.h **** #include <ext/atomicity.h>
  40:/usr/include/c++/11/bits/basic_string.h **** #include <ext/alloc_traits.h>
  41:/usr/include/c++/11/bits/basic_string.h **** #include <debug/debug.h>
  42:/usr/include/c++/11/bits/basic_string.h **** 
  43:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
  44:/usr/include/c++/11/bits/basic_string.h **** #include <initializer_list>
  45:/usr/include/c++/11/bits/basic_string.h **** #endif
  46:/usr/include/c++/11/bits/basic_string.h **** 
  47:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
  48:/usr/include/c++/11/bits/basic_string.h **** # include <string_view>
  49:/usr/include/c++/11/bits/basic_string.h **** #endif
  50:/usr/include/c++/11/bits/basic_string.h **** 
  51:/usr/include/c++/11/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  52:/usr/include/c++/11/bits/basic_string.h **** {
  53:/usr/include/c++/11/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  54:/usr/include/c++/11/bits/basic_string.h **** 
  55:/usr/include/c++/11/bits/basic_string.h **** #ifdef __cpp_lib_is_constant_evaluated
  56:/usr/include/c++/11/bits/basic_string.h **** // Support P1032R1 in C++20 (but not P0980R1 yet).
  57:/usr/include/c++/11/bits/basic_string.h **** # define __cpp_lib_constexpr_string 201811L
  58:/usr/include/c++/11/bits/basic_string.h **** #elif __cplusplus >= 201703L
  59:/usr/include/c++/11/bits/basic_string.h **** // Support P0426R1 changes to char_traits in C++17.
  60:/usr/include/c++/11/bits/basic_string.h **** # define __cpp_lib_constexpr_string 201611L
  61:/usr/include/c++/11/bits/basic_string.h **** #elif __cplusplus > 201703L
  62:/usr/include/c++/11/bits/basic_string.h **** #endif
  63:/usr/include/c++/11/bits/basic_string.h **** 
  64:/usr/include/c++/11/bits/basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
  65:/usr/include/c++/11/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  66:/usr/include/c++/11/bits/basic_string.h ****   /**
  67:/usr/include/c++/11/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
  68:/usr/include/c++/11/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  69:/usr/include/c++/11/bits/basic_string.h ****    *
  70:/usr/include/c++/11/bits/basic_string.h ****    *  @ingroup strings
  71:/usr/include/c++/11/bits/basic_string.h ****    *  @ingroup sequences
  72:/usr/include/c++/11/bits/basic_string.h ****    *
  73:/usr/include/c++/11/bits/basic_string.h ****    *  @tparam _CharT  Type of character
  74:/usr/include/c++/11/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  75:/usr/include/c++/11/bits/basic_string.h ****    *                   char_traits<_CharT>.
  76:/usr/include/c++/11/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  77:/usr/include/c++/11/bits/basic_string.h ****    *
  78:/usr/include/c++/11/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  79:/usr/include/c++/11/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  80:/usr/include/c++/11/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  81:/usr/include/c++/11/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  82:/usr/include/c++/11/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  83:/usr/include/c++/11/bits/basic_string.h ****    */
  84:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
  85:/usr/include/c++/11/bits/basic_string.h ****     class basic_string
  86:/usr/include/c++/11/bits/basic_string.h ****     {
  87:/usr/include/c++/11/bits/basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  88:/usr/include/c++/11/bits/basic_string.h **** 	rebind<_CharT>::other _Char_alloc_type;
  89:/usr/include/c++/11/bits/basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
  90:/usr/include/c++/11/bits/basic_string.h **** 
  91:/usr/include/c++/11/bits/basic_string.h ****       // Types:
  92:/usr/include/c++/11/bits/basic_string.h ****     public:
  93:/usr/include/c++/11/bits/basic_string.h ****       typedef _Traits					traits_type;
  94:/usr/include/c++/11/bits/basic_string.h ****       typedef typename _Traits::char_type		value_type;
  95:/usr/include/c++/11/bits/basic_string.h ****       typedef _Char_alloc_type				allocator_type;
  96:/usr/include/c++/11/bits/basic_string.h ****       typedef typename _Alloc_traits::size_type		size_type;
  97:/usr/include/c++/11/bits/basic_string.h ****       typedef typename _Alloc_traits::difference_type	difference_type;
  98:/usr/include/c++/11/bits/basic_string.h ****       typedef typename _Alloc_traits::reference		reference;
  99:/usr/include/c++/11/bits/basic_string.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
 100:/usr/include/c++/11/bits/basic_string.h ****       typedef typename _Alloc_traits::pointer		pointer;
 101:/usr/include/c++/11/bits/basic_string.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
 102:/usr/include/c++/11/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
 103:/usr/include/c++/11/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
 104:/usr/include/c++/11/bits/basic_string.h **** 							const_iterator;
 105:/usr/include/c++/11/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 106:/usr/include/c++/11/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 107:/usr/include/c++/11/bits/basic_string.h **** 
 108:/usr/include/c++/11/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
 109:/usr/include/c++/11/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 110:/usr/include/c++/11/bits/basic_string.h **** 
 111:/usr/include/c++/11/bits/basic_string.h ****     protected:
 112:/usr/include/c++/11/bits/basic_string.h ****       // type used for positions in insert, erase etc.
 113:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus < 201103L
 114:/usr/include/c++/11/bits/basic_string.h ****       typedef iterator __const_iterator;
 115:/usr/include/c++/11/bits/basic_string.h **** #else
 116:/usr/include/c++/11/bits/basic_string.h ****       typedef const_iterator __const_iterator;
 117:/usr/include/c++/11/bits/basic_string.h **** #endif
 118:/usr/include/c++/11/bits/basic_string.h **** 
 119:/usr/include/c++/11/bits/basic_string.h ****     private:
 120:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
 121:/usr/include/c++/11/bits/basic_string.h ****       // A helper type for avoiding boiler-plate.
 122:/usr/include/c++/11/bits/basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
 123:/usr/include/c++/11/bits/basic_string.h **** 
 124:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp, typename _Res>
 125:/usr/include/c++/11/bits/basic_string.h **** 	using _If_sv = enable_if_t<
 126:/usr/include/c++/11/bits/basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
 127:/usr/include/c++/11/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
 128:/usr/include/c++/11/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
 129:/usr/include/c++/11/bits/basic_string.h **** 	  _Res>;
 130:/usr/include/c++/11/bits/basic_string.h **** 
 131:/usr/include/c++/11/bits/basic_string.h ****       // Allows an implicit conversion to __sv_type.
 132:/usr/include/c++/11/bits/basic_string.h ****       static __sv_type
 133:/usr/include/c++/11/bits/basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
 134:/usr/include/c++/11/bits/basic_string.h ****       { return __svt; }
 135:/usr/include/c++/11/bits/basic_string.h **** 
 136:/usr/include/c++/11/bits/basic_string.h ****       // Wraps a string_view by explicit conversion and thus
 137:/usr/include/c++/11/bits/basic_string.h ****       // allows to add an internal constructor that does not
 138:/usr/include/c++/11/bits/basic_string.h ****       // participate in overload resolution when a string_view
 139:/usr/include/c++/11/bits/basic_string.h ****       // is provided.
 140:/usr/include/c++/11/bits/basic_string.h ****       struct __sv_wrapper
 141:/usr/include/c++/11/bits/basic_string.h ****       {
 142:/usr/include/c++/11/bits/basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
 143:/usr/include/c++/11/bits/basic_string.h **** 	__sv_type _M_sv;
 144:/usr/include/c++/11/bits/basic_string.h ****       };
 145:/usr/include/c++/11/bits/basic_string.h **** 
 146:/usr/include/c++/11/bits/basic_string.h ****       /**
 147:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
 148:/usr/include/c++/11/bits/basic_string.h ****        *          wrapper.
 149:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __svw  string view wrapper.
 150:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 151:/usr/include/c++/11/bits/basic_string.h ****        */
 152:/usr/include/c++/11/bits/basic_string.h ****       explicit
 153:/usr/include/c++/11/bits/basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
 154:/usr/include/c++/11/bits/basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
 155:/usr/include/c++/11/bits/basic_string.h **** #endif
 156:/usr/include/c++/11/bits/basic_string.h **** 
 157:/usr/include/c++/11/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 158:/usr/include/c++/11/bits/basic_string.h ****       struct _Alloc_hider : allocator_type // TODO check __is_final
 159:/usr/include/c++/11/bits/basic_string.h ****       {
 160:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus < 201103L
 161:/usr/include/c++/11/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
 162:/usr/include/c++/11/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 163:/usr/include/c++/11/bits/basic_string.h **** #else
 164:/usr/include/c++/11/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a)
 165:/usr/include/c++/11/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 166:/usr/include/c++/11/bits/basic_string.h **** 
 167:/usr/include/c++/11/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, _Alloc&& __a = _Alloc())
 168:/usr/include/c++/11/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 169:/usr/include/c++/11/bits/basic_string.h **** #endif
 170:/usr/include/c++/11/bits/basic_string.h **** 
 171:/usr/include/c++/11/bits/basic_string.h **** 	pointer _M_p; // The actual data.
 172:/usr/include/c++/11/bits/basic_string.h ****       };
 173:/usr/include/c++/11/bits/basic_string.h **** 
 174:/usr/include/c++/11/bits/basic_string.h ****       _Alloc_hider	_M_dataplus;
 175:/usr/include/c++/11/bits/basic_string.h ****       size_type		_M_string_length;
 176:/usr/include/c++/11/bits/basic_string.h **** 
 177:/usr/include/c++/11/bits/basic_string.h ****       enum { _S_local_capacity = 15 / sizeof(_CharT) };
 178:/usr/include/c++/11/bits/basic_string.h **** 
 179:/usr/include/c++/11/bits/basic_string.h ****       union
 180:/usr/include/c++/11/bits/basic_string.h ****       {
 181:/usr/include/c++/11/bits/basic_string.h **** 	_CharT           _M_local_buf[_S_local_capacity + 1];
 182:/usr/include/c++/11/bits/basic_string.h **** 	size_type        _M_allocated_capacity;
 183:/usr/include/c++/11/bits/basic_string.h ****       };
 184:/usr/include/c++/11/bits/basic_string.h **** 
 185:/usr/include/c++/11/bits/basic_string.h ****       void
 186:/usr/include/c++/11/bits/basic_string.h ****       _M_data(pointer __p)
 187:/usr/include/c++/11/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 188:/usr/include/c++/11/bits/basic_string.h **** 
 189:/usr/include/c++/11/bits/basic_string.h ****       void
 190:/usr/include/c++/11/bits/basic_string.h ****       _M_length(size_type __length)
 191:/usr/include/c++/11/bits/basic_string.h ****       { _M_string_length = __length; }
 192:/usr/include/c++/11/bits/basic_string.h **** 
 193:/usr/include/c++/11/bits/basic_string.h ****       pointer
 194:/usr/include/c++/11/bits/basic_string.h ****       _M_data() const
 195:/usr/include/c++/11/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 196:/usr/include/c++/11/bits/basic_string.h **** 
 197:/usr/include/c++/11/bits/basic_string.h ****       pointer
 198:/usr/include/c++/11/bits/basic_string.h ****       _M_local_data()
 199:/usr/include/c++/11/bits/basic_string.h ****       {
 200:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
 201:/usr/include/c++/11/bits/basic_string.h **** 	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
 202:/usr/include/c++/11/bits/basic_string.h **** #else
 203:/usr/include/c++/11/bits/basic_string.h **** 	return pointer(_M_local_buf);
 204:/usr/include/c++/11/bits/basic_string.h **** #endif
 205:/usr/include/c++/11/bits/basic_string.h ****       }
 206:/usr/include/c++/11/bits/basic_string.h **** 
 207:/usr/include/c++/11/bits/basic_string.h ****       const_pointer
 208:/usr/include/c++/11/bits/basic_string.h ****       _M_local_data() const
 209:/usr/include/c++/11/bits/basic_string.h ****       {
 210:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
 211:/usr/include/c++/11/bits/basic_string.h **** 	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
 212:/usr/include/c++/11/bits/basic_string.h **** #else
 213:/usr/include/c++/11/bits/basic_string.h **** 	return const_pointer(_M_local_buf);
 214:/usr/include/c++/11/bits/basic_string.h **** #endif
 215:/usr/include/c++/11/bits/basic_string.h ****       }
 216:/usr/include/c++/11/bits/basic_string.h **** 
 217:/usr/include/c++/11/bits/basic_string.h ****       void
 218:/usr/include/c++/11/bits/basic_string.h ****       _M_capacity(size_type __capacity)
 219:/usr/include/c++/11/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 220:/usr/include/c++/11/bits/basic_string.h **** 
 221:/usr/include/c++/11/bits/basic_string.h ****       void
 222:/usr/include/c++/11/bits/basic_string.h ****       _M_set_length(size_type __n)
 223:/usr/include/c++/11/bits/basic_string.h ****       {
 224:/usr/include/c++/11/bits/basic_string.h **** 	_M_length(__n);
 225:/usr/include/c++/11/bits/basic_string.h **** 	traits_type::assign(_M_data()[__n], _CharT());
 226:/usr/include/c++/11/bits/basic_string.h ****       }
 227:/usr/include/c++/11/bits/basic_string.h **** 
 228:/usr/include/c++/11/bits/basic_string.h ****       bool
 229:/usr/include/c++/11/bits/basic_string.h ****       _M_is_local() const
 230:/usr/include/c++/11/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 231:/usr/include/c++/11/bits/basic_string.h **** 
 232:/usr/include/c++/11/bits/basic_string.h ****       // Create & Destroy
 233:/usr/include/c++/11/bits/basic_string.h ****       pointer
 234:/usr/include/c++/11/bits/basic_string.h ****       _M_create(size_type&, size_type);
 235:/usr/include/c++/11/bits/basic_string.h **** 
 236:/usr/include/c++/11/bits/basic_string.h ****       void
 237:/usr/include/c++/11/bits/basic_string.h ****       _M_dispose()
 238:/usr/include/c++/11/bits/basic_string.h ****       {
 239:/usr/include/c++/11/bits/basic_string.h **** 	if (!_M_is_local())
 240:/usr/include/c++/11/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 241:/usr/include/c++/11/bits/basic_string.h ****       }
 242:/usr/include/c++/11/bits/basic_string.h **** 
 243:/usr/include/c++/11/bits/basic_string.h ****       void
 244:/usr/include/c++/11/bits/basic_string.h ****       _M_destroy(size_type __size) throw()
 245:/usr/include/c++/11/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 246:/usr/include/c++/11/bits/basic_string.h **** 
 247:/usr/include/c++/11/bits/basic_string.h ****       // _M_construct_aux is used to implement the 21.3.1 para 15 which
 248:/usr/include/c++/11/bits/basic_string.h ****       // requires special behaviour if _InIterator is an integral type
 249:/usr/include/c++/11/bits/basic_string.h ****       template<typename _InIterator>
 250:/usr/include/c++/11/bits/basic_string.h ****         void
 251:/usr/include/c++/11/bits/basic_string.h ****         _M_construct_aux(_InIterator __beg, _InIterator __end,
 252:/usr/include/c++/11/bits/basic_string.h **** 			 std::__false_type)
 253:/usr/include/c++/11/bits/basic_string.h **** 	{
 254:/usr/include/c++/11/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
 255:/usr/include/c++/11/bits/basic_string.h ****           _M_construct(__beg, __end, _Tag());
 256:/usr/include/c++/11/bits/basic_string.h **** 	}
 257:/usr/include/c++/11/bits/basic_string.h **** 
 258:/usr/include/c++/11/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 259:/usr/include/c++/11/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
 260:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Integer>
 261:/usr/include/c++/11/bits/basic_string.h ****         void
 262:/usr/include/c++/11/bits/basic_string.h ****         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)
 263:/usr/include/c++/11/bits/basic_string.h **** 	{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }
 264:/usr/include/c++/11/bits/basic_string.h **** 
 265:/usr/include/c++/11/bits/basic_string.h ****       void
 266:/usr/include/c++/11/bits/basic_string.h ****       _M_construct_aux_2(size_type __req, _CharT __c)
 267:/usr/include/c++/11/bits/basic_string.h ****       { _M_construct(__req, __c); }
 268:/usr/include/c++/11/bits/basic_string.h **** 
 269:/usr/include/c++/11/bits/basic_string.h ****       template<typename _InIterator>
 270:/usr/include/c++/11/bits/basic_string.h ****         void
 271:/usr/include/c++/11/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end)
 272:/usr/include/c++/11/bits/basic_string.h **** 	{
 273:/usr/include/c++/11/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
 274:/usr/include/c++/11/bits/basic_string.h **** 	  _M_construct_aux(__beg, __end, _Integral());
 275:/usr/include/c++/11/bits/basic_string.h ****         }
 276:/usr/include/c++/11/bits/basic_string.h **** 
 277:/usr/include/c++/11/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
 278:/usr/include/c++/11/bits/basic_string.h ****       template<typename _InIterator>
 279:/usr/include/c++/11/bits/basic_string.h ****         void
 280:/usr/include/c++/11/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end,
 281:/usr/include/c++/11/bits/basic_string.h **** 		     std::input_iterator_tag);
 282:/usr/include/c++/11/bits/basic_string.h **** 
 283:/usr/include/c++/11/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
 284:/usr/include/c++/11/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
 285:/usr/include/c++/11/bits/basic_string.h ****       template<typename _FwdIterator>
 286:/usr/include/c++/11/bits/basic_string.h ****         void
 287:/usr/include/c++/11/bits/basic_string.h ****         _M_construct(_FwdIterator __beg, _FwdIterator __end,
 288:/usr/include/c++/11/bits/basic_string.h **** 		     std::forward_iterator_tag);
 289:/usr/include/c++/11/bits/basic_string.h **** 
 290:/usr/include/c++/11/bits/basic_string.h ****       void
 291:/usr/include/c++/11/bits/basic_string.h ****       _M_construct(size_type __req, _CharT __c);
 292:/usr/include/c++/11/bits/basic_string.h **** 
 293:/usr/include/c++/11/bits/basic_string.h ****       allocator_type&
 294:/usr/include/c++/11/bits/basic_string.h ****       _M_get_allocator()
 295:/usr/include/c++/11/bits/basic_string.h ****       { return _M_dataplus; }
 296:/usr/include/c++/11/bits/basic_string.h **** 
 297:/usr/include/c++/11/bits/basic_string.h ****       const allocator_type&
 298:/usr/include/c++/11/bits/basic_string.h ****       _M_get_allocator() const
 299:/usr/include/c++/11/bits/basic_string.h ****       { return _M_dataplus; }
 300:/usr/include/c++/11/bits/basic_string.h **** 
 301:/usr/include/c++/11/bits/basic_string.h ****     private:
 302:/usr/include/c++/11/bits/basic_string.h **** 
 303:/usr/include/c++/11/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
 304:/usr/include/c++/11/bits/basic_string.h ****       // The explicit instantiations in misc-inst.cc require this due to
 305:/usr/include/c++/11/bits/basic_string.h ****       // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64063
 306:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp, bool _Requires =
 307:/usr/include/c++/11/bits/basic_string.h **** 	       !__are_same<_Tp, _CharT*>::__value
 308:/usr/include/c++/11/bits/basic_string.h **** 	       && !__are_same<_Tp, const _CharT*>::__value
 309:/usr/include/c++/11/bits/basic_string.h **** 	       && !__are_same<_Tp, iterator>::__value
 310:/usr/include/c++/11/bits/basic_string.h **** 	       && !__are_same<_Tp, const_iterator>::__value>
 311:/usr/include/c++/11/bits/basic_string.h **** 	struct __enable_if_not_native_iterator
 312:/usr/include/c++/11/bits/basic_string.h **** 	{ typedef basic_string& __type; };
 313:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
 314:/usr/include/c++/11/bits/basic_string.h **** 	struct __enable_if_not_native_iterator<_Tp, false> { };
 315:/usr/include/c++/11/bits/basic_string.h **** #endif
 316:/usr/include/c++/11/bits/basic_string.h **** 
 317:/usr/include/c++/11/bits/basic_string.h ****       size_type
 318:/usr/include/c++/11/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 319:/usr/include/c++/11/bits/basic_string.h ****       {
 320:/usr/include/c++/11/bits/basic_string.h **** 	if (__pos > this->size())
 321:/usr/include/c++/11/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 322:/usr/include/c++/11/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 323:/usr/include/c++/11/bits/basic_string.h **** 				   __s, __pos, this->size());
 324:/usr/include/c++/11/bits/basic_string.h **** 	return __pos;
 325:/usr/include/c++/11/bits/basic_string.h ****       }
 326:/usr/include/c++/11/bits/basic_string.h **** 
 327:/usr/include/c++/11/bits/basic_string.h ****       void
 328:/usr/include/c++/11/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 329:/usr/include/c++/11/bits/basic_string.h ****       {
 330:/usr/include/c++/11/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 331:/usr/include/c++/11/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 332:/usr/include/c++/11/bits/basic_string.h ****       }
 333:/usr/include/c++/11/bits/basic_string.h **** 
 334:/usr/include/c++/11/bits/basic_string.h **** 
 335:/usr/include/c++/11/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 336:/usr/include/c++/11/bits/basic_string.h ****       size_type
 337:/usr/include/c++/11/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
 338:/usr/include/c++/11/bits/basic_string.h ****       {
 339:/usr/include/c++/11/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 340:/usr/include/c++/11/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 341:/usr/include/c++/11/bits/basic_string.h ****       }
 342:/usr/include/c++/11/bits/basic_string.h **** 
 343:/usr/include/c++/11/bits/basic_string.h ****       // True if _Rep and source do not overlap.
 344:/usr/include/c++/11/bits/basic_string.h ****       bool
 345:/usr/include/c++/11/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 346:/usr/include/c++/11/bits/basic_string.h ****       {
 347:/usr/include/c++/11/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 348:/usr/include/c++/11/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 349:/usr/include/c++/11/bits/basic_string.h ****       }
 350:/usr/include/c++/11/bits/basic_string.h **** 
 351:/usr/include/c++/11/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
 352:/usr/include/c++/11/bits/basic_string.h ****       // traits_type::copy/move/assign.
 353:/usr/include/c++/11/bits/basic_string.h ****       static void
 354:/usr/include/c++/11/bits/basic_string.h ****       _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
 355:/usr/include/c++/11/bits/basic_string.h ****       {
 356:/usr/include/c++/11/bits/basic_string.h **** 	if (__n == 1)
 357:/usr/include/c++/11/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 358:/usr/include/c++/11/bits/basic_string.h **** 	else
 359:/usr/include/c++/11/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 360:/usr/include/c++/11/bits/basic_string.h ****       }
 361:/usr/include/c++/11/bits/basic_string.h **** 
 362:/usr/include/c++/11/bits/basic_string.h ****       static void
 363:/usr/include/c++/11/bits/basic_string.h ****       _S_move(_CharT* __d, const _CharT* __s, size_type __n)
 364:/usr/include/c++/11/bits/basic_string.h ****       {
 365:/usr/include/c++/11/bits/basic_string.h **** 	if (__n == 1)
 366:/usr/include/c++/11/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 367:/usr/include/c++/11/bits/basic_string.h **** 	else
 368:/usr/include/c++/11/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);
 369:/usr/include/c++/11/bits/basic_string.h ****       }
 370:/usr/include/c++/11/bits/basic_string.h **** 
 371:/usr/include/c++/11/bits/basic_string.h ****       static void
 372:/usr/include/c++/11/bits/basic_string.h ****       _S_assign(_CharT* __d, size_type __n, _CharT __c)
 373:/usr/include/c++/11/bits/basic_string.h ****       {
 374:/usr/include/c++/11/bits/basic_string.h **** 	if (__n == 1)
 375:/usr/include/c++/11/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
 376:/usr/include/c++/11/bits/basic_string.h **** 	else
 377:/usr/include/c++/11/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);
 378:/usr/include/c++/11/bits/basic_string.h ****       }
 379:/usr/include/c++/11/bits/basic_string.h **** 
 380:/usr/include/c++/11/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 381:/usr/include/c++/11/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
 382:/usr/include/c++/11/bits/basic_string.h ****       template<class _Iterator>
 383:/usr/include/c++/11/bits/basic_string.h ****         static void
 384:/usr/include/c++/11/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 385:/usr/include/c++/11/bits/basic_string.h ****         {
 386:/usr/include/c++/11/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
 387:/usr/include/c++/11/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 388:/usr/include/c++/11/bits/basic_string.h **** 	}
 389:/usr/include/c++/11/bits/basic_string.h **** 
 390:/usr/include/c++/11/bits/basic_string.h ****       static void
 391:/usr/include/c++/11/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 392:/usr/include/c++/11/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 393:/usr/include/c++/11/bits/basic_string.h **** 
 394:/usr/include/c++/11/bits/basic_string.h ****       static void
 395:/usr/include/c++/11/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 396:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 397:/usr/include/c++/11/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 398:/usr/include/c++/11/bits/basic_string.h **** 
 399:/usr/include/c++/11/bits/basic_string.h ****       static void
 400:/usr/include/c++/11/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 401:/usr/include/c++/11/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 402:/usr/include/c++/11/bits/basic_string.h **** 
 403:/usr/include/c++/11/bits/basic_string.h ****       static void
 404:/usr/include/c++/11/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 405:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 406:/usr/include/c++/11/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 407:/usr/include/c++/11/bits/basic_string.h **** 
 408:/usr/include/c++/11/bits/basic_string.h ****       static int
 409:/usr/include/c++/11/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 410:/usr/include/c++/11/bits/basic_string.h ****       {
 411:/usr/include/c++/11/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 412:/usr/include/c++/11/bits/basic_string.h **** 
 413:/usr/include/c++/11/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 414:/usr/include/c++/11/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 415:/usr/include/c++/11/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 416:/usr/include/c++/11/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 417:/usr/include/c++/11/bits/basic_string.h **** 	else
 418:/usr/include/c++/11/bits/basic_string.h **** 	  return int(__d);
 419:/usr/include/c++/11/bits/basic_string.h ****       }
 420:/usr/include/c++/11/bits/basic_string.h **** 
 421:/usr/include/c++/11/bits/basic_string.h ****       void
 422:/usr/include/c++/11/bits/basic_string.h ****       _M_assign(const basic_string&);
 423:/usr/include/c++/11/bits/basic_string.h **** 
 424:/usr/include/c++/11/bits/basic_string.h ****       void
 425:/usr/include/c++/11/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 426:/usr/include/c++/11/bits/basic_string.h **** 		size_type __len2);
 427:/usr/include/c++/11/bits/basic_string.h **** 
 428:/usr/include/c++/11/bits/basic_string.h ****       void
 429:/usr/include/c++/11/bits/basic_string.h ****       _M_erase(size_type __pos, size_type __n);
 430:/usr/include/c++/11/bits/basic_string.h **** 
 431:/usr/include/c++/11/bits/basic_string.h ****     public:
 432:/usr/include/c++/11/bits/basic_string.h ****       // Construct/copy/destroy:
 433:/usr/include/c++/11/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 434:/usr/include/c++/11/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 435:/usr/include/c++/11/bits/basic_string.h **** 
 436:/usr/include/c++/11/bits/basic_string.h ****       /**
 437:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
 438:/usr/include/c++/11/bits/basic_string.h ****        */
 439:/usr/include/c++/11/bits/basic_string.h ****       basic_string()
 440:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 441:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 442:/usr/include/c++/11/bits/basic_string.h ****       { _M_set_length(0); }
 443:/usr/include/c++/11/bits/basic_string.h **** 
 444:/usr/include/c++/11/bits/basic_string.h ****       /**
 445:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 446:/usr/include/c++/11/bits/basic_string.h ****        */
 447:/usr/include/c++/11/bits/basic_string.h ****       explicit
 448:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const _Alloc& __a) _GLIBCXX_NOEXCEPT
 449:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 450:/usr/include/c++/11/bits/basic_string.h ****       { _M_set_length(0); }
 451:/usr/include/c++/11/bits/basic_string.h **** 
 452:/usr/include/c++/11/bits/basic_string.h ****       /**
 453:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a __str.
 454:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string.
 455:/usr/include/c++/11/bits/basic_string.h ****        */
 456:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const basic_string& __str)
 457:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 458:/usr/include/c++/11/bits/basic_string.h **** 		    _Alloc_traits::_S_select_on_copy(__str._M_get_allocator()))
 459:/usr/include/c++/11/bits/basic_string.h ****       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
 460:/usr/include/c++/11/bits/basic_string.h **** 
 461:/usr/include/c++/11/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 462:/usr/include/c++/11/bits/basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
 463:/usr/include/c++/11/bits/basic_string.h ****       /**
 464:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 465:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string.
 466:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 467:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 468:/usr/include/c++/11/bits/basic_string.h ****        */
 469:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 470:/usr/include/c++/11/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 471:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 472:/usr/include/c++/11/bits/basic_string.h ****       {
 473:/usr/include/c++/11/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 474:/usr/include/c++/11/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 475:/usr/include/c++/11/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, npos));
 476:/usr/include/c++/11/bits/basic_string.h ****       }
 477:/usr/include/c++/11/bits/basic_string.h **** 
 478:/usr/include/c++/11/bits/basic_string.h ****       /**
 479:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 480:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string.
 481:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 482:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 483:/usr/include/c++/11/bits/basic_string.h ****        */
 484:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 485:/usr/include/c++/11/bits/basic_string.h **** 		   size_type __n)
 486:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 487:/usr/include/c++/11/bits/basic_string.h ****       {
 488:/usr/include/c++/11/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 489:/usr/include/c++/11/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 490:/usr/include/c++/11/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 491:/usr/include/c++/11/bits/basic_string.h ****       }
 492:/usr/include/c++/11/bits/basic_string.h **** 
 493:/usr/include/c++/11/bits/basic_string.h ****       /**
 494:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 495:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string.
 496:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 497:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 498:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 499:/usr/include/c++/11/bits/basic_string.h ****        */
 500:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 501:/usr/include/c++/11/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a)
 502:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 503:/usr/include/c++/11/bits/basic_string.h ****       {
 504:/usr/include/c++/11/bits/basic_string.h **** 	const _CharT* __start
 505:/usr/include/c++/11/bits/basic_string.h **** 	  = __str._M_data() + __str._M_check(__pos, "string::string");
 506:/usr/include/c++/11/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 507:/usr/include/c++/11/bits/basic_string.h ****       }
 508:/usr/include/c++/11/bits/basic_string.h **** 
 509:/usr/include/c++/11/bits/basic_string.h ****       /**
 510:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 511:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __s  Source character %array.
 512:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 513:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 514:/usr/include/c++/11/bits/basic_string.h ****        *
 515:/usr/include/c++/11/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 516:/usr/include/c++/11/bits/basic_string.h ****        *  has no special meaning.
 517:/usr/include/c++/11/bits/basic_string.h ****        */
 518:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 519:/usr/include/c++/11/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 520:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 521:/usr/include/c++/11/bits/basic_string.h ****       { _M_construct(__s, __s + __n); }
 522:/usr/include/c++/11/bits/basic_string.h **** 
 523:/usr/include/c++/11/bits/basic_string.h ****       /**
 524:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
 525:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __s  Source C string.
 526:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 527:/usr/include/c++/11/bits/basic_string.h ****        */
 528:/usr/include/c++/11/bits/basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 529:/usr/include/c++/11/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 530:/usr/include/c++/11/bits/basic_string.h ****       // 3076. basic_string CTAD ambiguity
 531:/usr/include/c++/11/bits/basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 532:/usr/include/c++/11/bits/basic_string.h **** #endif
 533:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 534:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 535:/usr/include/c++/11/bits/basic_string.h ****       {
 536:/usr/include/c++/11/bits/basic_string.h **** 	const _CharT* __end = __s ? __s + traits_type::length(__s)
 537:/usr/include/c++/11/bits/basic_string.h **** 	  // We just need a non-null pointer here to get an exception:
 538:/usr/include/c++/11/bits/basic_string.h **** 	  : reinterpret_cast<const _CharT*>(__alignof__(_CharT));
 539:/usr/include/c++/11/bits/basic_string.h **** 	_M_construct(__s, __end, random_access_iterator_tag());
 540:/usr/include/c++/11/bits/basic_string.h ****       }
 541:/usr/include/c++/11/bits/basic_string.h **** 
 542:/usr/include/c++/11/bits/basic_string.h ****       /**
 543:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
 544:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __n  Number of characters.
 545:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __c  Character to use.
 546:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 547:/usr/include/c++/11/bits/basic_string.h ****        */
 548:/usr/include/c++/11/bits/basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 549:/usr/include/c++/11/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 550:/usr/include/c++/11/bits/basic_string.h ****       // 3076. basic_string CTAD ambiguity
 551:/usr/include/c++/11/bits/basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 552:/usr/include/c++/11/bits/basic_string.h **** #endif
 553:/usr/include/c++/11/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
 554:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 555:/usr/include/c++/11/bits/basic_string.h ****       { _M_construct(__n, __c); }
 556:/usr/include/c++/11/bits/basic_string.h **** 
 557:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
 558:/usr/include/c++/11/bits/basic_string.h ****       /**
 559:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Move construct string.
 560:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string.
 561:/usr/include/c++/11/bits/basic_string.h ****        *
 562:/usr/include/c++/11/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 563:/usr/include/c++/11/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
 564:/usr/include/c++/11/bits/basic_string.h ****        */
 565:/usr/include/c++/11/bits/basic_string.h ****       basic_string(basic_string&& __str) noexcept
 566:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 567:/usr/include/c++/11/bits/basic_string.h ****       {
 568:/usr/include/c++/11/bits/basic_string.h **** 	if (__str._M_is_local())
 569:/usr/include/c++/11/bits/basic_string.h **** 	  {
 570:/usr/include/c++/11/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 571:/usr/include/c++/11/bits/basic_string.h **** 			      _S_local_capacity + 1);
 572:/usr/include/c++/11/bits/basic_string.h **** 	  }
 573:/usr/include/c++/11/bits/basic_string.h **** 	else
 574:/usr/include/c++/11/bits/basic_string.h **** 	  {
 575:/usr/include/c++/11/bits/basic_string.h **** 	    _M_data(__str._M_data());
 576:/usr/include/c++/11/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 577:/usr/include/c++/11/bits/basic_string.h **** 	  }
 578:/usr/include/c++/11/bits/basic_string.h **** 
 579:/usr/include/c++/11/bits/basic_string.h **** 	// Must use _M_length() here not _M_set_length() because
 580:/usr/include/c++/11/bits/basic_string.h **** 	// basic_stringbuf relies on writing into unallocated capacity so
 581:/usr/include/c++/11/bits/basic_string.h **** 	// we mess up the contents if we put a '\0' in the string.
 582:/usr/include/c++/11/bits/basic_string.h **** 	_M_length(__str.length());
 583:/usr/include/c++/11/bits/basic_string.h **** 	__str._M_data(__str._M_local_data());
 584:/usr/include/c++/11/bits/basic_string.h **** 	__str._M_set_length(0);
 585:/usr/include/c++/11/bits/basic_string.h ****       }
 586:/usr/include/c++/11/bits/basic_string.h **** 
 587:/usr/include/c++/11/bits/basic_string.h ****       /**
 588:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
 589:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 590:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 591:/usr/include/c++/11/bits/basic_string.h ****        */
 592:/usr/include/c++/11/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
 593:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 594:/usr/include/c++/11/bits/basic_string.h ****       { _M_construct(__l.begin(), __l.end()); }
 595:/usr/include/c++/11/bits/basic_string.h **** 
 596:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
 597:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 598:/usr/include/c++/11/bits/basic_string.h ****       { _M_construct(__str.begin(), __str.end()); }
 599:/usr/include/c++/11/bits/basic_string.h **** 
 600:/usr/include/c++/11/bits/basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
 601:/usr/include/c++/11/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_always_equal())
 602:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 603:/usr/include/c++/11/bits/basic_string.h ****       {
 604:/usr/include/c++/11/bits/basic_string.h **** 	if (__str._M_is_local())
 605:/usr/include/c++/11/bits/basic_string.h **** 	  {
 606:/usr/include/c++/11/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 607:/usr/include/c++/11/bits/basic_string.h **** 			      _S_local_capacity + 1);
 608:/usr/include/c++/11/bits/basic_string.h **** 	    _M_length(__str.length());
 609:/usr/include/c++/11/bits/basic_string.h **** 	    __str._M_set_length(0);
 610:/usr/include/c++/11/bits/basic_string.h **** 	  }
 611:/usr/include/c++/11/bits/basic_string.h **** 	else if (_Alloc_traits::_S_always_equal()
 612:/usr/include/c++/11/bits/basic_string.h **** 	    || __str.get_allocator() == __a)
 613:/usr/include/c++/11/bits/basic_string.h **** 	  {
 614:/usr/include/c++/11/bits/basic_string.h **** 	    _M_data(__str._M_data());
 615:/usr/include/c++/11/bits/basic_string.h **** 	    _M_length(__str.length());
 616:/usr/include/c++/11/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 617:/usr/include/c++/11/bits/basic_string.h **** 	    __str._M_data(__str._M_local_buf);
 618:/usr/include/c++/11/bits/basic_string.h **** 	    __str._M_set_length(0);
 619:/usr/include/c++/11/bits/basic_string.h **** 	  }
 620:/usr/include/c++/11/bits/basic_string.h **** 	else
 621:/usr/include/c++/11/bits/basic_string.h **** 	  _M_construct(__str.begin(), __str.end());
 622:/usr/include/c++/11/bits/basic_string.h ****       }
 623:/usr/include/c++/11/bits/basic_string.h **** 
 624:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
 625:/usr/include/c++/11/bits/basic_string.h **** 
 626:/usr/include/c++/11/bits/basic_string.h ****       /**
 627:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
 628:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __beg  Start of range.
 629:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __end  End of range.
 630:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 631:/usr/include/c++/11/bits/basic_string.h ****        */
 632:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
 633:/usr/include/c++/11/bits/basic_string.h ****       template<typename _InputIterator,
 634:/usr/include/c++/11/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 635:/usr/include/c++/11/bits/basic_string.h **** #else
 636:/usr/include/c++/11/bits/basic_string.h ****       template<typename _InputIterator>
 637:/usr/include/c++/11/bits/basic_string.h **** #endif
 638:/usr/include/c++/11/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 639:/usr/include/c++/11/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 640:/usr/include/c++/11/bits/basic_string.h **** 	: _M_dataplus(_M_local_data(), __a)
 641:/usr/include/c++/11/bits/basic_string.h **** 	{ _M_construct(__beg, __end); }
 642:/usr/include/c++/11/bits/basic_string.h **** 
 643:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
 644:/usr/include/c++/11/bits/basic_string.h ****       /**
 645:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
 646:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __t   Source object convertible to string view.
 647:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
 648:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
 649:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a   Allocator to use.
 650:/usr/include/c++/11/bits/basic_string.h ****        */
 651:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp,
 652:/usr/include/c++/11/bits/basic_string.h **** 	       typename = enable_if_t<is_convertible_v<const _Tp&, __sv_type>>>
 653:/usr/include/c++/11/bits/basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
 654:/usr/include/c++/11/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 655:/usr/include/c++/11/bits/basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
 656:/usr/include/c++/11/bits/basic_string.h **** 
 657:/usr/include/c++/11/bits/basic_string.h ****       /**
 658:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string from a string_view.
 659:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __t  Source object convertible to string view.
 660:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 661:/usr/include/c++/11/bits/basic_string.h ****        */
 662:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 663:/usr/include/c++/11/bits/basic_string.h **** 	explicit
 664:/usr/include/c++/11/bits/basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
 665:/usr/include/c++/11/bits/basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
 666:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
 667:/usr/include/c++/11/bits/basic_string.h **** 
 668:/usr/include/c++/11/bits/basic_string.h ****       /**
 669:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Destroy the string instance.
 670:/usr/include/c++/11/bits/basic_string.h ****        */
 671:/usr/include/c++/11/bits/basic_string.h ****       ~basic_string()
 672:/usr/include/c++/11/bits/basic_string.h ****       { _M_dispose(); }
 673:/usr/include/c++/11/bits/basic_string.h **** 
 674:/usr/include/c++/11/bits/basic_string.h ****       /**
 675:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 676:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string.
 677:/usr/include/c++/11/bits/basic_string.h ****        */
 678:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
 679:/usr/include/c++/11/bits/basic_string.h ****       operator=(const basic_string& __str)
 680:/usr/include/c++/11/bits/basic_string.h ****       {
 681:/usr/include/c++/11/bits/basic_string.h **** 	return this->assign(__str);
 682:/usr/include/c++/11/bits/basic_string.h ****       }
 683:/usr/include/c++/11/bits/basic_string.h **** 
 684:/usr/include/c++/11/bits/basic_string.h ****       /**
 685:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 686:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
 687:/usr/include/c++/11/bits/basic_string.h ****        */
 688:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
 689:/usr/include/c++/11/bits/basic_string.h ****       operator=(const _CharT* __s)
 690:/usr/include/c++/11/bits/basic_string.h ****       { return this->assign(__s); }
 691:/usr/include/c++/11/bits/basic_string.h **** 
 692:/usr/include/c++/11/bits/basic_string.h ****       /**
 693:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
 694:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __c  Source character.
 695:/usr/include/c++/11/bits/basic_string.h ****        *
 696:/usr/include/c++/11/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
 697:/usr/include/c++/11/bits/basic_string.h ****        *  (*this)[0] == @a c.
 698:/usr/include/c++/11/bits/basic_string.h ****        */
 699:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
 700:/usr/include/c++/11/bits/basic_string.h ****       operator=(_CharT __c)
 701:/usr/include/c++/11/bits/basic_string.h ****       {
 702:/usr/include/c++/11/bits/basic_string.h **** 	this->assign(1, __c);
 703:/usr/include/c++/11/bits/basic_string.h **** 	return *this;
 704:/usr/include/c++/11/bits/basic_string.h ****       }
 705:/usr/include/c++/11/bits/basic_string.h **** 
 706:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
 707:/usr/include/c++/11/bits/basic_string.h ****       /**
 708:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 709:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string.
 710:/usr/include/c++/11/bits/basic_string.h ****        *
 711:/usr/include/c++/11/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 712:/usr/include/c++/11/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
 713:/usr/include/c++/11/bits/basic_string.h ****        */
 714:/usr/include/c++/11/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 715:/usr/include/c++/11/bits/basic_string.h ****       // 2063. Contradictory requirements for string move assignment
 716:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
 717:/usr/include/c++/11/bits/basic_string.h ****       operator=(basic_string&& __str)
 718:/usr/include/c++/11/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 719:/usr/include/c++/11/bits/basic_string.h ****       {
 720:/usr/include/c++/11/bits/basic_string.h **** 	if (!_M_is_local() && _Alloc_traits::_S_propagate_on_move_assign()
 721:/usr/include/c++/11/bits/basic_string.h **** 	    && !_Alloc_traits::_S_always_equal()
 722:/usr/include/c++/11/bits/basic_string.h **** 	    && _M_get_allocator() != __str._M_get_allocator())
 723:/usr/include/c++/11/bits/basic_string.h **** 	  {
 724:/usr/include/c++/11/bits/basic_string.h **** 	    // Destroy existing storage before replacing allocator.
 725:/usr/include/c++/11/bits/basic_string.h **** 	    _M_destroy(_M_allocated_capacity);
 726:/usr/include/c++/11/bits/basic_string.h **** 	    _M_data(_M_local_data());
 727:/usr/include/c++/11/bits/basic_string.h **** 	    _M_set_length(0);
 728:/usr/include/c++/11/bits/basic_string.h **** 	  }
 729:/usr/include/c++/11/bits/basic_string.h **** 	// Replace allocator if POCMA is true.
 730:/usr/include/c++/11/bits/basic_string.h **** 	std::__alloc_on_move(_M_get_allocator(), __str._M_get_allocator());
 731:/usr/include/c++/11/bits/basic_string.h **** 
 732:/usr/include/c++/11/bits/basic_string.h **** 	if (__str._M_is_local())
 733:/usr/include/c++/11/bits/basic_string.h **** 	  {
 734:/usr/include/c++/11/bits/basic_string.h **** 	    // We've always got room for a short string, just copy it
 735:/usr/include/c++/11/bits/basic_string.h **** 	    // (unless this is a self-move, because that would violate the
 736:/usr/include/c++/11/bits/basic_string.h **** 	    // char_traits::copy precondition that the ranges don't overlap).
 737:/usr/include/c++/11/bits/basic_string.h **** 	    if (__builtin_expect(std::__addressof(__str) != this, true))
 738:/usr/include/c++/11/bits/basic_string.h **** 	      {
 739:/usr/include/c++/11/bits/basic_string.h **** 		if (__str.size())
 740:/usr/include/c++/11/bits/basic_string.h **** 		  this->_S_copy(_M_data(), __str._M_data(), __str.size());
 741:/usr/include/c++/11/bits/basic_string.h **** 		_M_set_length(__str.size());
 742:/usr/include/c++/11/bits/basic_string.h **** 	      }
 743:/usr/include/c++/11/bits/basic_string.h **** 	  }
 744:/usr/include/c++/11/bits/basic_string.h **** 	else if (_Alloc_traits::_S_propagate_on_move_assign()
 745:/usr/include/c++/11/bits/basic_string.h **** 	    || _Alloc_traits::_S_always_equal()
 746:/usr/include/c++/11/bits/basic_string.h **** 	    || _M_get_allocator() == __str._M_get_allocator())
 747:/usr/include/c++/11/bits/basic_string.h **** 	  {
 748:/usr/include/c++/11/bits/basic_string.h **** 	    // Just move the allocated pointer, our allocator can free it.
 749:/usr/include/c++/11/bits/basic_string.h **** 	    pointer __data = nullptr;
 750:/usr/include/c++/11/bits/basic_string.h **** 	    size_type __capacity;
 751:/usr/include/c++/11/bits/basic_string.h **** 	    if (!_M_is_local())
 752:/usr/include/c++/11/bits/basic_string.h **** 	      {
 753:/usr/include/c++/11/bits/basic_string.h **** 		if (_Alloc_traits::_S_always_equal())
 754:/usr/include/c++/11/bits/basic_string.h **** 		  {
 755:/usr/include/c++/11/bits/basic_string.h **** 		    // __str can reuse our existing storage.
 756:/usr/include/c++/11/bits/basic_string.h **** 		    __data = _M_data();
 757:/usr/include/c++/11/bits/basic_string.h **** 		    __capacity = _M_allocated_capacity;
 758:/usr/include/c++/11/bits/basic_string.h **** 		  }
 759:/usr/include/c++/11/bits/basic_string.h **** 		else // __str can't use it, so free it.
 760:/usr/include/c++/11/bits/basic_string.h **** 		  _M_destroy(_M_allocated_capacity);
 761:/usr/include/c++/11/bits/basic_string.h **** 	      }
 762:/usr/include/c++/11/bits/basic_string.h **** 
 763:/usr/include/c++/11/bits/basic_string.h **** 	    _M_data(__str._M_data());
 764:/usr/include/c++/11/bits/basic_string.h **** 	    _M_length(__str.length());
 765:/usr/include/c++/11/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 766:/usr/include/c++/11/bits/basic_string.h **** 	    if (__data)
 767:/usr/include/c++/11/bits/basic_string.h **** 	      {
 768:/usr/include/c++/11/bits/basic_string.h **** 		__str._M_data(__data);
 769:/usr/include/c++/11/bits/basic_string.h **** 		__str._M_capacity(__capacity);
 770:/usr/include/c++/11/bits/basic_string.h **** 	      }
 771:/usr/include/c++/11/bits/basic_string.h **** 	    else
 772:/usr/include/c++/11/bits/basic_string.h **** 	      __str._M_data(__str._M_local_buf);
 773:/usr/include/c++/11/bits/basic_string.h **** 	  }
 774:/usr/include/c++/11/bits/basic_string.h **** 	else // Need to do a deep copy
 775:/usr/include/c++/11/bits/basic_string.h **** 	  assign(__str);
 776:/usr/include/c++/11/bits/basic_string.h **** 	__str.clear();
 777:/usr/include/c++/11/bits/basic_string.h **** 	return *this;
 778:/usr/include/c++/11/bits/basic_string.h ****       }
 779:/usr/include/c++/11/bits/basic_string.h **** 
 780:/usr/include/c++/11/bits/basic_string.h ****       /**
 781:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 782:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
 783:/usr/include/c++/11/bits/basic_string.h ****        */
 784:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
 785:/usr/include/c++/11/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
 786:/usr/include/c++/11/bits/basic_string.h ****       {
 787:/usr/include/c++/11/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
 788:/usr/include/c++/11/bits/basic_string.h **** 	return *this;
 789:/usr/include/c++/11/bits/basic_string.h ****       }
 790:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
 791:/usr/include/c++/11/bits/basic_string.h **** 
 792:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
 793:/usr/include/c++/11/bits/basic_string.h ****       /**
 794:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
 795:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __svt  An object convertible to string_view.
 796:/usr/include/c++/11/bits/basic_string.h ****        */
 797:/usr/include/c++/11/bits/basic_string.h ****      template<typename _Tp>
 798:/usr/include/c++/11/bits/basic_string.h ****        _If_sv<_Tp, basic_string&>
 799:/usr/include/c++/11/bits/basic_string.h ****        operator=(const _Tp& __svt)
 800:/usr/include/c++/11/bits/basic_string.h ****        { return this->assign(__svt); }
 801:/usr/include/c++/11/bits/basic_string.h **** 
 802:/usr/include/c++/11/bits/basic_string.h ****       /**
 803:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Convert to a string_view.
 804:/usr/include/c++/11/bits/basic_string.h ****        *  @return A string_view.
 805:/usr/include/c++/11/bits/basic_string.h ****        */
 806:/usr/include/c++/11/bits/basic_string.h ****       operator __sv_type() const noexcept
 807:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(data(), size()); }
 808:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
 809:/usr/include/c++/11/bits/basic_string.h **** 
 810:/usr/include/c++/11/bits/basic_string.h ****       // Iterators:
 811:/usr/include/c++/11/bits/basic_string.h ****       /**
 812:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 813:/usr/include/c++/11/bits/basic_string.h ****        *  the %string.
 814:/usr/include/c++/11/bits/basic_string.h ****        */
 815:/usr/include/c++/11/bits/basic_string.h ****       iterator
 816:/usr/include/c++/11/bits/basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 817:/usr/include/c++/11/bits/basic_string.h ****       { return iterator(_M_data()); }
 818:/usr/include/c++/11/bits/basic_string.h **** 
 819:/usr/include/c++/11/bits/basic_string.h ****       /**
 820:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 821:/usr/include/c++/11/bits/basic_string.h ****        *  character in the %string.
 822:/usr/include/c++/11/bits/basic_string.h ****        */
 823:/usr/include/c++/11/bits/basic_string.h ****       const_iterator
 824:/usr/include/c++/11/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 825:/usr/include/c++/11/bits/basic_string.h ****       { return const_iterator(_M_data()); }
 826:/usr/include/c++/11/bits/basic_string.h **** 
 827:/usr/include/c++/11/bits/basic_string.h ****       /**
 828:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
 829:/usr/include/c++/11/bits/basic_string.h ****        *  character in the %string.
 830:/usr/include/c++/11/bits/basic_string.h ****        */
 831:/usr/include/c++/11/bits/basic_string.h ****       iterator
 832:/usr/include/c++/11/bits/basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 833:/usr/include/c++/11/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
 834:/usr/include/c++/11/bits/basic_string.h **** 
 835:/usr/include/c++/11/bits/basic_string.h ****       /**
 836:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 837:/usr/include/c++/11/bits/basic_string.h ****        *  last character in the %string.
 838:/usr/include/c++/11/bits/basic_string.h ****        */
 839:/usr/include/c++/11/bits/basic_string.h ****       const_iterator
 840:/usr/include/c++/11/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 841:/usr/include/c++/11/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 842:/usr/include/c++/11/bits/basic_string.h **** 
 843:/usr/include/c++/11/bits/basic_string.h ****       /**
 844:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 845:/usr/include/c++/11/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 846:/usr/include/c++/11/bits/basic_string.h ****        *  order.
 847:/usr/include/c++/11/bits/basic_string.h ****        */
 848:/usr/include/c++/11/bits/basic_string.h ****       reverse_iterator
 849:/usr/include/c++/11/bits/basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 850:/usr/include/c++/11/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
 851:/usr/include/c++/11/bits/basic_string.h **** 
 852:/usr/include/c++/11/bits/basic_string.h ****       /**
 853:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 854:/usr/include/c++/11/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 855:/usr/include/c++/11/bits/basic_string.h ****        *  reverse element order.
 856:/usr/include/c++/11/bits/basic_string.h ****        */
 857:/usr/include/c++/11/bits/basic_string.h ****       const_reverse_iterator
 858:/usr/include/c++/11/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 859:/usr/include/c++/11/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 860:/usr/include/c++/11/bits/basic_string.h **** 
 861:/usr/include/c++/11/bits/basic_string.h ****       /**
 862:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 863:/usr/include/c++/11/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 864:/usr/include/c++/11/bits/basic_string.h ****        *  element order.
 865:/usr/include/c++/11/bits/basic_string.h ****        */
 866:/usr/include/c++/11/bits/basic_string.h ****       reverse_iterator
 867:/usr/include/c++/11/bits/basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
 868:/usr/include/c++/11/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
 869:/usr/include/c++/11/bits/basic_string.h **** 
 870:/usr/include/c++/11/bits/basic_string.h ****       /**
 871:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 872:/usr/include/c++/11/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 873:/usr/include/c++/11/bits/basic_string.h ****        *  is done in reverse element order.
 874:/usr/include/c++/11/bits/basic_string.h ****        */
 875:/usr/include/c++/11/bits/basic_string.h ****       const_reverse_iterator
 876:/usr/include/c++/11/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 877:/usr/include/c++/11/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 878:/usr/include/c++/11/bits/basic_string.h **** 
 879:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
 880:/usr/include/c++/11/bits/basic_string.h ****       /**
 881:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 882:/usr/include/c++/11/bits/basic_string.h ****        *  character in the %string.
 883:/usr/include/c++/11/bits/basic_string.h ****        */
 884:/usr/include/c++/11/bits/basic_string.h ****       const_iterator
 885:/usr/include/c++/11/bits/basic_string.h ****       cbegin() const noexcept
 886:/usr/include/c++/11/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
 887:/usr/include/c++/11/bits/basic_string.h **** 
 888:/usr/include/c++/11/bits/basic_string.h ****       /**
 889:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 890:/usr/include/c++/11/bits/basic_string.h ****        *  last character in the %string.
 891:/usr/include/c++/11/bits/basic_string.h ****        */
 892:/usr/include/c++/11/bits/basic_string.h ****       const_iterator
 893:/usr/include/c++/11/bits/basic_string.h ****       cend() const noexcept
 894:/usr/include/c++/11/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
 895:/usr/include/c++/11/bits/basic_string.h **** 
 896:/usr/include/c++/11/bits/basic_string.h ****       /**
 897:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 898:/usr/include/c++/11/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 899:/usr/include/c++/11/bits/basic_string.h ****        *  reverse element order.
 900:/usr/include/c++/11/bits/basic_string.h ****        */
 901:/usr/include/c++/11/bits/basic_string.h ****       const_reverse_iterator
 902:/usr/include/c++/11/bits/basic_string.h ****       crbegin() const noexcept
 903:/usr/include/c++/11/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 904:/usr/include/c++/11/bits/basic_string.h **** 
 905:/usr/include/c++/11/bits/basic_string.h ****       /**
 906:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 907:/usr/include/c++/11/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 908:/usr/include/c++/11/bits/basic_string.h ****        *  is done in reverse element order.
 909:/usr/include/c++/11/bits/basic_string.h ****        */
 910:/usr/include/c++/11/bits/basic_string.h ****       const_reverse_iterator
 911:/usr/include/c++/11/bits/basic_string.h ****       crend() const noexcept
 912:/usr/include/c++/11/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 913:/usr/include/c++/11/bits/basic_string.h **** #endif
 914:/usr/include/c++/11/bits/basic_string.h **** 
 915:/usr/include/c++/11/bits/basic_string.h ****     public:
 916:/usr/include/c++/11/bits/basic_string.h ****       // Capacity:
 917:/usr/include/c++/11/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 918:/usr/include/c++/11/bits/basic_string.h ****       ///  null-termination.
 919:/usr/include/c++/11/bits/basic_string.h ****       size_type
 920:/usr/include/c++/11/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 921:/usr/include/c++/11/bits/basic_string.h ****       { return _M_string_length; }
 922:/usr/include/c++/11/bits/basic_string.h **** 
 923:/usr/include/c++/11/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 924:/usr/include/c++/11/bits/basic_string.h ****       ///  null-termination.
 925:/usr/include/c++/11/bits/basic_string.h ****       size_type
 926:/usr/include/c++/11/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 927:/usr/include/c++/11/bits/basic_string.h ****       { return _M_string_length; }
 928:/usr/include/c++/11/bits/basic_string.h **** 
 929:/usr/include/c++/11/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
 930:/usr/include/c++/11/bits/basic_string.h ****       size_type
 931:/usr/include/c++/11/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 932:/usr/include/c++/11/bits/basic_string.h ****       { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
 933:/usr/include/c++/11/bits/basic_string.h **** 
 934:/usr/include/c++/11/bits/basic_string.h ****       /**
 935:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 936:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 937:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
 938:/usr/include/c++/11/bits/basic_string.h ****        *
 939:/usr/include/c++/11/bits/basic_string.h ****        *  This function will %resize the %string to the specified
 940:/usr/include/c++/11/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
 941:/usr/include/c++/11/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
 942:/usr/include/c++/11/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 943:/usr/include/c++/11/bits/basic_string.h ****        */
 944:/usr/include/c++/11/bits/basic_string.h ****       void
 945:/usr/include/c++/11/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
 946:/usr/include/c++/11/bits/basic_string.h **** 
 947:/usr/include/c++/11/bits/basic_string.h ****       /**
 948:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 949:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 950:/usr/include/c++/11/bits/basic_string.h ****        *
 951:/usr/include/c++/11/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
 952:/usr/include/c++/11/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 953:/usr/include/c++/11/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 954:/usr/include/c++/11/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
 955:/usr/include/c++/11/bits/basic_string.h ****        *  setting them to 0.
 956:/usr/include/c++/11/bits/basic_string.h ****        */
 957:/usr/include/c++/11/bits/basic_string.h ****       void
 958:/usr/include/c++/11/bits/basic_string.h ****       resize(size_type __n)
 959:/usr/include/c++/11/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
 960:/usr/include/c++/11/bits/basic_string.h **** 
 961:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
 962:/usr/include/c++/11/bits/basic_string.h **** #pragma GCC diagnostic push
 963:/usr/include/c++/11/bits/basic_string.h **** #pragma GCC diagnostic ignored "-Wdeprecated-declarations"
 964:/usr/include/c++/11/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 965:/usr/include/c++/11/bits/basic_string.h ****       void
 966:/usr/include/c++/11/bits/basic_string.h ****       shrink_to_fit() noexcept
 967:/usr/include/c++/11/bits/basic_string.h ****       { reserve(); }
 968:/usr/include/c++/11/bits/basic_string.h **** #pragma GCC diagnostic pop
 969:/usr/include/c++/11/bits/basic_string.h **** #endif
 970:/usr/include/c++/11/bits/basic_string.h **** 
 971:/usr/include/c++/11/bits/basic_string.h ****       /**
 972:/usr/include/c++/11/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
 973:/usr/include/c++/11/bits/basic_string.h ****        *  before needing to allocate more memory.
 974:/usr/include/c++/11/bits/basic_string.h ****        */
 975:/usr/include/c++/11/bits/basic_string.h ****       size_type
 976:/usr/include/c++/11/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 977:/usr/include/c++/11/bits/basic_string.h ****       {
 978:/usr/include/c++/11/bits/basic_string.h **** 	return _M_is_local() ? size_type(_S_local_capacity)
 979:/usr/include/c++/11/bits/basic_string.h **** 	                     : _M_allocated_capacity;
 980:/usr/include/c++/11/bits/basic_string.h ****       }
 981:/usr/include/c++/11/bits/basic_string.h **** 
 982:/usr/include/c++/11/bits/basic_string.h ****       /**
 983:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 984:/usr/include/c++/11/bits/basic_string.h ****        *          characters.
 985:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
 986:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
 987:/usr/include/c++/11/bits/basic_string.h ****        *
 988:/usr/include/c++/11/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
 989:/usr/include/c++/11/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
 990:/usr/include/c++/11/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
 991:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.
 992:/usr/include/c++/11/bits/basic_string.h ****        *
 993:/usr/include/c++/11/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
 994:/usr/include/c++/11/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
 995:/usr/include/c++/11/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
 996:/usr/include/c++/11/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
 997:/usr/include/c++/11/bits/basic_string.h ****        *  data.
 998:/usr/include/c++/11/bits/basic_string.h ****        */
 999:/usr/include/c++/11/bits/basic_string.h ****       void
1000:/usr/include/c++/11/bits/basic_string.h ****       reserve(size_type __res_arg);
1001:/usr/include/c++/11/bits/basic_string.h **** 
1002:/usr/include/c++/11/bits/basic_string.h ****       /**
1003:/usr/include/c++/11/bits/basic_string.h ****        *  Equivalent to shrink_to_fit().
1004:/usr/include/c++/11/bits/basic_string.h ****        */
1005:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus > 201703L
1006:/usr/include/c++/11/bits/basic_string.h ****       [[deprecated("use shrink_to_fit() instead")]]
1007:/usr/include/c++/11/bits/basic_string.h **** #endif
1008:/usr/include/c++/11/bits/basic_string.h ****       void
1009:/usr/include/c++/11/bits/basic_string.h ****       reserve();
1010:/usr/include/c++/11/bits/basic_string.h **** 
1011:/usr/include/c++/11/bits/basic_string.h ****       /**
1012:/usr/include/c++/11/bits/basic_string.h ****        *  Erases the string, making it empty.
1013:/usr/include/c++/11/bits/basic_string.h ****        */
1014:/usr/include/c++/11/bits/basic_string.h ****       void
1015:/usr/include/c++/11/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
1016:/usr/include/c++/11/bits/basic_string.h ****       { _M_set_length(0); }
1017:/usr/include/c++/11/bits/basic_string.h **** 
1018:/usr/include/c++/11/bits/basic_string.h ****       /**
1019:/usr/include/c++/11/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
1020:/usr/include/c++/11/bits/basic_string.h ****        *  <code>*this == ""</code>.
1021:/usr/include/c++/11/bits/basic_string.h ****        */
1022:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NODISCARD bool
1023:/usr/include/c++/11/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
1024:/usr/include/c++/11/bits/basic_string.h ****       { return this->size() == 0; }
1025:/usr/include/c++/11/bits/basic_string.h **** 
1026:/usr/include/c++/11/bits/basic_string.h ****       // Element access:
1027:/usr/include/c++/11/bits/basic_string.h ****       /**
1028:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1029:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
1030:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
1031:/usr/include/c++/11/bits/basic_string.h ****        *
1032:/usr/include/c++/11/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
1033:/usr/include/c++/11/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
1034:/usr/include/c++/11/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1035:/usr/include/c++/11/bits/basic_string.h ****        *  see at().)
1036:/usr/include/c++/11/bits/basic_string.h ****        */
1037:/usr/include/c++/11/bits/basic_string.h ****       const_reference
1038:/usr/include/c++/11/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
1039:/usr/include/c++/11/bits/basic_string.h ****       {
1040:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
1041:/usr/include/c++/11/bits/basic_string.h **** 	return _M_data()[__pos];
1042:/usr/include/c++/11/bits/basic_string.h ****       }
1043:/usr/include/c++/11/bits/basic_string.h **** 
1044:/usr/include/c++/11/bits/basic_string.h ****       /**
1045:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1046:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
1047:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Read/write reference to the character.
1048:/usr/include/c++/11/bits/basic_string.h ****        *
1049:/usr/include/c++/11/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
1050:/usr/include/c++/11/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
1051:/usr/include/c++/11/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1052:/usr/include/c++/11/bits/basic_string.h ****        *  see at().)
1053:/usr/include/c++/11/bits/basic_string.h ****        */
1054:/usr/include/c++/11/bits/basic_string.h ****       reference
1055:/usr/include/c++/11/bits/basic_string.h ****       operator[](size_type __pos)
1056:/usr/include/c++/11/bits/basic_string.h ****       {
1057:/usr/include/c++/11/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
1058:/usr/include/c++/11/bits/basic_string.h **** 	// and in C++11 mode.
1059:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
1060:/usr/include/c++/11/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
1061:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
1062:/usr/include/c++/11/bits/basic_string.h **** 	return _M_data()[__pos];
1063:/usr/include/c++/11/bits/basic_string.h ****       }
1064:/usr/include/c++/11/bits/basic_string.h **** 
1065:/usr/include/c++/11/bits/basic_string.h ****       /**
1066:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1067:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n The index of the character to access.
1068:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
1069:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1070:/usr/include/c++/11/bits/basic_string.h ****        *
1071:/usr/include/c++/11/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
1072:/usr/include/c++/11/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
1073:/usr/include/c++/11/bits/basic_string.h ****        *  throws out_of_range if the check fails.
1074:/usr/include/c++/11/bits/basic_string.h ****        */
1075:/usr/include/c++/11/bits/basic_string.h ****       const_reference
1076:/usr/include/c++/11/bits/basic_string.h ****       at(size_type __n) const
1077:/usr/include/c++/11/bits/basic_string.h ****       {
1078:/usr/include/c++/11/bits/basic_string.h **** 	if (__n >= this->size())
1079:/usr/include/c++/11/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1080:/usr/include/c++/11/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
1081:/usr/include/c++/11/bits/basic_string.h **** 				       "(which is %zu)"),
1082:/usr/include/c++/11/bits/basic_string.h **** 				   __n, this->size());
1083:/usr/include/c++/11/bits/basic_string.h **** 	return _M_data()[__n];
1084:/usr/include/c++/11/bits/basic_string.h ****       }
1085:/usr/include/c++/11/bits/basic_string.h **** 
1086:/usr/include/c++/11/bits/basic_string.h ****       /**
1087:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1088:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n The index of the character to access.
1089:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Read/write reference to the character.
1090:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1091:/usr/include/c++/11/bits/basic_string.h ****        *
1092:/usr/include/c++/11/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
1093:/usr/include/c++/11/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
1094:/usr/include/c++/11/bits/basic_string.h ****        *  throws out_of_range if the check fails.
1095:/usr/include/c++/11/bits/basic_string.h ****        */
1096:/usr/include/c++/11/bits/basic_string.h ****       reference
1097:/usr/include/c++/11/bits/basic_string.h ****       at(size_type __n)
1098:/usr/include/c++/11/bits/basic_string.h ****       {
1099:/usr/include/c++/11/bits/basic_string.h **** 	if (__n >= size())
1100:/usr/include/c++/11/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1101:/usr/include/c++/11/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
1102:/usr/include/c++/11/bits/basic_string.h **** 				       "(which is %zu)"),
1103:/usr/include/c++/11/bits/basic_string.h **** 				   __n, this->size());
1104:/usr/include/c++/11/bits/basic_string.h **** 	return _M_data()[__n];
1105:/usr/include/c++/11/bits/basic_string.h ****       }
1106:/usr/include/c++/11/bits/basic_string.h **** 
1107:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
1108:/usr/include/c++/11/bits/basic_string.h ****       /**
1109:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
1110:/usr/include/c++/11/bits/basic_string.h ****        *  element of the %string.
1111:/usr/include/c++/11/bits/basic_string.h ****        */
1112:/usr/include/c++/11/bits/basic_string.h ****       reference
1113:/usr/include/c++/11/bits/basic_string.h ****       front() noexcept
1114:/usr/include/c++/11/bits/basic_string.h ****       {
1115:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1116:/usr/include/c++/11/bits/basic_string.h **** 	return operator[](0);
1117:/usr/include/c++/11/bits/basic_string.h ****       }
1118:/usr/include/c++/11/bits/basic_string.h **** 
1119:/usr/include/c++/11/bits/basic_string.h ****       /**
1120:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
1121:/usr/include/c++/11/bits/basic_string.h ****        *  element of the %string.
1122:/usr/include/c++/11/bits/basic_string.h ****        */
1123:/usr/include/c++/11/bits/basic_string.h ****       const_reference
1124:/usr/include/c++/11/bits/basic_string.h ****       front() const noexcept
1125:/usr/include/c++/11/bits/basic_string.h ****       {
1126:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1127:/usr/include/c++/11/bits/basic_string.h **** 	return operator[](0);
1128:/usr/include/c++/11/bits/basic_string.h ****       }
1129:/usr/include/c++/11/bits/basic_string.h **** 
1130:/usr/include/c++/11/bits/basic_string.h ****       /**
1131:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
1132:/usr/include/c++/11/bits/basic_string.h ****        *  element of the %string.
1133:/usr/include/c++/11/bits/basic_string.h ****        */
1134:/usr/include/c++/11/bits/basic_string.h ****       reference
1135:/usr/include/c++/11/bits/basic_string.h ****       back() noexcept
1136:/usr/include/c++/11/bits/basic_string.h ****       {
1137:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1138:/usr/include/c++/11/bits/basic_string.h **** 	return operator[](this->size() - 1);
1139:/usr/include/c++/11/bits/basic_string.h ****       }
1140:/usr/include/c++/11/bits/basic_string.h **** 
1141:/usr/include/c++/11/bits/basic_string.h ****       /**
1142:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
1143:/usr/include/c++/11/bits/basic_string.h ****        *  last element of the %string.
1144:/usr/include/c++/11/bits/basic_string.h ****        */
1145:/usr/include/c++/11/bits/basic_string.h ****       const_reference
1146:/usr/include/c++/11/bits/basic_string.h ****       back() const noexcept
1147:/usr/include/c++/11/bits/basic_string.h ****       {
1148:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1149:/usr/include/c++/11/bits/basic_string.h **** 	return operator[](this->size() - 1);
1150:/usr/include/c++/11/bits/basic_string.h ****       }
1151:/usr/include/c++/11/bits/basic_string.h **** #endif
1152:/usr/include/c++/11/bits/basic_string.h **** 
1153:/usr/include/c++/11/bits/basic_string.h ****       // Modifiers:
1154:/usr/include/c++/11/bits/basic_string.h ****       /**
1155:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a string to this string.
1156:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  The string to append.
1157:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1158:/usr/include/c++/11/bits/basic_string.h ****        */
1159:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1160:/usr/include/c++/11/bits/basic_string.h ****       operator+=(const basic_string& __str)
1161:/usr/include/c++/11/bits/basic_string.h ****       { return this->append(__str); }
1162:/usr/include/c++/11/bits/basic_string.h **** 
1163:/usr/include/c++/11/bits/basic_string.h ****       /**
1164:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a C string.
1165:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  The C string to append.
1166:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1167:/usr/include/c++/11/bits/basic_string.h ****        */
1168:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1169:/usr/include/c++/11/bits/basic_string.h ****       operator+=(const _CharT* __s)
1170:/usr/include/c++/11/bits/basic_string.h ****       { return this->append(__s); }
1171:/usr/include/c++/11/bits/basic_string.h **** 
1172:/usr/include/c++/11/bits/basic_string.h ****       /**
1173:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a character.
1174:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  The character to append.
1175:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1176:/usr/include/c++/11/bits/basic_string.h ****        */
1177:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1178:/usr/include/c++/11/bits/basic_string.h ****       operator+=(_CharT __c)
1179:/usr/include/c++/11/bits/basic_string.h ****       {
1180:/usr/include/c++/11/bits/basic_string.h **** 	this->push_back(__c);
1181:/usr/include/c++/11/bits/basic_string.h **** 	return *this;
1182:/usr/include/c++/11/bits/basic_string.h ****       }
1183:/usr/include/c++/11/bits/basic_string.h **** 
1184:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
1185:/usr/include/c++/11/bits/basic_string.h ****       /**
1186:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1187:/usr/include/c++/11/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
1188:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1189:/usr/include/c++/11/bits/basic_string.h ****        */
1190:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1191:/usr/include/c++/11/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
1192:/usr/include/c++/11/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1193:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
1194:/usr/include/c++/11/bits/basic_string.h **** 
1195:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
1196:/usr/include/c++/11/bits/basic_string.h ****       /**
1197:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a string_view.
1198:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1199:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1200:/usr/include/c++/11/bits/basic_string.h ****        */
1201:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
1202:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1203:/usr/include/c++/11/bits/basic_string.h **** 	operator+=(const _Tp& __svt)
1204:/usr/include/c++/11/bits/basic_string.h **** 	{ return this->append(__svt); }
1205:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
1206:/usr/include/c++/11/bits/basic_string.h **** 
1207:/usr/include/c++/11/bits/basic_string.h ****       /**
1208:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a string to this string.
1209:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  The string to append.
1210:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1211:/usr/include/c++/11/bits/basic_string.h ****        */
1212:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1213:/usr/include/c++/11/bits/basic_string.h ****       append(const basic_string& __str)
1214:/usr/include/c++/11/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
1215:/usr/include/c++/11/bits/basic_string.h **** 
1216:/usr/include/c++/11/bits/basic_string.h ****       /**
1217:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a substring.
1218:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  The string to append.
1219:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
1220:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1221:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1222:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
1223:/usr/include/c++/11/bits/basic_string.h ****        *
1224:/usr/include/c++/11/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
1225:/usr/include/c++/11/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
1226:/usr/include/c++/11/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
1227:/usr/include/c++/11/bits/basic_string.h ****        *  remainder of @a __str is appended.
1228:/usr/include/c++/11/bits/basic_string.h ****        */
1229:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1230:/usr/include/c++/11/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos)
1231:/usr/include/c++/11/bits/basic_string.h ****       { return _M_append(__str._M_data()
1232:/usr/include/c++/11/bits/basic_string.h **** 			 + __str._M_check(__pos, "basic_string::append"),
1233:/usr/include/c++/11/bits/basic_string.h **** 			 __str._M_limit(__pos, __n)); }
1234:/usr/include/c++/11/bits/basic_string.h **** 
1235:/usr/include/c++/11/bits/basic_string.h ****       /**
1236:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a C substring.
1237:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  The C string to append.
1238:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1239:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1240:/usr/include/c++/11/bits/basic_string.h ****        */
1241:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1242:/usr/include/c++/11/bits/basic_string.h ****       append(const _CharT* __s, size_type __n)
1243:/usr/include/c++/11/bits/basic_string.h ****       {
1244:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1245:/usr/include/c++/11/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1246:/usr/include/c++/11/bits/basic_string.h **** 	return _M_append(__s, __n);
1247:/usr/include/c++/11/bits/basic_string.h ****       }
1248:/usr/include/c++/11/bits/basic_string.h **** 
1249:/usr/include/c++/11/bits/basic_string.h ****       /**
1250:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a C string.
1251:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  The C string to append.
1252:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1253:/usr/include/c++/11/bits/basic_string.h ****        */
1254:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1255:/usr/include/c++/11/bits/basic_string.h ****       append(const _CharT* __s)
1256:/usr/include/c++/11/bits/basic_string.h ****       {
1257:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1258:/usr/include/c++/11/bits/basic_string.h **** 	const size_type __n = traits_type::length(__s);
1259:/usr/include/c++/11/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1260:/usr/include/c++/11/bits/basic_string.h **** 	return _M_append(__s, __n);
1261:/usr/include/c++/11/bits/basic_string.h ****       }
1262:/usr/include/c++/11/bits/basic_string.h **** 
1263:/usr/include/c++/11/bits/basic_string.h ****       /**
1264:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append multiple characters.
1265:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1266:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  The character to use.
1267:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1268:/usr/include/c++/11/bits/basic_string.h ****        *
1269:/usr/include/c++/11/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
1270:/usr/include/c++/11/bits/basic_string.h ****        */
1271:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1272:/usr/include/c++/11/bits/basic_string.h ****       append(size_type __n, _CharT __c)
1273:/usr/include/c++/11/bits/basic_string.h ****       { return _M_replace_aux(this->size(), size_type(0), __n, __c); }
1274:/usr/include/c++/11/bits/basic_string.h **** 
1275:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
1276:/usr/include/c++/11/bits/basic_string.h ****       /**
1277:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1278:/usr/include/c++/11/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1279:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1280:/usr/include/c++/11/bits/basic_string.h ****        */
1281:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1282:/usr/include/c++/11/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
1283:/usr/include/c++/11/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1284:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
1285:/usr/include/c++/11/bits/basic_string.h **** 
1286:/usr/include/c++/11/bits/basic_string.h ****       /**
1287:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a range of characters.
1288:/usr/include/c++/11/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1289:/usr/include/c++/11/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1290:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1291:/usr/include/c++/11/bits/basic_string.h ****        *
1292:/usr/include/c++/11/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1293:/usr/include/c++/11/bits/basic_string.h ****        */
1294:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
1295:/usr/include/c++/11/bits/basic_string.h ****       template<class _InputIterator,
1296:/usr/include/c++/11/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1297:/usr/include/c++/11/bits/basic_string.h **** #else
1298:/usr/include/c++/11/bits/basic_string.h ****       template<class _InputIterator>
1299:/usr/include/c++/11/bits/basic_string.h **** #endif
1300:/usr/include/c++/11/bits/basic_string.h ****         basic_string&
1301:/usr/include/c++/11/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1302:/usr/include/c++/11/bits/basic_string.h ****         { return this->replace(end(), end(), __first, __last); }
1303:/usr/include/c++/11/bits/basic_string.h **** 
1304:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
1305:/usr/include/c++/11/bits/basic_string.h ****       /**
1306:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a string_view.
1307:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1308:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1309:/usr/include/c++/11/bits/basic_string.h ****        */
1310:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
1311:/usr/include/c++/11/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
1312:/usr/include/c++/11/bits/basic_string.h ****         append(const _Tp& __svt)
1313:/usr/include/c++/11/bits/basic_string.h ****         {
1314:/usr/include/c++/11/bits/basic_string.h ****           __sv_type __sv = __svt;
1315:/usr/include/c++/11/bits/basic_string.h ****           return this->append(__sv.data(), __sv.size());
1316:/usr/include/c++/11/bits/basic_string.h ****         }
1317:/usr/include/c++/11/bits/basic_string.h **** 
1318:/usr/include/c++/11/bits/basic_string.h ****       /**
1319:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a range of characters from a string_view.
1320:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended from.
1321:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos The position in the string_view to append from.
1322:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
1323:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1324:/usr/include/c++/11/bits/basic_string.h ****        */
1325:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
1326:/usr/include/c++/11/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
1327:/usr/include/c++/11/bits/basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
1328:/usr/include/c++/11/bits/basic_string.h **** 	{
1329:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1330:/usr/include/c++/11/bits/basic_string.h **** 	  return _M_append(__sv.data()
1331:/usr/include/c++/11/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
1332:/usr/include/c++/11/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1333:/usr/include/c++/11/bits/basic_string.h **** 	}
1334:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
1335:/usr/include/c++/11/bits/basic_string.h **** 
1336:/usr/include/c++/11/bits/basic_string.h ****       /**
1337:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a single character.
1338:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to append.
1339:/usr/include/c++/11/bits/basic_string.h ****        */
1340:/usr/include/c++/11/bits/basic_string.h ****       void
1341:/usr/include/c++/11/bits/basic_string.h ****       push_back(_CharT __c)
1342:/usr/include/c++/11/bits/basic_string.h ****       {
1343:/usr/include/c++/11/bits/basic_string.h **** 	const size_type __size = this->size();
1344:/usr/include/c++/11/bits/basic_string.h **** 	if (__size + 1 > this->capacity())
1345:/usr/include/c++/11/bits/basic_string.h **** 	  this->_M_mutate(__size, size_type(0), 0, size_type(1));
1346:/usr/include/c++/11/bits/basic_string.h **** 	traits_type::assign(this->_M_data()[__size], __c);
1347:/usr/include/c++/11/bits/basic_string.h **** 	this->_M_set_length(__size + 1);
1348:/usr/include/c++/11/bits/basic_string.h ****       }
1349:/usr/include/c++/11/bits/basic_string.h **** 
1350:/usr/include/c++/11/bits/basic_string.h ****       /**
1351:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1352:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string to use.
1353:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1354:/usr/include/c++/11/bits/basic_string.h ****        */
1355:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1356:/usr/include/c++/11/bits/basic_string.h ****       assign(const basic_string& __str)
1357:/usr/include/c++/11/bits/basic_string.h ****       {
1358:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
1359:/usr/include/c++/11/bits/basic_string.h **** 	if (_Alloc_traits::_S_propagate_on_copy_assign())
1360:/usr/include/c++/11/bits/basic_string.h **** 	  {
1361:/usr/include/c++/11/bits/basic_string.h **** 	    if (!_Alloc_traits::_S_always_equal() && !_M_is_local()
1362:/usr/include/c++/11/bits/basic_string.h **** 		&& _M_get_allocator() != __str._M_get_allocator())
1363:/usr/include/c++/11/bits/basic_string.h **** 	      {
1364:/usr/include/c++/11/bits/basic_string.h **** 		// Propagating allocator cannot free existing storage so must
1365:/usr/include/c++/11/bits/basic_string.h **** 		// deallocate it before replacing current allocator.
1366:/usr/include/c++/11/bits/basic_string.h **** 		if (__str.size() <= _S_local_capacity)
1367:/usr/include/c++/11/bits/basic_string.h **** 		  {
1368:/usr/include/c++/11/bits/basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
1369:/usr/include/c++/11/bits/basic_string.h **** 		    _M_data(_M_local_data());
1370:/usr/include/c++/11/bits/basic_string.h **** 		    _M_set_length(0);
1371:/usr/include/c++/11/bits/basic_string.h **** 		  }
1372:/usr/include/c++/11/bits/basic_string.h **** 		else
1373:/usr/include/c++/11/bits/basic_string.h **** 		  {
1374:/usr/include/c++/11/bits/basic_string.h **** 		    const auto __len = __str.size();
1375:/usr/include/c++/11/bits/basic_string.h **** 		    auto __alloc = __str._M_get_allocator();
1376:/usr/include/c++/11/bits/basic_string.h **** 		    // If this allocation throws there are no effects:
1377:/usr/include/c++/11/bits/basic_string.h **** 		    auto __ptr = _Alloc_traits::allocate(__alloc, __len + 1);
1378:/usr/include/c++/11/bits/basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
1379:/usr/include/c++/11/bits/basic_string.h **** 		    _M_data(__ptr);
1380:/usr/include/c++/11/bits/basic_string.h **** 		    _M_capacity(__len);
1381:/usr/include/c++/11/bits/basic_string.h **** 		    _M_set_length(__len);
1382:/usr/include/c++/11/bits/basic_string.h **** 		  }
1383:/usr/include/c++/11/bits/basic_string.h **** 	      }
1384:/usr/include/c++/11/bits/basic_string.h **** 	    std::__alloc_on_copy(_M_get_allocator(), __str._M_get_allocator());
1385:/usr/include/c++/11/bits/basic_string.h **** 	  }
1386:/usr/include/c++/11/bits/basic_string.h **** #endif
1387:/usr/include/c++/11/bits/basic_string.h **** 	this->_M_assign(__str);
1388:/usr/include/c++/11/bits/basic_string.h **** 	return *this;
1389:/usr/include/c++/11/bits/basic_string.h ****       }
1390:/usr/include/c++/11/bits/basic_string.h **** 
1391:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
1392:/usr/include/c++/11/bits/basic_string.h ****       /**
1393:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1394:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string to use.
1395:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1396:/usr/include/c++/11/bits/basic_string.h ****        *
1397:/usr/include/c++/11/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
1398:/usr/include/c++/11/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
1399:/usr/include/c++/11/bits/basic_string.h ****        */
1400:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1401:/usr/include/c++/11/bits/basic_string.h ****       assign(basic_string&& __str)
1402:/usr/include/c++/11/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
1403:/usr/include/c++/11/bits/basic_string.h ****       {
1404:/usr/include/c++/11/bits/basic_string.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
1405:/usr/include/c++/11/bits/basic_string.h **** 	// 2063. Contradictory requirements for string move assignment
1406:/usr/include/c++/11/bits/basic_string.h **** 	return *this = std::move(__str);
1407:/usr/include/c++/11/bits/basic_string.h ****       }
1408:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
1409:/usr/include/c++/11/bits/basic_string.h **** 
1410:/usr/include/c++/11/bits/basic_string.h ****       /**
1411:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
1412:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  The string to use.
1413:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
1414:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1415:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1416:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
1417:/usr/include/c++/11/bits/basic_string.h ****        *
1418:/usr/include/c++/11/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
1419:/usr/include/c++/11/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
1420:/usr/include/c++/11/bits/basic_string.h ****        *  is larger than the number of available characters in @a
1421:/usr/include/c++/11/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
1422:/usr/include/c++/11/bits/basic_string.h ****        */
1423:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1424:/usr/include/c++/11/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
1425:/usr/include/c++/11/bits/basic_string.h ****       { return _M_replace(size_type(0), this->size(), __str._M_data()
1426:/usr/include/c++/11/bits/basic_string.h **** 			  + __str._M_check(__pos, "basic_string::assign"),
1427:/usr/include/c++/11/bits/basic_string.h **** 			  __str._M_limit(__pos, __n)); }
1428:/usr/include/c++/11/bits/basic_string.h **** 
1429:/usr/include/c++/11/bits/basic_string.h ****       /**
1430:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to a C substring.
1431:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  The C string to use.
1432:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1433:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1434:/usr/include/c++/11/bits/basic_string.h ****        *
1435:/usr/include/c++/11/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
1436:/usr/include/c++/11/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
1437:/usr/include/c++/11/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
1438:/usr/include/c++/11/bits/basic_string.h ****        */
1439:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1440:/usr/include/c++/11/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n)
1441:/usr/include/c++/11/bits/basic_string.h ****       {
1442:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1443:/usr/include/c++/11/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s, __n);
1444:/usr/include/c++/11/bits/basic_string.h ****       }
1445:/usr/include/c++/11/bits/basic_string.h **** 
1446:/usr/include/c++/11/bits/basic_string.h ****       /**
1447:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
1448:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  The C string to use.
1449:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1450:/usr/include/c++/11/bits/basic_string.h ****        *
1451:/usr/include/c++/11/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
1452:/usr/include/c++/11/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
1453:/usr/include/c++/11/bits/basic_string.h ****        *  function returns.
1454:/usr/include/c++/11/bits/basic_string.h ****        */
1455:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1456:/usr/include/c++/11/bits/basic_string.h ****       assign(const _CharT* __s)
1457:/usr/include/c++/11/bits/basic_string.h ****       {
1458:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1459:/usr/include/c++/11/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s,
1460:/usr/include/c++/11/bits/basic_string.h **** 			  traits_type::length(__s));
1461:/usr/include/c++/11/bits/basic_string.h ****       }
1462:/usr/include/c++/11/bits/basic_string.h **** 
1463:/usr/include/c++/11/bits/basic_string.h ****       /**
1464:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
1465:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
1466:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  The character to use.
1467:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1468:/usr/include/c++/11/bits/basic_string.h ****        *
1469:/usr/include/c++/11/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
1470:/usr/include/c++/11/bits/basic_string.h ****        *  character @a __c.
1471:/usr/include/c++/11/bits/basic_string.h ****        */
1472:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1473:/usr/include/c++/11/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
1474:/usr/include/c++/11/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
1475:/usr/include/c++/11/bits/basic_string.h **** 
1476:/usr/include/c++/11/bits/basic_string.h ****       /**
1477:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
1478:/usr/include/c++/11/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1479:/usr/include/c++/11/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1480:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1481:/usr/include/c++/11/bits/basic_string.h ****        *
1482:/usr/include/c++/11/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
1483:/usr/include/c++/11/bits/basic_string.h ****       */
1484:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
1485:/usr/include/c++/11/bits/basic_string.h ****       template<class _InputIterator,
1486:/usr/include/c++/11/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1487:/usr/include/c++/11/bits/basic_string.h **** #else
1488:/usr/include/c++/11/bits/basic_string.h ****       template<class _InputIterator>
1489:/usr/include/c++/11/bits/basic_string.h **** #endif
1490:/usr/include/c++/11/bits/basic_string.h ****         basic_string&
1491:/usr/include/c++/11/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
1492:/usr/include/c++/11/bits/basic_string.h ****         { return this->replace(begin(), end(), __first, __last); }
1493:/usr/include/c++/11/bits/basic_string.h **** 
1494:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
1495:/usr/include/c++/11/bits/basic_string.h ****       /**
1496:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
1497:/usr/include/c++/11/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
1498:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1499:/usr/include/c++/11/bits/basic_string.h ****        */
1500:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1501:/usr/include/c++/11/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
1502:/usr/include/c++/11/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
1503:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
1504:/usr/include/c++/11/bits/basic_string.h **** 
1505:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
1506:/usr/include/c++/11/bits/basic_string.h ****       /**
1507:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value from a string_view.
1508:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1509:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1510:/usr/include/c++/11/bits/basic_string.h ****        */
1511:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
1512:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1513:/usr/include/c++/11/bits/basic_string.h **** 	assign(const _Tp& __svt)
1514:/usr/include/c++/11/bits/basic_string.h **** 	{
1515:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1516:/usr/include/c++/11/bits/basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
1517:/usr/include/c++/11/bits/basic_string.h **** 	}
1518:/usr/include/c++/11/bits/basic_string.h **** 
1519:/usr/include/c++/11/bits/basic_string.h ****       /**
1520:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
1521:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1522:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
1523:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  The number of characters to assign.
1524:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1525:/usr/include/c++/11/bits/basic_string.h ****        */
1526:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
1527:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1528:/usr/include/c++/11/bits/basic_string.h **** 	assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
1529:/usr/include/c++/11/bits/basic_string.h **** 	{
1530:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1531:/usr/include/c++/11/bits/basic_string.h **** 	  return _M_replace(size_type(0), this->size(),
1532:/usr/include/c++/11/bits/basic_string.h **** 	      __sv.data()
1533:/usr/include/c++/11/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
1534:/usr/include/c++/11/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1535:/usr/include/c++/11/bits/basic_string.h **** 	}
1536:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
1537:/usr/include/c++/11/bits/basic_string.h **** 
1538:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
1539:/usr/include/c++/11/bits/basic_string.h ****       /**
1540:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1541:/usr/include/c++/11/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1542:/usr/include/c++/11/bits/basic_string.h ****        *              insert at.
1543:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1544:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  The character to insert.
1545:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1546:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1547:/usr/include/c++/11/bits/basic_string.h ****        *
1548:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1549:/usr/include/c++/11/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1550:/usr/include/c++/11/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1551:/usr/include/c++/11/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1552:/usr/include/c++/11/bits/basic_string.h ****        *  change if an error is thrown.
1553:/usr/include/c++/11/bits/basic_string.h ****       */
1554:/usr/include/c++/11/bits/basic_string.h ****       iterator
1555:/usr/include/c++/11/bits/basic_string.h ****       insert(const_iterator __p, size_type __n, _CharT __c)
1556:/usr/include/c++/11/bits/basic_string.h ****       {
1557:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1558:/usr/include/c++/11/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1559:/usr/include/c++/11/bits/basic_string.h **** 	this->replace(__p, __p, __n, __c);
1560:/usr/include/c++/11/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1561:/usr/include/c++/11/bits/basic_string.h ****       }
1562:/usr/include/c++/11/bits/basic_string.h **** #else
1563:/usr/include/c++/11/bits/basic_string.h ****       /**
1564:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1565:/usr/include/c++/11/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1566:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1567:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  The character to insert.
1568:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1569:/usr/include/c++/11/bits/basic_string.h ****        *
1570:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1571:/usr/include/c++/11/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1572:/usr/include/c++/11/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1573:/usr/include/c++/11/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1574:/usr/include/c++/11/bits/basic_string.h ****        *  change if an error is thrown.
1575:/usr/include/c++/11/bits/basic_string.h ****       */
1576:/usr/include/c++/11/bits/basic_string.h ****       void
1577:/usr/include/c++/11/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
1578:/usr/include/c++/11/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
1579:/usr/include/c++/11/bits/basic_string.h **** #endif
1580:/usr/include/c++/11/bits/basic_string.h **** 
1581:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
1582:/usr/include/c++/11/bits/basic_string.h ****       /**
1583:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1584:/usr/include/c++/11/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1585:/usr/include/c++/11/bits/basic_string.h ****        *              insert at.
1586:/usr/include/c++/11/bits/basic_string.h ****        *  @param __beg  Start of range.
1587:/usr/include/c++/11/bits/basic_string.h ****        *  @param __end  End of range.
1588:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1589:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1590:/usr/include/c++/11/bits/basic_string.h ****        *
1591:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts characters in range [beg,end).  If adding characters
1592:/usr/include/c++/11/bits/basic_string.h ****        *  causes the length to exceed max_size(), length_error is
1593:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1594:/usr/include/c++/11/bits/basic_string.h ****        *  is thrown.
1595:/usr/include/c++/11/bits/basic_string.h ****       */
1596:/usr/include/c++/11/bits/basic_string.h ****       template<class _InputIterator,
1597:/usr/include/c++/11/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1598:/usr/include/c++/11/bits/basic_string.h **** 	iterator
1599:/usr/include/c++/11/bits/basic_string.h ****         insert(const_iterator __p, _InputIterator __beg, _InputIterator __end)
1600:/usr/include/c++/11/bits/basic_string.h ****         {
1601:/usr/include/c++/11/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1602:/usr/include/c++/11/bits/basic_string.h **** 	  const size_type __pos = __p - begin();
1603:/usr/include/c++/11/bits/basic_string.h **** 	  this->replace(__p, __p, __beg, __end);
1604:/usr/include/c++/11/bits/basic_string.h **** 	  return iterator(this->_M_data() + __pos);
1605:/usr/include/c++/11/bits/basic_string.h **** 	}
1606:/usr/include/c++/11/bits/basic_string.h **** #else
1607:/usr/include/c++/11/bits/basic_string.h ****       /**
1608:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1609:/usr/include/c++/11/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1610:/usr/include/c++/11/bits/basic_string.h ****        *  @param __beg  Start of range.
1611:/usr/include/c++/11/bits/basic_string.h ****        *  @param __end  End of range.
1612:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1613:/usr/include/c++/11/bits/basic_string.h ****        *
1614:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
1615:/usr/include/c++/11/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1616:/usr/include/c++/11/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1617:/usr/include/c++/11/bits/basic_string.h ****        *  change if an error is thrown.
1618:/usr/include/c++/11/bits/basic_string.h ****       */
1619:/usr/include/c++/11/bits/basic_string.h ****       template<class _InputIterator>
1620:/usr/include/c++/11/bits/basic_string.h ****         void
1621:/usr/include/c++/11/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
1622:/usr/include/c++/11/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
1623:/usr/include/c++/11/bits/basic_string.h **** #endif
1624:/usr/include/c++/11/bits/basic_string.h **** 
1625:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
1626:/usr/include/c++/11/bits/basic_string.h ****       /**
1627:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
1628:/usr/include/c++/11/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1629:/usr/include/c++/11/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1630:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1631:/usr/include/c++/11/bits/basic_string.h ****        */
1632:/usr/include/c++/11/bits/basic_string.h ****       iterator
1633:/usr/include/c++/11/bits/basic_string.h ****       insert(const_iterator __p, initializer_list<_CharT> __l)
1634:/usr/include/c++/11/bits/basic_string.h ****       { return this->insert(__p, __l.begin(), __l.end()); }
1635:/usr/include/c++/11/bits/basic_string.h **** 
1636:/usr/include/c++/11/bits/basic_string.h **** #ifdef _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
1637:/usr/include/c++/11/bits/basic_string.h ****       // See PR libstdc++/83328
1638:/usr/include/c++/11/bits/basic_string.h ****       void
1639:/usr/include/c++/11/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
1640:/usr/include/c++/11/bits/basic_string.h ****       {
1641:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1642:/usr/include/c++/11/bits/basic_string.h **** 	this->insert(__p - begin(), __l.begin(), __l.size());
1643:/usr/include/c++/11/bits/basic_string.h ****       }
1644:/usr/include/c++/11/bits/basic_string.h **** #endif
1645:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
1646:/usr/include/c++/11/bits/basic_string.h **** 
1647:/usr/include/c++/11/bits/basic_string.h ****       /**
1648:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert value of a string.
1649:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos1 Position in string to insert at.
1650:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  The string to insert.
1651:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1652:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1653:/usr/include/c++/11/bits/basic_string.h ****        *
1654:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
1655:/usr/include/c++/11/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1656:/usr/include/c++/11/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1657:/usr/include/c++/11/bits/basic_string.h ****        *  change if an error is thrown.
1658:/usr/include/c++/11/bits/basic_string.h ****       */
1659:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1660:/usr/include/c++/11/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
1661:/usr/include/c++/11/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0),
1662:/usr/include/c++/11/bits/basic_string.h **** 			     __str._M_data(), __str.size()); }
1663:/usr/include/c++/11/bits/basic_string.h **** 
1664:/usr/include/c++/11/bits/basic_string.h ****       /**
1665:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert a substring.
1666:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos1  Position in string to insert at.
1667:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str   The string to insert.
1668:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1669:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
1670:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1671:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1672:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
1673:/usr/include/c++/11/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
1674:/usr/include/c++/11/bits/basic_string.h ****        *
1675:/usr/include/c++/11/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
1676:/usr/include/c++/11/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
1677:/usr/include/c++/11/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
1678:/usr/include/c++/11/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
1679:/usr/include/c++/11/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
1680:/usr/include/c++/11/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1681:/usr/include/c++/11/bits/basic_string.h ****       */
1682:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1683:/usr/include/c++/11/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
1684:/usr/include/c++/11/bits/basic_string.h **** 	     size_type __pos2, size_type __n = npos)
1685:/usr/include/c++/11/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0), __str._M_data()
1686:/usr/include/c++/11/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::insert"),
1687:/usr/include/c++/11/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n)); }
1688:/usr/include/c++/11/bits/basic_string.h **** 
1689:/usr/include/c++/11/bits/basic_string.h ****       /**
1690:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert a C substring.
1691:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Position in string to insert at.
1692:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  The C string to insert.
1693:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
1694:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1695:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1696:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1697:/usr/include/c++/11/bits/basic_string.h ****        *  string.
1698:/usr/include/c++/11/bits/basic_string.h ****        *
1699:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
1700:/usr/include/c++/11/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
1701:/usr/include/c++/11/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
1702:/usr/include/c++/11/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
1703:/usr/include/c++/11/bits/basic_string.h ****        *  doesn't change if an error is thrown.
1704:/usr/include/c++/11/bits/basic_string.h ****       */
1705:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1706:/usr/include/c++/11/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n)
1707:/usr/include/c++/11/bits/basic_string.h ****       { return this->replace(__pos, size_type(0), __s, __n); }
1708:/usr/include/c++/11/bits/basic_string.h **** 
1709:/usr/include/c++/11/bits/basic_string.h ****       /**
1710:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert a C string.
1711:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Position in string to insert at.
1712:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  The C string to insert.
1713:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1714:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1715:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1716:/usr/include/c++/11/bits/basic_string.h ****        *  string.
1717:/usr/include/c++/11/bits/basic_string.h ****        *
1718:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
1719:/usr/include/c++/11/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
1720:/usr/include/c++/11/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
1721:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
1722:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.
1723:/usr/include/c++/11/bits/basic_string.h ****       */
1724:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1725:/usr/include/c++/11/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
1726:/usr/include/c++/11/bits/basic_string.h ****       {
1727:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1728:/usr/include/c++/11/bits/basic_string.h **** 	return this->replace(__pos, size_type(0), __s,
1729:/usr/include/c++/11/bits/basic_string.h **** 			     traits_type::length(__s));
1730:/usr/include/c++/11/bits/basic_string.h ****       }
1731:/usr/include/c++/11/bits/basic_string.h **** 
1732:/usr/include/c++/11/bits/basic_string.h ****       /**
1733:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1734:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
1735:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1736:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  The character to insert.
1737:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1738:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1739:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1740:/usr/include/c++/11/bits/basic_string.h ****        *  string.
1741:/usr/include/c++/11/bits/basic_string.h ****        *
1742:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
1743:/usr/include/c++/11/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
1744:/usr/include/c++/11/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
1745:/usr/include/c++/11/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1746:/usr/include/c++/11/bits/basic_string.h ****        *  change if an error is thrown.
1747:/usr/include/c++/11/bits/basic_string.h ****       */
1748:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1749:/usr/include/c++/11/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
1750:/usr/include/c++/11/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
1751:/usr/include/c++/11/bits/basic_string.h **** 			      size_type(0), __n, __c); }
1752:/usr/include/c++/11/bits/basic_string.h **** 
1753:/usr/include/c++/11/bits/basic_string.h ****       /**
1754:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert one character.
1755:/usr/include/c++/11/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
1756:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  The character to insert.
1757:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
1758:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1759:/usr/include/c++/11/bits/basic_string.h ****        *
1760:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
1761:/usr/include/c++/11/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
1762:/usr/include/c++/11/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
1763:/usr/include/c++/11/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1764:/usr/include/c++/11/bits/basic_string.h ****        *  change if an error is thrown.
1765:/usr/include/c++/11/bits/basic_string.h ****       */
1766:/usr/include/c++/11/bits/basic_string.h ****       iterator
1767:/usr/include/c++/11/bits/basic_string.h ****       insert(__const_iterator __p, _CharT __c)
1768:/usr/include/c++/11/bits/basic_string.h ****       {
1769:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1770:/usr/include/c++/11/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1771:/usr/include/c++/11/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
1772:/usr/include/c++/11/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1773:/usr/include/c++/11/bits/basic_string.h ****       }
1774:/usr/include/c++/11/bits/basic_string.h **** 
1775:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
1776:/usr/include/c++/11/bits/basic_string.h ****       /**
1777:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert a string_view.
1778:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Position in string to insert at.
1779:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
1780:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1781:/usr/include/c++/11/bits/basic_string.h ****       */
1782:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
1783:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1784:/usr/include/c++/11/bits/basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
1785:/usr/include/c++/11/bits/basic_string.h **** 	{
1786:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1787:/usr/include/c++/11/bits/basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
1788:/usr/include/c++/11/bits/basic_string.h **** 	}
1789:/usr/include/c++/11/bits/basic_string.h **** 
1790:/usr/include/c++/11/bits/basic_string.h ****       /**
1791:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert a string_view.
1792:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos1  Position in string to insert at.
1793:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
1794:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1795:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n    The number of characters to insert.
1796:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1797:/usr/include/c++/11/bits/basic_string.h ****       */
1798:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
1799:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1800:/usr/include/c++/11/bits/basic_string.h **** 	insert(size_type __pos1, const _Tp& __svt,
1801:/usr/include/c++/11/bits/basic_string.h **** 	       size_type __pos2, size_type __n = npos)
1802:/usr/include/c++/11/bits/basic_string.h **** 	{
1803:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1804:/usr/include/c++/11/bits/basic_string.h **** 	  return this->replace(__pos1, size_type(0),
1805:/usr/include/c++/11/bits/basic_string.h **** 	      __sv.data()
1806:/usr/include/c++/11/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
1807:/usr/include/c++/11/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
1808:/usr/include/c++/11/bits/basic_string.h **** 	}
1809:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
1810:/usr/include/c++/11/bits/basic_string.h **** 
1811:/usr/include/c++/11/bits/basic_string.h ****       /**
1812:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Remove characters.
1813:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
1814:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
1815:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1816:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1817:/usr/include/c++/11/bits/basic_string.h ****        *  string.
1818:/usr/include/c++/11/bits/basic_string.h ****        *
1819:/usr/include/c++/11/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
1820:/usr/include/c++/11/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
1821:/usr/include/c++/11/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
1822:/usr/include/c++/11/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
1823:/usr/include/c++/11/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1824:/usr/include/c++/11/bits/basic_string.h ****        *  change if an error is thrown.
1825:/usr/include/c++/11/bits/basic_string.h ****       */
1826:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1827:/usr/include/c++/11/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
1828:/usr/include/c++/11/bits/basic_string.h ****       {
1829:/usr/include/c++/11/bits/basic_string.h **** 	_M_check(__pos, "basic_string::erase");
1830:/usr/include/c++/11/bits/basic_string.h **** 	if (__n == npos)
1831:/usr/include/c++/11/bits/basic_string.h **** 	  this->_M_set_length(__pos);
1832:/usr/include/c++/11/bits/basic_string.h **** 	else if (__n != 0)
1833:/usr/include/c++/11/bits/basic_string.h **** 	  this->_M_erase(__pos, _M_limit(__pos, __n));
1834:/usr/include/c++/11/bits/basic_string.h **** 	return *this;
1835:/usr/include/c++/11/bits/basic_string.h ****       }
1836:/usr/include/c++/11/bits/basic_string.h **** 
1837:/usr/include/c++/11/bits/basic_string.h ****       /**
1838:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Remove one character.
1839:/usr/include/c++/11/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
1840:/usr/include/c++/11/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
1841:/usr/include/c++/11/bits/basic_string.h ****        *
1842:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
1843:/usr/include/c++/11/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
1844:/usr/include/c++/11/bits/basic_string.h ****       */
1845:/usr/include/c++/11/bits/basic_string.h ****       iterator
1846:/usr/include/c++/11/bits/basic_string.h ****       erase(__const_iterator __position)
1847:/usr/include/c++/11/bits/basic_string.h ****       {
1848:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= begin()
1849:/usr/include/c++/11/bits/basic_string.h **** 				 && __position < end());
1850:/usr/include/c++/11/bits/basic_string.h **** 	const size_type __pos = __position - begin();
1851:/usr/include/c++/11/bits/basic_string.h **** 	this->_M_erase(__pos, size_type(1));
1852:/usr/include/c++/11/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1853:/usr/include/c++/11/bits/basic_string.h ****       }
1854:/usr/include/c++/11/bits/basic_string.h **** 
1855:/usr/include/c++/11/bits/basic_string.h ****       /**
1856:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Remove a range of characters.
1857:/usr/include/c++/11/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
1858:/usr/include/c++/11/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
1859:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
1860:/usr/include/c++/11/bits/basic_string.h ****        *
1861:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
1862:/usr/include/c++/11/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
1863:/usr/include/c++/11/bits/basic_string.h ****       */
1864:/usr/include/c++/11/bits/basic_string.h ****       iterator
1865:/usr/include/c++/11/bits/basic_string.h ****       erase(__const_iterator __first, __const_iterator __last)
1866:/usr/include/c++/11/bits/basic_string.h ****       {
1867:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__first >= begin() && __first <= __last
1868:/usr/include/c++/11/bits/basic_string.h **** 				 && __last <= end());
1869:/usr/include/c++/11/bits/basic_string.h ****         const size_type __pos = __first - begin();
1870:/usr/include/c++/11/bits/basic_string.h **** 	if (__last == end())
1871:/usr/include/c++/11/bits/basic_string.h **** 	  this->_M_set_length(__pos);
1872:/usr/include/c++/11/bits/basic_string.h **** 	else
1873:/usr/include/c++/11/bits/basic_string.h **** 	  this->_M_erase(__pos, __last - __first);
1874:/usr/include/c++/11/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1875:/usr/include/c++/11/bits/basic_string.h ****       }
1876:/usr/include/c++/11/bits/basic_string.h **** 
1877:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
1878:/usr/include/c++/11/bits/basic_string.h ****       /**
1879:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Remove the last character.
1880:/usr/include/c++/11/bits/basic_string.h ****        *
1881:/usr/include/c++/11/bits/basic_string.h ****        *  The string must be non-empty.
1882:/usr/include/c++/11/bits/basic_string.h ****        */
1883:/usr/include/c++/11/bits/basic_string.h ****       void
1884:/usr/include/c++/11/bits/basic_string.h ****       pop_back() noexcept
1885:/usr/include/c++/11/bits/basic_string.h ****       {
1886:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1887:/usr/include/c++/11/bits/basic_string.h **** 	_M_erase(size() - 1, 1);
1888:/usr/include/c++/11/bits/basic_string.h ****       }
1889:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
1890:/usr/include/c++/11/bits/basic_string.h **** 
1891:/usr/include/c++/11/bits/basic_string.h ****       /**
1892:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1893:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1894:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
1895:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String to insert.
1896:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1897:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1898:/usr/include/c++/11/bits/basic_string.h ****        *  string.
1899:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1900:/usr/include/c++/11/bits/basic_string.h ****        *
1901:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
1902:/usr/include/c++/11/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
1903:/usr/include/c++/11/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1904:/usr/include/c++/11/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
1905:/usr/include/c++/11/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
1906:/usr/include/c++/11/bits/basic_string.h ****        *  error is thrown.
1907:/usr/include/c++/11/bits/basic_string.h ****       */
1908:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1909:/usr/include/c++/11/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
1910:/usr/include/c++/11/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
1911:/usr/include/c++/11/bits/basic_string.h **** 
1912:/usr/include/c++/11/bits/basic_string.h ****       /**
1913:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1914:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
1915:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1916:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String to insert.
1917:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
1918:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
1919:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1920:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
1921:/usr/include/c++/11/bits/basic_string.h ****        *  __str.size().
1922:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1923:/usr/include/c++/11/bits/basic_string.h ****        *
1924:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
1925:/usr/include/c++/11/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
1926:/usr/include/c++/11/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
1927:/usr/include/c++/11/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
1928:/usr/include/c++/11/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
1929:/usr/include/c++/11/bits/basic_string.h ****       */
1930:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1931:/usr/include/c++/11/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
1932:/usr/include/c++/11/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
1933:/usr/include/c++/11/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
1934:/usr/include/c++/11/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
1935:/usr/include/c++/11/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
1936:/usr/include/c++/11/bits/basic_string.h **** 
1937:/usr/include/c++/11/bits/basic_string.h ****       /**
1938:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
1939:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1940:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1941:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to insert.
1942:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
1943:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1944:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
1945:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1946:/usr/include/c++/11/bits/basic_string.h ****        *
1947:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1948:/usr/include/c++/11/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
1949:/usr/include/c++/11/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
1950:/usr/include/c++/11/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
1951:/usr/include/c++/11/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
1952:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1953:/usr/include/c++/11/bits/basic_string.h ****        *  is thrown.
1954:/usr/include/c++/11/bits/basic_string.h ****       */
1955:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1956:/usr/include/c++/11/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
1957:/usr/include/c++/11/bits/basic_string.h **** 	      size_type __n2)
1958:/usr/include/c++/11/bits/basic_string.h ****       {
1959:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n2);
1960:/usr/include/c++/11/bits/basic_string.h **** 	return _M_replace(_M_check(__pos, "basic_string::replace"),
1961:/usr/include/c++/11/bits/basic_string.h **** 			  _M_limit(__pos, __n1), __s, __n2);
1962:/usr/include/c++/11/bits/basic_string.h ****       }
1963:/usr/include/c++/11/bits/basic_string.h **** 
1964:/usr/include/c++/11/bits/basic_string.h ****       /**
1965:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
1966:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1967:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1968:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to insert.
1969:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1970:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
1971:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1972:/usr/include/c++/11/bits/basic_string.h ****        *
1973:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1974:/usr/include/c++/11/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
1975:/usr/include/c++/11/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
1976:/usr/include/c++/11/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
1977:/usr/include/c++/11/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1978:/usr/include/c++/11/bits/basic_string.h ****        *  change if an error is thrown.
1979:/usr/include/c++/11/bits/basic_string.h ****       */
1980:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
1981:/usr/include/c++/11/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
1982:/usr/include/c++/11/bits/basic_string.h ****       {
1983:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1984:/usr/include/c++/11/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
1985:/usr/include/c++/11/bits/basic_string.h ****       }
1986:/usr/include/c++/11/bits/basic_string.h **** 
1987:/usr/include/c++/11/bits/basic_string.h ****       /**
1988:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
1989:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1990:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1991:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
1992:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to insert.
1993:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
1994:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
1995:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1996:/usr/include/c++/11/bits/basic_string.h ****        *
1997:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
1998:/usr/include/c++/11/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
1999:/usr/include/c++/11/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
2000:/usr/include/c++/11/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
2001:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
2002:/usr/include/c++/11/bits/basic_string.h ****        *  is thrown.
2003:/usr/include/c++/11/bits/basic_string.h ****       */
2004:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
2005:/usr/include/c++/11/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
2006:/usr/include/c++/11/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
2007:/usr/include/c++/11/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
2008:/usr/include/c++/11/bits/basic_string.h **** 
2009:/usr/include/c++/11/bits/basic_string.h ****       /**
2010:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
2011:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2012:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2013:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String value to insert.
2014:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
2015:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2016:/usr/include/c++/11/bits/basic_string.h ****        *
2017:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2018:/usr/include/c++/11/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
2019:/usr/include/c++/11/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
2020:/usr/include/c++/11/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
2021:/usr/include/c++/11/bits/basic_string.h ****       */
2022:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
2023:/usr/include/c++/11/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2024:/usr/include/c++/11/bits/basic_string.h **** 	      const basic_string& __str)
2025:/usr/include/c++/11/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
2026:/usr/include/c++/11/bits/basic_string.h **** 
2027:/usr/include/c++/11/bits/basic_string.h ****       /**
2028:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
2029:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2030:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2031:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string value to insert.
2032:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
2033:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
2034:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2035:/usr/include/c++/11/bits/basic_string.h ****        *
2036:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2037:/usr/include/c++/11/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
2038:/usr/include/c++/11/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2039:/usr/include/c++/11/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2040:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.
2041:/usr/include/c++/11/bits/basic_string.h ****       */
2042:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
2043:/usr/include/c++/11/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2044:/usr/include/c++/11/bits/basic_string.h **** 	      const _CharT* __s, size_type __n)
2045:/usr/include/c++/11/bits/basic_string.h ****       {
2046:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2047:/usr/include/c++/11/bits/basic_string.h **** 				 && __i2 <= end());
2048:/usr/include/c++/11/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1, __s, __n);
2049:/usr/include/c++/11/bits/basic_string.h ****       }
2050:/usr/include/c++/11/bits/basic_string.h **** 
2051:/usr/include/c++/11/bits/basic_string.h ****       /**
2052:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
2053:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2054:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2055:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string value to insert.
2056:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
2057:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2058:/usr/include/c++/11/bits/basic_string.h ****        *
2059:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2060:/usr/include/c++/11/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
2061:/usr/include/c++/11/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2062:/usr/include/c++/11/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2063:/usr/include/c++/11/bits/basic_string.h ****       */
2064:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
2065:/usr/include/c++/11/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, const _CharT* __s)
2066:/usr/include/c++/11/bits/basic_string.h ****       {
2067:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2068:/usr/include/c++/11/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
2069:/usr/include/c++/11/bits/basic_string.h ****       }
2070:/usr/include/c++/11/bits/basic_string.h **** 
2071:/usr/include/c++/11/bits/basic_string.h ****       /**
2072:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
2073:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2074:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2075:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
2076:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to insert.
2077:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
2078:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2079:/usr/include/c++/11/bits/basic_string.h ****        *
2080:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2081:/usr/include/c++/11/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
2082:/usr/include/c++/11/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2083:/usr/include/c++/11/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2084:/usr/include/c++/11/bits/basic_string.h ****       */
2085:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
2086:/usr/include/c++/11/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, size_type __n,
2087:/usr/include/c++/11/bits/basic_string.h **** 	      _CharT __c)
2088:/usr/include/c++/11/bits/basic_string.h ****       {
2089:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2090:/usr/include/c++/11/bits/basic_string.h **** 				 && __i2 <= end());
2091:/usr/include/c++/11/bits/basic_string.h **** 	return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __c);
2092:/usr/include/c++/11/bits/basic_string.h ****       }
2093:/usr/include/c++/11/bits/basic_string.h **** 
2094:/usr/include/c++/11/bits/basic_string.h ****       /**
2095:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
2096:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2097:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2098:/usr/include/c++/11/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
2099:/usr/include/c++/11/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
2100:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
2101:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2102:/usr/include/c++/11/bits/basic_string.h ****        *
2103:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2104:/usr/include/c++/11/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2105:/usr/include/c++/11/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2106:/usr/include/c++/11/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2107:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.
2108:/usr/include/c++/11/bits/basic_string.h ****       */
2109:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
2110:/usr/include/c++/11/bits/basic_string.h ****       template<class _InputIterator,
2111:/usr/include/c++/11/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
2112:/usr/include/c++/11/bits/basic_string.h ****         basic_string&
2113:/usr/include/c++/11/bits/basic_string.h ****         replace(const_iterator __i1, const_iterator __i2,
2114:/usr/include/c++/11/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2115:/usr/include/c++/11/bits/basic_string.h ****         {
2116:/usr/include/c++/11/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2117:/usr/include/c++/11/bits/basic_string.h **** 				   && __i2 <= end());
2118:/usr/include/c++/11/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2119:/usr/include/c++/11/bits/basic_string.h **** 	  return this->_M_replace_dispatch(__i1, __i2, __k1, __k2,
2120:/usr/include/c++/11/bits/basic_string.h **** 					   std::__false_type());
2121:/usr/include/c++/11/bits/basic_string.h **** 	}
2122:/usr/include/c++/11/bits/basic_string.h **** #else
2123:/usr/include/c++/11/bits/basic_string.h ****       template<class _InputIterator>
2124:/usr/include/c++/11/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
2125:/usr/include/c++/11/bits/basic_string.h ****         typename __enable_if_not_native_iterator<_InputIterator>::__type
2126:/usr/include/c++/11/bits/basic_string.h **** #else
2127:/usr/include/c++/11/bits/basic_string.h ****         basic_string&
2128:/usr/include/c++/11/bits/basic_string.h **** #endif
2129:/usr/include/c++/11/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
2130:/usr/include/c++/11/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2131:/usr/include/c++/11/bits/basic_string.h ****         {
2132:/usr/include/c++/11/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2133:/usr/include/c++/11/bits/basic_string.h **** 				   && __i2 <= end());
2134:/usr/include/c++/11/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2135:/usr/include/c++/11/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
2136:/usr/include/c++/11/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
2137:/usr/include/c++/11/bits/basic_string.h **** 	}
2138:/usr/include/c++/11/bits/basic_string.h **** #endif
2139:/usr/include/c++/11/bits/basic_string.h **** 
2140:/usr/include/c++/11/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
2141:/usr/include/c++/11/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
2142:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
2143:/usr/include/c++/11/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2144:/usr/include/c++/11/bits/basic_string.h **** 	      _CharT* __k1, _CharT* __k2)
2145:/usr/include/c++/11/bits/basic_string.h ****       {
2146:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2147:/usr/include/c++/11/bits/basic_string.h **** 				 && __i2 <= end());
2148:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2149:/usr/include/c++/11/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2150:/usr/include/c++/11/bits/basic_string.h **** 			     __k1, __k2 - __k1);
2151:/usr/include/c++/11/bits/basic_string.h ****       }
2152:/usr/include/c++/11/bits/basic_string.h **** 
2153:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
2154:/usr/include/c++/11/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2155:/usr/include/c++/11/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
2156:/usr/include/c++/11/bits/basic_string.h ****       {
2157:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2158:/usr/include/c++/11/bits/basic_string.h **** 				 && __i2 <= end());
2159:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2160:/usr/include/c++/11/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2161:/usr/include/c++/11/bits/basic_string.h **** 			     __k1, __k2 - __k1);
2162:/usr/include/c++/11/bits/basic_string.h ****       }
2163:/usr/include/c++/11/bits/basic_string.h **** 
2164:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
2165:/usr/include/c++/11/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2166:/usr/include/c++/11/bits/basic_string.h **** 	      iterator __k1, iterator __k2)
2167:/usr/include/c++/11/bits/basic_string.h ****       {
2168:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2169:/usr/include/c++/11/bits/basic_string.h **** 				 && __i2 <= end());
2170:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2171:/usr/include/c++/11/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2172:/usr/include/c++/11/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
2173:/usr/include/c++/11/bits/basic_string.h ****       }
2174:/usr/include/c++/11/bits/basic_string.h **** 
2175:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
2176:/usr/include/c++/11/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2177:/usr/include/c++/11/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
2178:/usr/include/c++/11/bits/basic_string.h ****       {
2179:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2180:/usr/include/c++/11/bits/basic_string.h **** 				 && __i2 <= end());
2181:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2182:/usr/include/c++/11/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2183:/usr/include/c++/11/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
2184:/usr/include/c++/11/bits/basic_string.h ****       }
2185:/usr/include/c++/11/bits/basic_string.h **** 
2186:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
2187:/usr/include/c++/11/bits/basic_string.h ****       /**
2188:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
2189:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2190:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2191:/usr/include/c++/11/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
2192:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
2193:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2194:/usr/include/c++/11/bits/basic_string.h ****        *
2195:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2196:/usr/include/c++/11/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2197:/usr/include/c++/11/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2198:/usr/include/c++/11/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2199:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.
2200:/usr/include/c++/11/bits/basic_string.h ****       */
2201:/usr/include/c++/11/bits/basic_string.h ****       basic_string& replace(const_iterator __i1, const_iterator __i2,
2202:/usr/include/c++/11/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
2203:/usr/include/c++/11/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.size()); }
2204:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
2205:/usr/include/c++/11/bits/basic_string.h **** 
2206:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
2207:/usr/include/c++/11/bits/basic_string.h ****       /**
2208:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2209:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  The position to replace at.
2210:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n    The number of characters to replace.
2211:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
2212:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
2213:/usr/include/c++/11/bits/basic_string.h ****       */
2214:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
2215:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2216:/usr/include/c++/11/bits/basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
2217:/usr/include/c++/11/bits/basic_string.h **** 	{
2218:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2219:/usr/include/c++/11/bits/basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
2220:/usr/include/c++/11/bits/basic_string.h **** 	}
2221:/usr/include/c++/11/bits/basic_string.h **** 
2222:/usr/include/c++/11/bits/basic_string.h ****       /**
2223:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2224:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos1  The position to replace at.
2225:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1    The number of characters to replace.
2226:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2227:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
2228:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n2    The number of characters to insert.
2229:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
2230:/usr/include/c++/11/bits/basic_string.h ****       */
2231:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
2232:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2233:/usr/include/c++/11/bits/basic_string.h **** 	replace(size_type __pos1, size_type __n1, const _Tp& __svt,
2234:/usr/include/c++/11/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
2235:/usr/include/c++/11/bits/basic_string.h **** 	{
2236:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2237:/usr/include/c++/11/bits/basic_string.h **** 	  return this->replace(__pos1, __n1,
2238:/usr/include/c++/11/bits/basic_string.h **** 	      __sv.data()
2239:/usr/include/c++/11/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
2240:/usr/include/c++/11/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
2241:/usr/include/c++/11/bits/basic_string.h **** 	}
2242:/usr/include/c++/11/bits/basic_string.h **** 
2243:/usr/include/c++/11/bits/basic_string.h ****       /**
2244:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2245:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i1    An iterator referencing the start position
2246:/usr/include/c++/11/bits/basic_string.h ****           to replace at.
2247:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i2    An iterator referencing the end position
2248:/usr/include/c++/11/bits/basic_string.h ****           for the replace.
2249:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2250:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
2251:/usr/include/c++/11/bits/basic_string.h ****       */
2252:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
2253:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2254:/usr/include/c++/11/bits/basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
2255:/usr/include/c++/11/bits/basic_string.h **** 	{
2256:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2257:/usr/include/c++/11/bits/basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
2258:/usr/include/c++/11/bits/basic_string.h **** 	}
2259:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
2260:/usr/include/c++/11/bits/basic_string.h **** 
2261:/usr/include/c++/11/bits/basic_string.h ****     private:
2262:/usr/include/c++/11/bits/basic_string.h ****       template<class _Integer>
2263:/usr/include/c++/11/bits/basic_string.h **** 	basic_string&
2264:/usr/include/c++/11/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2265:/usr/include/c++/11/bits/basic_string.h **** 			    _Integer __n, _Integer __val, __true_type)
2266:/usr/include/c++/11/bits/basic_string.h ****         { return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __val); }
2267:/usr/include/c++/11/bits/basic_string.h **** 
2268:/usr/include/c++/11/bits/basic_string.h ****       template<class _InputIterator>
2269:/usr/include/c++/11/bits/basic_string.h **** 	basic_string&
2270:/usr/include/c++/11/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2271:/usr/include/c++/11/bits/basic_string.h **** 			    _InputIterator __k1, _InputIterator __k2,
2272:/usr/include/c++/11/bits/basic_string.h **** 			    __false_type);
2273:/usr/include/c++/11/bits/basic_string.h **** 
2274:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
2275:/usr/include/c++/11/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
2276:/usr/include/c++/11/bits/basic_string.h **** 		     _CharT __c);
2277:/usr/include/c++/11/bits/basic_string.h **** 
2278:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
2279:/usr/include/c++/11/bits/basic_string.h ****       _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
2280:/usr/include/c++/11/bits/basic_string.h **** 		 const size_type __len2);
2281:/usr/include/c++/11/bits/basic_string.h **** 
2282:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
2283:/usr/include/c++/11/bits/basic_string.h ****       _M_append(const _CharT* __s, size_type __n);
2284:/usr/include/c++/11/bits/basic_string.h **** 
2285:/usr/include/c++/11/bits/basic_string.h ****     public:
2286:/usr/include/c++/11/bits/basic_string.h **** 
2287:/usr/include/c++/11/bits/basic_string.h ****       /**
2288:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Copy substring into C string.
2289:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to copy value into.
2290:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
2291:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
2292:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Number of characters actually copied
2293:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2294:/usr/include/c++/11/bits/basic_string.h ****        *
2295:/usr/include/c++/11/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
2296:/usr/include/c++/11/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
2297:/usr/include/c++/11/bits/basic_string.h ****        *  out_of_range is thrown.
2298:/usr/include/c++/11/bits/basic_string.h ****       */
2299:/usr/include/c++/11/bits/basic_string.h ****       size_type
2300:/usr/include/c++/11/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
2301:/usr/include/c++/11/bits/basic_string.h **** 
2302:/usr/include/c++/11/bits/basic_string.h ****       /**
2303:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Swap contents with another string.
2304:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  String to swap with.
2305:/usr/include/c++/11/bits/basic_string.h ****        *
2306:/usr/include/c++/11/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
2307:/usr/include/c++/11/bits/basic_string.h ****        *  time.
2308:/usr/include/c++/11/bits/basic_string.h ****       */
2309:/usr/include/c++/11/bits/basic_string.h ****       void
2310:/usr/include/c++/11/bits/basic_string.h ****       swap(basic_string& __s) _GLIBCXX_NOEXCEPT;
2311:/usr/include/c++/11/bits/basic_string.h **** 
2312:/usr/include/c++/11/bits/basic_string.h ****       // String operations:
2313:/usr/include/c++/11/bits/basic_string.h ****       /**
2314:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
2315:/usr/include/c++/11/bits/basic_string.h ****        *
2316:/usr/include/c++/11/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
2317:/usr/include/c++/11/bits/basic_string.h ****        *  happen.
2318:/usr/include/c++/11/bits/basic_string.h ****       */
2319:/usr/include/c++/11/bits/basic_string.h ****       const _CharT*
2320:/usr/include/c++/11/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
2321:/usr/include/c++/11/bits/basic_string.h ****       { return _M_data(); }
2322:/usr/include/c++/11/bits/basic_string.h **** 
2323:/usr/include/c++/11/bits/basic_string.h ****       /**
2324:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
2325:/usr/include/c++/11/bits/basic_string.h ****        *
2326:/usr/include/c++/11/bits/basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
2327:/usr/include/c++/11/bits/basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
2328:/usr/include/c++/11/bits/basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
2329:/usr/include/c++/11/bits/basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
2330:/usr/include/c++/11/bits/basic_string.h ****       */
2331:/usr/include/c++/11/bits/basic_string.h ****       const _CharT*
2332:/usr/include/c++/11/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
2333:/usr/include/c++/11/bits/basic_string.h ****       { return _M_data(); }
2334:/usr/include/c++/11/bits/basic_string.h **** 
2335:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
2336:/usr/include/c++/11/bits/basic_string.h ****       /**
2337:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Return non-const pointer to contents.
2338:/usr/include/c++/11/bits/basic_string.h ****        *
2339:/usr/include/c++/11/bits/basic_string.h ****        *  This is a pointer to the character sequence held by the string.
2340:/usr/include/c++/11/bits/basic_string.h ****        *  Modifying the characters in the sequence is allowed.
2341:/usr/include/c++/11/bits/basic_string.h ****       */
2342:/usr/include/c++/11/bits/basic_string.h ****       _CharT*
2343:/usr/include/c++/11/bits/basic_string.h ****       data() noexcept
2344:/usr/include/c++/11/bits/basic_string.h ****       { return _M_data(); }
2345:/usr/include/c++/11/bits/basic_string.h **** #endif
2346:/usr/include/c++/11/bits/basic_string.h **** 
2347:/usr/include/c++/11/bits/basic_string.h ****       /**
2348:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
2349:/usr/include/c++/11/bits/basic_string.h ****       */
2350:/usr/include/c++/11/bits/basic_string.h ****       allocator_type
2351:/usr/include/c++/11/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
2352:/usr/include/c++/11/bits/basic_string.h ****       { return _M_get_allocator(); }
2353:/usr/include/c++/11/bits/basic_string.h **** 
2354:/usr/include/c++/11/bits/basic_string.h ****       /**
2355:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a C substring.
2356:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to locate.
2357:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2358:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
2359:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2360:/usr/include/c++/11/bits/basic_string.h ****        *
2361:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
2362:/usr/include/c++/11/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2363:/usr/include/c++/11/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
2364:/usr/include/c++/11/bits/basic_string.h ****        *  npos.
2365:/usr/include/c++/11/bits/basic_string.h ****       */
2366:/usr/include/c++/11/bits/basic_string.h ****       size_type
2367:/usr/include/c++/11/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
2368:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2369:/usr/include/c++/11/bits/basic_string.h **** 
2370:/usr/include/c++/11/bits/basic_string.h ****       /**
2371:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a string.
2372:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String to locate.
2373:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2374:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2375:/usr/include/c++/11/bits/basic_string.h ****        *
2376:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
2377:/usr/include/c++/11/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
2378:/usr/include/c++/11/bits/basic_string.h ****        *  found, returns npos.
2379:/usr/include/c++/11/bits/basic_string.h ****       */
2380:/usr/include/c++/11/bits/basic_string.h ****       size_type
2381:/usr/include/c++/11/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
2382:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2383:/usr/include/c++/11/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
2384:/usr/include/c++/11/bits/basic_string.h **** 
2385:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
2386:/usr/include/c++/11/bits/basic_string.h ****       /**
2387:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a string_view.
2388:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2389:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2390:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2391:/usr/include/c++/11/bits/basic_string.h ****       */
2392:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
2393:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2394:/usr/include/c++/11/bits/basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
2395:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2396:/usr/include/c++/11/bits/basic_string.h **** 	{
2397:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2398:/usr/include/c++/11/bits/basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
2399:/usr/include/c++/11/bits/basic_string.h **** 	}
2400:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
2401:/usr/include/c++/11/bits/basic_string.h **** 
2402:/usr/include/c++/11/bits/basic_string.h ****       /**
2403:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a C string.
2404:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to locate.
2405:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2406:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2407:/usr/include/c++/11/bits/basic_string.h ****        *
2408:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
2409:/usr/include/c++/11/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
2410:/usr/include/c++/11/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
2411:/usr/include/c++/11/bits/basic_string.h ****       */
2412:/usr/include/c++/11/bits/basic_string.h ****       size_type
2413:/usr/include/c++/11/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2414:/usr/include/c++/11/bits/basic_string.h ****       {
2415:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2416:/usr/include/c++/11/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
2417:/usr/include/c++/11/bits/basic_string.h ****       }
2418:/usr/include/c++/11/bits/basic_string.h **** 
2419:/usr/include/c++/11/bits/basic_string.h ****       /**
2420:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character.
2421:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to locate.
2422:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2423:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
2424:/usr/include/c++/11/bits/basic_string.h ****        *
2425:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
2426:/usr/include/c++/11/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2427:/usr/include/c++/11/bits/basic_string.h ****        *  found.  If not found, returns npos.
2428:/usr/include/c++/11/bits/basic_string.h ****       */
2429:/usr/include/c++/11/bits/basic_string.h ****       size_type
2430:/usr/include/c++/11/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
2431:/usr/include/c++/11/bits/basic_string.h **** 
2432:/usr/include/c++/11/bits/basic_string.h ****       /**
2433:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a string.
2434:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String to locate.
2435:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2436:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2437:/usr/include/c++/11/bits/basic_string.h ****        *
2438:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
2439:/usr/include/c++/11/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
2440:/usr/include/c++/11/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
2441:/usr/include/c++/11/bits/basic_string.h ****       */
2442:/usr/include/c++/11/bits/basic_string.h ****       size_type
2443:/usr/include/c++/11/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
2444:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2445:/usr/include/c++/11/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
2446:/usr/include/c++/11/bits/basic_string.h **** 
2447:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
2448:/usr/include/c++/11/bits/basic_string.h ****       /**
2449:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a string_view.
2450:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2451:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2452:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2453:/usr/include/c++/11/bits/basic_string.h ****       */
2454:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
2455:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2456:/usr/include/c++/11/bits/basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
2457:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2458:/usr/include/c++/11/bits/basic_string.h **** 	{
2459:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2460:/usr/include/c++/11/bits/basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
2461:/usr/include/c++/11/bits/basic_string.h **** 	}
2462:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
2463:/usr/include/c++/11/bits/basic_string.h **** 
2464:/usr/include/c++/11/bits/basic_string.h ****       /**
2465:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
2466:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to locate.
2467:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2468:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2469:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2470:/usr/include/c++/11/bits/basic_string.h ****        *
2471:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
2472:/usr/include/c++/11/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2473:/usr/include/c++/11/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
2474:/usr/include/c++/11/bits/basic_string.h ****        *  npos.
2475:/usr/include/c++/11/bits/basic_string.h ****       */
2476:/usr/include/c++/11/bits/basic_string.h ****       size_type
2477:/usr/include/c++/11/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
2478:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2479:/usr/include/c++/11/bits/basic_string.h **** 
2480:/usr/include/c++/11/bits/basic_string.h ****       /**
2481:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a C string.
2482:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to locate.
2483:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
2484:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
2485:/usr/include/c++/11/bits/basic_string.h ****        *
2486:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
2487:/usr/include/c++/11/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
2488:/usr/include/c++/11/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
2489:/usr/include/c++/11/bits/basic_string.h ****       */
2490:/usr/include/c++/11/bits/basic_string.h ****       size_type
2491:/usr/include/c++/11/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
2492:/usr/include/c++/11/bits/basic_string.h ****       {
2493:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2494:/usr/include/c++/11/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
2495:/usr/include/c++/11/bits/basic_string.h ****       }
2496:/usr/include/c++/11/bits/basic_string.h **** 
2497:/usr/include/c++/11/bits/basic_string.h ****       /**
2498:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character.
2499:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to locate.
2500:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2501:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
2502:/usr/include/c++/11/bits/basic_string.h ****        *
2503:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2504:/usr/include/c++/11/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2505:/usr/include/c++/11/bits/basic_string.h ****        *  found.  If not found, returns npos.
2506:/usr/include/c++/11/bits/basic_string.h ****       */
2507:/usr/include/c++/11/bits/basic_string.h ****       size_type
2508:/usr/include/c++/11/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
2509:/usr/include/c++/11/bits/basic_string.h **** 
2510:/usr/include/c++/11/bits/basic_string.h ****       /**
2511:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character of string.
2512:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2513:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2514:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
2515:/usr/include/c++/11/bits/basic_string.h ****        *
2516:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2517:/usr/include/c++/11/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2518:/usr/include/c++/11/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2519:/usr/include/c++/11/bits/basic_string.h ****        *  npos.
2520:/usr/include/c++/11/bits/basic_string.h ****       */
2521:/usr/include/c++/11/bits/basic_string.h ****       size_type
2522:/usr/include/c++/11/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
2523:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2524:/usr/include/c++/11/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
2525:/usr/include/c++/11/bits/basic_string.h **** 
2526:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
2527:/usr/include/c++/11/bits/basic_string.h ****       /**
2528:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character of a string_view.
2529:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2530:/usr/include/c++/11/bits/basic_string.h ****        *                characters to locate.
2531:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2532:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
2533:/usr/include/c++/11/bits/basic_string.h ****       */
2534:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
2535:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2536:/usr/include/c++/11/bits/basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
2537:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2538:/usr/include/c++/11/bits/basic_string.h **** 	{
2539:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2540:/usr/include/c++/11/bits/basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
2541:/usr/include/c++/11/bits/basic_string.h **** 	}
2542:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
2543:/usr/include/c++/11/bits/basic_string.h **** 
2544:/usr/include/c++/11/bits/basic_string.h ****       /**
2545:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
2546:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2547:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2548:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2549:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
2550:/usr/include/c++/11/bits/basic_string.h ****        *
2551:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2552:/usr/include/c++/11/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2553:/usr/include/c++/11/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2554:/usr/include/c++/11/bits/basic_string.h ****        *  returns npos.
2555:/usr/include/c++/11/bits/basic_string.h ****       */
2556:/usr/include/c++/11/bits/basic_string.h ****       size_type
2557:/usr/include/c++/11/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
2558:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2559:/usr/include/c++/11/bits/basic_string.h **** 
2560:/usr/include/c++/11/bits/basic_string.h ****       /**
2561:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
2562:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2563:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2564:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
2565:/usr/include/c++/11/bits/basic_string.h ****        *
2566:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2567:/usr/include/c++/11/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2568:/usr/include/c++/11/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2569:/usr/include/c++/11/bits/basic_string.h ****       */
2570:/usr/include/c++/11/bits/basic_string.h ****       size_type
2571:/usr/include/c++/11/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
2572:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2573:/usr/include/c++/11/bits/basic_string.h ****       {
2574:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2575:/usr/include/c++/11/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
2576:/usr/include/c++/11/bits/basic_string.h ****       }
2577:/usr/include/c++/11/bits/basic_string.h **** 
2578:/usr/include/c++/11/bits/basic_string.h ****       /**
2579:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character.
2580:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to locate.
2581:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2582:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
2583:/usr/include/c++/11/bits/basic_string.h ****        *
2584:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
2585:/usr/include/c++/11/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
2586:/usr/include/c++/11/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
2587:/usr/include/c++/11/bits/basic_string.h ****        *
2588:/usr/include/c++/11/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
2589:/usr/include/c++/11/bits/basic_string.h ****       */
2590:/usr/include/c++/11/bits/basic_string.h ****       size_type
2591:/usr/include/c++/11/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2592:/usr/include/c++/11/bits/basic_string.h ****       { return this->find(__c, __pos); }
2593:/usr/include/c++/11/bits/basic_string.h **** 
2594:/usr/include/c++/11/bits/basic_string.h ****       /**
2595:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2596:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2597:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2598:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
2599:/usr/include/c++/11/bits/basic_string.h ****        *
2600:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2601:/usr/include/c++/11/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2602:/usr/include/c++/11/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2603:/usr/include/c++/11/bits/basic_string.h ****        *  npos.
2604:/usr/include/c++/11/bits/basic_string.h ****       */
2605:/usr/include/c++/11/bits/basic_string.h ****       size_type
2606:/usr/include/c++/11/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
2607:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2608:/usr/include/c++/11/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
2609:/usr/include/c++/11/bits/basic_string.h **** 
2610:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
2611:/usr/include/c++/11/bits/basic_string.h ****       /**
2612:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2613:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2614:/usr/include/c++/11/bits/basic_string.h ****        *                characters to locate.
2615:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2616:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
2617:/usr/include/c++/11/bits/basic_string.h ****       */
2618:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
2619:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2620:/usr/include/c++/11/bits/basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
2621:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2622:/usr/include/c++/11/bits/basic_string.h **** 	{
2623:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2624:/usr/include/c++/11/bits/basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
2625:/usr/include/c++/11/bits/basic_string.h **** 	}
2626:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
2627:/usr/include/c++/11/bits/basic_string.h **** 
2628:/usr/include/c++/11/bits/basic_string.h ****       /**
2629:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
2630:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2631:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2632:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2633:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
2634:/usr/include/c++/11/bits/basic_string.h ****        *
2635:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2636:/usr/include/c++/11/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2637:/usr/include/c++/11/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2638:/usr/include/c++/11/bits/basic_string.h ****        *  returns npos.
2639:/usr/include/c++/11/bits/basic_string.h ****       */
2640:/usr/include/c++/11/bits/basic_string.h ****       size_type
2641:/usr/include/c++/11/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
2642:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2643:/usr/include/c++/11/bits/basic_string.h **** 
2644:/usr/include/c++/11/bits/basic_string.h ****       /**
2645:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
2646:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2647:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2648:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
2649:/usr/include/c++/11/bits/basic_string.h ****        *
2650:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2651:/usr/include/c++/11/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2652:/usr/include/c++/11/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2653:/usr/include/c++/11/bits/basic_string.h ****       */
2654:/usr/include/c++/11/bits/basic_string.h ****       size_type
2655:/usr/include/c++/11/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
2656:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2657:/usr/include/c++/11/bits/basic_string.h ****       {
2658:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2659:/usr/include/c++/11/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
2660:/usr/include/c++/11/bits/basic_string.h ****       }
2661:/usr/include/c++/11/bits/basic_string.h **** 
2662:/usr/include/c++/11/bits/basic_string.h ****       /**
2663:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character.
2664:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to locate.
2665:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2666:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
2667:/usr/include/c++/11/bits/basic_string.h ****        *
2668:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2669:/usr/include/c++/11/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2670:/usr/include/c++/11/bits/basic_string.h ****        *  found.  If not found, returns npos.
2671:/usr/include/c++/11/bits/basic_string.h ****        *
2672:/usr/include/c++/11/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
2673:/usr/include/c++/11/bits/basic_string.h ****       */
2674:/usr/include/c++/11/bits/basic_string.h ****       size_type
2675:/usr/include/c++/11/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
2676:/usr/include/c++/11/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
2677:/usr/include/c++/11/bits/basic_string.h **** 
2678:/usr/include/c++/11/bits/basic_string.h ****       /**
2679:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
2680:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2681:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2682:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
2683:/usr/include/c++/11/bits/basic_string.h ****        *
2684:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
2685:/usr/include/c++/11/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
2686:/usr/include/c++/11/bits/basic_string.h ****        *  was found.  If not found, returns npos.
2687:/usr/include/c++/11/bits/basic_string.h ****       */
2688:/usr/include/c++/11/bits/basic_string.h ****       size_type
2689:/usr/include/c++/11/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
2690:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2691:/usr/include/c++/11/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
2692:/usr/include/c++/11/bits/basic_string.h **** 
2693:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
2694:/usr/include/c++/11/bits/basic_string.h ****       /**
2695:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character not in a string_view.
2696:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  A object convertible to string_view containing
2697:/usr/include/c++/11/bits/basic_string.h ****        *                characters to avoid.
2698:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2699:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
2700:/usr/include/c++/11/bits/basic_string.h ****        */
2701:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
2702:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2703:/usr/include/c++/11/bits/basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
2704:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2705:/usr/include/c++/11/bits/basic_string.h **** 	{
2706:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2707:/usr/include/c++/11/bits/basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
2708:/usr/include/c++/11/bits/basic_string.h **** 	}
2709:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
2710:/usr/include/c++/11/bits/basic_string.h **** 
2711:/usr/include/c++/11/bits/basic_string.h ****       /**
2712:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
2713:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2714:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2715:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
2716:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
2717:/usr/include/c++/11/bits/basic_string.h ****        *
2718:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2719:/usr/include/c++/11/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
2720:/usr/include/c++/11/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2721:/usr/include/c++/11/bits/basic_string.h ****        *  found.  If not found, returns npos.
2722:/usr/include/c++/11/bits/basic_string.h ****       */
2723:/usr/include/c++/11/bits/basic_string.h ****       size_type
2724:/usr/include/c++/11/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
2725:/usr/include/c++/11/bits/basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
2726:/usr/include/c++/11/bits/basic_string.h **** 
2727:/usr/include/c++/11/bits/basic_string.h ****       /**
2728:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
2729:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2730:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2731:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
2732:/usr/include/c++/11/bits/basic_string.h ****        *
2733:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2734:/usr/include/c++/11/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
2735:/usr/include/c++/11/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2736:/usr/include/c++/11/bits/basic_string.h ****       */
2737:/usr/include/c++/11/bits/basic_string.h ****       size_type
2738:/usr/include/c++/11/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
2739:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2740:/usr/include/c++/11/bits/basic_string.h ****       {
2741:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2742:/usr/include/c++/11/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
2743:/usr/include/c++/11/bits/basic_string.h ****       }
2744:/usr/include/c++/11/bits/basic_string.h **** 
2745:/usr/include/c++/11/bits/basic_string.h ****       /**
2746:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a different character.
2747:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to avoid.
2748:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2749:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
2750:/usr/include/c++/11/bits/basic_string.h ****        *
2751:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
2752:/usr/include/c++/11/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
2753:/usr/include/c++/11/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
2754:/usr/include/c++/11/bits/basic_string.h ****       */
2755:/usr/include/c++/11/bits/basic_string.h ****       size_type
2756:/usr/include/c++/11/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
2757:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2758:/usr/include/c++/11/bits/basic_string.h **** 
2759:/usr/include/c++/11/bits/basic_string.h ****       /**
2760:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
2761:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2762:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2763:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
2764:/usr/include/c++/11/bits/basic_string.h ****        *
2765:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2766:/usr/include/c++/11/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
2767:/usr/include/c++/11/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2768:/usr/include/c++/11/bits/basic_string.h ****        *  npos.
2769:/usr/include/c++/11/bits/basic_string.h ****       */
2770:/usr/include/c++/11/bits/basic_string.h ****       size_type
2771:/usr/include/c++/11/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
2772:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2773:/usr/include/c++/11/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
2774:/usr/include/c++/11/bits/basic_string.h **** 
2775:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
2776:/usr/include/c++/11/bits/basic_string.h ****       /**
2777:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
2778:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2779:/usr/include/c++/11/bits/basic_string.h ****        *                characters to avoid.
2780:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2781:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
2782:/usr/include/c++/11/bits/basic_string.h ****        */
2783:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
2784:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2785:/usr/include/c++/11/bits/basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
2786:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2787:/usr/include/c++/11/bits/basic_string.h **** 	{
2788:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2789:/usr/include/c++/11/bits/basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
2790:/usr/include/c++/11/bits/basic_string.h **** 	}
2791:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
2792:/usr/include/c++/11/bits/basic_string.h **** 
2793:/usr/include/c++/11/bits/basic_string.h ****       /**
2794:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
2795:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2796:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2797:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
2798:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
2799:/usr/include/c++/11/bits/basic_string.h ****        *
2800:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
2801:/usr/include/c++/11/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
2802:/usr/include/c++/11/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
2803:/usr/include/c++/11/bits/basic_string.h ****        *  returns npos.
2804:/usr/include/c++/11/bits/basic_string.h ****       */
2805:/usr/include/c++/11/bits/basic_string.h ****       size_type
2806:/usr/include/c++/11/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
2807:/usr/include/c++/11/bits/basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
2808:/usr/include/c++/11/bits/basic_string.h ****       /**
2809:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
2810:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2811:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2812:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
2813:/usr/include/c++/11/bits/basic_string.h ****        *
2814:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2815:/usr/include/c++/11/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
2816:/usr/include/c++/11/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2817:/usr/include/c++/11/bits/basic_string.h ****        *  npos.
2818:/usr/include/c++/11/bits/basic_string.h ****       */
2819:/usr/include/c++/11/bits/basic_string.h ****       size_type
2820:/usr/include/c++/11/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
2821:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2822:/usr/include/c++/11/bits/basic_string.h ****       {
2823:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2824:/usr/include/c++/11/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
2825:/usr/include/c++/11/bits/basic_string.h ****       }
2826:/usr/include/c++/11/bits/basic_string.h **** 
2827:/usr/include/c++/11/bits/basic_string.h ****       /**
2828:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a different character.
2829:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to avoid.
2830:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2831:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
2832:/usr/include/c++/11/bits/basic_string.h ****        *
2833:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
2834:/usr/include/c++/11/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
2835:/usr/include/c++/11/bits/basic_string.h ****        *  found.  If not found, returns npos.
2836:/usr/include/c++/11/bits/basic_string.h ****       */
2837:/usr/include/c++/11/bits/basic_string.h ****       size_type
2838:/usr/include/c++/11/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
2839:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2840:/usr/include/c++/11/bits/basic_string.h **** 
2841:/usr/include/c++/11/bits/basic_string.h ****       /**
2842:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Get a substring.
2843:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
2844:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
2845:/usr/include/c++/11/bits/basic_string.h ****        *  @return  The new string.
2846:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2847:/usr/include/c++/11/bits/basic_string.h ****        *
2848:/usr/include/c++/11/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
2849:/usr/include/c++/11/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
2850:/usr/include/c++/11/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
2851:/usr/include/c++/11/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
2852:/usr/include/c++/11/bits/basic_string.h ****       */
2853:/usr/include/c++/11/bits/basic_string.h ****       basic_string
2854:/usr/include/c++/11/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
2855:/usr/include/c++/11/bits/basic_string.h ****       { return basic_string(*this,
2856:/usr/include/c++/11/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
2857:/usr/include/c++/11/bits/basic_string.h **** 
2858:/usr/include/c++/11/bits/basic_string.h ****       /**
2859:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare to a string.
2860:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String to compare against.
2861:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2862:/usr/include/c++/11/bits/basic_string.h ****        *
2863:/usr/include/c++/11/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
2864:/usr/include/c++/11/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
2865:/usr/include/c++/11/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
2866:/usr/include/c++/11/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
2867:/usr/include/c++/11/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
2868:/usr/include/c++/11/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
2869:/usr/include/c++/11/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2870:/usr/include/c++/11/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2871:/usr/include/c++/11/bits/basic_string.h ****       */
2872:/usr/include/c++/11/bits/basic_string.h ****       int
2873:/usr/include/c++/11/bits/basic_string.h ****       compare(const basic_string& __str) const
2874:/usr/include/c++/11/bits/basic_string.h ****       {
2875:/usr/include/c++/11/bits/basic_string.h **** 	const size_type __size = this->size();
2876:/usr/include/c++/11/bits/basic_string.h **** 	const size_type __osize = __str.size();
2877:/usr/include/c++/11/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
2878:/usr/include/c++/11/bits/basic_string.h **** 
2879:/usr/include/c++/11/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
2880:/usr/include/c++/11/bits/basic_string.h **** 	if (!__r)
2881:/usr/include/c++/11/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
2882:/usr/include/c++/11/bits/basic_string.h **** 	return __r;
2883:/usr/include/c++/11/bits/basic_string.h ****       }
2884:/usr/include/c++/11/bits/basic_string.h **** 
2885:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
2886:/usr/include/c++/11/bits/basic_string.h ****       /**
2887:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2888:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
2889:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2890:/usr/include/c++/11/bits/basic_string.h ****        */
2891:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
2892:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, int>
2893:/usr/include/c++/11/bits/basic_string.h **** 	compare(const _Tp& __svt) const
2894:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2895:/usr/include/c++/11/bits/basic_string.h **** 	{
2896:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2897:/usr/include/c++/11/bits/basic_string.h **** 	  const size_type __size = this->size();
2898:/usr/include/c++/11/bits/basic_string.h **** 	  const size_type __osize = __sv.size();
2899:/usr/include/c++/11/bits/basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
2900:/usr/include/c++/11/bits/basic_string.h **** 
2901:/usr/include/c++/11/bits/basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
2902:/usr/include/c++/11/bits/basic_string.h **** 	  if (!__r)
2903:/usr/include/c++/11/bits/basic_string.h **** 	    __r = _S_compare(__size, __osize);
2904:/usr/include/c++/11/bits/basic_string.h **** 	  return __r;
2905:/usr/include/c++/11/bits/basic_string.h **** 	}
2906:/usr/include/c++/11/bits/basic_string.h **** 
2907:/usr/include/c++/11/bits/basic_string.h ****       /**
2908:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2909:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
2910:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  The number of characters to compare.
2911:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2912:/usr/include/c++/11/bits/basic_string.h ****        *                against.
2913:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2914:/usr/include/c++/11/bits/basic_string.h ****        */
2915:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
2916:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, int>
2917:/usr/include/c++/11/bits/basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
2918:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2919:/usr/include/c++/11/bits/basic_string.h **** 	{
2920:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2921:/usr/include/c++/11/bits/basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
2922:/usr/include/c++/11/bits/basic_string.h **** 	}
2923:/usr/include/c++/11/bits/basic_string.h **** 
2924:/usr/include/c++/11/bits/basic_string.h ****       /**
2925:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2926:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
2927:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  The number of characters to compare.
2928:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2929:/usr/include/c++/11/bits/basic_string.h ****        *                against.
2930:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
2931:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n2  The number of characters to compare.
2932:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2933:/usr/include/c++/11/bits/basic_string.h ****        */
2934:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
2935:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, int>
2936:/usr/include/c++/11/bits/basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
2937:/usr/include/c++/11/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
2938:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2939:/usr/include/c++/11/bits/basic_string.h **** 	{
2940:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2941:/usr/include/c++/11/bits/basic_string.h **** 	  return __sv_type(*this)
2942:/usr/include/c++/11/bits/basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
2943:/usr/include/c++/11/bits/basic_string.h **** 	}
2944:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
2945:/usr/include/c++/11/bits/basic_string.h **** 
2946:/usr/include/c++/11/bits/basic_string.h ****       /**
2947:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare substring to a string.
2948:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2949:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
2950:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String to compare against.
2951:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2952:/usr/include/c++/11/bits/basic_string.h ****        *
2953:/usr/include/c++/11/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
2954:/usr/include/c++/11/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
2955:/usr/include/c++/11/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
2956:/usr/include/c++/11/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
2957:/usr/include/c++/11/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
2958:/usr/include/c++/11/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
2959:/usr/include/c++/11/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
2960:/usr/include/c++/11/bits/basic_string.h ****        *  strings by calling
2961:/usr/include/c++/11/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
2962:/usr/include/c++/11/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
2963:/usr/include/c++/11/bits/basic_string.h ****        *  the shorter one is ordered first.
2964:/usr/include/c++/11/bits/basic_string.h ****       */
2965:/usr/include/c++/11/bits/basic_string.h ****       int
2966:/usr/include/c++/11/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
2967:/usr/include/c++/11/bits/basic_string.h **** 
2968:/usr/include/c++/11/bits/basic_string.h ****       /**
2969:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
2970:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
2971:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2972:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String to compare against.
2973:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
2974:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
2975:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2976:/usr/include/c++/11/bits/basic_string.h ****        *
2977:/usr/include/c++/11/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2978:/usr/include/c++/11/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
2979:/usr/include/c++/11/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
2980:/usr/include/c++/11/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
2981:/usr/include/c++/11/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
2982:/usr/include/c++/11/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
2983:/usr/include/c++/11/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
2984:/usr/include/c++/11/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
2985:/usr/include/c++/11/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
2986:/usr/include/c++/11/bits/basic_string.h ****        *  calling
2987:/usr/include/c++/11/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
2988:/usr/include/c++/11/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2989:/usr/include/c++/11/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2990:/usr/include/c++/11/bits/basic_string.h ****       */
2991:/usr/include/c++/11/bits/basic_string.h ****       int
2992:/usr/include/c++/11/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
2993:/usr/include/c++/11/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
2994:/usr/include/c++/11/bits/basic_string.h **** 
2995:/usr/include/c++/11/bits/basic_string.h ****       /**
2996:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare to a C string.
2997:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to compare against.
2998:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2999:/usr/include/c++/11/bits/basic_string.h ****        *
3000:/usr/include/c++/11/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
3001:/usr/include/c++/11/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
3002:/usr/include/c++/11/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
3003:/usr/include/c++/11/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
3004:/usr/include/c++/11/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
3005:/usr/include/c++/11/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
3006:/usr/include/c++/11/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
3007:/usr/include/c++/11/bits/basic_string.h ****        *  ordered first.
3008:/usr/include/c++/11/bits/basic_string.h ****       */
3009:/usr/include/c++/11/bits/basic_string.h ****       int
3010:/usr/include/c++/11/bits/basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
3011:/usr/include/c++/11/bits/basic_string.h **** 
3012:/usr/include/c++/11/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
3013:/usr/include/c++/11/bits/basic_string.h ****       // 5 String::compare specification questionable
3014:/usr/include/c++/11/bits/basic_string.h ****       /**
3015:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
3016:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
3017:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
3018:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to compare against.
3019:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3020:/usr/include/c++/11/bits/basic_string.h ****        *
3021:/usr/include/c++/11/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
3022:/usr/include/c++/11/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
3023:/usr/include/c++/11/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
3024:/usr/include/c++/11/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
3025:/usr/include/c++/11/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
3026:/usr/include/c++/11/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
3027:/usr/include/c++/11/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
3028:/usr/include/c++/11/bits/basic_string.h ****        *  function then compares the two string by calling
3029:/usr/include/c++/11/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
3030:/usr/include/c++/11/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3031:/usr/include/c++/11/bits/basic_string.h ****        *  one is ordered first.
3032:/usr/include/c++/11/bits/basic_string.h ****       */
3033:/usr/include/c++/11/bits/basic_string.h ****       int
3034:/usr/include/c++/11/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
3035:/usr/include/c++/11/bits/basic_string.h **** 
3036:/usr/include/c++/11/bits/basic_string.h ****       /**
3037:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
3038:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
3039:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
3040:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  character %array to compare against.
3041:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
3042:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3043:/usr/include/c++/11/bits/basic_string.h ****        *
3044:/usr/include/c++/11/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
3045:/usr/include/c++/11/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
3046:/usr/include/c++/11/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
3047:/usr/include/c++/11/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
3048:/usr/include/c++/11/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
3049:/usr/include/c++/11/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
3050:/usr/include/c++/11/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
3051:/usr/include/c++/11/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
3052:/usr/include/c++/11/bits/basic_string.h ****        *  function then compares the two strings by calling
3053:/usr/include/c++/11/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
3054:/usr/include/c++/11/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3055:/usr/include/c++/11/bits/basic_string.h ****        *  one is ordered first.
3056:/usr/include/c++/11/bits/basic_string.h ****        *
3057:/usr/include/c++/11/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
3058:/usr/include/c++/11/bits/basic_string.h ****        *  no special meaning.
3059:/usr/include/c++/11/bits/basic_string.h ****       */
3060:/usr/include/c++/11/bits/basic_string.h ****       int
3061:/usr/include/c++/11/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
3062:/usr/include/c++/11/bits/basic_string.h **** 	      size_type __n2) const;
3063:/usr/include/c++/11/bits/basic_string.h **** 
3064:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus > 201703L
3065:/usr/include/c++/11/bits/basic_string.h ****       bool
3066:/usr/include/c++/11/bits/basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3067:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3068:/usr/include/c++/11/bits/basic_string.h **** 
3069:/usr/include/c++/11/bits/basic_string.h ****       bool
3070:/usr/include/c++/11/bits/basic_string.h ****       starts_with(_CharT __x) const noexcept
3071:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3072:/usr/include/c++/11/bits/basic_string.h **** 
3073:/usr/include/c++/11/bits/basic_string.h ****       bool
3074:/usr/include/c++/11/bits/basic_string.h ****       starts_with(const _CharT* __x) const noexcept
3075:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3076:/usr/include/c++/11/bits/basic_string.h **** 
3077:/usr/include/c++/11/bits/basic_string.h ****       bool
3078:/usr/include/c++/11/bits/basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3079:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3080:/usr/include/c++/11/bits/basic_string.h **** 
3081:/usr/include/c++/11/bits/basic_string.h ****       bool
3082:/usr/include/c++/11/bits/basic_string.h ****       ends_with(_CharT __x) const noexcept
3083:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3084:/usr/include/c++/11/bits/basic_string.h **** 
3085:/usr/include/c++/11/bits/basic_string.h ****       bool
3086:/usr/include/c++/11/bits/basic_string.h ****       ends_with(const _CharT* __x) const noexcept
3087:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3088:/usr/include/c++/11/bits/basic_string.h **** #endif // C++20
3089:/usr/include/c++/11/bits/basic_string.h **** 
3090:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus > 202002L
3091:/usr/include/c++/11/bits/basic_string.h ****       bool
3092:/usr/include/c++/11/bits/basic_string.h ****       contains(basic_string_view<_CharT, _Traits> __x) const noexcept
3093:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).contains(__x); }
3094:/usr/include/c++/11/bits/basic_string.h **** 
3095:/usr/include/c++/11/bits/basic_string.h ****       bool
3096:/usr/include/c++/11/bits/basic_string.h ****       contains(_CharT __x) const noexcept
3097:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).contains(__x); }
3098:/usr/include/c++/11/bits/basic_string.h **** 
3099:/usr/include/c++/11/bits/basic_string.h ****       bool
3100:/usr/include/c++/11/bits/basic_string.h ****       contains(const _CharT* __x) const noexcept
3101:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).contains(__x); }
3102:/usr/include/c++/11/bits/basic_string.h **** #endif // C++23
3103:/usr/include/c++/11/bits/basic_string.h **** 
3104:/usr/include/c++/11/bits/basic_string.h ****       // Allow basic_stringbuf::__xfer_bufptrs to call _M_length:
3105:/usr/include/c++/11/bits/basic_string.h ****       template<typename, typename, typename> friend class basic_stringbuf;
3106:/usr/include/c++/11/bits/basic_string.h ****     };
3107:/usr/include/c++/11/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
3108:/usr/include/c++/11/bits/basic_string.h **** #else  // !_GLIBCXX_USE_CXX11_ABI
3109:/usr/include/c++/11/bits/basic_string.h ****   // Reference-counted COW string implentation
3110:/usr/include/c++/11/bits/basic_string.h **** 
3111:/usr/include/c++/11/bits/basic_string.h ****   /**
3112:/usr/include/c++/11/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
3113:/usr/include/c++/11/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
3114:/usr/include/c++/11/bits/basic_string.h ****    *
3115:/usr/include/c++/11/bits/basic_string.h ****    *  @ingroup strings
3116:/usr/include/c++/11/bits/basic_string.h ****    *  @ingroup sequences
3117:/usr/include/c++/11/bits/basic_string.h ****    *
3118:/usr/include/c++/11/bits/basic_string.h ****    *  @tparam _CharT  Type of character
3119:/usr/include/c++/11/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
3120:/usr/include/c++/11/bits/basic_string.h ****    *                   char_traits<_CharT>.
3121:/usr/include/c++/11/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
3122:/usr/include/c++/11/bits/basic_string.h ****    *
3123:/usr/include/c++/11/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
3124:/usr/include/c++/11/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
3125:/usr/include/c++/11/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
3126:/usr/include/c++/11/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
3127:/usr/include/c++/11/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
3128:/usr/include/c++/11/bits/basic_string.h ****    *
3129:/usr/include/c++/11/bits/basic_string.h ****    *  @doctodo
3130:/usr/include/c++/11/bits/basic_string.h ****    *
3131:/usr/include/c++/11/bits/basic_string.h ****    *
3132:/usr/include/c++/11/bits/basic_string.h ****    *  Documentation?  What's that?
3133:/usr/include/c++/11/bits/basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
3134:/usr/include/c++/11/bits/basic_string.h ****    *
3135:/usr/include/c++/11/bits/basic_string.h ****    *  A string looks like this:
3136:/usr/include/c++/11/bits/basic_string.h ****    *
3137:/usr/include/c++/11/bits/basic_string.h ****    *  @code
3138:/usr/include/c++/11/bits/basic_string.h ****    *                                        [_Rep]
3139:/usr/include/c++/11/bits/basic_string.h ****    *                                        _M_length
3140:/usr/include/c++/11/bits/basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
3141:/usr/include/c++/11/bits/basic_string.h ****    *   _M_dataplus                          _M_refcount
3142:/usr/include/c++/11/bits/basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
3143:/usr/include/c++/11/bits/basic_string.h ****    *  @endcode
3144:/usr/include/c++/11/bits/basic_string.h ****    *
3145:/usr/include/c++/11/bits/basic_string.h ****    *  Where the _M_p points to the first character in the string, and
3146:/usr/include/c++/11/bits/basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
3147:/usr/include/c++/11/bits/basic_string.h ****    *  pointer to the header.
3148:/usr/include/c++/11/bits/basic_string.h ****    *
3149:/usr/include/c++/11/bits/basic_string.h ****    *  This approach has the enormous advantage that a string object
3150:/usr/include/c++/11/bits/basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
3151:/usr/include/c++/11/bits/basic_string.h ****    *  within a single %pair of inline functions, which each compile to
3152:/usr/include/c++/11/bits/basic_string.h ****    *  a single @a add instruction: _Rep::_M_data(), and
3153:/usr/include/c++/11/bits/basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
3154:/usr/include/c++/11/bits/basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
3155:/usr/include/c++/11/bits/basic_string.h ****    *  object at the front.
3156:/usr/include/c++/11/bits/basic_string.h ****    *
3157:/usr/include/c++/11/bits/basic_string.h ****    *  The reason you want _M_data pointing to the character %array and
3158:/usr/include/c++/11/bits/basic_string.h ****    *  not the _Rep is so that the debugger can see the string
3159:/usr/include/c++/11/bits/basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
3160:/usr/include/c++/11/bits/basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
3161:/usr/include/c++/11/bits/basic_string.h ****    *  string length.)
3162:/usr/include/c++/11/bits/basic_string.h ****    *
3163:/usr/include/c++/11/bits/basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
3164:/usr/include/c++/11/bits/basic_string.h ****    *  static <em>empty string</em> _Rep object already @a constructed before
3165:/usr/include/c++/11/bits/basic_string.h ****    *  static constructors have run.  The reference-count encoding is
3166:/usr/include/c++/11/bits/basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
3167:/usr/include/c++/11/bits/basic_string.h ****    *  destroy the empty-string _Rep object.
3168:/usr/include/c++/11/bits/basic_string.h ****    *
3169:/usr/include/c++/11/bits/basic_string.h ****    *  All but the last paragraph is considered pretty conventional
3170:/usr/include/c++/11/bits/basic_string.h ****    *  for a C++ string implementation.
3171:/usr/include/c++/11/bits/basic_string.h ****   */
3172:/usr/include/c++/11/bits/basic_string.h ****   // 21.3  Template class basic_string
3173:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3174:/usr/include/c++/11/bits/basic_string.h ****     class basic_string
3175:/usr/include/c++/11/bits/basic_string.h ****     {
3176:/usr/include/c++/11/bits/basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
3177:/usr/include/c++/11/bits/basic_string.h **** 	rebind<_CharT>::other _CharT_alloc_type;
3178:/usr/include/c++/11/bits/basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_CharT_alloc_type> _CharT_alloc_traits;
3179:/usr/include/c++/11/bits/basic_string.h **** 
3180:/usr/include/c++/11/bits/basic_string.h ****       // Types:
3181:/usr/include/c++/11/bits/basic_string.h ****     public:
3182:/usr/include/c++/11/bits/basic_string.h ****       typedef _Traits					    traits_type;
3183:/usr/include/c++/11/bits/basic_string.h ****       typedef typename _Traits::char_type		    value_type;
3184:/usr/include/c++/11/bits/basic_string.h ****       typedef _Alloc					    allocator_type;
3185:/usr/include/c++/11/bits/basic_string.h ****       typedef typename _CharT_alloc_traits::size_type	    size_type;
3186:/usr/include/c++/11/bits/basic_string.h ****       typedef typename _CharT_alloc_traits::difference_type difference_type;
3187:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus < 201103L
3188:/usr/include/c++/11/bits/basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
3189:/usr/include/c++/11/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
3190:/usr/include/c++/11/bits/basic_string.h **** #else
3191:/usr/include/c++/11/bits/basic_string.h ****       typedef value_type&				    reference;
3192:/usr/include/c++/11/bits/basic_string.h ****       typedef const value_type&				    const_reference;
3193:/usr/include/c++/11/bits/basic_string.h **** #endif
3194:/usr/include/c++/11/bits/basic_string.h ****       typedef typename _CharT_alloc_traits::pointer	    pointer;
3195:/usr/include/c++/11/bits/basic_string.h ****       typedef typename _CharT_alloc_traits::const_pointer   const_pointer;
3196:/usr/include/c++/11/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
3197:/usr/include/c++/11/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
3198:/usr/include/c++/11/bits/basic_string.h ****                                                             const_iterator;
3199:/usr/include/c++/11/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
3200:/usr/include/c++/11/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
3201:/usr/include/c++/11/bits/basic_string.h **** 
3202:/usr/include/c++/11/bits/basic_string.h ****     protected:
3203:/usr/include/c++/11/bits/basic_string.h ****       // type used for positions in insert, erase etc.
3204:/usr/include/c++/11/bits/basic_string.h ****       typedef iterator __const_iterator;
3205:/usr/include/c++/11/bits/basic_string.h **** 
3206:/usr/include/c++/11/bits/basic_string.h ****     private:
3207:/usr/include/c++/11/bits/basic_string.h ****       // _Rep: string representation
3208:/usr/include/c++/11/bits/basic_string.h ****       //   Invariants:
3209:/usr/include/c++/11/bits/basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
3210:/usr/include/c++/11/bits/basic_string.h ****       //      must be kept null-terminated.
3211:/usr/include/c++/11/bits/basic_string.h ****       //   2. _M_capacity >= _M_length
3212:/usr/include/c++/11/bits/basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
3213:/usr/include/c++/11/bits/basic_string.h ****       //   3. _M_refcount has three states:
3214:/usr/include/c++/11/bits/basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
3215:/usr/include/c++/11/bits/basic_string.h ****       //       0: one reference, non-const.
3216:/usr/include/c++/11/bits/basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
3217:/usr/include/c++/11/bits/basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
3218:/usr/include/c++/11/bits/basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
3219:/usr/include/c++/11/bits/basic_string.h ****       //      empty string representation needs no constructor.
3220:/usr/include/c++/11/bits/basic_string.h **** 
3221:/usr/include/c++/11/bits/basic_string.h ****       struct _Rep_base
3222:/usr/include/c++/11/bits/basic_string.h ****       {
3223:/usr/include/c++/11/bits/basic_string.h **** 	size_type		_M_length;
3224:/usr/include/c++/11/bits/basic_string.h **** 	size_type		_M_capacity;
3225:/usr/include/c++/11/bits/basic_string.h **** 	_Atomic_word		_M_refcount;
3226:/usr/include/c++/11/bits/basic_string.h ****       };
3227:/usr/include/c++/11/bits/basic_string.h **** 
3228:/usr/include/c++/11/bits/basic_string.h ****       struct _Rep : _Rep_base
3229:/usr/include/c++/11/bits/basic_string.h ****       {
3230:/usr/include/c++/11/bits/basic_string.h **** 	// Types:
3231:/usr/include/c++/11/bits/basic_string.h **** 	typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
3232:/usr/include/c++/11/bits/basic_string.h **** 	  rebind<char>::other _Raw_bytes_alloc;
3233:/usr/include/c++/11/bits/basic_string.h **** 
3234:/usr/include/c++/11/bits/basic_string.h **** 	// (Public) Data members:
3235:/usr/include/c++/11/bits/basic_string.h **** 
3236:/usr/include/c++/11/bits/basic_string.h **** 	// The maximum number of individual char_type elements of an
3237:/usr/include/c++/11/bits/basic_string.h **** 	// individual string is determined by _S_max_size. This is the
3238:/usr/include/c++/11/bits/basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
3239:/usr/include/c++/11/bits/basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
3240:/usr/include/c++/11/bits/basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
3241:/usr/include/c++/11/bits/basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
3242:/usr/include/c++/11/bits/basic_string.h **** 	// look like this:
3243:/usr/include/c++/11/bits/basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
3244:/usr/include/c++/11/bits/basic_string.h **** 	// Solving for m:
3245:/usr/include/c++/11/bits/basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
3246:/usr/include/c++/11/bits/basic_string.h **** 	// In addition, this implementation quarters this amount.
3247:/usr/include/c++/11/bits/basic_string.h **** 	static const size_type	_S_max_size;
3248:/usr/include/c++/11/bits/basic_string.h **** 	static const _CharT	_S_terminal;
3249:/usr/include/c++/11/bits/basic_string.h **** 
3250:/usr/include/c++/11/bits/basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
3251:/usr/include/c++/11/bits/basic_string.h ****         // (carefully) in an empty string with one reference.
3252:/usr/include/c++/11/bits/basic_string.h ****         static size_type _S_empty_rep_storage[];
3253:/usr/include/c++/11/bits/basic_string.h **** 
3254:/usr/include/c++/11/bits/basic_string.h ****         static _Rep&
3255:/usr/include/c++/11/bits/basic_string.h ****         _S_empty_rep() _GLIBCXX_NOEXCEPT
3256:/usr/include/c++/11/bits/basic_string.h ****         { 
3257:/usr/include/c++/11/bits/basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
3258:/usr/include/c++/11/bits/basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
3259:/usr/include/c++/11/bits/basic_string.h **** 	  // be reasonably safe in this case.
3260:/usr/include/c++/11/bits/basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
3261:/usr/include/c++/11/bits/basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
3262:/usr/include/c++/11/bits/basic_string.h **** 	}
3263:/usr/include/c++/11/bits/basic_string.h **** 
3264:/usr/include/c++/11/bits/basic_string.h ****         bool
3265:/usr/include/c++/11/bits/basic_string.h **** 	_M_is_leaked() const _GLIBCXX_NOEXCEPT
3266:/usr/include/c++/11/bits/basic_string.h ****         {
3267:/usr/include/c++/11/bits/basic_string.h **** #if defined(__GTHREADS)
3268:/usr/include/c++/11/bits/basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3269:/usr/include/c++/11/bits/basic_string.h ****           // so we need to use an atomic load. However, _M_is_leaked
3270:/usr/include/c++/11/bits/basic_string.h ****           // predicate does not change concurrently (i.e. the string is either
3271:/usr/include/c++/11/bits/basic_string.h ****           // leaked or not), so a relaxed load is enough.
3272:/usr/include/c++/11/bits/basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_RELAXED) < 0;
3273:/usr/include/c++/11/bits/basic_string.h **** #else
3274:/usr/include/c++/11/bits/basic_string.h ****           return this->_M_refcount < 0;
3275:/usr/include/c++/11/bits/basic_string.h **** #endif
3276:/usr/include/c++/11/bits/basic_string.h ****         }
3277:/usr/include/c++/11/bits/basic_string.h **** 
3278:/usr/include/c++/11/bits/basic_string.h ****         bool
3279:/usr/include/c++/11/bits/basic_string.h **** 	_M_is_shared() const _GLIBCXX_NOEXCEPT
3280:/usr/include/c++/11/bits/basic_string.h **** 	{
3281:/usr/include/c++/11/bits/basic_string.h **** #if defined(__GTHREADS)
3282:/usr/include/c++/11/bits/basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3283:/usr/include/c++/11/bits/basic_string.h ****           // so we need to use an atomic load. Another thread can drop last
3284:/usr/include/c++/11/bits/basic_string.h ****           // but one reference concurrently with this check, so we need this
3285:/usr/include/c++/11/bits/basic_string.h ****           // load to be acquire to synchronize with release fetch_and_add in
3286:/usr/include/c++/11/bits/basic_string.h ****           // _M_dispose.
3287:/usr/include/c++/11/bits/basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_ACQUIRE) > 0;
3288:/usr/include/c++/11/bits/basic_string.h **** #else
3289:/usr/include/c++/11/bits/basic_string.h ****           return this->_M_refcount > 0;
3290:/usr/include/c++/11/bits/basic_string.h **** #endif
3291:/usr/include/c++/11/bits/basic_string.h ****         }
3292:/usr/include/c++/11/bits/basic_string.h **** 
3293:/usr/include/c++/11/bits/basic_string.h ****         void
3294:/usr/include/c++/11/bits/basic_string.h **** 	_M_set_leaked() _GLIBCXX_NOEXCEPT
3295:/usr/include/c++/11/bits/basic_string.h ****         { this->_M_refcount = -1; }
3296:/usr/include/c++/11/bits/basic_string.h **** 
3297:/usr/include/c++/11/bits/basic_string.h ****         void
3298:/usr/include/c++/11/bits/basic_string.h **** 	_M_set_sharable() _GLIBCXX_NOEXCEPT
3299:/usr/include/c++/11/bits/basic_string.h ****         { this->_M_refcount = 0; }
3300:/usr/include/c++/11/bits/basic_string.h **** 
3301:/usr/include/c++/11/bits/basic_string.h **** 	void
3302:/usr/include/c++/11/bits/basic_string.h **** 	_M_set_length_and_sharable(size_type __n) _GLIBCXX_NOEXCEPT
3303:/usr/include/c++/11/bits/basic_string.h **** 	{
3304:/usr/include/c++/11/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3305:/usr/include/c++/11/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3306:/usr/include/c++/11/bits/basic_string.h **** #endif
3307:/usr/include/c++/11/bits/basic_string.h **** 	    {
3308:/usr/include/c++/11/bits/basic_string.h **** 	      this->_M_set_sharable();  // One reference.
3309:/usr/include/c++/11/bits/basic_string.h **** 	      this->_M_length = __n;
3310:/usr/include/c++/11/bits/basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
3311:/usr/include/c++/11/bits/basic_string.h **** 	      // grrr. (per 21.3.4)
3312:/usr/include/c++/11/bits/basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
3313:/usr/include/c++/11/bits/basic_string.h **** 	    }
3314:/usr/include/c++/11/bits/basic_string.h **** 	}
3315:/usr/include/c++/11/bits/basic_string.h **** 
3316:/usr/include/c++/11/bits/basic_string.h **** 	_CharT*
3317:/usr/include/c++/11/bits/basic_string.h **** 	_M_refdata() throw()
3318:/usr/include/c++/11/bits/basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
3319:/usr/include/c++/11/bits/basic_string.h **** 
3320:/usr/include/c++/11/bits/basic_string.h **** 	_CharT*
3321:/usr/include/c++/11/bits/basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
3322:/usr/include/c++/11/bits/basic_string.h **** 	{
3323:/usr/include/c++/11/bits/basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
3324:/usr/include/c++/11/bits/basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
3325:/usr/include/c++/11/bits/basic_string.h **** 	}
3326:/usr/include/c++/11/bits/basic_string.h **** 
3327:/usr/include/c++/11/bits/basic_string.h **** 	// Create & Destroy
3328:/usr/include/c++/11/bits/basic_string.h **** 	static _Rep*
3329:/usr/include/c++/11/bits/basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
3330:/usr/include/c++/11/bits/basic_string.h **** 
3331:/usr/include/c++/11/bits/basic_string.h **** 	void
3332:/usr/include/c++/11/bits/basic_string.h **** 	_M_dispose(const _Alloc& __a) _GLIBCXX_NOEXCEPT
3333:/usr/include/c++/11/bits/basic_string.h **** 	{
3334:/usr/include/c++/11/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3335:/usr/include/c++/11/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3336:/usr/include/c++/11/bits/basic_string.h **** #endif
3337:/usr/include/c++/11/bits/basic_string.h **** 	    {
3338:/usr/include/c++/11/bits/basic_string.h **** 	      // Be race-detector-friendly.  For more info see bits/c++config.
3339:/usr/include/c++/11/bits/basic_string.h **** 	      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
3340:/usr/include/c++/11/bits/basic_string.h ****               // Decrement of _M_refcount is acq_rel, because:
3341:/usr/include/c++/11/bits/basic_string.h ****               // - all but last decrements need to release to synchronize with
3342:/usr/include/c++/11/bits/basic_string.h ****               //   the last decrement that will delete the object.
3343:/usr/include/c++/11/bits/basic_string.h ****               // - the last decrement needs to acquire to synchronize with
3344:/usr/include/c++/11/bits/basic_string.h ****               //   all the previous decrements.
3345:/usr/include/c++/11/bits/basic_string.h ****               // - last but one decrement needs to release to synchronize with
3346:/usr/include/c++/11/bits/basic_string.h ****               //   the acquire load in _M_is_shared that will conclude that
3347:/usr/include/c++/11/bits/basic_string.h ****               //   the object is not shared anymore.
3348:/usr/include/c++/11/bits/basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
3349:/usr/include/c++/11/bits/basic_string.h **** 							 -1) <= 0)
3350:/usr/include/c++/11/bits/basic_string.h **** 		{
3351:/usr/include/c++/11/bits/basic_string.h **** 		  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
3352:/usr/include/c++/11/bits/basic_string.h **** 		  _M_destroy(__a);
3353:/usr/include/c++/11/bits/basic_string.h **** 		}
3354:/usr/include/c++/11/bits/basic_string.h **** 	    }
3355:/usr/include/c++/11/bits/basic_string.h **** 	}  // XXX MT
3356:/usr/include/c++/11/bits/basic_string.h **** 
3357:/usr/include/c++/11/bits/basic_string.h **** 	void
3358:/usr/include/c++/11/bits/basic_string.h **** 	_M_destroy(const _Alloc&) throw();
3359:/usr/include/c++/11/bits/basic_string.h **** 
3360:/usr/include/c++/11/bits/basic_string.h **** 	_CharT*
3361:/usr/include/c++/11/bits/basic_string.h **** 	_M_refcopy() throw()
3362:/usr/include/c++/11/bits/basic_string.h **** 	{
3363:/usr/include/c++/11/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3364:/usr/include/c++/11/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3365:/usr/include/c++/11/bits/basic_string.h **** #endif
3366:/usr/include/c++/11/bits/basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
3367:/usr/include/c++/11/bits/basic_string.h **** 	  return _M_refdata();
3368:/usr/include/c++/11/bits/basic_string.h **** 	}  // XXX MT
3369:/usr/include/c++/11/bits/basic_string.h **** 
3370:/usr/include/c++/11/bits/basic_string.h **** 	_CharT*
3371:/usr/include/c++/11/bits/basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
3372:/usr/include/c++/11/bits/basic_string.h ****       };
3373:/usr/include/c++/11/bits/basic_string.h **** 
3374:/usr/include/c++/11/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
3375:/usr/include/c++/11/bits/basic_string.h ****       struct _Alloc_hider : _Alloc
3376:/usr/include/c++/11/bits/basic_string.h ****       {
3377:/usr/include/c++/11/bits/basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a) _GLIBCXX_NOEXCEPT
3378:/usr/include/c++/11/bits/basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
3379:/usr/include/c++/11/bits/basic_string.h **** 
3380:/usr/include/c++/11/bits/basic_string.h **** 	_CharT* _M_p; // The actual data.
3381:/usr/include/c++/11/bits/basic_string.h ****       };
3382:/usr/include/c++/11/bits/basic_string.h **** 
3383:/usr/include/c++/11/bits/basic_string.h ****     public:
3384:/usr/include/c++/11/bits/basic_string.h ****       // Data Members (public):
3385:/usr/include/c++/11/bits/basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
3386:/usr/include/c++/11/bits/basic_string.h ****       // size that the allocator can hold.
3387:/usr/include/c++/11/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
3388:/usr/include/c++/11/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
3389:/usr/include/c++/11/bits/basic_string.h **** 
3390:/usr/include/c++/11/bits/basic_string.h ****     private:
3391:/usr/include/c++/11/bits/basic_string.h ****       // Data Members (private):
3392:/usr/include/c++/11/bits/basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
3393:/usr/include/c++/11/bits/basic_string.h **** 
3394:/usr/include/c++/11/bits/basic_string.h ****       _CharT*
3395:/usr/include/c++/11/bits/basic_string.h ****       _M_data() const _GLIBCXX_NOEXCEPT
3396:/usr/include/c++/11/bits/basic_string.h ****       { return  _M_dataplus._M_p; }
3397:/usr/include/c++/11/bits/basic_string.h **** 
3398:/usr/include/c++/11/bits/basic_string.h ****       _CharT*
3399:/usr/include/c++/11/bits/basic_string.h ****       _M_data(_CharT* __p) _GLIBCXX_NOEXCEPT
3400:/usr/include/c++/11/bits/basic_string.h ****       { return (_M_dataplus._M_p = __p); }
3401:/usr/include/c++/11/bits/basic_string.h **** 
3402:/usr/include/c++/11/bits/basic_string.h ****       _Rep*
3403:/usr/include/c++/11/bits/basic_string.h ****       _M_rep() const _GLIBCXX_NOEXCEPT
3404:/usr/include/c++/11/bits/basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
3405:/usr/include/c++/11/bits/basic_string.h **** 
3406:/usr/include/c++/11/bits/basic_string.h ****       // For the internal use we have functions similar to `begin'/`end'
3407:/usr/include/c++/11/bits/basic_string.h ****       // but they do not call _M_leak.
3408:/usr/include/c++/11/bits/basic_string.h ****       iterator
3409:/usr/include/c++/11/bits/basic_string.h ****       _M_ibegin() const _GLIBCXX_NOEXCEPT
3410:/usr/include/c++/11/bits/basic_string.h ****       { return iterator(_M_data()); }
3411:/usr/include/c++/11/bits/basic_string.h **** 
3412:/usr/include/c++/11/bits/basic_string.h ****       iterator
3413:/usr/include/c++/11/bits/basic_string.h ****       _M_iend() const _GLIBCXX_NOEXCEPT
3414:/usr/include/c++/11/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
3415:/usr/include/c++/11/bits/basic_string.h **** 
3416:/usr/include/c++/11/bits/basic_string.h ****       void
3417:/usr/include/c++/11/bits/basic_string.h ****       _M_leak()    // for use in begin() & non-const op[]
3418:/usr/include/c++/11/bits/basic_string.h ****       {
3419:/usr/include/c++/11/bits/basic_string.h **** 	if (!_M_rep()->_M_is_leaked())
3420:/usr/include/c++/11/bits/basic_string.h **** 	  _M_leak_hard();
3421:/usr/include/c++/11/bits/basic_string.h ****       }
3422:/usr/include/c++/11/bits/basic_string.h **** 
3423:/usr/include/c++/11/bits/basic_string.h ****       size_type
3424:/usr/include/c++/11/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
3425:/usr/include/c++/11/bits/basic_string.h ****       {
3426:/usr/include/c++/11/bits/basic_string.h **** 	if (__pos > this->size())
3427:/usr/include/c++/11/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
3428:/usr/include/c++/11/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
3429:/usr/include/c++/11/bits/basic_string.h **** 				   __s, __pos, this->size());
3430:/usr/include/c++/11/bits/basic_string.h **** 	return __pos;
3431:/usr/include/c++/11/bits/basic_string.h ****       }
3432:/usr/include/c++/11/bits/basic_string.h **** 
3433:/usr/include/c++/11/bits/basic_string.h ****       void
3434:/usr/include/c++/11/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
3435:/usr/include/c++/11/bits/basic_string.h ****       {
3436:/usr/include/c++/11/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
3437:/usr/include/c++/11/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
3438:/usr/include/c++/11/bits/basic_string.h ****       }
3439:/usr/include/c++/11/bits/basic_string.h **** 
3440:/usr/include/c++/11/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
3441:/usr/include/c++/11/bits/basic_string.h ****       size_type
3442:/usr/include/c++/11/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
3443:/usr/include/c++/11/bits/basic_string.h ****       {
3444:/usr/include/c++/11/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
3445:/usr/include/c++/11/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
3446:/usr/include/c++/11/bits/basic_string.h ****       }
3447:/usr/include/c++/11/bits/basic_string.h **** 
3448:/usr/include/c++/11/bits/basic_string.h ****       // True if _Rep and source do not overlap.
3449:/usr/include/c++/11/bits/basic_string.h ****       bool
3450:/usr/include/c++/11/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
3451:/usr/include/c++/11/bits/basic_string.h ****       {
3452:/usr/include/c++/11/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
3453:/usr/include/c++/11/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
3454:/usr/include/c++/11/bits/basic_string.h ****       }
3455:/usr/include/c++/11/bits/basic_string.h **** 
3456:/usr/include/c++/11/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
3457:/usr/include/c++/11/bits/basic_string.h ****       // traits_type::copy/move/assign.
3458:/usr/include/c++/11/bits/basic_string.h ****       static void
3459:/usr/include/c++/11/bits/basic_string.h ****       _M_copy(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3460:/usr/include/c++/11/bits/basic_string.h ****       {
3461:/usr/include/c++/11/bits/basic_string.h **** 	if (__n == 1)
3462:/usr/include/c++/11/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
3463:/usr/include/c++/11/bits/basic_string.h **** 	else
3464:/usr/include/c++/11/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
3465:/usr/include/c++/11/bits/basic_string.h ****       }
3466:/usr/include/c++/11/bits/basic_string.h **** 
3467:/usr/include/c++/11/bits/basic_string.h ****       static void
3468:/usr/include/c++/11/bits/basic_string.h ****       _M_move(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3469:/usr/include/c++/11/bits/basic_string.h ****       {
3470:/usr/include/c++/11/bits/basic_string.h **** 	if (__n == 1)
3471:/usr/include/c++/11/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
3472:/usr/include/c++/11/bits/basic_string.h **** 	else
3473:/usr/include/c++/11/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);	  
3474:/usr/include/c++/11/bits/basic_string.h ****       }
3475:/usr/include/c++/11/bits/basic_string.h **** 
3476:/usr/include/c++/11/bits/basic_string.h ****       static void
3477:/usr/include/c++/11/bits/basic_string.h ****       _M_assign(_CharT* __d, size_type __n, _CharT __c) _GLIBCXX_NOEXCEPT
3478:/usr/include/c++/11/bits/basic_string.h ****       {
3479:/usr/include/c++/11/bits/basic_string.h **** 	if (__n == 1)
3480:/usr/include/c++/11/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
3481:/usr/include/c++/11/bits/basic_string.h **** 	else
3482:/usr/include/c++/11/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);	  
3483:/usr/include/c++/11/bits/basic_string.h ****       }
3484:/usr/include/c++/11/bits/basic_string.h **** 
3485:/usr/include/c++/11/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
3486:/usr/include/c++/11/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
3487:/usr/include/c++/11/bits/basic_string.h ****       template<class _Iterator>
3488:/usr/include/c++/11/bits/basic_string.h ****         static void
3489:/usr/include/c++/11/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
3490:/usr/include/c++/11/bits/basic_string.h ****         {
3491:/usr/include/c++/11/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
3492:/usr/include/c++/11/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
3493:/usr/include/c++/11/bits/basic_string.h **** 	}
3494:/usr/include/c++/11/bits/basic_string.h **** 
3495:/usr/include/c++/11/bits/basic_string.h ****       static void
3496:/usr/include/c++/11/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
3497:/usr/include/c++/11/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3498:/usr/include/c++/11/bits/basic_string.h **** 
3499:/usr/include/c++/11/bits/basic_string.h ****       static void
3500:/usr/include/c++/11/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
3501:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3502:/usr/include/c++/11/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3503:/usr/include/c++/11/bits/basic_string.h **** 
3504:/usr/include/c++/11/bits/basic_string.h ****       static void
3505:/usr/include/c++/11/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
3506:/usr/include/c++/11/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3507:/usr/include/c++/11/bits/basic_string.h **** 
3508:/usr/include/c++/11/bits/basic_string.h ****       static void
3509:/usr/include/c++/11/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
3510:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3511:/usr/include/c++/11/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3512:/usr/include/c++/11/bits/basic_string.h **** 
3513:/usr/include/c++/11/bits/basic_string.h ****       static int
3514:/usr/include/c++/11/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
3515:/usr/include/c++/11/bits/basic_string.h ****       {
3516:/usr/include/c++/11/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
3517:/usr/include/c++/11/bits/basic_string.h **** 
3518:/usr/include/c++/11/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
3519:/usr/include/c++/11/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
3520:/usr/include/c++/11/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
3521:/usr/include/c++/11/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
3522:/usr/include/c++/11/bits/basic_string.h **** 	else
3523:/usr/include/c++/11/bits/basic_string.h **** 	  return int(__d);
3524:/usr/include/c++/11/bits/basic_string.h ****       }
3525:/usr/include/c++/11/bits/basic_string.h **** 
3526:/usr/include/c++/11/bits/basic_string.h ****       void
3527:/usr/include/c++/11/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, size_type __len2);
3528:/usr/include/c++/11/bits/basic_string.h **** 
3529:/usr/include/c++/11/bits/basic_string.h ****       void
3530:/usr/include/c++/11/bits/basic_string.h ****       _M_leak_hard();
3531:/usr/include/c++/11/bits/basic_string.h **** 
3532:/usr/include/c++/11/bits/basic_string.h ****       static _Rep&
3533:/usr/include/c++/11/bits/basic_string.h ****       _S_empty_rep() _GLIBCXX_NOEXCEPT
3534:/usr/include/c++/11/bits/basic_string.h ****       { return _Rep::_S_empty_rep(); }
3535:/usr/include/c++/11/bits/basic_string.h **** 
3536:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
3537:/usr/include/c++/11/bits/basic_string.h ****       // A helper type for avoiding boiler-plate.
3538:/usr/include/c++/11/bits/basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
3539:/usr/include/c++/11/bits/basic_string.h **** 
3540:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp, typename _Res>
3541:/usr/include/c++/11/bits/basic_string.h **** 	using _If_sv = enable_if_t<
3542:/usr/include/c++/11/bits/basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
3543:/usr/include/c++/11/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
3544:/usr/include/c++/11/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
3545:/usr/include/c++/11/bits/basic_string.h **** 	  _Res>;
3546:/usr/include/c++/11/bits/basic_string.h **** 
3547:/usr/include/c++/11/bits/basic_string.h ****       // Allows an implicit conversion to __sv_type.
3548:/usr/include/c++/11/bits/basic_string.h ****       static __sv_type
3549:/usr/include/c++/11/bits/basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
3550:/usr/include/c++/11/bits/basic_string.h ****       { return __svt; }
3551:/usr/include/c++/11/bits/basic_string.h **** 
3552:/usr/include/c++/11/bits/basic_string.h ****       // Wraps a string_view by explicit conversion and thus
3553:/usr/include/c++/11/bits/basic_string.h ****       // allows to add an internal constructor that does not
3554:/usr/include/c++/11/bits/basic_string.h ****       // participate in overload resolution when a string_view
3555:/usr/include/c++/11/bits/basic_string.h ****       // is provided.
3556:/usr/include/c++/11/bits/basic_string.h ****       struct __sv_wrapper
3557:/usr/include/c++/11/bits/basic_string.h ****       {
3558:/usr/include/c++/11/bits/basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
3559:/usr/include/c++/11/bits/basic_string.h **** 	__sv_type _M_sv;
3560:/usr/include/c++/11/bits/basic_string.h ****       };
3561:/usr/include/c++/11/bits/basic_string.h **** 
3562:/usr/include/c++/11/bits/basic_string.h ****       /**
3563:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
3564:/usr/include/c++/11/bits/basic_string.h ****        *          wrapper.
3565:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __svw  string view wrapper.
3566:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3567:/usr/include/c++/11/bits/basic_string.h ****        */
3568:/usr/include/c++/11/bits/basic_string.h ****       explicit
3569:/usr/include/c++/11/bits/basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
3570:/usr/include/c++/11/bits/basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
3571:/usr/include/c++/11/bits/basic_string.h **** #endif
3572:/usr/include/c++/11/bits/basic_string.h **** 
3573:/usr/include/c++/11/bits/basic_string.h ****     public:
3574:/usr/include/c++/11/bits/basic_string.h ****       // Construct/copy/destroy:
3575:/usr/include/c++/11/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
3576:/usr/include/c++/11/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
3577:/usr/include/c++/11/bits/basic_string.h **** 
3578:/usr/include/c++/11/bits/basic_string.h ****       /**
3579:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
3580:/usr/include/c++/11/bits/basic_string.h ****        */
3581:/usr/include/c++/11/bits/basic_string.h ****       basic_string()
3582:/usr/include/c++/11/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3583:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3584:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_S_empty_rep()._M_refdata(), _Alloc())
3585:/usr/include/c++/11/bits/basic_string.h **** #else
3586:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_S_construct(size_type(), _CharT(), _Alloc()), _Alloc())
3587:/usr/include/c++/11/bits/basic_string.h **** #endif
3588:/usr/include/c++/11/bits/basic_string.h ****       { }
3589:/usr/include/c++/11/bits/basic_string.h **** 
3590:/usr/include/c++/11/bits/basic_string.h ****       /**
3591:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
3592:/usr/include/c++/11/bits/basic_string.h ****        */
3593:/usr/include/c++/11/bits/basic_string.h ****       explicit
3594:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const _Alloc& __a)
3595:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_S_construct(size_type(), _CharT(), __a), __a)
3596:/usr/include/c++/11/bits/basic_string.h ****       { }
3597:/usr/include/c++/11/bits/basic_string.h **** 
3598:/usr/include/c++/11/bits/basic_string.h ****       // NB: per LWG issue 42, semantics different from IS:
3599:/usr/include/c++/11/bits/basic_string.h ****       /**
3600:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a str.
3601:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string.
3602:/usr/include/c++/11/bits/basic_string.h ****        */
3603:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const basic_string& __str)
3604:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(__str._M_rep()->_M_grab(_Alloc(__str.get_allocator()),
3605:/usr/include/c++/11/bits/basic_string.h **** 					    __str.get_allocator()),
3606:/usr/include/c++/11/bits/basic_string.h **** 		    __str.get_allocator())
3607:/usr/include/c++/11/bits/basic_string.h ****       { }
3608:/usr/include/c++/11/bits/basic_string.h **** 
3609:/usr/include/c++/11/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
3610:/usr/include/c++/11/bits/basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
3611:/usr/include/c++/11/bits/basic_string.h ****       /**
3612:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3613:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string.
3614:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3615:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3616:/usr/include/c++/11/bits/basic_string.h ****        */
3617:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3618:/usr/include/c++/11/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc());
3619:/usr/include/c++/11/bits/basic_string.h **** 
3620:/usr/include/c++/11/bits/basic_string.h ****       /**
3621:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3622:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string.
3623:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3624:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3625:/usr/include/c++/11/bits/basic_string.h ****        */
3626:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3627:/usr/include/c++/11/bits/basic_string.h **** 		   size_type __n);
3628:/usr/include/c++/11/bits/basic_string.h ****       /**
3629:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3630:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string.
3631:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3632:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3633:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3634:/usr/include/c++/11/bits/basic_string.h ****        */
3635:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3636:/usr/include/c++/11/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a);
3637:/usr/include/c++/11/bits/basic_string.h **** 
3638:/usr/include/c++/11/bits/basic_string.h ****       /**
3639:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
3640:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __s  Source character %array.
3641:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3642:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3643:/usr/include/c++/11/bits/basic_string.h ****        *
3644:/usr/include/c++/11/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
3645:/usr/include/c++/11/bits/basic_string.h ****        *  has no special meaning.
3646:/usr/include/c++/11/bits/basic_string.h ****        */
3647:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
3648:/usr/include/c++/11/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
3649:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_S_construct(__s, __s + __n, __a), __a)
3650:/usr/include/c++/11/bits/basic_string.h ****       { }
3651:/usr/include/c++/11/bits/basic_string.h **** 
3652:/usr/include/c++/11/bits/basic_string.h ****       /**
3653:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
3654:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __s  Source C string.
3655:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3656:/usr/include/c++/11/bits/basic_string.h ****        */
3657:/usr/include/c++/11/bits/basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
3658:/usr/include/c++/11/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
3659:/usr/include/c++/11/bits/basic_string.h ****       // 3076. basic_string CTAD ambiguity
3660:/usr/include/c++/11/bits/basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
3661:/usr/include/c++/11/bits/basic_string.h **** #endif
3662:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
3663:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_S_construct(__s, __s ? __s + traits_type::length(__s) :
3664:/usr/include/c++/11/bits/basic_string.h **** 				 __s + npos, __a), __a)
3665:/usr/include/c++/11/bits/basic_string.h ****       { }
3666:/usr/include/c++/11/bits/basic_string.h **** 
3667:/usr/include/c++/11/bits/basic_string.h ****       /**
3668:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
3669:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __n  Number of characters.
3670:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __c  Character to use.
3671:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3672:/usr/include/c++/11/bits/basic_string.h ****        */
3673:/usr/include/c++/11/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
3674:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_S_construct(__n, __c, __a), __a)
3675:/usr/include/c++/11/bits/basic_string.h ****       { }
3676:/usr/include/c++/11/bits/basic_string.h **** 
3677:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
3678:/usr/include/c++/11/bits/basic_string.h ****       /**
3679:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Move construct string.
3680:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string.
3681:/usr/include/c++/11/bits/basic_string.h ****        *
3682:/usr/include/c++/11/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
3683:/usr/include/c++/11/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
3684:/usr/include/c++/11/bits/basic_string.h ****        */
3685:/usr/include/c++/11/bits/basic_string.h ****       basic_string(basic_string&& __str)
3686:/usr/include/c++/11/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3687:/usr/include/c++/11/bits/basic_string.h ****       noexcept // FIXME C++11: should always be noexcept.
3688:/usr/include/c++/11/bits/basic_string.h **** #endif
3689:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(std::move(__str._M_dataplus))
3690:/usr/include/c++/11/bits/basic_string.h ****       {
3691:/usr/include/c++/11/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3692:/usr/include/c++/11/bits/basic_string.h **** 	__str._M_data(_S_empty_rep()._M_refdata());
3693:/usr/include/c++/11/bits/basic_string.h **** #else
3694:/usr/include/c++/11/bits/basic_string.h **** 	__str._M_data(_S_construct(size_type(), _CharT(), get_allocator()));
3695:/usr/include/c++/11/bits/basic_string.h **** #endif
3696:/usr/include/c++/11/bits/basic_string.h ****       }
3697:/usr/include/c++/11/bits/basic_string.h **** 
3698:/usr/include/c++/11/bits/basic_string.h ****       /**
3699:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
3700:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
3701:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3702:/usr/include/c++/11/bits/basic_string.h ****        */
3703:/usr/include/c++/11/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
3704:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(_S_construct(__l.begin(), __l.end(), __a), __a)
3705:/usr/include/c++/11/bits/basic_string.h ****       { }
3706:/usr/include/c++/11/bits/basic_string.h **** 
3707:/usr/include/c++/11/bits/basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
3708:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(__str._M_rep()->_M_grab(__a, __str.get_allocator()), __a)
3709:/usr/include/c++/11/bits/basic_string.h ****       { }
3710:/usr/include/c++/11/bits/basic_string.h **** 
3711:/usr/include/c++/11/bits/basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
3712:/usr/include/c++/11/bits/basic_string.h ****       : _M_dataplus(__str._M_data(), __a)
3713:/usr/include/c++/11/bits/basic_string.h ****       {
3714:/usr/include/c++/11/bits/basic_string.h **** 	if (__a == __str.get_allocator())
3715:/usr/include/c++/11/bits/basic_string.h **** 	  {
3716:/usr/include/c++/11/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3717:/usr/include/c++/11/bits/basic_string.h **** 	    __str._M_data(_S_empty_rep()._M_refdata());
3718:/usr/include/c++/11/bits/basic_string.h **** #else
3719:/usr/include/c++/11/bits/basic_string.h **** 	    __str._M_data(_S_construct(size_type(), _CharT(), __a));
3720:/usr/include/c++/11/bits/basic_string.h **** #endif
3721:/usr/include/c++/11/bits/basic_string.h **** 	  }
3722:/usr/include/c++/11/bits/basic_string.h **** 	else
3723:/usr/include/c++/11/bits/basic_string.h **** 	  _M_dataplus._M_p = _S_construct(__str.begin(), __str.end(), __a);
3724:/usr/include/c++/11/bits/basic_string.h ****       }
3725:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
3726:/usr/include/c++/11/bits/basic_string.h **** 
3727:/usr/include/c++/11/bits/basic_string.h ****       /**
3728:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
3729:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __beg  Start of range.
3730:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __end  End of range.
3731:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3732:/usr/include/c++/11/bits/basic_string.h ****        */
3733:/usr/include/c++/11/bits/basic_string.h ****       template<class _InputIterator>
3734:/usr/include/c++/11/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
3735:/usr/include/c++/11/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
3736:/usr/include/c++/11/bits/basic_string.h **** 	: _M_dataplus(_S_construct(__beg, __end, __a), __a)
3737:/usr/include/c++/11/bits/basic_string.h **** 	{ }
3738:/usr/include/c++/11/bits/basic_string.h **** 
3739:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
3740:/usr/include/c++/11/bits/basic_string.h ****       /**
3741:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
3742:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __t   Source object convertible to string view.
3743:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
3744:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
3745:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a   Allocator to use.
3746:/usr/include/c++/11/bits/basic_string.h ****        */
3747:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp,
3748:/usr/include/c++/11/bits/basic_string.h **** 	       typename = enable_if_t<is_convertible_v<const _Tp&, __sv_type>>>
3749:/usr/include/c++/11/bits/basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
3750:/usr/include/c++/11/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
3751:/usr/include/c++/11/bits/basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
3752:/usr/include/c++/11/bits/basic_string.h **** 
3753:/usr/include/c++/11/bits/basic_string.h ****       /**
3754:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Construct string from a string_view.
3755:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __t  Source object convertible to string view.
3756:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3757:/usr/include/c++/11/bits/basic_string.h ****        */
3758:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3759:/usr/include/c++/11/bits/basic_string.h **** 	explicit
3760:/usr/include/c++/11/bits/basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
3761:/usr/include/c++/11/bits/basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
3762:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
3763:/usr/include/c++/11/bits/basic_string.h **** 
3764:/usr/include/c++/11/bits/basic_string.h ****       /**
3765:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Destroy the string instance.
3766:/usr/include/c++/11/bits/basic_string.h ****        */
3767:/usr/include/c++/11/bits/basic_string.h ****       ~basic_string() _GLIBCXX_NOEXCEPT
3768:/usr/include/c++/11/bits/basic_string.h ****       { _M_rep()->_M_dispose(this->get_allocator()); }
3769:/usr/include/c++/11/bits/basic_string.h **** 
3770:/usr/include/c++/11/bits/basic_string.h ****       /**
3771:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
3772:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string.
3773:/usr/include/c++/11/bits/basic_string.h ****        */
3774:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
3775:/usr/include/c++/11/bits/basic_string.h ****       operator=(const basic_string& __str)
3776:/usr/include/c++/11/bits/basic_string.h ****       { return this->assign(__str); }
3777:/usr/include/c++/11/bits/basic_string.h **** 
3778:/usr/include/c++/11/bits/basic_string.h ****       /**
3779:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
3780:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
3781:/usr/include/c++/11/bits/basic_string.h ****        */
3782:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
3783:/usr/include/c++/11/bits/basic_string.h ****       operator=(const _CharT* __s) 
3784:/usr/include/c++/11/bits/basic_string.h ****       { return this->assign(__s); }
3785:/usr/include/c++/11/bits/basic_string.h **** 
3786:/usr/include/c++/11/bits/basic_string.h ****       /**
3787:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
3788:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __c  Source character.
3789:/usr/include/c++/11/bits/basic_string.h ****        *
3790:/usr/include/c++/11/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
3791:/usr/include/c++/11/bits/basic_string.h ****        *  (*this)[0] == @a c.
3792:/usr/include/c++/11/bits/basic_string.h ****        */
3793:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
3794:/usr/include/c++/11/bits/basic_string.h ****       operator=(_CharT __c) 
3795:/usr/include/c++/11/bits/basic_string.h ****       { 
3796:/usr/include/c++/11/bits/basic_string.h **** 	this->assign(1, __c); 
3797:/usr/include/c++/11/bits/basic_string.h **** 	return *this;
3798:/usr/include/c++/11/bits/basic_string.h ****       }
3799:/usr/include/c++/11/bits/basic_string.h **** 
3800:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
3801:/usr/include/c++/11/bits/basic_string.h ****       /**
3802:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
3803:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string.
3804:/usr/include/c++/11/bits/basic_string.h ****        *
3805:/usr/include/c++/11/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
3806:/usr/include/c++/11/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
3807:/usr/include/c++/11/bits/basic_string.h ****        */
3808:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
3809:/usr/include/c++/11/bits/basic_string.h ****       operator=(basic_string&& __str)
3810:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value)
3811:/usr/include/c++/11/bits/basic_string.h ****       {
3812:/usr/include/c++/11/bits/basic_string.h **** 	// NB: DR 1204.
3813:/usr/include/c++/11/bits/basic_string.h **** 	this->swap(__str);
3814:/usr/include/c++/11/bits/basic_string.h **** 	return *this;
3815:/usr/include/c++/11/bits/basic_string.h ****       }
3816:/usr/include/c++/11/bits/basic_string.h **** 
3817:/usr/include/c++/11/bits/basic_string.h ****       /**
3818:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
3819:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
3820:/usr/include/c++/11/bits/basic_string.h ****        */
3821:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
3822:/usr/include/c++/11/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
3823:/usr/include/c++/11/bits/basic_string.h ****       {
3824:/usr/include/c++/11/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
3825:/usr/include/c++/11/bits/basic_string.h **** 	return *this;
3826:/usr/include/c++/11/bits/basic_string.h ****       }
3827:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
3828:/usr/include/c++/11/bits/basic_string.h **** 
3829:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
3830:/usr/include/c++/11/bits/basic_string.h ****       /**
3831:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
3832:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __svt An object convertible to  string_view.
3833:/usr/include/c++/11/bits/basic_string.h ****        */
3834:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
3835:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
3836:/usr/include/c++/11/bits/basic_string.h **** 	operator=(const _Tp& __svt)
3837:/usr/include/c++/11/bits/basic_string.h **** 	{ return this->assign(__svt); }
3838:/usr/include/c++/11/bits/basic_string.h **** 
3839:/usr/include/c++/11/bits/basic_string.h ****       /**
3840:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Convert to a string_view.
3841:/usr/include/c++/11/bits/basic_string.h ****        *  @return A string_view.
3842:/usr/include/c++/11/bits/basic_string.h ****        */
3843:/usr/include/c++/11/bits/basic_string.h ****       operator __sv_type() const noexcept
3844:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(data(), size()); }
3845:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
3846:/usr/include/c++/11/bits/basic_string.h **** 
3847:/usr/include/c++/11/bits/basic_string.h ****       // Iterators:
3848:/usr/include/c++/11/bits/basic_string.h ****       /**
3849:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
3850:/usr/include/c++/11/bits/basic_string.h ****        *  the %string.  Unshares the string.
3851:/usr/include/c++/11/bits/basic_string.h ****        */
3852:/usr/include/c++/11/bits/basic_string.h ****       iterator
3853:/usr/include/c++/11/bits/basic_string.h ****       begin() // FIXME C++11: should be noexcept.
3854:/usr/include/c++/11/bits/basic_string.h ****       {
3855:/usr/include/c++/11/bits/basic_string.h **** 	_M_leak();
3856:/usr/include/c++/11/bits/basic_string.h **** 	return iterator(_M_data());
3857:/usr/include/c++/11/bits/basic_string.h ****       }
3858:/usr/include/c++/11/bits/basic_string.h **** 
3859:/usr/include/c++/11/bits/basic_string.h ****       /**
3860:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3861:/usr/include/c++/11/bits/basic_string.h ****        *  character in the %string.
3862:/usr/include/c++/11/bits/basic_string.h ****        */
3863:/usr/include/c++/11/bits/basic_string.h ****       const_iterator
3864:/usr/include/c++/11/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
3865:/usr/include/c++/11/bits/basic_string.h ****       { return const_iterator(_M_data()); }
3866:/usr/include/c++/11/bits/basic_string.h **** 
3867:/usr/include/c++/11/bits/basic_string.h ****       /**
3868:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
3869:/usr/include/c++/11/bits/basic_string.h ****        *  character in the %string.  Unshares the string.
3870:/usr/include/c++/11/bits/basic_string.h ****        */
3871:/usr/include/c++/11/bits/basic_string.h ****       iterator
3872:/usr/include/c++/11/bits/basic_string.h ****       end() // FIXME C++11: should be noexcept.
3873:/usr/include/c++/11/bits/basic_string.h ****       {
3874:/usr/include/c++/11/bits/basic_string.h **** 	_M_leak();
3875:/usr/include/c++/11/bits/basic_string.h **** 	return iterator(_M_data() + this->size());
3876:/usr/include/c++/11/bits/basic_string.h ****       }
3877:/usr/include/c++/11/bits/basic_string.h **** 
3878:/usr/include/c++/11/bits/basic_string.h ****       /**
3879:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3880:/usr/include/c++/11/bits/basic_string.h ****        *  last character in the %string.
3881:/usr/include/c++/11/bits/basic_string.h ****        */
3882:/usr/include/c++/11/bits/basic_string.h ****       const_iterator
3883:/usr/include/c++/11/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
3884:/usr/include/c++/11/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
3885:/usr/include/c++/11/bits/basic_string.h **** 
3886:/usr/include/c++/11/bits/basic_string.h ****       /**
3887:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
3888:/usr/include/c++/11/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
3889:/usr/include/c++/11/bits/basic_string.h ****        *  order.  Unshares the string.
3890:/usr/include/c++/11/bits/basic_string.h ****        */
3891:/usr/include/c++/11/bits/basic_string.h ****       reverse_iterator
3892:/usr/include/c++/11/bits/basic_string.h ****       rbegin() // FIXME C++11: should be noexcept.
3893:/usr/include/c++/11/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
3894:/usr/include/c++/11/bits/basic_string.h **** 
3895:/usr/include/c++/11/bits/basic_string.h ****       /**
3896:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3897:/usr/include/c++/11/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3898:/usr/include/c++/11/bits/basic_string.h ****        *  reverse element order.
3899:/usr/include/c++/11/bits/basic_string.h ****        */
3900:/usr/include/c++/11/bits/basic_string.h ****       const_reverse_iterator
3901:/usr/include/c++/11/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
3902:/usr/include/c++/11/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3903:/usr/include/c++/11/bits/basic_string.h **** 
3904:/usr/include/c++/11/bits/basic_string.h ****       /**
3905:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
3906:/usr/include/c++/11/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
3907:/usr/include/c++/11/bits/basic_string.h ****        *  element order.  Unshares the string.
3908:/usr/include/c++/11/bits/basic_string.h ****        */
3909:/usr/include/c++/11/bits/basic_string.h ****       reverse_iterator
3910:/usr/include/c++/11/bits/basic_string.h ****       rend() // FIXME C++11: should be noexcept.
3911:/usr/include/c++/11/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
3912:/usr/include/c++/11/bits/basic_string.h **** 
3913:/usr/include/c++/11/bits/basic_string.h ****       /**
3914:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3915:/usr/include/c++/11/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
3916:/usr/include/c++/11/bits/basic_string.h ****        *  is done in reverse element order.
3917:/usr/include/c++/11/bits/basic_string.h ****        */
3918:/usr/include/c++/11/bits/basic_string.h ****       const_reverse_iterator
3919:/usr/include/c++/11/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
3920:/usr/include/c++/11/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3921:/usr/include/c++/11/bits/basic_string.h **** 
3922:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
3923:/usr/include/c++/11/bits/basic_string.h ****       /**
3924:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3925:/usr/include/c++/11/bits/basic_string.h ****        *  character in the %string.
3926:/usr/include/c++/11/bits/basic_string.h ****        */
3927:/usr/include/c++/11/bits/basic_string.h ****       const_iterator
3928:/usr/include/c++/11/bits/basic_string.h ****       cbegin() const noexcept
3929:/usr/include/c++/11/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
3930:/usr/include/c++/11/bits/basic_string.h **** 
3931:/usr/include/c++/11/bits/basic_string.h ****       /**
3932:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3933:/usr/include/c++/11/bits/basic_string.h ****        *  last character in the %string.
3934:/usr/include/c++/11/bits/basic_string.h ****        */
3935:/usr/include/c++/11/bits/basic_string.h ****       const_iterator
3936:/usr/include/c++/11/bits/basic_string.h ****       cend() const noexcept
3937:/usr/include/c++/11/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
3938:/usr/include/c++/11/bits/basic_string.h **** 
3939:/usr/include/c++/11/bits/basic_string.h ****       /**
3940:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3941:/usr/include/c++/11/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3942:/usr/include/c++/11/bits/basic_string.h ****        *  reverse element order.
3943:/usr/include/c++/11/bits/basic_string.h ****        */
3944:/usr/include/c++/11/bits/basic_string.h ****       const_reverse_iterator
3945:/usr/include/c++/11/bits/basic_string.h ****       crbegin() const noexcept
3946:/usr/include/c++/11/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3947:/usr/include/c++/11/bits/basic_string.h **** 
3948:/usr/include/c++/11/bits/basic_string.h ****       /**
3949:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3950:/usr/include/c++/11/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
3951:/usr/include/c++/11/bits/basic_string.h ****        *  is done in reverse element order.
3952:/usr/include/c++/11/bits/basic_string.h ****        */
3953:/usr/include/c++/11/bits/basic_string.h ****       const_reverse_iterator
3954:/usr/include/c++/11/bits/basic_string.h ****       crend() const noexcept
3955:/usr/include/c++/11/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3956:/usr/include/c++/11/bits/basic_string.h **** #endif
3957:/usr/include/c++/11/bits/basic_string.h **** 
3958:/usr/include/c++/11/bits/basic_string.h ****     public:
3959:/usr/include/c++/11/bits/basic_string.h ****       // Capacity:
3960:/usr/include/c++/11/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
3961:/usr/include/c++/11/bits/basic_string.h ****       ///  null-termination.
3962:/usr/include/c++/11/bits/basic_string.h ****       size_type
3963:/usr/include/c++/11/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
3964:/usr/include/c++/11/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3965:/usr/include/c++/11/bits/basic_string.h **** 
3966:/usr/include/c++/11/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
3967:/usr/include/c++/11/bits/basic_string.h ****       ///  null-termination.
3968:/usr/include/c++/11/bits/basic_string.h ****       size_type
3969:/usr/include/c++/11/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
3970:/usr/include/c++/11/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3971:/usr/include/c++/11/bits/basic_string.h **** 
3972:/usr/include/c++/11/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
3973:/usr/include/c++/11/bits/basic_string.h ****       size_type
3974:/usr/include/c++/11/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
3975:/usr/include/c++/11/bits/basic_string.h ****       { return _Rep::_S_max_size; }
3976:/usr/include/c++/11/bits/basic_string.h **** 
3977:/usr/include/c++/11/bits/basic_string.h ****       /**
3978:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3979:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3980:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
3981:/usr/include/c++/11/bits/basic_string.h ****        *
3982:/usr/include/c++/11/bits/basic_string.h ****        *  This function will %resize the %string to the specified
3983:/usr/include/c++/11/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
3984:/usr/include/c++/11/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
3985:/usr/include/c++/11/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
3986:/usr/include/c++/11/bits/basic_string.h ****        */
3987:/usr/include/c++/11/bits/basic_string.h ****       void
3988:/usr/include/c++/11/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
3989:/usr/include/c++/11/bits/basic_string.h **** 
3990:/usr/include/c++/11/bits/basic_string.h ****       /**
3991:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3992:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3993:/usr/include/c++/11/bits/basic_string.h ****        *
3994:/usr/include/c++/11/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
3995:/usr/include/c++/11/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
3996:/usr/include/c++/11/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
3997:/usr/include/c++/11/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
3998:/usr/include/c++/11/bits/basic_string.h ****        *  setting them to 0.
3999:/usr/include/c++/11/bits/basic_string.h ****        */
4000:/usr/include/c++/11/bits/basic_string.h ****       void
4001:/usr/include/c++/11/bits/basic_string.h ****       resize(size_type __n)
4002:/usr/include/c++/11/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
4003:/usr/include/c++/11/bits/basic_string.h **** 
4004:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
4005:/usr/include/c++/11/bits/basic_string.h **** #pragma GCC diagnostic push
4006:/usr/include/c++/11/bits/basic_string.h **** #pragma GCC diagnostic ignored "-Wdeprecated-declarations"
4007:/usr/include/c++/11/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
4008:/usr/include/c++/11/bits/basic_string.h ****       void
4009:/usr/include/c++/11/bits/basic_string.h ****       shrink_to_fit() noexcept
4010:/usr/include/c++/11/bits/basic_string.h ****       { reserve(); }
4011:/usr/include/c++/11/bits/basic_string.h **** #pragma GCC diagnostic pop
4012:/usr/include/c++/11/bits/basic_string.h **** #endif
4013:/usr/include/c++/11/bits/basic_string.h **** 
4014:/usr/include/c++/11/bits/basic_string.h ****       /**
4015:/usr/include/c++/11/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
4016:/usr/include/c++/11/bits/basic_string.h ****        *  before needing to allocate more memory.
4017:/usr/include/c++/11/bits/basic_string.h ****        */
4018:/usr/include/c++/11/bits/basic_string.h ****       size_type
4019:/usr/include/c++/11/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
4020:/usr/include/c++/11/bits/basic_string.h ****       { return _M_rep()->_M_capacity; }
4021:/usr/include/c++/11/bits/basic_string.h **** 
4022:/usr/include/c++/11/bits/basic_string.h ****       /**
4023:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
4024:/usr/include/c++/11/bits/basic_string.h ****        *          characters.
4025:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
4026:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
4027:/usr/include/c++/11/bits/basic_string.h ****        *
4028:/usr/include/c++/11/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
4029:/usr/include/c++/11/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
4030:/usr/include/c++/11/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
4031:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.
4032:/usr/include/c++/11/bits/basic_string.h ****        *
4033:/usr/include/c++/11/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
4034:/usr/include/c++/11/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
4035:/usr/include/c++/11/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
4036:/usr/include/c++/11/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
4037:/usr/include/c++/11/bits/basic_string.h ****        *  data.
4038:/usr/include/c++/11/bits/basic_string.h ****        */
4039:/usr/include/c++/11/bits/basic_string.h ****       void
4040:/usr/include/c++/11/bits/basic_string.h ****       reserve(size_type __res_arg);
4041:/usr/include/c++/11/bits/basic_string.h **** 
4042:/usr/include/c++/11/bits/basic_string.h ****       /// Equivalent to shrink_to_fit().
4043:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus > 201703L
4044:/usr/include/c++/11/bits/basic_string.h ****       [[deprecated("use shrink_to_fit() instead")]]
4045:/usr/include/c++/11/bits/basic_string.h **** #endif
4046:/usr/include/c++/11/bits/basic_string.h ****       void
4047:/usr/include/c++/11/bits/basic_string.h ****       reserve();
4048:/usr/include/c++/11/bits/basic_string.h **** 
4049:/usr/include/c++/11/bits/basic_string.h ****       /**
4050:/usr/include/c++/11/bits/basic_string.h ****        *  Erases the string, making it empty.
4051:/usr/include/c++/11/bits/basic_string.h ****        */
4052:/usr/include/c++/11/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
4053:/usr/include/c++/11/bits/basic_string.h ****       void
4054:/usr/include/c++/11/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
4055:/usr/include/c++/11/bits/basic_string.h ****       {
4056:/usr/include/c++/11/bits/basic_string.h **** 	if (_M_rep()->_M_is_shared())
4057:/usr/include/c++/11/bits/basic_string.h **** 	  {
4058:/usr/include/c++/11/bits/basic_string.h **** 	    _M_rep()->_M_dispose(this->get_allocator());
4059:/usr/include/c++/11/bits/basic_string.h **** 	    _M_data(_S_empty_rep()._M_refdata());
4060:/usr/include/c++/11/bits/basic_string.h **** 	  }
4061:/usr/include/c++/11/bits/basic_string.h **** 	else
4062:/usr/include/c++/11/bits/basic_string.h **** 	  _M_rep()->_M_set_length_and_sharable(0);
4063:/usr/include/c++/11/bits/basic_string.h ****       }
4064:/usr/include/c++/11/bits/basic_string.h **** #else
4065:/usr/include/c++/11/bits/basic_string.h ****       // PR 56166: this should not throw.
4066:/usr/include/c++/11/bits/basic_string.h ****       void
4067:/usr/include/c++/11/bits/basic_string.h ****       clear()
4068:/usr/include/c++/11/bits/basic_string.h ****       { _M_mutate(0, this->size(), 0); }
4069:/usr/include/c++/11/bits/basic_string.h **** #endif
4070:/usr/include/c++/11/bits/basic_string.h **** 
4071:/usr/include/c++/11/bits/basic_string.h ****       /**
4072:/usr/include/c++/11/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
4073:/usr/include/c++/11/bits/basic_string.h ****        *  <code>*this == ""</code>.
4074:/usr/include/c++/11/bits/basic_string.h ****        */
4075:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NODISCARD bool
4076:/usr/include/c++/11/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
4077:/usr/include/c++/11/bits/basic_string.h ****       { return this->size() == 0; }
4078:/usr/include/c++/11/bits/basic_string.h **** 
4079:/usr/include/c++/11/bits/basic_string.h ****       // Element access:
4080:/usr/include/c++/11/bits/basic_string.h ****       /**
4081:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4082:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
4083:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
4084:/usr/include/c++/11/bits/basic_string.h ****        *
4085:/usr/include/c++/11/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
4086:/usr/include/c++/11/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
4087:/usr/include/c++/11/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4088:/usr/include/c++/11/bits/basic_string.h ****        *  see at().)
4089:/usr/include/c++/11/bits/basic_string.h ****        */
4090:/usr/include/c++/11/bits/basic_string.h ****       const_reference
4091:/usr/include/c++/11/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
4092:/usr/include/c++/11/bits/basic_string.h ****       {
4093:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
4094:/usr/include/c++/11/bits/basic_string.h **** 	return _M_data()[__pos];
4095:/usr/include/c++/11/bits/basic_string.h ****       }
4096:/usr/include/c++/11/bits/basic_string.h **** 
4097:/usr/include/c++/11/bits/basic_string.h ****       /**
4098:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4099:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
4100:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Read/write reference to the character.
4101:/usr/include/c++/11/bits/basic_string.h ****        *
4102:/usr/include/c++/11/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
4103:/usr/include/c++/11/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
4104:/usr/include/c++/11/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4105:/usr/include/c++/11/bits/basic_string.h ****        *  see at().)  Unshares the string.
4106:/usr/include/c++/11/bits/basic_string.h ****        */
4107:/usr/include/c++/11/bits/basic_string.h ****       reference
4108:/usr/include/c++/11/bits/basic_string.h ****       operator[](size_type __pos)
4109:/usr/include/c++/11/bits/basic_string.h ****       {
4110:/usr/include/c++/11/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
4111:/usr/include/c++/11/bits/basic_string.h **** 	// and in C++11 mode.
4112:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
4113:/usr/include/c++/11/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
4114:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
4115:/usr/include/c++/11/bits/basic_string.h **** 	_M_leak();
4116:/usr/include/c++/11/bits/basic_string.h **** 	return _M_data()[__pos];
4117:/usr/include/c++/11/bits/basic_string.h ****       }
4118:/usr/include/c++/11/bits/basic_string.h **** 
4119:/usr/include/c++/11/bits/basic_string.h ****       /**
4120:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4121:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n The index of the character to access.
4122:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
4123:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4124:/usr/include/c++/11/bits/basic_string.h ****        *
4125:/usr/include/c++/11/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
4126:/usr/include/c++/11/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
4127:/usr/include/c++/11/bits/basic_string.h ****        *  throws out_of_range if the check fails.
4128:/usr/include/c++/11/bits/basic_string.h ****        */
4129:/usr/include/c++/11/bits/basic_string.h ****       const_reference
4130:/usr/include/c++/11/bits/basic_string.h ****       at(size_type __n) const
4131:/usr/include/c++/11/bits/basic_string.h ****       {
4132:/usr/include/c++/11/bits/basic_string.h **** 	if (__n >= this->size())
4133:/usr/include/c++/11/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4134:/usr/include/c++/11/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
4135:/usr/include/c++/11/bits/basic_string.h **** 				       "(which is %zu)"),
4136:/usr/include/c++/11/bits/basic_string.h **** 				   __n, this->size());
4137:/usr/include/c++/11/bits/basic_string.h **** 	return _M_data()[__n];
4138:/usr/include/c++/11/bits/basic_string.h ****       }
4139:/usr/include/c++/11/bits/basic_string.h **** 
4140:/usr/include/c++/11/bits/basic_string.h ****       /**
4141:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4142:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n The index of the character to access.
4143:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Read/write reference to the character.
4144:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4145:/usr/include/c++/11/bits/basic_string.h ****        *
4146:/usr/include/c++/11/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
4147:/usr/include/c++/11/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
4148:/usr/include/c++/11/bits/basic_string.h ****        *  throws out_of_range if the check fails.  Success results in
4149:/usr/include/c++/11/bits/basic_string.h ****        *  unsharing the string.
4150:/usr/include/c++/11/bits/basic_string.h ****        */
4151:/usr/include/c++/11/bits/basic_string.h ****       reference
4152:/usr/include/c++/11/bits/basic_string.h ****       at(size_type __n)
4153:/usr/include/c++/11/bits/basic_string.h ****       {
4154:/usr/include/c++/11/bits/basic_string.h **** 	if (__n >= size())
4155:/usr/include/c++/11/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4156:/usr/include/c++/11/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
4157:/usr/include/c++/11/bits/basic_string.h **** 				       "(which is %zu)"),
4158:/usr/include/c++/11/bits/basic_string.h **** 				   __n, this->size());
4159:/usr/include/c++/11/bits/basic_string.h **** 	_M_leak();
4160:/usr/include/c++/11/bits/basic_string.h **** 	return _M_data()[__n];
4161:/usr/include/c++/11/bits/basic_string.h ****       }
4162:/usr/include/c++/11/bits/basic_string.h **** 
4163:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
4164:/usr/include/c++/11/bits/basic_string.h ****       /**
4165:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
4166:/usr/include/c++/11/bits/basic_string.h ****        *  element of the %string.
4167:/usr/include/c++/11/bits/basic_string.h ****        */
4168:/usr/include/c++/11/bits/basic_string.h ****       reference
4169:/usr/include/c++/11/bits/basic_string.h ****       front()
4170:/usr/include/c++/11/bits/basic_string.h ****       {
4171:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4172:/usr/include/c++/11/bits/basic_string.h **** 	return operator[](0);
4173:/usr/include/c++/11/bits/basic_string.h ****       }
4174:/usr/include/c++/11/bits/basic_string.h **** 
4175:/usr/include/c++/11/bits/basic_string.h ****       /**
4176:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
4177:/usr/include/c++/11/bits/basic_string.h ****        *  element of the %string.
4178:/usr/include/c++/11/bits/basic_string.h ****        */
4179:/usr/include/c++/11/bits/basic_string.h ****       const_reference
4180:/usr/include/c++/11/bits/basic_string.h ****       front() const noexcept
4181:/usr/include/c++/11/bits/basic_string.h ****       {
4182:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4183:/usr/include/c++/11/bits/basic_string.h **** 	return operator[](0);
4184:/usr/include/c++/11/bits/basic_string.h ****       }
4185:/usr/include/c++/11/bits/basic_string.h **** 
4186:/usr/include/c++/11/bits/basic_string.h ****       /**
4187:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
4188:/usr/include/c++/11/bits/basic_string.h ****        *  element of the %string.
4189:/usr/include/c++/11/bits/basic_string.h ****        */
4190:/usr/include/c++/11/bits/basic_string.h ****       reference
4191:/usr/include/c++/11/bits/basic_string.h ****       back()
4192:/usr/include/c++/11/bits/basic_string.h ****       {
4193:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4194:/usr/include/c++/11/bits/basic_string.h **** 	return operator[](this->size() - 1);
4195:/usr/include/c++/11/bits/basic_string.h ****       }
4196:/usr/include/c++/11/bits/basic_string.h **** 
4197:/usr/include/c++/11/bits/basic_string.h ****       /**
4198:/usr/include/c++/11/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
4199:/usr/include/c++/11/bits/basic_string.h ****        *  last element of the %string.
4200:/usr/include/c++/11/bits/basic_string.h ****        */
4201:/usr/include/c++/11/bits/basic_string.h ****       const_reference
4202:/usr/include/c++/11/bits/basic_string.h ****       back() const noexcept
4203:/usr/include/c++/11/bits/basic_string.h ****       {
4204:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4205:/usr/include/c++/11/bits/basic_string.h **** 	return operator[](this->size() - 1);
4206:/usr/include/c++/11/bits/basic_string.h ****       }
4207:/usr/include/c++/11/bits/basic_string.h **** #endif
4208:/usr/include/c++/11/bits/basic_string.h **** 
4209:/usr/include/c++/11/bits/basic_string.h ****       // Modifiers:
4210:/usr/include/c++/11/bits/basic_string.h ****       /**
4211:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a string to this string.
4212:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  The string to append.
4213:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4214:/usr/include/c++/11/bits/basic_string.h ****        */
4215:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4216:/usr/include/c++/11/bits/basic_string.h ****       operator+=(const basic_string& __str)
4217:/usr/include/c++/11/bits/basic_string.h ****       { return this->append(__str); }
4218:/usr/include/c++/11/bits/basic_string.h **** 
4219:/usr/include/c++/11/bits/basic_string.h ****       /**
4220:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a C string.
4221:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  The C string to append.
4222:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4223:/usr/include/c++/11/bits/basic_string.h ****        */
4224:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4225:/usr/include/c++/11/bits/basic_string.h ****       operator+=(const _CharT* __s)
4226:/usr/include/c++/11/bits/basic_string.h ****       { return this->append(__s); }
4227:/usr/include/c++/11/bits/basic_string.h **** 
4228:/usr/include/c++/11/bits/basic_string.h ****       /**
4229:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a character.
4230:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  The character to append.
4231:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4232:/usr/include/c++/11/bits/basic_string.h ****        */
4233:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4234:/usr/include/c++/11/bits/basic_string.h ****       operator+=(_CharT __c)
4235:/usr/include/c++/11/bits/basic_string.h ****       { 
4236:/usr/include/c++/11/bits/basic_string.h **** 	this->push_back(__c);
4237:/usr/include/c++/11/bits/basic_string.h **** 	return *this;
4238:/usr/include/c++/11/bits/basic_string.h ****       }
4239:/usr/include/c++/11/bits/basic_string.h **** 
4240:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
4241:/usr/include/c++/11/bits/basic_string.h ****       /**
4242:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
4243:/usr/include/c++/11/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
4244:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4245:/usr/include/c++/11/bits/basic_string.h ****        */
4246:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4247:/usr/include/c++/11/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
4248:/usr/include/c++/11/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4249:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
4250:/usr/include/c++/11/bits/basic_string.h **** 
4251:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
4252:/usr/include/c++/11/bits/basic_string.h ****       /**
4253:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a string_view.
4254:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4255:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4256:/usr/include/c++/11/bits/basic_string.h ****        */
4257:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
4258:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4259:/usr/include/c++/11/bits/basic_string.h **** 	operator+=(const _Tp& __svt)
4260:/usr/include/c++/11/bits/basic_string.h **** 	{ return this->append(__svt); }
4261:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
4262:/usr/include/c++/11/bits/basic_string.h **** 
4263:/usr/include/c++/11/bits/basic_string.h ****       /**
4264:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a string to this string.
4265:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  The string to append.
4266:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4267:/usr/include/c++/11/bits/basic_string.h ****        */
4268:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4269:/usr/include/c++/11/bits/basic_string.h ****       append(const basic_string& __str);
4270:/usr/include/c++/11/bits/basic_string.h **** 
4271:/usr/include/c++/11/bits/basic_string.h ****       /**
4272:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a substring.
4273:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  The string to append.
4274:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
4275:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4276:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4277:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
4278:/usr/include/c++/11/bits/basic_string.h ****        *
4279:/usr/include/c++/11/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
4280:/usr/include/c++/11/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
4281:/usr/include/c++/11/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
4282:/usr/include/c++/11/bits/basic_string.h ****        *  remainder of @a __str is appended.
4283:/usr/include/c++/11/bits/basic_string.h ****        */
4284:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4285:/usr/include/c++/11/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos);
4286:/usr/include/c++/11/bits/basic_string.h **** 
4287:/usr/include/c++/11/bits/basic_string.h ****       /**
4288:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a C substring.
4289:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  The C string to append.
4290:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4291:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4292:/usr/include/c++/11/bits/basic_string.h ****        */
4293:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4294:/usr/include/c++/11/bits/basic_string.h ****       append(const _CharT* __s, size_type __n);
4295:/usr/include/c++/11/bits/basic_string.h **** 
4296:/usr/include/c++/11/bits/basic_string.h ****       /**
4297:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a C string.
4298:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  The C string to append.
4299:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4300:/usr/include/c++/11/bits/basic_string.h ****        */
4301:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4302:/usr/include/c++/11/bits/basic_string.h ****       append(const _CharT* __s)
4303:/usr/include/c++/11/bits/basic_string.h ****       {
4304:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4305:/usr/include/c++/11/bits/basic_string.h **** 	return this->append(__s, traits_type::length(__s));
4306:/usr/include/c++/11/bits/basic_string.h ****       }
4307:/usr/include/c++/11/bits/basic_string.h **** 
4308:/usr/include/c++/11/bits/basic_string.h ****       /**
4309:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append multiple characters.
4310:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4311:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  The character to use.
4312:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4313:/usr/include/c++/11/bits/basic_string.h ****        *
4314:/usr/include/c++/11/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
4315:/usr/include/c++/11/bits/basic_string.h ****        */
4316:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4317:/usr/include/c++/11/bits/basic_string.h ****       append(size_type __n, _CharT __c);
4318:/usr/include/c++/11/bits/basic_string.h **** 
4319:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
4320:/usr/include/c++/11/bits/basic_string.h ****       /**
4321:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
4322:/usr/include/c++/11/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
4323:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4324:/usr/include/c++/11/bits/basic_string.h ****        */
4325:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4326:/usr/include/c++/11/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
4327:/usr/include/c++/11/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4328:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
4329:/usr/include/c++/11/bits/basic_string.h **** 
4330:/usr/include/c++/11/bits/basic_string.h ****       /**
4331:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a range of characters.
4332:/usr/include/c++/11/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4333:/usr/include/c++/11/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4334:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4335:/usr/include/c++/11/bits/basic_string.h ****        *
4336:/usr/include/c++/11/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
4337:/usr/include/c++/11/bits/basic_string.h ****        */
4338:/usr/include/c++/11/bits/basic_string.h ****       template<class _InputIterator>
4339:/usr/include/c++/11/bits/basic_string.h ****         basic_string&
4340:/usr/include/c++/11/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
4341:/usr/include/c++/11/bits/basic_string.h ****         { return this->replace(_M_iend(), _M_iend(), __first, __last); }
4342:/usr/include/c++/11/bits/basic_string.h **** 
4343:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
4344:/usr/include/c++/11/bits/basic_string.h ****       /**
4345:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a string_view.
4346:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4347:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4348:/usr/include/c++/11/bits/basic_string.h ****        */
4349:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
4350:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4351:/usr/include/c++/11/bits/basic_string.h **** 	append(const _Tp& __svt)
4352:/usr/include/c++/11/bits/basic_string.h **** 	{
4353:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4354:/usr/include/c++/11/bits/basic_string.h **** 	  return this->append(__sv.data(), __sv.size());
4355:/usr/include/c++/11/bits/basic_string.h **** 	}
4356:/usr/include/c++/11/bits/basic_string.h **** 
4357:/usr/include/c++/11/bits/basic_string.h ****       /**
4358:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a range of characters from a string_view.
4359:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended
4360:/usr/include/c++/11/bits/basic_string.h ****        *               from.
4361:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos The position in the string_view to append from.
4362:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
4363:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4364:/usr/include/c++/11/bits/basic_string.h ****        */
4365:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
4366:/usr/include/c++/11/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4367:/usr/include/c++/11/bits/basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
4368:/usr/include/c++/11/bits/basic_string.h **** 	{
4369:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4370:/usr/include/c++/11/bits/basic_string.h **** 	  return append(__sv.data()
4371:/usr/include/c++/11/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
4372:/usr/include/c++/11/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4373:/usr/include/c++/11/bits/basic_string.h **** 	}
4374:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
4375:/usr/include/c++/11/bits/basic_string.h **** 
4376:/usr/include/c++/11/bits/basic_string.h ****       /**
4377:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Append a single character.
4378:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to append.
4379:/usr/include/c++/11/bits/basic_string.h ****        */
4380:/usr/include/c++/11/bits/basic_string.h ****       void
4381:/usr/include/c++/11/bits/basic_string.h ****       push_back(_CharT __c)
4382:/usr/include/c++/11/bits/basic_string.h ****       { 
4383:/usr/include/c++/11/bits/basic_string.h **** 	const size_type __len = 1 + this->size();
4384:/usr/include/c++/11/bits/basic_string.h **** 	if (__len > this->capacity() || _M_rep()->_M_is_shared())
4385:/usr/include/c++/11/bits/basic_string.h **** 	  this->reserve(__len);
4386:/usr/include/c++/11/bits/basic_string.h **** 	traits_type::assign(_M_data()[this->size()], __c);
4387:/usr/include/c++/11/bits/basic_string.h **** 	_M_rep()->_M_set_length_and_sharable(__len);
4388:/usr/include/c++/11/bits/basic_string.h ****       }
4389:/usr/include/c++/11/bits/basic_string.h **** 
4390:/usr/include/c++/11/bits/basic_string.h ****       /**
4391:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
4392:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string to use.
4393:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4394:/usr/include/c++/11/bits/basic_string.h ****        */
4395:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4396:/usr/include/c++/11/bits/basic_string.h ****       assign(const basic_string& __str);
4397:/usr/include/c++/11/bits/basic_string.h **** 
4398:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
4399:/usr/include/c++/11/bits/basic_string.h ****       /**
4400:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
4401:/usr/include/c++/11/bits/basic_string.h ****        *  @param  __str  Source string to use.
4402:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4403:/usr/include/c++/11/bits/basic_string.h ****        *
4404:/usr/include/c++/11/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
4405:/usr/include/c++/11/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
4406:/usr/include/c++/11/bits/basic_string.h ****        */
4407:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4408:/usr/include/c++/11/bits/basic_string.h ****       assign(basic_string&& __str)
4409:/usr/include/c++/11/bits/basic_string.h ****       noexcept(allocator_traits<_Alloc>::is_always_equal::value)
4410:/usr/include/c++/11/bits/basic_string.h ****       {
4411:/usr/include/c++/11/bits/basic_string.h **** 	this->swap(__str);
4412:/usr/include/c++/11/bits/basic_string.h **** 	return *this;
4413:/usr/include/c++/11/bits/basic_string.h ****       }
4414:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
4415:/usr/include/c++/11/bits/basic_string.h **** 
4416:/usr/include/c++/11/bits/basic_string.h ****       /**
4417:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
4418:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  The string to use.
4419:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
4420:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to use.
4421:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4422:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
4423:/usr/include/c++/11/bits/basic_string.h ****        *
4424:/usr/include/c++/11/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
4425:/usr/include/c++/11/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
4426:/usr/include/c++/11/bits/basic_string.h ****        *  is larger than the number of available characters in @a
4427:/usr/include/c++/11/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
4428:/usr/include/c++/11/bits/basic_string.h ****        */
4429:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4430:/usr/include/c++/11/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
4431:/usr/include/c++/11/bits/basic_string.h ****       { return this->assign(__str._M_data()
4432:/usr/include/c++/11/bits/basic_string.h **** 			    + __str._M_check(__pos, "basic_string::assign"),
4433:/usr/include/c++/11/bits/basic_string.h **** 			    __str._M_limit(__pos, __n)); }
4434:/usr/include/c++/11/bits/basic_string.h **** 
4435:/usr/include/c++/11/bits/basic_string.h ****       /**
4436:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to a C substring.
4437:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  The C string to use.
4438:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to use.
4439:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4440:/usr/include/c++/11/bits/basic_string.h ****        *
4441:/usr/include/c++/11/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
4442:/usr/include/c++/11/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
4443:/usr/include/c++/11/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
4444:/usr/include/c++/11/bits/basic_string.h ****        */
4445:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4446:/usr/include/c++/11/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n);
4447:/usr/include/c++/11/bits/basic_string.h **** 
4448:/usr/include/c++/11/bits/basic_string.h ****       /**
4449:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
4450:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  The C string to use.
4451:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4452:/usr/include/c++/11/bits/basic_string.h ****        *
4453:/usr/include/c++/11/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
4454:/usr/include/c++/11/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
4455:/usr/include/c++/11/bits/basic_string.h ****        *  function returns.
4456:/usr/include/c++/11/bits/basic_string.h ****        */
4457:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4458:/usr/include/c++/11/bits/basic_string.h ****       assign(const _CharT* __s)
4459:/usr/include/c++/11/bits/basic_string.h ****       {
4460:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4461:/usr/include/c++/11/bits/basic_string.h **** 	return this->assign(__s, traits_type::length(__s));
4462:/usr/include/c++/11/bits/basic_string.h ****       }
4463:/usr/include/c++/11/bits/basic_string.h **** 
4464:/usr/include/c++/11/bits/basic_string.h ****       /**
4465:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
4466:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
4467:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  The character to use.
4468:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4469:/usr/include/c++/11/bits/basic_string.h ****        *
4470:/usr/include/c++/11/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
4471:/usr/include/c++/11/bits/basic_string.h ****        *  character @a __c.
4472:/usr/include/c++/11/bits/basic_string.h ****        */
4473:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4474:/usr/include/c++/11/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
4475:/usr/include/c++/11/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
4476:/usr/include/c++/11/bits/basic_string.h **** 
4477:/usr/include/c++/11/bits/basic_string.h ****       /**
4478:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
4479:/usr/include/c++/11/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4480:/usr/include/c++/11/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4481:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4482:/usr/include/c++/11/bits/basic_string.h ****        *
4483:/usr/include/c++/11/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
4484:/usr/include/c++/11/bits/basic_string.h ****       */
4485:/usr/include/c++/11/bits/basic_string.h ****       template<class _InputIterator>
4486:/usr/include/c++/11/bits/basic_string.h ****         basic_string&
4487:/usr/include/c++/11/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
4488:/usr/include/c++/11/bits/basic_string.h ****         { return this->replace(_M_ibegin(), _M_iend(), __first, __last); }
4489:/usr/include/c++/11/bits/basic_string.h **** 
4490:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
4491:/usr/include/c++/11/bits/basic_string.h ****       /**
4492:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
4493:/usr/include/c++/11/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
4494:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4495:/usr/include/c++/11/bits/basic_string.h ****        */
4496:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4497:/usr/include/c++/11/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
4498:/usr/include/c++/11/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
4499:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
4500:/usr/include/c++/11/bits/basic_string.h **** 
4501:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
4502:/usr/include/c++/11/bits/basic_string.h ****       /**
4503:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value from a string_view.
4504:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt The source object convertible to string_view.
4505:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4506:/usr/include/c++/11/bits/basic_string.h ****        */
4507:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
4508:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4509:/usr/include/c++/11/bits/basic_string.h **** 	assign(const _Tp& __svt)
4510:/usr/include/c++/11/bits/basic_string.h **** 	{
4511:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4512:/usr/include/c++/11/bits/basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
4513:/usr/include/c++/11/bits/basic_string.h **** 	}
4514:/usr/include/c++/11/bits/basic_string.h **** 
4515:/usr/include/c++/11/bits/basic_string.h ****       /**
4516:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
4517:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
4518:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
4519:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  The number of characters to assign.
4520:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4521:/usr/include/c++/11/bits/basic_string.h ****        */
4522:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
4523:/usr/include/c++/11/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4524:/usr/include/c++/11/bits/basic_string.h ****         assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
4525:/usr/include/c++/11/bits/basic_string.h **** 	{
4526:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4527:/usr/include/c++/11/bits/basic_string.h **** 	  return assign(__sv.data()
4528:/usr/include/c++/11/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
4529:/usr/include/c++/11/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4530:/usr/include/c++/11/bits/basic_string.h **** 	}
4531:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
4532:/usr/include/c++/11/bits/basic_string.h **** 
4533:/usr/include/c++/11/bits/basic_string.h ****       /**
4534:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert multiple characters.
4535:/usr/include/c++/11/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4536:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to insert
4537:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  The character to insert.
4538:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4539:/usr/include/c++/11/bits/basic_string.h ****        *
4540:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
4541:/usr/include/c++/11/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
4542:/usr/include/c++/11/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4543:/usr/include/c++/11/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4544:/usr/include/c++/11/bits/basic_string.h ****        *  change if an error is thrown.
4545:/usr/include/c++/11/bits/basic_string.h ****       */
4546:/usr/include/c++/11/bits/basic_string.h ****       void
4547:/usr/include/c++/11/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
4548:/usr/include/c++/11/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
4549:/usr/include/c++/11/bits/basic_string.h **** 
4550:/usr/include/c++/11/bits/basic_string.h ****       /**
4551:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert a range of characters.
4552:/usr/include/c++/11/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4553:/usr/include/c++/11/bits/basic_string.h ****        *  @param __beg  Start of range.
4554:/usr/include/c++/11/bits/basic_string.h ****        *  @param __end  End of range.
4555:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4556:/usr/include/c++/11/bits/basic_string.h ****        *
4557:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
4558:/usr/include/c++/11/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4559:/usr/include/c++/11/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4560:/usr/include/c++/11/bits/basic_string.h ****        *  change if an error is thrown.
4561:/usr/include/c++/11/bits/basic_string.h ****       */
4562:/usr/include/c++/11/bits/basic_string.h ****       template<class _InputIterator>
4563:/usr/include/c++/11/bits/basic_string.h ****         void
4564:/usr/include/c++/11/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
4565:/usr/include/c++/11/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
4566:/usr/include/c++/11/bits/basic_string.h **** 
4567:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
4568:/usr/include/c++/11/bits/basic_string.h ****       /**
4569:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
4570:/usr/include/c++/11/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4571:/usr/include/c++/11/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
4572:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4573:/usr/include/c++/11/bits/basic_string.h ****        */
4574:/usr/include/c++/11/bits/basic_string.h ****       void
4575:/usr/include/c++/11/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
4576:/usr/include/c++/11/bits/basic_string.h ****       {
4577:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4578:/usr/include/c++/11/bits/basic_string.h **** 	this->insert(__p - _M_ibegin(), __l.begin(), __l.size());
4579:/usr/include/c++/11/bits/basic_string.h ****       }
4580:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
4581:/usr/include/c++/11/bits/basic_string.h **** 
4582:/usr/include/c++/11/bits/basic_string.h ****       /**
4583:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert value of a string.
4584:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos1  Position in string to insert at.
4585:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  The string to insert.
4586:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4587:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4588:/usr/include/c++/11/bits/basic_string.h ****        *
4589:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
4590:/usr/include/c++/11/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4591:/usr/include/c++/11/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4592:/usr/include/c++/11/bits/basic_string.h ****        *  change if an error is thrown.
4593:/usr/include/c++/11/bits/basic_string.h ****       */
4594:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4595:/usr/include/c++/11/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
4596:/usr/include/c++/11/bits/basic_string.h ****       { return this->insert(__pos1, __str, size_type(0), __str.size()); }
4597:/usr/include/c++/11/bits/basic_string.h **** 
4598:/usr/include/c++/11/bits/basic_string.h ****       /**
4599:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert a substring.
4600:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos1  Position in string to insert at.
4601:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  The string to insert.
4602:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
4603:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
4604:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4605:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4606:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
4607:/usr/include/c++/11/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
4608:/usr/include/c++/11/bits/basic_string.h ****        *
4609:/usr/include/c++/11/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
4610:/usr/include/c++/11/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
4611:/usr/include/c++/11/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
4612:/usr/include/c++/11/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
4613:/usr/include/c++/11/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
4614:/usr/include/c++/11/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4615:/usr/include/c++/11/bits/basic_string.h ****       */
4616:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4617:/usr/include/c++/11/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
4618:/usr/include/c++/11/bits/basic_string.h **** 	     size_type __pos2, size_type __n = npos)
4619:/usr/include/c++/11/bits/basic_string.h ****       { return this->insert(__pos1, __str._M_data()
4620:/usr/include/c++/11/bits/basic_string.h **** 			    + __str._M_check(__pos2, "basic_string::insert"),
4621:/usr/include/c++/11/bits/basic_string.h **** 			    __str._M_limit(__pos2, __n)); }
4622:/usr/include/c++/11/bits/basic_string.h **** 
4623:/usr/include/c++/11/bits/basic_string.h ****       /**
4624:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert a C substring.
4625:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Position in string to insert at.
4626:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  The C string to insert.
4627:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
4628:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4629:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4630:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4631:/usr/include/c++/11/bits/basic_string.h ****        *  string.
4632:/usr/include/c++/11/bits/basic_string.h ****        *
4633:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
4634:/usr/include/c++/11/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
4635:/usr/include/c++/11/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
4636:/usr/include/c++/11/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
4637:/usr/include/c++/11/bits/basic_string.h ****        *  doesn't change if an error is thrown.
4638:/usr/include/c++/11/bits/basic_string.h ****       */
4639:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4640:/usr/include/c++/11/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n);
4641:/usr/include/c++/11/bits/basic_string.h **** 
4642:/usr/include/c++/11/bits/basic_string.h ****       /**
4643:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert a C string.
4644:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Position in string to insert at.
4645:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  The C string to insert.
4646:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4647:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4648:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4649:/usr/include/c++/11/bits/basic_string.h ****        *  string.
4650:/usr/include/c++/11/bits/basic_string.h ****        *
4651:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
4652:/usr/include/c++/11/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
4653:/usr/include/c++/11/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
4654:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
4655:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.
4656:/usr/include/c++/11/bits/basic_string.h ****       */
4657:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4658:/usr/include/c++/11/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
4659:/usr/include/c++/11/bits/basic_string.h ****       {
4660:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4661:/usr/include/c++/11/bits/basic_string.h **** 	return this->insert(__pos, __s, traits_type::length(__s));
4662:/usr/include/c++/11/bits/basic_string.h ****       }
4663:/usr/include/c++/11/bits/basic_string.h **** 
4664:/usr/include/c++/11/bits/basic_string.h ****       /**
4665:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert multiple characters.
4666:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
4667:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to insert
4668:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  The character to insert.
4669:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4670:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4671:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4672:/usr/include/c++/11/bits/basic_string.h ****        *  string.
4673:/usr/include/c++/11/bits/basic_string.h ****        *
4674:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
4675:/usr/include/c++/11/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
4676:/usr/include/c++/11/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
4677:/usr/include/c++/11/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4678:/usr/include/c++/11/bits/basic_string.h ****        *  change if an error is thrown.
4679:/usr/include/c++/11/bits/basic_string.h ****       */
4680:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4681:/usr/include/c++/11/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
4682:/usr/include/c++/11/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
4683:/usr/include/c++/11/bits/basic_string.h **** 			      size_type(0), __n, __c); }
4684:/usr/include/c++/11/bits/basic_string.h **** 
4685:/usr/include/c++/11/bits/basic_string.h ****       /**
4686:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert one character.
4687:/usr/include/c++/11/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
4688:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  The character to insert.
4689:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
4690:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4691:/usr/include/c++/11/bits/basic_string.h ****        *
4692:/usr/include/c++/11/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
4693:/usr/include/c++/11/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
4694:/usr/include/c++/11/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
4695:/usr/include/c++/11/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4696:/usr/include/c++/11/bits/basic_string.h ****        *  change if an error is thrown.
4697:/usr/include/c++/11/bits/basic_string.h ****       */
4698:/usr/include/c++/11/bits/basic_string.h ****       iterator
4699:/usr/include/c++/11/bits/basic_string.h ****       insert(iterator __p, _CharT __c)
4700:/usr/include/c++/11/bits/basic_string.h ****       {
4701:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4702:/usr/include/c++/11/bits/basic_string.h **** 	const size_type __pos = __p - _M_ibegin();
4703:/usr/include/c++/11/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
4704:/usr/include/c++/11/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
4705:/usr/include/c++/11/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
4706:/usr/include/c++/11/bits/basic_string.h ****       }
4707:/usr/include/c++/11/bits/basic_string.h **** 
4708:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
4709:/usr/include/c++/11/bits/basic_string.h ****       /**
4710:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert a string_view.
4711:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Position in string to insert at.
4712:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
4713:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4714:/usr/include/c++/11/bits/basic_string.h ****       */
4715:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
4716:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4717:/usr/include/c++/11/bits/basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
4718:/usr/include/c++/11/bits/basic_string.h **** 	{
4719:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4720:/usr/include/c++/11/bits/basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
4721:/usr/include/c++/11/bits/basic_string.h **** 	}
4722:/usr/include/c++/11/bits/basic_string.h **** 
4723:/usr/include/c++/11/bits/basic_string.h ****       /**
4724:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Insert a string_view.
4725:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos1  Position in string to insert at.
4726:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
4727:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos2  Position in string_view to insert from.
4728:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n    The number of characters to insert.
4729:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4730:/usr/include/c++/11/bits/basic_string.h ****       */
4731:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
4732:/usr/include/c++/11/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4733:/usr/include/c++/11/bits/basic_string.h ****         insert(size_type __pos1, const _Tp& __svt,
4734:/usr/include/c++/11/bits/basic_string.h **** 	       size_type __pos2, size_type __n = npos)
4735:/usr/include/c++/11/bits/basic_string.h **** 	{
4736:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4737:/usr/include/c++/11/bits/basic_string.h **** 	  return this->replace(__pos1, size_type(0), __sv.data()
4738:/usr/include/c++/11/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
4739:/usr/include/c++/11/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
4740:/usr/include/c++/11/bits/basic_string.h **** 	}
4741:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
4742:/usr/include/c++/11/bits/basic_string.h **** 
4743:/usr/include/c++/11/bits/basic_string.h ****       /**
4744:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Remove characters.
4745:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
4746:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
4747:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4748:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4749:/usr/include/c++/11/bits/basic_string.h ****        *  string.
4750:/usr/include/c++/11/bits/basic_string.h ****        *
4751:/usr/include/c++/11/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
4752:/usr/include/c++/11/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
4753:/usr/include/c++/11/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
4754:/usr/include/c++/11/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
4755:/usr/include/c++/11/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4756:/usr/include/c++/11/bits/basic_string.h ****        *  change if an error is thrown.
4757:/usr/include/c++/11/bits/basic_string.h ****       */
4758:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4759:/usr/include/c++/11/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
4760:/usr/include/c++/11/bits/basic_string.h ****       { 
4761:/usr/include/c++/11/bits/basic_string.h **** 	_M_mutate(_M_check(__pos, "basic_string::erase"),
4762:/usr/include/c++/11/bits/basic_string.h **** 		  _M_limit(__pos, __n), size_type(0));
4763:/usr/include/c++/11/bits/basic_string.h **** 	return *this;
4764:/usr/include/c++/11/bits/basic_string.h ****       }
4765:/usr/include/c++/11/bits/basic_string.h **** 
4766:/usr/include/c++/11/bits/basic_string.h ****       /**
4767:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Remove one character.
4768:/usr/include/c++/11/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
4769:/usr/include/c++/11/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
4770:/usr/include/c++/11/bits/basic_string.h ****        *
4771:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
4772:/usr/include/c++/11/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
4773:/usr/include/c++/11/bits/basic_string.h ****       */
4774:/usr/include/c++/11/bits/basic_string.h ****       iterator
4775:/usr/include/c++/11/bits/basic_string.h ****       erase(iterator __position)
4776:/usr/include/c++/11/bits/basic_string.h ****       {
4777:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= _M_ibegin()
4778:/usr/include/c++/11/bits/basic_string.h **** 				 && __position < _M_iend());
4779:/usr/include/c++/11/bits/basic_string.h **** 	const size_type __pos = __position - _M_ibegin();
4780:/usr/include/c++/11/bits/basic_string.h **** 	_M_mutate(__pos, size_type(1), size_type(0));
4781:/usr/include/c++/11/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
4782:/usr/include/c++/11/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
4783:/usr/include/c++/11/bits/basic_string.h ****       }
4784:/usr/include/c++/11/bits/basic_string.h **** 
4785:/usr/include/c++/11/bits/basic_string.h ****       /**
4786:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Remove a range of characters.
4787:/usr/include/c++/11/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
4788:/usr/include/c++/11/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
4789:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
4790:/usr/include/c++/11/bits/basic_string.h ****        *
4791:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
4792:/usr/include/c++/11/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
4793:/usr/include/c++/11/bits/basic_string.h ****       */
4794:/usr/include/c++/11/bits/basic_string.h ****       iterator
4795:/usr/include/c++/11/bits/basic_string.h ****       erase(iterator __first, iterator __last);
4796:/usr/include/c++/11/bits/basic_string.h ****  
4797:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
4798:/usr/include/c++/11/bits/basic_string.h ****       /**
4799:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Remove the last character.
4800:/usr/include/c++/11/bits/basic_string.h ****        *
4801:/usr/include/c++/11/bits/basic_string.h ****        *  The string must be non-empty.
4802:/usr/include/c++/11/bits/basic_string.h ****        */
4803:/usr/include/c++/11/bits/basic_string.h ****       void
4804:/usr/include/c++/11/bits/basic_string.h ****       pop_back() // FIXME C++11: should be noexcept.
4805:/usr/include/c++/11/bits/basic_string.h ****       {
4806:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4807:/usr/include/c++/11/bits/basic_string.h **** 	erase(size() - 1, 1);
4808:/usr/include/c++/11/bits/basic_string.h ****       }
4809:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
4810:/usr/include/c++/11/bits/basic_string.h **** 
4811:/usr/include/c++/11/bits/basic_string.h ****       /**
4812:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
4813:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4814:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
4815:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String to insert.
4816:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4817:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4818:/usr/include/c++/11/bits/basic_string.h ****        *  string.
4819:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4820:/usr/include/c++/11/bits/basic_string.h ****        *
4821:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
4822:/usr/include/c++/11/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
4823:/usr/include/c++/11/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4824:/usr/include/c++/11/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
4825:/usr/include/c++/11/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
4826:/usr/include/c++/11/bits/basic_string.h ****        *  error is thrown.
4827:/usr/include/c++/11/bits/basic_string.h ****       */
4828:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4829:/usr/include/c++/11/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
4830:/usr/include/c++/11/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
4831:/usr/include/c++/11/bits/basic_string.h **** 
4832:/usr/include/c++/11/bits/basic_string.h ****       /**
4833:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
4834:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
4835:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4836:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String to insert.
4837:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
4838:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
4839:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4840:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
4841:/usr/include/c++/11/bits/basic_string.h ****        *  __str.size().
4842:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4843:/usr/include/c++/11/bits/basic_string.h ****        *
4844:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
4845:/usr/include/c++/11/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
4846:/usr/include/c++/11/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
4847:/usr/include/c++/11/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
4848:/usr/include/c++/11/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
4849:/usr/include/c++/11/bits/basic_string.h ****       */
4850:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4851:/usr/include/c++/11/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
4852:/usr/include/c++/11/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
4853:/usr/include/c++/11/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
4854:/usr/include/c++/11/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
4855:/usr/include/c++/11/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
4856:/usr/include/c++/11/bits/basic_string.h **** 
4857:/usr/include/c++/11/bits/basic_string.h ****       /**
4858:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
4859:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4860:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4861:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to insert.
4862:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
4863:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4864:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
4865:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4866:/usr/include/c++/11/bits/basic_string.h ****        *
4867:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4868:/usr/include/c++/11/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
4869:/usr/include/c++/11/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
4870:/usr/include/c++/11/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
4871:/usr/include/c++/11/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
4872:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4873:/usr/include/c++/11/bits/basic_string.h ****        *  is thrown.
4874:/usr/include/c++/11/bits/basic_string.h ****       */
4875:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4876:/usr/include/c++/11/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
4877:/usr/include/c++/11/bits/basic_string.h **** 	      size_type __n2);
4878:/usr/include/c++/11/bits/basic_string.h **** 
4879:/usr/include/c++/11/bits/basic_string.h ****       /**
4880:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
4881:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4882:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4883:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to insert.
4884:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4885:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
4886:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4887:/usr/include/c++/11/bits/basic_string.h ****        *
4888:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4889:/usr/include/c++/11/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
4890:/usr/include/c++/11/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
4891:/usr/include/c++/11/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
4892:/usr/include/c++/11/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4893:/usr/include/c++/11/bits/basic_string.h ****        *  change if an error is thrown.
4894:/usr/include/c++/11/bits/basic_string.h ****       */
4895:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4896:/usr/include/c++/11/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
4897:/usr/include/c++/11/bits/basic_string.h ****       {
4898:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4899:/usr/include/c++/11/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
4900:/usr/include/c++/11/bits/basic_string.h ****       }
4901:/usr/include/c++/11/bits/basic_string.h **** 
4902:/usr/include/c++/11/bits/basic_string.h ****       /**
4903:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
4904:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4905:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4906:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
4907:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to insert.
4908:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4909:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
4910:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4911:/usr/include/c++/11/bits/basic_string.h ****        *
4912:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
4913:/usr/include/c++/11/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
4914:/usr/include/c++/11/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4915:/usr/include/c++/11/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
4916:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4917:/usr/include/c++/11/bits/basic_string.h ****        *  is thrown.
4918:/usr/include/c++/11/bits/basic_string.h ****       */
4919:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4920:/usr/include/c++/11/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
4921:/usr/include/c++/11/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
4922:/usr/include/c++/11/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
4923:/usr/include/c++/11/bits/basic_string.h **** 
4924:/usr/include/c++/11/bits/basic_string.h ****       /**
4925:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
4926:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4927:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4928:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String value to insert.
4929:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4930:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4931:/usr/include/c++/11/bits/basic_string.h ****        *
4932:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4933:/usr/include/c++/11/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
4934:/usr/include/c++/11/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
4935:/usr/include/c++/11/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
4936:/usr/include/c++/11/bits/basic_string.h ****       */
4937:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4938:/usr/include/c++/11/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const basic_string& __str)
4939:/usr/include/c++/11/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
4940:/usr/include/c++/11/bits/basic_string.h **** 
4941:/usr/include/c++/11/bits/basic_string.h ****       /**
4942:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
4943:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4944:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4945:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string value to insert.
4946:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
4947:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4948:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4949:/usr/include/c++/11/bits/basic_string.h ****        *
4950:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4951:/usr/include/c++/11/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
4952:/usr/include/c++/11/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4953:/usr/include/c++/11/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4954:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.
4955:/usr/include/c++/11/bits/basic_string.h ****       */
4956:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4957:/usr/include/c++/11/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
4958:/usr/include/c++/11/bits/basic_string.h ****       {
4959:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4960:/usr/include/c++/11/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4961:/usr/include/c++/11/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1, __s, __n);
4962:/usr/include/c++/11/bits/basic_string.h ****       }
4963:/usr/include/c++/11/bits/basic_string.h **** 
4964:/usr/include/c++/11/bits/basic_string.h ****       /**
4965:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
4966:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4967:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4968:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string value to insert.
4969:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4970:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4971:/usr/include/c++/11/bits/basic_string.h ****        *
4972:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4973:/usr/include/c++/11/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
4974:/usr/include/c++/11/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4975:/usr/include/c++/11/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4976:/usr/include/c++/11/bits/basic_string.h ****       */
4977:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4978:/usr/include/c++/11/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s)
4979:/usr/include/c++/11/bits/basic_string.h ****       {
4980:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4981:/usr/include/c++/11/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
4982:/usr/include/c++/11/bits/basic_string.h ****       }
4983:/usr/include/c++/11/bits/basic_string.h **** 
4984:/usr/include/c++/11/bits/basic_string.h ****       /**
4985:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
4986:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4987:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4988:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
4989:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to insert.
4990:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
4991:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4992:/usr/include/c++/11/bits/basic_string.h ****        *
4993:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4994:/usr/include/c++/11/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
4995:/usr/include/c++/11/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4996:/usr/include/c++/11/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4997:/usr/include/c++/11/bits/basic_string.h ****       */
4998:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
4999:/usr/include/c++/11/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)
5000:/usr/include/c++/11/bits/basic_string.h ****       {
5001:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5002:/usr/include/c++/11/bits/basic_string.h **** 				 && __i2 <= _M_iend());
5003:/usr/include/c++/11/bits/basic_string.h **** 	return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __c);
5004:/usr/include/c++/11/bits/basic_string.h ****       }
5005:/usr/include/c++/11/bits/basic_string.h **** 
5006:/usr/include/c++/11/bits/basic_string.h ****       /**
5007:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
5008:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
5009:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
5010:/usr/include/c++/11/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
5011:/usr/include/c++/11/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
5012:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
5013:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
5014:/usr/include/c++/11/bits/basic_string.h ****        *
5015:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
5016:/usr/include/c++/11/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
5017:/usr/include/c++/11/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
5018:/usr/include/c++/11/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
5019:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.
5020:/usr/include/c++/11/bits/basic_string.h ****       */
5021:/usr/include/c++/11/bits/basic_string.h ****       template<class _InputIterator>
5022:/usr/include/c++/11/bits/basic_string.h ****         basic_string&
5023:/usr/include/c++/11/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
5024:/usr/include/c++/11/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
5025:/usr/include/c++/11/bits/basic_string.h ****         {
5026:/usr/include/c++/11/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5027:/usr/include/c++/11/bits/basic_string.h **** 				   && __i2 <= _M_iend());
5028:/usr/include/c++/11/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
5029:/usr/include/c++/11/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
5030:/usr/include/c++/11/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
5031:/usr/include/c++/11/bits/basic_string.h **** 	}
5032:/usr/include/c++/11/bits/basic_string.h **** 
5033:/usr/include/c++/11/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
5034:/usr/include/c++/11/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
5035:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
5036:/usr/include/c++/11/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
5037:/usr/include/c++/11/bits/basic_string.h ****       {
5038:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5039:/usr/include/c++/11/bits/basic_string.h **** 				 && __i2 <= _M_iend());
5040:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5041:/usr/include/c++/11/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5042:/usr/include/c++/11/bits/basic_string.h **** 			     __k1, __k2 - __k1);
5043:/usr/include/c++/11/bits/basic_string.h ****       }
5044:/usr/include/c++/11/bits/basic_string.h **** 
5045:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
5046:/usr/include/c++/11/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
5047:/usr/include/c++/11/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
5048:/usr/include/c++/11/bits/basic_string.h ****       {
5049:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5050:/usr/include/c++/11/bits/basic_string.h **** 				 && __i2 <= _M_iend());
5051:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5052:/usr/include/c++/11/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5053:/usr/include/c++/11/bits/basic_string.h **** 			     __k1, __k2 - __k1);
5054:/usr/include/c++/11/bits/basic_string.h ****       }
5055:/usr/include/c++/11/bits/basic_string.h **** 
5056:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
5057:/usr/include/c++/11/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
5058:/usr/include/c++/11/bits/basic_string.h ****       {
5059:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5060:/usr/include/c++/11/bits/basic_string.h **** 				 && __i2 <= _M_iend());
5061:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5062:/usr/include/c++/11/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5063:/usr/include/c++/11/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
5064:/usr/include/c++/11/bits/basic_string.h ****       }
5065:/usr/include/c++/11/bits/basic_string.h **** 
5066:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
5067:/usr/include/c++/11/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
5068:/usr/include/c++/11/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
5069:/usr/include/c++/11/bits/basic_string.h ****       {
5070:/usr/include/c++/11/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5071:/usr/include/c++/11/bits/basic_string.h **** 				 && __i2 <= _M_iend());
5072:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5073:/usr/include/c++/11/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5074:/usr/include/c++/11/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
5075:/usr/include/c++/11/bits/basic_string.h ****       }
5076:/usr/include/c++/11/bits/basic_string.h **** 
5077:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
5078:/usr/include/c++/11/bits/basic_string.h ****       /**
5079:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
5080:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
5081:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
5082:/usr/include/c++/11/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
5083:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
5084:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
5085:/usr/include/c++/11/bits/basic_string.h ****        *
5086:/usr/include/c++/11/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
5087:/usr/include/c++/11/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
5088:/usr/include/c++/11/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
5089:/usr/include/c++/11/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
5090:/usr/include/c++/11/bits/basic_string.h ****        *  thrown.
5091:/usr/include/c++/11/bits/basic_string.h ****       */
5092:/usr/include/c++/11/bits/basic_string.h ****       basic_string& replace(iterator __i1, iterator __i2,
5093:/usr/include/c++/11/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
5094:/usr/include/c++/11/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
5095:/usr/include/c++/11/bits/basic_string.h **** #endif // C++11
5096:/usr/include/c++/11/bits/basic_string.h **** 
5097:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
5098:/usr/include/c++/11/bits/basic_string.h ****       /**
5099:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
5100:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  The position to replace at.
5101:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n    The number of characters to replace.
5102:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
5103:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
5104:/usr/include/c++/11/bits/basic_string.h ****       */
5105:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
5106:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
5107:/usr/include/c++/11/bits/basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
5108:/usr/include/c++/11/bits/basic_string.h **** 	{
5109:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5110:/usr/include/c++/11/bits/basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
5111:/usr/include/c++/11/bits/basic_string.h **** 	}
5112:/usr/include/c++/11/bits/basic_string.h **** 
5113:/usr/include/c++/11/bits/basic_string.h ****       /**
5114:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
5115:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos1  The position to replace at.
5116:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1    The number of characters to replace.
5117:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5118:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
5119:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n2    The number of characters to insert.
5120:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
5121:/usr/include/c++/11/bits/basic_string.h ****       */
5122:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
5123:/usr/include/c++/11/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
5124:/usr/include/c++/11/bits/basic_string.h ****         replace(size_type __pos1, size_type __n1, const _Tp& __svt,
5125:/usr/include/c++/11/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
5126:/usr/include/c++/11/bits/basic_string.h **** 	{
5127:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5128:/usr/include/c++/11/bits/basic_string.h **** 	  return this->replace(__pos1, __n1,
5129:/usr/include/c++/11/bits/basic_string.h **** 	      __sv.data()
5130:/usr/include/c++/11/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
5131:/usr/include/c++/11/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
5132:/usr/include/c++/11/bits/basic_string.h **** 	}
5133:/usr/include/c++/11/bits/basic_string.h **** 
5134:/usr/include/c++/11/bits/basic_string.h ****       /**
5135:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
5136:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i1    An iterator referencing the start position
5137:/usr/include/c++/11/bits/basic_string.h ****           to replace at.
5138:/usr/include/c++/11/bits/basic_string.h ****        *  @param __i2    An iterator referencing the end position
5139:/usr/include/c++/11/bits/basic_string.h ****           for the replace.
5140:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5141:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Reference to this string.
5142:/usr/include/c++/11/bits/basic_string.h ****       */
5143:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
5144:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
5145:/usr/include/c++/11/bits/basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
5146:/usr/include/c++/11/bits/basic_string.h **** 	{
5147:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5148:/usr/include/c++/11/bits/basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
5149:/usr/include/c++/11/bits/basic_string.h **** 	}
5150:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
5151:/usr/include/c++/11/bits/basic_string.h **** 
5152:/usr/include/c++/11/bits/basic_string.h ****     private:
5153:/usr/include/c++/11/bits/basic_string.h ****       template<class _Integer>
5154:/usr/include/c++/11/bits/basic_string.h **** 	basic_string&
5155:/usr/include/c++/11/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,
5156:/usr/include/c++/11/bits/basic_string.h **** 			    _Integer __val, __true_type)
5157:/usr/include/c++/11/bits/basic_string.h ****         { return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __val); }
5158:/usr/include/c++/11/bits/basic_string.h **** 
5159:/usr/include/c++/11/bits/basic_string.h ****       template<class _InputIterator>
5160:/usr/include/c++/11/bits/basic_string.h **** 	basic_string&
5161:/usr/include/c++/11/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
5162:/usr/include/c++/11/bits/basic_string.h **** 			    _InputIterator __k2, __false_type);
5163:/usr/include/c++/11/bits/basic_string.h **** 
5164:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
5165:/usr/include/c++/11/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
5166:/usr/include/c++/11/bits/basic_string.h **** 		     _CharT __c);
5167:/usr/include/c++/11/bits/basic_string.h **** 
5168:/usr/include/c++/11/bits/basic_string.h ****       basic_string&
5169:/usr/include/c++/11/bits/basic_string.h ****       _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
5170:/usr/include/c++/11/bits/basic_string.h **** 		      size_type __n2);
5171:/usr/include/c++/11/bits/basic_string.h **** 
5172:/usr/include/c++/11/bits/basic_string.h ****       // _S_construct_aux is used to implement the 21.3.1 para 15 which
5173:/usr/include/c++/11/bits/basic_string.h ****       // requires special behaviour if _InIter is an integral type
5174:/usr/include/c++/11/bits/basic_string.h ****       template<class _InIterator>
5175:/usr/include/c++/11/bits/basic_string.h ****         static _CharT*
5176:/usr/include/c++/11/bits/basic_string.h ****         _S_construct_aux(_InIterator __beg, _InIterator __end,
5177:/usr/include/c++/11/bits/basic_string.h **** 			 const _Alloc& __a, __false_type)
5178:/usr/include/c++/11/bits/basic_string.h **** 	{
5179:/usr/include/c++/11/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
5180:/usr/include/c++/11/bits/basic_string.h ****           return _S_construct(__beg, __end, __a, _Tag());
5181:/usr/include/c++/11/bits/basic_string.h **** 	}
5182:/usr/include/c++/11/bits/basic_string.h **** 
5183:/usr/include/c++/11/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5184:/usr/include/c++/11/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
5185:/usr/include/c++/11/bits/basic_string.h ****       template<class _Integer>
5186:/usr/include/c++/11/bits/basic_string.h ****         static _CharT*
5187:/usr/include/c++/11/bits/basic_string.h ****         _S_construct_aux(_Integer __beg, _Integer __end,
5188:/usr/include/c++/11/bits/basic_string.h **** 			 const _Alloc& __a, __true_type)
5189:/usr/include/c++/11/bits/basic_string.h ****         { return _S_construct_aux_2(static_cast<size_type>(__beg),
5190:/usr/include/c++/11/bits/basic_string.h **** 				    __end, __a); }
5191:/usr/include/c++/11/bits/basic_string.h **** 
5192:/usr/include/c++/11/bits/basic_string.h ****       static _CharT*
5193:/usr/include/c++/11/bits/basic_string.h ****       _S_construct_aux_2(size_type __req, _CharT __c, const _Alloc& __a)
5194:/usr/include/c++/11/bits/basic_string.h ****       { return _S_construct(__req, __c, __a); }
5195:/usr/include/c++/11/bits/basic_string.h **** 
5196:/usr/include/c++/11/bits/basic_string.h ****       template<class _InIterator>
5197:/usr/include/c++/11/bits/basic_string.h ****         static _CharT*
5198:/usr/include/c++/11/bits/basic_string.h ****         _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)
5199:/usr/include/c++/11/bits/basic_string.h **** 	{
5200:/usr/include/c++/11/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
5201:/usr/include/c++/11/bits/basic_string.h **** 	  return _S_construct_aux(__beg, __end, __a, _Integral());
5202:/usr/include/c++/11/bits/basic_string.h ****         }
5203:/usr/include/c++/11/bits/basic_string.h **** 
5204:/usr/include/c++/11/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
5205:/usr/include/c++/11/bits/basic_string.h ****       template<class _InIterator>
5206:/usr/include/c++/11/bits/basic_string.h ****         static _CharT*
5207:/usr/include/c++/11/bits/basic_string.h ****          _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
5208:/usr/include/c++/11/bits/basic_string.h **** 		      input_iterator_tag);
5209:/usr/include/c++/11/bits/basic_string.h **** 
5210:/usr/include/c++/11/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
5211:/usr/include/c++/11/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
5212:/usr/include/c++/11/bits/basic_string.h ****       template<class _FwdIterator>
5213:/usr/include/c++/11/bits/basic_string.h ****         static _CharT*
5214:/usr/include/c++/11/bits/basic_string.h ****         _S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc& __a,
5215:/usr/include/c++/11/bits/basic_string.h **** 		     forward_iterator_tag);
5216:/usr/include/c++/11/bits/basic_string.h **** 
5217:/usr/include/c++/11/bits/basic_string.h ****       static _CharT*
5218:/usr/include/c++/11/bits/basic_string.h ****       _S_construct(size_type __req, _CharT __c, const _Alloc& __a);
5219:/usr/include/c++/11/bits/basic_string.h **** 
5220:/usr/include/c++/11/bits/basic_string.h ****     public:
5221:/usr/include/c++/11/bits/basic_string.h **** 
5222:/usr/include/c++/11/bits/basic_string.h ****       /**
5223:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Copy substring into C string.
5224:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to copy value into.
5225:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
5226:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
5227:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Number of characters actually copied
5228:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5229:/usr/include/c++/11/bits/basic_string.h ****        *
5230:/usr/include/c++/11/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
5231:/usr/include/c++/11/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
5232:/usr/include/c++/11/bits/basic_string.h ****        *  out_of_range is thrown.
5233:/usr/include/c++/11/bits/basic_string.h ****       */
5234:/usr/include/c++/11/bits/basic_string.h ****       size_type
5235:/usr/include/c++/11/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
5236:/usr/include/c++/11/bits/basic_string.h **** 
5237:/usr/include/c++/11/bits/basic_string.h ****       /**
5238:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Swap contents with another string.
5239:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  String to swap with.
5240:/usr/include/c++/11/bits/basic_string.h ****        *
5241:/usr/include/c++/11/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
5242:/usr/include/c++/11/bits/basic_string.h ****        *  time.
5243:/usr/include/c++/11/bits/basic_string.h ****       */
5244:/usr/include/c++/11/bits/basic_string.h ****       void
5245:/usr/include/c++/11/bits/basic_string.h ****       swap(basic_string& __s)
5246:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value);
5247:/usr/include/c++/11/bits/basic_string.h **** 
5248:/usr/include/c++/11/bits/basic_string.h ****       // String operations:
5249:/usr/include/c++/11/bits/basic_string.h ****       /**
5250:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
5251:/usr/include/c++/11/bits/basic_string.h ****        *
5252:/usr/include/c++/11/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
5253:/usr/include/c++/11/bits/basic_string.h ****        *  happen.
5254:/usr/include/c++/11/bits/basic_string.h ****       */
5255:/usr/include/c++/11/bits/basic_string.h ****       const _CharT*
5256:/usr/include/c++/11/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
5257:/usr/include/c++/11/bits/basic_string.h ****       { return _M_data(); }
5258:/usr/include/c++/11/bits/basic_string.h **** 
5259:/usr/include/c++/11/bits/basic_string.h ****       /**
5260:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
5261:/usr/include/c++/11/bits/basic_string.h ****        *
5262:/usr/include/c++/11/bits/basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
5263:/usr/include/c++/11/bits/basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
5264:/usr/include/c++/11/bits/basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
5265:/usr/include/c++/11/bits/basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
5266:/usr/include/c++/11/bits/basic_string.h ****       */
5267:/usr/include/c++/11/bits/basic_string.h ****       const _CharT*
5268:/usr/include/c++/11/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
5269:/usr/include/c++/11/bits/basic_string.h ****       { return _M_data(); }
5270:/usr/include/c++/11/bits/basic_string.h **** 
5271:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
5272:/usr/include/c++/11/bits/basic_string.h ****       /**
5273:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Return non-const pointer to contents.
5274:/usr/include/c++/11/bits/basic_string.h ****        *
5275:/usr/include/c++/11/bits/basic_string.h ****        *  This is a pointer to the character sequence held by the string.
5276:/usr/include/c++/11/bits/basic_string.h ****        *  Modifying the characters in the sequence is allowed.
5277:/usr/include/c++/11/bits/basic_string.h ****       */
5278:/usr/include/c++/11/bits/basic_string.h ****       _CharT*
5279:/usr/include/c++/11/bits/basic_string.h ****       data() noexcept
5280:/usr/include/c++/11/bits/basic_string.h ****       {
5281:/usr/include/c++/11/bits/basic_string.h **** 	_M_leak();
5282:/usr/include/c++/11/bits/basic_string.h **** 	return _M_data();
5283:/usr/include/c++/11/bits/basic_string.h ****       }
5284:/usr/include/c++/11/bits/basic_string.h **** #endif
5285:/usr/include/c++/11/bits/basic_string.h **** 
5286:/usr/include/c++/11/bits/basic_string.h ****       /**
5287:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
5288:/usr/include/c++/11/bits/basic_string.h ****       */
5289:/usr/include/c++/11/bits/basic_string.h ****       allocator_type
5290:/usr/include/c++/11/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
5291:/usr/include/c++/11/bits/basic_string.h ****       { return _M_dataplus; }
5292:/usr/include/c++/11/bits/basic_string.h **** 
5293:/usr/include/c++/11/bits/basic_string.h ****       /**
5294:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a C substring.
5295:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to locate.
5296:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5297:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
5298:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5299:/usr/include/c++/11/bits/basic_string.h ****        *
5300:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
5301:/usr/include/c++/11/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5302:/usr/include/c++/11/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
5303:/usr/include/c++/11/bits/basic_string.h ****        *  npos.
5304:/usr/include/c++/11/bits/basic_string.h ****       */
5305:/usr/include/c++/11/bits/basic_string.h ****       size_type
5306:/usr/include/c++/11/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
5307:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5308:/usr/include/c++/11/bits/basic_string.h **** 
5309:/usr/include/c++/11/bits/basic_string.h ****       /**
5310:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a string.
5311:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String to locate.
5312:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5313:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5314:/usr/include/c++/11/bits/basic_string.h ****        *
5315:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
5316:/usr/include/c++/11/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
5317:/usr/include/c++/11/bits/basic_string.h ****        *  found, returns npos.
5318:/usr/include/c++/11/bits/basic_string.h ****       */
5319:/usr/include/c++/11/bits/basic_string.h ****       size_type
5320:/usr/include/c++/11/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
5321:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5322:/usr/include/c++/11/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
5323:/usr/include/c++/11/bits/basic_string.h **** 
5324:/usr/include/c++/11/bits/basic_string.h ****       /**
5325:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a C string.
5326:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to locate.
5327:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5328:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5329:/usr/include/c++/11/bits/basic_string.h ****        *
5330:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
5331:/usr/include/c++/11/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
5332:/usr/include/c++/11/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
5333:/usr/include/c++/11/bits/basic_string.h ****       */
5334:/usr/include/c++/11/bits/basic_string.h ****       size_type
5335:/usr/include/c++/11/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5336:/usr/include/c++/11/bits/basic_string.h ****       {
5337:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5338:/usr/include/c++/11/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
5339:/usr/include/c++/11/bits/basic_string.h ****       }
5340:/usr/include/c++/11/bits/basic_string.h **** 
5341:/usr/include/c++/11/bits/basic_string.h ****       /**
5342:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character.
5343:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to locate.
5344:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5345:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
5346:/usr/include/c++/11/bits/basic_string.h ****        *
5347:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
5348:/usr/include/c++/11/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5349:/usr/include/c++/11/bits/basic_string.h ****        *  found.  If not found, returns npos.
5350:/usr/include/c++/11/bits/basic_string.h ****       */
5351:/usr/include/c++/11/bits/basic_string.h ****       size_type
5352:/usr/include/c++/11/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
5353:/usr/include/c++/11/bits/basic_string.h **** 
5354:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
5355:/usr/include/c++/11/bits/basic_string.h ****       /**
5356:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a string_view.
5357:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5358:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5359:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5360:/usr/include/c++/11/bits/basic_string.h ****       */
5361:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
5362:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5363:/usr/include/c++/11/bits/basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
5364:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5365:/usr/include/c++/11/bits/basic_string.h **** 	{
5366:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5367:/usr/include/c++/11/bits/basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
5368:/usr/include/c++/11/bits/basic_string.h **** 	}
5369:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
5370:/usr/include/c++/11/bits/basic_string.h **** 
5371:/usr/include/c++/11/bits/basic_string.h ****       /**
5372:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a string.
5373:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String to locate.
5374:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5375:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5376:/usr/include/c++/11/bits/basic_string.h ****        *
5377:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
5378:/usr/include/c++/11/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
5379:/usr/include/c++/11/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
5380:/usr/include/c++/11/bits/basic_string.h ****       */
5381:/usr/include/c++/11/bits/basic_string.h ****       size_type
5382:/usr/include/c++/11/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
5383:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5384:/usr/include/c++/11/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
5385:/usr/include/c++/11/bits/basic_string.h **** 
5386:/usr/include/c++/11/bits/basic_string.h ****       /**
5387:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
5388:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to locate.
5389:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5390:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5391:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5392:/usr/include/c++/11/bits/basic_string.h ****        *
5393:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
5394:/usr/include/c++/11/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5395:/usr/include/c++/11/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
5396:/usr/include/c++/11/bits/basic_string.h ****        *  npos.
5397:/usr/include/c++/11/bits/basic_string.h ****       */
5398:/usr/include/c++/11/bits/basic_string.h ****       size_type
5399:/usr/include/c++/11/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
5400:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5401:/usr/include/c++/11/bits/basic_string.h **** 
5402:/usr/include/c++/11/bits/basic_string.h ****       /**
5403:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a C string.
5404:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to locate.
5405:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
5406:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
5407:/usr/include/c++/11/bits/basic_string.h ****        *
5408:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
5409:/usr/include/c++/11/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
5410:/usr/include/c++/11/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
5411:/usr/include/c++/11/bits/basic_string.h ****       */
5412:/usr/include/c++/11/bits/basic_string.h ****       size_type
5413:/usr/include/c++/11/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5414:/usr/include/c++/11/bits/basic_string.h ****       {
5415:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5416:/usr/include/c++/11/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
5417:/usr/include/c++/11/bits/basic_string.h ****       }
5418:/usr/include/c++/11/bits/basic_string.h **** 
5419:/usr/include/c++/11/bits/basic_string.h ****       /**
5420:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character.
5421:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to locate.
5422:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5423:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
5424:/usr/include/c++/11/bits/basic_string.h ****        *
5425:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5426:/usr/include/c++/11/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5427:/usr/include/c++/11/bits/basic_string.h ****        *  found.  If not found, returns npos.
5428:/usr/include/c++/11/bits/basic_string.h ****       */
5429:/usr/include/c++/11/bits/basic_string.h ****       size_type
5430:/usr/include/c++/11/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
5431:/usr/include/c++/11/bits/basic_string.h **** 
5432:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
5433:/usr/include/c++/11/bits/basic_string.h ****       /**
5434:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a string_view.
5435:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5436:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5437:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5438:/usr/include/c++/11/bits/basic_string.h ****       */
5439:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
5440:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5441:/usr/include/c++/11/bits/basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
5442:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5443:/usr/include/c++/11/bits/basic_string.h **** 	{
5444:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5445:/usr/include/c++/11/bits/basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
5446:/usr/include/c++/11/bits/basic_string.h **** 	}
5447:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
5448:/usr/include/c++/11/bits/basic_string.h **** 
5449:/usr/include/c++/11/bits/basic_string.h ****       /**
5450:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character of string.
5451:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
5452:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5453:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
5454:/usr/include/c++/11/bits/basic_string.h ****        *
5455:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5456:/usr/include/c++/11/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
5457:/usr/include/c++/11/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5458:/usr/include/c++/11/bits/basic_string.h ****        *  npos.
5459:/usr/include/c++/11/bits/basic_string.h ****       */
5460:/usr/include/c++/11/bits/basic_string.h ****       size_type
5461:/usr/include/c++/11/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
5462:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5463:/usr/include/c++/11/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
5464:/usr/include/c++/11/bits/basic_string.h **** 
5465:/usr/include/c++/11/bits/basic_string.h ****       /**
5466:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
5467:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
5468:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5469:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5470:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
5471:/usr/include/c++/11/bits/basic_string.h ****        *
5472:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5473:/usr/include/c++/11/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5474:/usr/include/c++/11/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
5475:/usr/include/c++/11/bits/basic_string.h ****        *  returns npos.
5476:/usr/include/c++/11/bits/basic_string.h ****       */
5477:/usr/include/c++/11/bits/basic_string.h ****       size_type
5478:/usr/include/c++/11/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
5479:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5480:/usr/include/c++/11/bits/basic_string.h **** 
5481:/usr/include/c++/11/bits/basic_string.h ****       /**
5482:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
5483:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
5484:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5485:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
5486:/usr/include/c++/11/bits/basic_string.h ****        *
5487:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5488:/usr/include/c++/11/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5489:/usr/include/c++/11/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5490:/usr/include/c++/11/bits/basic_string.h ****       */
5491:/usr/include/c++/11/bits/basic_string.h ****       size_type
5492:/usr/include/c++/11/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
5493:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5494:/usr/include/c++/11/bits/basic_string.h ****       {
5495:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5496:/usr/include/c++/11/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
5497:/usr/include/c++/11/bits/basic_string.h ****       }
5498:/usr/include/c++/11/bits/basic_string.h **** 
5499:/usr/include/c++/11/bits/basic_string.h ****       /**
5500:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character.
5501:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to locate.
5502:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5503:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
5504:/usr/include/c++/11/bits/basic_string.h ****        *
5505:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
5506:/usr/include/c++/11/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
5507:/usr/include/c++/11/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
5508:/usr/include/c++/11/bits/basic_string.h ****        *
5509:/usr/include/c++/11/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
5510:/usr/include/c++/11/bits/basic_string.h ****       */
5511:/usr/include/c++/11/bits/basic_string.h ****       size_type
5512:/usr/include/c++/11/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5513:/usr/include/c++/11/bits/basic_string.h ****       { return this->find(__c, __pos); }
5514:/usr/include/c++/11/bits/basic_string.h **** 
5515:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
5516:/usr/include/c++/11/bits/basic_string.h ****       /**
5517:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character of a string_view.
5518:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5519:/usr/include/c++/11/bits/basic_string.h ****        *                characters to locate.
5520:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5521:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
5522:/usr/include/c++/11/bits/basic_string.h ****       */
5523:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
5524:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5525:/usr/include/c++/11/bits/basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
5526:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5527:/usr/include/c++/11/bits/basic_string.h **** 	{
5528:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5529:/usr/include/c++/11/bits/basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
5530:/usr/include/c++/11/bits/basic_string.h **** 	}
5531:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
5532:/usr/include/c++/11/bits/basic_string.h **** 
5533:/usr/include/c++/11/bits/basic_string.h ****       /**
5534:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
5535:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
5536:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5537:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
5538:/usr/include/c++/11/bits/basic_string.h ****        *
5539:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5540:/usr/include/c++/11/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
5541:/usr/include/c++/11/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5542:/usr/include/c++/11/bits/basic_string.h ****        *  npos.
5543:/usr/include/c++/11/bits/basic_string.h ****       */
5544:/usr/include/c++/11/bits/basic_string.h ****       size_type
5545:/usr/include/c++/11/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
5546:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5547:/usr/include/c++/11/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
5548:/usr/include/c++/11/bits/basic_string.h **** 
5549:/usr/include/c++/11/bits/basic_string.h ****       /**
5550:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
5551:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
5552:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5553:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5554:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
5555:/usr/include/c++/11/bits/basic_string.h ****        *
5556:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5557:/usr/include/c++/11/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5558:/usr/include/c++/11/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
5559:/usr/include/c++/11/bits/basic_string.h ****        *  returns npos.
5560:/usr/include/c++/11/bits/basic_string.h ****       */
5561:/usr/include/c++/11/bits/basic_string.h ****       size_type
5562:/usr/include/c++/11/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
5563:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5564:/usr/include/c++/11/bits/basic_string.h **** 
5565:/usr/include/c++/11/bits/basic_string.h ****       /**
5566:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
5567:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
5568:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5569:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
5570:/usr/include/c++/11/bits/basic_string.h ****        *
5571:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5572:/usr/include/c++/11/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5573:/usr/include/c++/11/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5574:/usr/include/c++/11/bits/basic_string.h ****       */
5575:/usr/include/c++/11/bits/basic_string.h ****       size_type
5576:/usr/include/c++/11/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
5577:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5578:/usr/include/c++/11/bits/basic_string.h ****       {
5579:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5580:/usr/include/c++/11/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
5581:/usr/include/c++/11/bits/basic_string.h ****       }
5582:/usr/include/c++/11/bits/basic_string.h **** 
5583:/usr/include/c++/11/bits/basic_string.h ****       /**
5584:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character.
5585:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to locate.
5586:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5587:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
5588:/usr/include/c++/11/bits/basic_string.h ****        *
5589:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5590:/usr/include/c++/11/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5591:/usr/include/c++/11/bits/basic_string.h ****        *  found.  If not found, returns npos.
5592:/usr/include/c++/11/bits/basic_string.h ****        *
5593:/usr/include/c++/11/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
5594:/usr/include/c++/11/bits/basic_string.h ****       */
5595:/usr/include/c++/11/bits/basic_string.h ****       size_type
5596:/usr/include/c++/11/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5597:/usr/include/c++/11/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
5598:/usr/include/c++/11/bits/basic_string.h **** 
5599:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
5600:/usr/include/c++/11/bits/basic_string.h ****       /**
5601:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
5602:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5603:/usr/include/c++/11/bits/basic_string.h ****        *                characters to locate.
5604:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5605:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
5606:/usr/include/c++/11/bits/basic_string.h ****       */
5607:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
5608:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5609:/usr/include/c++/11/bits/basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
5610:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5611:/usr/include/c++/11/bits/basic_string.h **** 	{
5612:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5613:/usr/include/c++/11/bits/basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
5614:/usr/include/c++/11/bits/basic_string.h **** 	}
5615:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
5616:/usr/include/c++/11/bits/basic_string.h **** 
5617:/usr/include/c++/11/bits/basic_string.h ****       /**
5618:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
5619:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
5620:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5621:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
5622:/usr/include/c++/11/bits/basic_string.h ****        *
5623:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
5624:/usr/include/c++/11/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
5625:/usr/include/c++/11/bits/basic_string.h ****        *  was found.  If not found, returns npos.
5626:/usr/include/c++/11/bits/basic_string.h ****       */
5627:/usr/include/c++/11/bits/basic_string.h ****       size_type
5628:/usr/include/c++/11/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
5629:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5630:/usr/include/c++/11/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
5631:/usr/include/c++/11/bits/basic_string.h **** 
5632:/usr/include/c++/11/bits/basic_string.h ****       /**
5633:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
5634:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5635:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5636:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
5637:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
5638:/usr/include/c++/11/bits/basic_string.h ****        *
5639:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5640:/usr/include/c++/11/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
5641:/usr/include/c++/11/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5642:/usr/include/c++/11/bits/basic_string.h ****        *  found.  If not found, returns npos.
5643:/usr/include/c++/11/bits/basic_string.h ****       */
5644:/usr/include/c++/11/bits/basic_string.h ****       size_type
5645:/usr/include/c++/11/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
5646:/usr/include/c++/11/bits/basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
5647:/usr/include/c++/11/bits/basic_string.h **** 
5648:/usr/include/c++/11/bits/basic_string.h ****       /**
5649:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
5650:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5651:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5652:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
5653:/usr/include/c++/11/bits/basic_string.h ****        *
5654:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5655:/usr/include/c++/11/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
5656:/usr/include/c++/11/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5657:/usr/include/c++/11/bits/basic_string.h ****       */
5658:/usr/include/c++/11/bits/basic_string.h ****       size_type
5659:/usr/include/c++/11/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
5660:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5661:/usr/include/c++/11/bits/basic_string.h ****       {
5662:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5663:/usr/include/c++/11/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
5664:/usr/include/c++/11/bits/basic_string.h ****       }
5665:/usr/include/c++/11/bits/basic_string.h **** 
5666:/usr/include/c++/11/bits/basic_string.h ****       /**
5667:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a different character.
5668:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to avoid.
5669:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5670:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
5671:/usr/include/c++/11/bits/basic_string.h ****        *
5672:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
5673:/usr/include/c++/11/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
5674:/usr/include/c++/11/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
5675:/usr/include/c++/11/bits/basic_string.h ****       */
5676:/usr/include/c++/11/bits/basic_string.h ****       size_type
5677:/usr/include/c++/11/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
5678:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5679:/usr/include/c++/11/bits/basic_string.h **** 
5680:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
5681:/usr/include/c++/11/bits/basic_string.h ****       /**
5682:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find position of a character not in a string_view.
5683:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5684:/usr/include/c++/11/bits/basic_string.h ****        *                characters to avoid.
5685:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5686:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of first occurrence.
5687:/usr/include/c++/11/bits/basic_string.h ****        */
5688:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
5689:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5690:/usr/include/c++/11/bits/basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
5691:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5692:/usr/include/c++/11/bits/basic_string.h **** 	{
5693:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5694:/usr/include/c++/11/bits/basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
5695:/usr/include/c++/11/bits/basic_string.h **** 	}
5696:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
5697:/usr/include/c++/11/bits/basic_string.h **** 
5698:/usr/include/c++/11/bits/basic_string.h ****       /**
5699:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
5700:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
5701:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5702:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
5703:/usr/include/c++/11/bits/basic_string.h ****        *
5704:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5705:/usr/include/c++/11/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
5706:/usr/include/c++/11/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5707:/usr/include/c++/11/bits/basic_string.h ****        *  npos.
5708:/usr/include/c++/11/bits/basic_string.h ****       */
5709:/usr/include/c++/11/bits/basic_string.h ****       size_type
5710:/usr/include/c++/11/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
5711:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5712:/usr/include/c++/11/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
5713:/usr/include/c++/11/bits/basic_string.h **** 
5714:/usr/include/c++/11/bits/basic_string.h ****       /**
5715:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
5716:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5717:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5718:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
5719:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
5720:/usr/include/c++/11/bits/basic_string.h ****        *
5721:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
5722:/usr/include/c++/11/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
5723:/usr/include/c++/11/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
5724:/usr/include/c++/11/bits/basic_string.h ****        *  returns npos.
5725:/usr/include/c++/11/bits/basic_string.h ****       */
5726:/usr/include/c++/11/bits/basic_string.h ****       size_type
5727:/usr/include/c++/11/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
5728:/usr/include/c++/11/bits/basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
5729:/usr/include/c++/11/bits/basic_string.h ****       /**
5730:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
5731:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5732:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5733:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
5734:/usr/include/c++/11/bits/basic_string.h ****        *
5735:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5736:/usr/include/c++/11/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
5737:/usr/include/c++/11/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5738:/usr/include/c++/11/bits/basic_string.h ****        *  npos.
5739:/usr/include/c++/11/bits/basic_string.h ****       */
5740:/usr/include/c++/11/bits/basic_string.h ****       size_type
5741:/usr/include/c++/11/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
5742:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5743:/usr/include/c++/11/bits/basic_string.h ****       {
5744:/usr/include/c++/11/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5745:/usr/include/c++/11/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
5746:/usr/include/c++/11/bits/basic_string.h ****       }
5747:/usr/include/c++/11/bits/basic_string.h **** 
5748:/usr/include/c++/11/bits/basic_string.h ****       /**
5749:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a different character.
5750:/usr/include/c++/11/bits/basic_string.h ****        *  @param __c  Character to avoid.
5751:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5752:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
5753:/usr/include/c++/11/bits/basic_string.h ****        *
5754:/usr/include/c++/11/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
5755:/usr/include/c++/11/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
5756:/usr/include/c++/11/bits/basic_string.h ****        *  found.  If not found, returns npos.
5757:/usr/include/c++/11/bits/basic_string.h ****       */
5758:/usr/include/c++/11/bits/basic_string.h ****       size_type
5759:/usr/include/c++/11/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
5760:/usr/include/c++/11/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5761:/usr/include/c++/11/bits/basic_string.h **** 
5762:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
5763:/usr/include/c++/11/bits/basic_string.h ****       /**
5764:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
5765:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5766:/usr/include/c++/11/bits/basic_string.h ****        *                characters to avoid.
5767:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5768:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Index of last occurrence.
5769:/usr/include/c++/11/bits/basic_string.h ****        */
5770:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
5771:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5772:/usr/include/c++/11/bits/basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
5773:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5774:/usr/include/c++/11/bits/basic_string.h **** 	{
5775:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5776:/usr/include/c++/11/bits/basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
5777:/usr/include/c++/11/bits/basic_string.h **** 	}
5778:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
5779:/usr/include/c++/11/bits/basic_string.h **** 
5780:/usr/include/c++/11/bits/basic_string.h ****       /**
5781:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Get a substring.
5782:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
5783:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
5784:/usr/include/c++/11/bits/basic_string.h ****        *  @return  The new string.
5785:/usr/include/c++/11/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5786:/usr/include/c++/11/bits/basic_string.h ****        *
5787:/usr/include/c++/11/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
5788:/usr/include/c++/11/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
5789:/usr/include/c++/11/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
5790:/usr/include/c++/11/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
5791:/usr/include/c++/11/bits/basic_string.h ****       */
5792:/usr/include/c++/11/bits/basic_string.h ****       basic_string
5793:/usr/include/c++/11/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
5794:/usr/include/c++/11/bits/basic_string.h ****       { return basic_string(*this,
5795:/usr/include/c++/11/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
5796:/usr/include/c++/11/bits/basic_string.h **** 
5797:/usr/include/c++/11/bits/basic_string.h ****       /**
5798:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare to a string.
5799:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String to compare against.
5800:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5801:/usr/include/c++/11/bits/basic_string.h ****        *
5802:/usr/include/c++/11/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
5803:/usr/include/c++/11/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
5804:/usr/include/c++/11/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
5805:/usr/include/c++/11/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
5806:/usr/include/c++/11/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
5807:/usr/include/c++/11/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
5808:/usr/include/c++/11/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5809:/usr/include/c++/11/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
5810:/usr/include/c++/11/bits/basic_string.h ****       */
5811:/usr/include/c++/11/bits/basic_string.h ****       int
5812:/usr/include/c++/11/bits/basic_string.h ****       compare(const basic_string& __str) const
5813:/usr/include/c++/11/bits/basic_string.h ****       {
5814:/usr/include/c++/11/bits/basic_string.h **** 	const size_type __size = this->size();
5815:/usr/include/c++/11/bits/basic_string.h **** 	const size_type __osize = __str.size();
5816:/usr/include/c++/11/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
5817:/usr/include/c++/11/bits/basic_string.h **** 
5818:/usr/include/c++/11/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
5819:/usr/include/c++/11/bits/basic_string.h **** 	if (!__r)
5820:/usr/include/c++/11/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
5821:/usr/include/c++/11/bits/basic_string.h **** 	return __r;
5822:/usr/include/c++/11/bits/basic_string.h ****       }
5823:/usr/include/c++/11/bits/basic_string.h **** 
5824:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201703L
5825:/usr/include/c++/11/bits/basic_string.h ****       /**
5826:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5827:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
5828:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5829:/usr/include/c++/11/bits/basic_string.h ****        */
5830:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
5831:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, int>
5832:/usr/include/c++/11/bits/basic_string.h **** 	compare(const _Tp& __svt) const
5833:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5834:/usr/include/c++/11/bits/basic_string.h **** 	{
5835:/usr/include/c++/11/bits/basic_string.h **** 	   __sv_type __sv = __svt;
5836:/usr/include/c++/11/bits/basic_string.h **** 	  const size_type __size = this->size();
5837:/usr/include/c++/11/bits/basic_string.h **** 	  const size_type __osize = __sv.size();
5838:/usr/include/c++/11/bits/basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
5839:/usr/include/c++/11/bits/basic_string.h **** 
5840:/usr/include/c++/11/bits/basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
5841:/usr/include/c++/11/bits/basic_string.h **** 	  if (!__r)
5842:/usr/include/c++/11/bits/basic_string.h **** 	    __r = _S_compare(__size, __osize);
5843:/usr/include/c++/11/bits/basic_string.h **** 	  return __r;
5844:/usr/include/c++/11/bits/basic_string.h **** 	}
5845:/usr/include/c++/11/bits/basic_string.h **** 
5846:/usr/include/c++/11/bits/basic_string.h ****       /**
5847:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5848:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
5849:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  The number of characters to compare.
5850:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
5851:/usr/include/c++/11/bits/basic_string.h ****        *                against.
5852:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5853:/usr/include/c++/11/bits/basic_string.h ****        */
5854:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
5855:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, int>
5856:/usr/include/c++/11/bits/basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
5857:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5858:/usr/include/c++/11/bits/basic_string.h **** 	{
5859:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5860:/usr/include/c++/11/bits/basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
5861:/usr/include/c++/11/bits/basic_string.h **** 	}
5862:/usr/include/c++/11/bits/basic_string.h **** 
5863:/usr/include/c++/11/bits/basic_string.h ****       /**
5864:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5865:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
5866:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  The number of characters to compare.
5867:/usr/include/c++/11/bits/basic_string.h ****        *  @param __svt   An object convertible to string_view to compare
5868:/usr/include/c++/11/bits/basic_string.h ****        *                 against.
5869:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
5870:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n2  The number of characters to compare.
5871:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5872:/usr/include/c++/11/bits/basic_string.h ****        */
5873:/usr/include/c++/11/bits/basic_string.h ****       template<typename _Tp>
5874:/usr/include/c++/11/bits/basic_string.h **** 	_If_sv<_Tp, int>
5875:/usr/include/c++/11/bits/basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
5876:/usr/include/c++/11/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
5877:/usr/include/c++/11/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5878:/usr/include/c++/11/bits/basic_string.h **** 	{
5879:/usr/include/c++/11/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5880:/usr/include/c++/11/bits/basic_string.h **** 	  return __sv_type(*this)
5881:/usr/include/c++/11/bits/basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
5882:/usr/include/c++/11/bits/basic_string.h **** 	}
5883:/usr/include/c++/11/bits/basic_string.h **** #endif // C++17
5884:/usr/include/c++/11/bits/basic_string.h **** 
5885:/usr/include/c++/11/bits/basic_string.h ****       /**
5886:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare substring to a string.
5887:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5888:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
5889:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String to compare against.
5890:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5891:/usr/include/c++/11/bits/basic_string.h ****        *
5892:/usr/include/c++/11/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
5893:/usr/include/c++/11/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
5894:/usr/include/c++/11/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
5895:/usr/include/c++/11/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
5896:/usr/include/c++/11/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
5897:/usr/include/c++/11/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
5898:/usr/include/c++/11/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
5899:/usr/include/c++/11/bits/basic_string.h ****        *  strings by calling
5900:/usr/include/c++/11/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
5901:/usr/include/c++/11/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
5902:/usr/include/c++/11/bits/basic_string.h ****        *  the shorter one is ordered first.
5903:/usr/include/c++/11/bits/basic_string.h ****       */
5904:/usr/include/c++/11/bits/basic_string.h ****       int
5905:/usr/include/c++/11/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
5906:/usr/include/c++/11/bits/basic_string.h **** 
5907:/usr/include/c++/11/bits/basic_string.h ****       /**
5908:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
5909:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
5910:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5911:/usr/include/c++/11/bits/basic_string.h ****        *  @param __str  String to compare against.
5912:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
5913:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
5914:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5915:/usr/include/c++/11/bits/basic_string.h ****        *
5916:/usr/include/c++/11/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5917:/usr/include/c++/11/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
5918:/usr/include/c++/11/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
5919:/usr/include/c++/11/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
5920:/usr/include/c++/11/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
5921:/usr/include/c++/11/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
5922:/usr/include/c++/11/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
5923:/usr/include/c++/11/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
5924:/usr/include/c++/11/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
5925:/usr/include/c++/11/bits/basic_string.h ****        *  calling
5926:/usr/include/c++/11/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
5927:/usr/include/c++/11/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5928:/usr/include/c++/11/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
5929:/usr/include/c++/11/bits/basic_string.h ****       */
5930:/usr/include/c++/11/bits/basic_string.h ****       int
5931:/usr/include/c++/11/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
5932:/usr/include/c++/11/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
5933:/usr/include/c++/11/bits/basic_string.h **** 
5934:/usr/include/c++/11/bits/basic_string.h ****       /**
5935:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare to a C string.
5936:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to compare against.
5937:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5938:/usr/include/c++/11/bits/basic_string.h ****        *
5939:/usr/include/c++/11/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
5940:/usr/include/c++/11/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
5941:/usr/include/c++/11/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
5942:/usr/include/c++/11/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
5943:/usr/include/c++/11/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
5944:/usr/include/c++/11/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
5945:/usr/include/c++/11/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
5946:/usr/include/c++/11/bits/basic_string.h ****        *  ordered first.
5947:/usr/include/c++/11/bits/basic_string.h ****       */
5948:/usr/include/c++/11/bits/basic_string.h ****       int
5949:/usr/include/c++/11/bits/basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
5950:/usr/include/c++/11/bits/basic_string.h **** 
5951:/usr/include/c++/11/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5952:/usr/include/c++/11/bits/basic_string.h ****       // 5 String::compare specification questionable
5953:/usr/include/c++/11/bits/basic_string.h ****       /**
5954:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
5955:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5956:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5957:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  C string to compare against.
5958:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5959:/usr/include/c++/11/bits/basic_string.h ****        *
5960:/usr/include/c++/11/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5961:/usr/include/c++/11/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
5962:/usr/include/c++/11/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
5963:/usr/include/c++/11/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
5964:/usr/include/c++/11/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
5965:/usr/include/c++/11/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
5966:/usr/include/c++/11/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
5967:/usr/include/c++/11/bits/basic_string.h ****        *  function then compares the two string by calling
5968:/usr/include/c++/11/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
5969:/usr/include/c++/11/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5970:/usr/include/c++/11/bits/basic_string.h ****        *  one is ordered first.
5971:/usr/include/c++/11/bits/basic_string.h ****       */
5972:/usr/include/c++/11/bits/basic_string.h ****       int
5973:/usr/include/c++/11/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
5974:/usr/include/c++/11/bits/basic_string.h **** 
5975:/usr/include/c++/11/bits/basic_string.h ****       /**
5976:/usr/include/c++/11/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
5977:/usr/include/c++/11/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5978:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5979:/usr/include/c++/11/bits/basic_string.h ****        *  @param __s  character %array to compare against.
5980:/usr/include/c++/11/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
5981:/usr/include/c++/11/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5982:/usr/include/c++/11/bits/basic_string.h ****        *
5983:/usr/include/c++/11/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5984:/usr/include/c++/11/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
5985:/usr/include/c++/11/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
5986:/usr/include/c++/11/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
5987:/usr/include/c++/11/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
5988:/usr/include/c++/11/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
5989:/usr/include/c++/11/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
5990:/usr/include/c++/11/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
5991:/usr/include/c++/11/bits/basic_string.h ****        *  function then compares the two strings by calling
5992:/usr/include/c++/11/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
5993:/usr/include/c++/11/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5994:/usr/include/c++/11/bits/basic_string.h ****        *  one is ordered first.
5995:/usr/include/c++/11/bits/basic_string.h ****        *
5996:/usr/include/c++/11/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
5997:/usr/include/c++/11/bits/basic_string.h ****        *  no special meaning.
5998:/usr/include/c++/11/bits/basic_string.h ****       */
5999:/usr/include/c++/11/bits/basic_string.h ****       int
6000:/usr/include/c++/11/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
6001:/usr/include/c++/11/bits/basic_string.h **** 	      size_type __n2) const;
6002:/usr/include/c++/11/bits/basic_string.h **** 
6003:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus > 201703L
6004:/usr/include/c++/11/bits/basic_string.h ****       bool
6005:/usr/include/c++/11/bits/basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
6006:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
6007:/usr/include/c++/11/bits/basic_string.h **** 
6008:/usr/include/c++/11/bits/basic_string.h ****       bool
6009:/usr/include/c++/11/bits/basic_string.h ****       starts_with(_CharT __x) const noexcept
6010:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
6011:/usr/include/c++/11/bits/basic_string.h **** 
6012:/usr/include/c++/11/bits/basic_string.h ****       bool
6013:/usr/include/c++/11/bits/basic_string.h ****       starts_with(const _CharT* __x) const noexcept
6014:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
6015:/usr/include/c++/11/bits/basic_string.h **** 
6016:/usr/include/c++/11/bits/basic_string.h ****       bool
6017:/usr/include/c++/11/bits/basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
6018:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
6019:/usr/include/c++/11/bits/basic_string.h **** 
6020:/usr/include/c++/11/bits/basic_string.h ****       bool
6021:/usr/include/c++/11/bits/basic_string.h ****       ends_with(_CharT __x) const noexcept
6022:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
6023:/usr/include/c++/11/bits/basic_string.h **** 
6024:/usr/include/c++/11/bits/basic_string.h ****       bool
6025:/usr/include/c++/11/bits/basic_string.h ****       ends_with(const _CharT* __x) const noexcept
6026:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
6027:/usr/include/c++/11/bits/basic_string.h **** #endif // C++20
6028:/usr/include/c++/11/bits/basic_string.h **** 
6029:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus > 202011L
6030:/usr/include/c++/11/bits/basic_string.h ****       bool
6031:/usr/include/c++/11/bits/basic_string.h ****       contains(basic_string_view<_CharT, _Traits> __x) const noexcept
6032:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).contains(__x); }
6033:/usr/include/c++/11/bits/basic_string.h **** 
6034:/usr/include/c++/11/bits/basic_string.h ****       bool
6035:/usr/include/c++/11/bits/basic_string.h ****       contains(_CharT __x) const noexcept
6036:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).contains(__x); }
6037:/usr/include/c++/11/bits/basic_string.h **** 
6038:/usr/include/c++/11/bits/basic_string.h ****       bool
6039:/usr/include/c++/11/bits/basic_string.h ****       contains(const _CharT* __x) const noexcept
6040:/usr/include/c++/11/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).contains(__x); }
6041:/usr/include/c++/11/bits/basic_string.h **** #endif // C++23
6042:/usr/include/c++/11/bits/basic_string.h **** 
6043:/usr/include/c++/11/bits/basic_string.h **** # ifdef _GLIBCXX_TM_TS_INTERNAL
6044:/usr/include/c++/11/bits/basic_string.h ****       friend void
6045:/usr/include/c++/11/bits/basic_string.h ****       ::_txnal_cow_string_C1_for_exceptions(void* that, const char* s,
6046:/usr/include/c++/11/bits/basic_string.h **** 					    void* exc);
6047:/usr/include/c++/11/bits/basic_string.h ****       friend const char*
6048:/usr/include/c++/11/bits/basic_string.h ****       ::_txnal_cow_string_c_str(const void *that);
6049:/usr/include/c++/11/bits/basic_string.h ****       friend void
6050:/usr/include/c++/11/bits/basic_string.h ****       ::_txnal_cow_string_D1(void *that);
6051:/usr/include/c++/11/bits/basic_string.h ****       friend void
6052:/usr/include/c++/11/bits/basic_string.h ****       ::_txnal_cow_string_D1_commit(void *that);
6053:/usr/include/c++/11/bits/basic_string.h **** # endif
6054:/usr/include/c++/11/bits/basic_string.h ****   };
6055:/usr/include/c++/11/bits/basic_string.h **** #endif  // !_GLIBCXX_USE_CXX11_ABI
6056:/usr/include/c++/11/bits/basic_string.h **** 
6057:/usr/include/c++/11/bits/basic_string.h **** #if __cpp_deduction_guides >= 201606
6058:/usr/include/c++/11/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
6059:/usr/include/c++/11/bits/basic_string.h ****   template<typename _InputIterator, typename _CharT
6060:/usr/include/c++/11/bits/basic_string.h **** 	     = typename iterator_traits<_InputIterator>::value_type,
6061:/usr/include/c++/11/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
6062:/usr/include/c++/11/bits/basic_string.h **** 	   typename = _RequireInputIter<_InputIterator>,
6063:/usr/include/c++/11/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6064:/usr/include/c++/11/bits/basic_string.h ****     basic_string(_InputIterator, _InputIterator, _Allocator = _Allocator())
6065:/usr/include/c++/11/bits/basic_string.h ****       -> basic_string<_CharT, char_traits<_CharT>, _Allocator>;
6066:/usr/include/c++/11/bits/basic_string.h **** 
6067:/usr/include/c++/11/bits/basic_string.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
6068:/usr/include/c++/11/bits/basic_string.h ****   // 3075. basic_string needs deduction guides from basic_string_view
6069:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits,
6070:/usr/include/c++/11/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
6071:/usr/include/c++/11/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6072:/usr/include/c++/11/bits/basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>, const _Allocator& = _Allocator())
6073:/usr/include/c++/11/bits/basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
6074:/usr/include/c++/11/bits/basic_string.h **** 
6075:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits,
6076:/usr/include/c++/11/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
6077:/usr/include/c++/11/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6078:/usr/include/c++/11/bits/basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>,
6079:/usr/include/c++/11/bits/basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6080:/usr/include/c++/11/bits/basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6081:/usr/include/c++/11/bits/basic_string.h **** 		 const _Allocator& = _Allocator())
6082:/usr/include/c++/11/bits/basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
6083:/usr/include/c++/11/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
6084:/usr/include/c++/11/bits/basic_string.h **** #endif
6085:/usr/include/c++/11/bits/basic_string.h **** 
6086:/usr/include/c++/11/bits/basic_string.h ****   // operator+
6087:/usr/include/c++/11/bits/basic_string.h ****   /**
6088:/usr/include/c++/11/bits/basic_string.h ****    *  @brief  Concatenate two strings.
6089:/usr/include/c++/11/bits/basic_string.h ****    *  @param __lhs  First string.
6090:/usr/include/c++/11/bits/basic_string.h ****    *  @param __rhs  Last string.
6091:/usr/include/c++/11/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6092:/usr/include/c++/11/bits/basic_string.h ****    */
6093:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6094:/usr/include/c++/11/bits/basic_string.h ****     basic_string<_CharT, _Traits, _Alloc>
6095:/usr/include/c++/11/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6096:/usr/include/c++/11/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6097:/usr/include/c++/11/bits/basic_string.h ****     {
6098:/usr/include/c++/11/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6099:/usr/include/c++/11/bits/basic_string.h ****       __str.append(__rhs);
6100:/usr/include/c++/11/bits/basic_string.h ****       return __str;
6101:/usr/include/c++/11/bits/basic_string.h ****     }
6102:/usr/include/c++/11/bits/basic_string.h **** 
6103:/usr/include/c++/11/bits/basic_string.h ****   /**
6104:/usr/include/c++/11/bits/basic_string.h ****    *  @brief  Concatenate C string and string.
6105:/usr/include/c++/11/bits/basic_string.h ****    *  @param __lhs  First string.
6106:/usr/include/c++/11/bits/basic_string.h ****    *  @param __rhs  Last string.
6107:/usr/include/c++/11/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6108:/usr/include/c++/11/bits/basic_string.h ****    */
6109:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6110:/usr/include/c++/11/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6111:/usr/include/c++/11/bits/basic_string.h ****     operator+(const _CharT* __lhs,
6112:/usr/include/c++/11/bits/basic_string.h **** 	      const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6113:/usr/include/c++/11/bits/basic_string.h **** 
6114:/usr/include/c++/11/bits/basic_string.h ****   /**
6115:/usr/include/c++/11/bits/basic_string.h ****    *  @brief  Concatenate character and string.
6116:/usr/include/c++/11/bits/basic_string.h ****    *  @param __lhs  First string.
6117:/usr/include/c++/11/bits/basic_string.h ****    *  @param __rhs  Last string.
6118:/usr/include/c++/11/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6119:/usr/include/c++/11/bits/basic_string.h ****    */
6120:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6121:/usr/include/c++/11/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6122:/usr/include/c++/11/bits/basic_string.h ****     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6123:/usr/include/c++/11/bits/basic_string.h **** 
6124:/usr/include/c++/11/bits/basic_string.h ****   /**
6125:/usr/include/c++/11/bits/basic_string.h ****    *  @brief  Concatenate string and C string.
6126:/usr/include/c++/11/bits/basic_string.h ****    *  @param __lhs  First string.
6127:/usr/include/c++/11/bits/basic_string.h ****    *  @param __rhs  Last string.
6128:/usr/include/c++/11/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6129:/usr/include/c++/11/bits/basic_string.h ****    */
6130:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6131:/usr/include/c++/11/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6132:/usr/include/c++/11/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6133:/usr/include/c++/11/bits/basic_string.h **** 	      const _CharT* __rhs)
6134:/usr/include/c++/11/bits/basic_string.h ****     {
6135:/usr/include/c++/11/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6136:/usr/include/c++/11/bits/basic_string.h ****       __str.append(__rhs);
6137:/usr/include/c++/11/bits/basic_string.h ****       return __str;
6138:/usr/include/c++/11/bits/basic_string.h ****     }
6139:/usr/include/c++/11/bits/basic_string.h **** 
6140:/usr/include/c++/11/bits/basic_string.h ****   /**
6141:/usr/include/c++/11/bits/basic_string.h ****    *  @brief  Concatenate string and character.
6142:/usr/include/c++/11/bits/basic_string.h ****    *  @param __lhs  First string.
6143:/usr/include/c++/11/bits/basic_string.h ****    *  @param __rhs  Last string.
6144:/usr/include/c++/11/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6145:/usr/include/c++/11/bits/basic_string.h ****    */
6146:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6147:/usr/include/c++/11/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6148:/usr/include/c++/11/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
6149:/usr/include/c++/11/bits/basic_string.h ****     {
6150:/usr/include/c++/11/bits/basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;
6151:/usr/include/c++/11/bits/basic_string.h ****       typedef typename __string_type::size_type		__size_type;
6152:/usr/include/c++/11/bits/basic_string.h ****       __string_type __str(__lhs);
6153:/usr/include/c++/11/bits/basic_string.h ****       __str.append(__size_type(1), __rhs);
6154:/usr/include/c++/11/bits/basic_string.h ****       return __str;
6155:/usr/include/c++/11/bits/basic_string.h ****     }
6156:/usr/include/c++/11/bits/basic_string.h **** 
6157:/usr/include/c++/11/bits/basic_string.h **** #if __cplusplus >= 201103L
6158:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6159:/usr/include/c++/11/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6160:/usr/include/c++/11/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6161:/usr/include/c++/11/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6162:/usr/include/c++/11/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6163:/usr/include/c++/11/bits/basic_string.h **** 
6164:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6165:/usr/include/c++/11/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6166:/usr/include/c++/11/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6167:/usr/include/c++/11/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6168:/usr/include/c++/11/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6169:/usr/include/c++/11/bits/basic_string.h **** 
6170:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6171:/usr/include/c++/11/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6172:/usr/include/c++/11/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6173:/usr/include/c++/11/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6174:/usr/include/c++/11/bits/basic_string.h ****     {
6175:/usr/include/c++/11/bits/basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
6176:/usr/include/c++/11/bits/basic_string.h ****       using _Alloc_traits = allocator_traits<_Alloc>;
6177:/usr/include/c++/11/bits/basic_string.h ****       bool __use_rhs = false;
6178:/usr/include/c++/11/bits/basic_string.h ****       if _GLIBCXX17_CONSTEXPR (typename _Alloc_traits::is_always_equal{})
6179:/usr/include/c++/11/bits/basic_string.h **** 	__use_rhs = true;
6180:/usr/include/c++/11/bits/basic_string.h ****       else if (__lhs.get_allocator() == __rhs.get_allocator())
6181:/usr/include/c++/11/bits/basic_string.h **** 	__use_rhs = true;
6182:/usr/include/c++/11/bits/basic_string.h ****       if (__use_rhs)
6183:/usr/include/c++/11/bits/basic_string.h **** #endif
6184:/usr/include/c++/11/bits/basic_string.h **** 	{
6185:/usr/include/c++/11/bits/basic_string.h **** 	  const auto __size = __lhs.size() + __rhs.size();
6186:/usr/include/c++/11/bits/basic_string.h **** 	  if (__size > __lhs.capacity() && __size <= __rhs.capacity())
6187:/usr/include/c++/11/bits/basic_string.h **** 	    return std::move(__rhs.insert(0, __lhs));
6188:/usr/include/c++/11/bits/basic_string.h **** 	}
6189:/usr/include/c++/11/bits/basic_string.h ****       return std::move(__lhs.append(__rhs));
6190:/usr/include/c++/11/bits/basic_string.h ****     }
6191:/usr/include/c++/11/bits/basic_string.h **** 
6192:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6193:/usr/include/c++/11/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6194:/usr/include/c++/11/bits/basic_string.h ****     operator+(const _CharT* __lhs,
6195:/usr/include/c++/11/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6196:/usr/include/c++/11/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6197:/usr/include/c++/11/bits/basic_string.h **** 
6198:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6199:/usr/include/c++/11/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6200:/usr/include/c++/11/bits/basic_string.h ****     operator+(_CharT __lhs,
6201:/usr/include/c++/11/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6202:/usr/include/c++/11/bits/basic_string.h ****     { return std::move(__rhs.insert(0, 1, __lhs)); }
6203:/usr/include/c++/11/bits/basic_string.h **** 
6204:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6205:/usr/include/c++/11/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6206:/usr/include/c++/11/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6207:/usr/include/c++/11/bits/basic_string.h **** 	      const _CharT* __rhs)
6208:/usr/include/c++/11/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6209:/usr/include/c++/11/bits/basic_string.h **** 
6210:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6211:/usr/include/c++/11/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6212:/usr/include/c++/11/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6213:/usr/include/c++/11/bits/basic_string.h **** 	      _CharT __rhs)
6214:/usr/include/c++/11/bits/basic_string.h ****     { return std::move(__lhs.append(1, __rhs)); }
6215:/usr/include/c++/11/bits/basic_string.h **** #endif
6216:/usr/include/c++/11/bits/basic_string.h **** 
6217:/usr/include/c++/11/bits/basic_string.h ****   // operator ==
6218:/usr/include/c++/11/bits/basic_string.h ****   /**
6219:/usr/include/c++/11/bits/basic_string.h ****    *  @brief  Test equivalence of two strings.
6220:/usr/include/c++/11/bits/basic_string.h ****    *  @param __lhs  First string.
6221:/usr/include/c++/11/bits/basic_string.h ****    *  @param __rhs  Second string.
6222:/usr/include/c++/11/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6223:/usr/include/c++/11/bits/basic_string.h ****    */
6224:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6225:/usr/include/c++/11/bits/basic_string.h ****     inline bool
6226:/usr/include/c++/11/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6227:/usr/include/c++/11/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6228:/usr/include/c++/11/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6229:/usr/include/c++/11/bits/basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6230:/usr/include/c++/11/bits/basic_string.h **** 
6231:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT>
6232:/usr/include/c++/11/bits/basic_string.h ****     inline
6233:/usr/include/c++/11/bits/basic_string.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type
6234:/usr/include/c++/11/bits/basic_string.h ****     operator==(const basic_string<_CharT>& __lhs,
6235:/usr/include/c++/11/bits/basic_string.h **** 	       const basic_string<_CharT>& __rhs) _GLIBCXX_NOEXCEPT
6236:/usr/include/c++/11/bits/basic_string.h ****     { return (__lhs.size() == __rhs.size()
6237:/usr/include/c++/11/bits/basic_string.h **** 	      && !std::char_traits<_CharT>::compare(__lhs.data(), __rhs.data(),
6238:/usr/include/c++/11/bits/basic_string.h **** 						    __lhs.size())); }
6239:/usr/include/c++/11/bits/basic_string.h **** 
6240:/usr/include/c++/11/bits/basic_string.h ****   /**
6241:/usr/include/c++/11/bits/basic_string.h ****    *  @brief  Test equivalence of string and C string.
6242:/usr/include/c++/11/bits/basic_string.h ****    *  @param __lhs  String.
6243:/usr/include/c++/11/bits/basic_string.h ****    *  @param __rhs  C string.
6244:/usr/include/c++/11/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6245:/usr/include/c++/11/bits/basic_string.h ****    */
6246:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6247:/usr/include/c++/11/bits/basic_string.h ****     inline bool
6248:/usr/include/c++/11/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6249:/usr/include/c++/11/bits/basic_string.h **** 	       const _CharT* __rhs)
6250:/usr/include/c++/11/bits/basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6251:/usr/include/c++/11/bits/basic_string.h **** 
6252:/usr/include/c++/11/bits/basic_string.h **** #if __cpp_lib_three_way_comparison
6253:/usr/include/c++/11/bits/basic_string.h ****   /**
6254:/usr/include/c++/11/bits/basic_string.h ****    *  @brief  Three-way comparison of a string and a C string.
6255:/usr/include/c++/11/bits/basic_string.h ****    *  @param __lhs  A string.
6256:/usr/include/c++/11/bits/basic_string.h ****    *  @param __rhs  A null-terminated string.
6257:/usr/include/c++/11/bits/basic_string.h ****    *  @return  A value indicating whether `__lhs` is less than, equal to,
6258:/usr/include/c++/11/bits/basic_string.h ****    *	       greater than, or incomparable with `__rhs`.
6259:/usr/include/c++/11/bits/basic_string.h ****    */
6260:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6261:/usr/include/c++/11/bits/basic_string.h ****     inline auto
6262:/usr/include/c++/11/bits/basic_string.h ****     operator<=>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6263:/usr/include/c++/11/bits/basic_string.h **** 		const basic_string<_CharT, _Traits, _Alloc>& __rhs) noexcept
6264:/usr/include/c++/11/bits/basic_string.h ****     -> decltype(__detail::__char_traits_cmp_cat<_Traits>(0))
6265:/usr/include/c++/11/bits/basic_string.h ****     { return __detail::__char_traits_cmp_cat<_Traits>(__lhs.compare(__rhs)); }
6266:/usr/include/c++/11/bits/basic_string.h **** 
6267:/usr/include/c++/11/bits/basic_string.h ****   /**
6268:/usr/include/c++/11/bits/basic_string.h ****    *  @brief  Three-way comparison of a string and a C string.
6269:/usr/include/c++/11/bits/basic_string.h ****    *  @param __lhs  A string.
6270:/usr/include/c++/11/bits/basic_string.h ****    *  @param __rhs  A null-terminated string.
6271:/usr/include/c++/11/bits/basic_string.h ****    *  @return  A value indicating whether `__lhs` is less than, equal to,
6272:/usr/include/c++/11/bits/basic_string.h ****    *	       greater than, or incomparable with `__rhs`.
6273:/usr/include/c++/11/bits/basic_string.h ****    */
6274:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6275:/usr/include/c++/11/bits/basic_string.h ****     inline auto
6276:/usr/include/c++/11/bits/basic_string.h ****     operator<=>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6277:/usr/include/c++/11/bits/basic_string.h **** 		const _CharT* __rhs) noexcept
6278:/usr/include/c++/11/bits/basic_string.h ****     -> decltype(__detail::__char_traits_cmp_cat<_Traits>(0))
6279:/usr/include/c++/11/bits/basic_string.h ****     { return __detail::__char_traits_cmp_cat<_Traits>(__lhs.compare(__rhs)); }
6280:/usr/include/c++/11/bits/basic_string.h **** #else
6281:/usr/include/c++/11/bits/basic_string.h ****   /**
6282:/usr/include/c++/11/bits/basic_string.h ****    *  @brief  Test equivalence of C string and string.
6283:/usr/include/c++/11/bits/basic_string.h ****    *  @param __lhs  C string.
6284:/usr/include/c++/11/bits/basic_string.h ****    *  @param __rhs  String.
6285:/usr/include/c++/11/bits/basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) == 0.  False otherwise.
6286:/usr/include/c++/11/bits/basic_string.h ****    */
6287:/usr/include/c++/11/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6288:/usr/include/c++/11/bits/basic_string.h ****     inline bool
6289:/usr/include/c++/11/bits/basic_string.h ****     operator==(const _CharT* __lhs,
 9042              		.loc 6 6289 5
 9043              		.cfi_startproc
 9044 0000 F30F1EFA 		endbr64
 9045 0004 55       		pushq	%rbp
 9046              		.cfi_def_cfa_offset 16
 9047              		.cfi_offset 6, -16
 9048 0005 4889E5   		movq	%rsp, %rbp
 9049              		.cfi_def_cfa_register 6
 9050 0008 4883EC10 		subq	$16, %rsp
 9051 000c 48897DF8 		movq	%rdi, -8(%rbp)
 9052 0010 488975F0 		movq	%rsi, -16(%rbp)
6290:/usr/include/c++/11/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6291:/usr/include/c++/11/bits/basic_string.h ****     { return __rhs.compare(__lhs) == 0; }
 9053              		.loc 6 6291 27
 9054 0014 488B55F8 		movq	-8(%rbp), %rdx
 9055 0018 488B45F0 		movq	-16(%rbp), %rax
 9056 001c 4889D6   		movq	%rdx, %rsi
 9057 001f 4889C7   		movq	%rax, %rdi
 9058 0022 E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc@PLT
 9058      00
 9059              		.loc 6 6291 38
 9060 0027 85C0     		testl	%eax, %eax
 9061 0029 0F94C0   		sete	%al
 9062              		.loc 6 6291 41
 9063 002c C9       		leave
 9064              		.cfi_def_cfa 7, 8
 9065 002d C3       		ret
 9066              		.cfi_endproc
 9067              	.LFE1570:
 9069              		.section	.data.rel.ro.local,"aw"
 9070              		.align 8
 9073              	_ZTVN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE:
 9074 0000 00000000 		.quad	0
 9074      00000000 
 9075 0008 00000000 		.quad	_ZTIN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE
 9075      00000000 
 9076 0010 00000000 		.quad	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD1Ev
 9076      00000000 
 9077 0018 00000000 		.quad	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD0Ev
 9077      00000000 
 9078 0020 00000000 		.quad	_ZNK12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailures7RunImplEv
 9078      00000000 
 9079              		.text
 9080 4663 90       		.align 2
 9082              	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD2Ev:
 9083              	.LFB1635:
 159:TestXmlTestReporter.cpp **** {
 9084              		.loc 3 159 1
 9085              		.cfi_startproc
 9086 4664 F30F1EFA 		endbr64
 9087 4668 55       		pushq	%rbp
 9088              		.cfi_def_cfa_offset 16
 9089              		.cfi_offset 6, -16
 9090 4669 4889E5   		movq	%rsp, %rbp
 9091              		.cfi_def_cfa_register 6
 9092 466c 4883EC10 		subq	$16, %rsp
 9093 4670 48897DF8 		movq	%rdi, -8(%rbp)
 9094              	.LBB164:
 159:TestXmlTestReporter.cpp **** {
 9095              		.loc 3 159 1
 9096 4674 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE(%rip), %rdx
 9096      000000
 9097 467b 488B45F8 		movq	-8(%rbp), %rax
 9098 467f 488910   		movq	%rdx, (%rax)
 9099 4682 488B45F8 		movq	-8(%rbp), %rax
 9100 4686 4889C7   		movq	%rax, %rdi
 9101 4689 E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 9101      00
 9102              	.LBE164:
 9103 468e 90       		nop
 9104 468f C9       		leave
 9105              		.cfi_def_cfa 7, 8
 9106 4690 C3       		ret
 9107              		.cfi_endproc
 9108              	.LFE1635:
 9110              		.set	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD1Ev,_ZN12_GLOBAL__N_142TestXmlT
 9111 4691 90       		.align 2
 9113              	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD0Ev:
 9114              	.LFB1637:
 159:TestXmlTestReporter.cpp **** {
 9115              		.loc 3 159 1
 9116              		.cfi_startproc
 9117              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9118              		.cfi_lsda 0x1b,.LLSDA1637
 9119 4692 F30F1EFA 		endbr64
 9120 4696 55       		pushq	%rbp
 9121              		.cfi_def_cfa_offset 16
 9122              		.cfi_offset 6, -16
 9123 4697 4889E5   		movq	%rsp, %rbp
 9124              		.cfi_def_cfa_register 6
 9125 469a 53       		pushq	%rbx
 9126 469b 4883EC18 		subq	$24, %rsp
 9127              		.cfi_offset 3, -24
 9128 469f 48897DE8 		movq	%rdi, -24(%rbp)
 159:TestXmlTestReporter.cpp **** {
 9129              		.loc 3 159 1
 9130 46a3 488B45E8 		movq	-24(%rbp), %rax
 9131 46a7 4889C7   		movq	%rax, %rdi
 9132              	.LEHB261:
 9133 46aa E8B5FFFF 		call	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD1Ev
 9133      FF
 9134              	.LEHE261:
 159:TestXmlTestReporter.cpp **** {
 9135              		.loc 3 159 1 is_stmt 0 discriminator 2
 9136 46af 488B45E8 		movq	-24(%rbp), %rax
 9137 46b3 4889C7   		movq	%rax, %rdi
 9138 46b6 E8000000 		call	_ZdlPv@PLT
 9138      00
 9139 46bb EB1E     		jmp	.L471
 9140              	.L470:
 9141 46bd F30F1EFA 		endbr64
 159:TestXmlTestReporter.cpp **** {
 9142              		.loc 3 159 1
 9143 46c1 4889C3   		movq	%rax, %rbx
 9144 46c4 488B45E8 		movq	-24(%rbp), %rax
 9145 46c8 4889C7   		movq	%rax, %rdi
 9146 46cb E8000000 		call	_ZdlPv@PLT
 9146      00
 9147 46d0 4889D8   		movq	%rbx, %rax
 9148 46d3 4889C7   		movq	%rax, %rdi
 9149              	.LEHB262:
 9150 46d6 E8000000 		call	_Unwind_Resume@PLT
 9150      00
 9151              	.LEHE262:
 9152              	.L471:
 9153 46db 488B5DF8 		movq	-8(%rbp), %rbx
 9154 46df C9       		leave
 9155              		.cfi_def_cfa 7, 8
 9156 46e0 C3       		ret
 9157              		.cfi_endproc
 9158              	.LFE1637:
 9159              		.section	.gcc_except_table
 9160              	.LLSDA1637:
 9161 07a0 FF       		.byte	0xff
 9162 07a1 FF       		.byte	0xff
 9163 07a2 01       		.byte	0x1
 9164 07a3 08       		.uleb128 .LLSDACSE1637-.LLSDACSB1637
 9165              	.LLSDACSB1637:
 9166 07a4 18       		.uleb128 .LEHB261-.LFB1637
 9167 07a5 05       		.uleb128 .LEHE261-.LEHB261
 9168 07a6 2B       		.uleb128 .L470-.LFB1637
 9169 07a7 00       		.uleb128 0
 9170 07a8 44       		.uleb128 .LEHB262-.LFB1637
 9171 07a9 05       		.uleb128 .LEHE262-.LEHB262
 9172 07aa 00       		.uleb128 0
 9173 07ab 00       		.uleb128 0
 9174              	.LLSDACSE1637:
 9175              		.text
 9177              		.section	.data.rel.ro.local
 9178              		.align 8
 9181              	_ZTVN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE:
 9182 0028 00000000 		.quad	0
 9182      00000000 
 9183 0030 00000000 		.quad	_ZTIN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE
 9183      00000000 
 9184 0038 00000000 		.quad	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD1Ev
 9184      00000000 
 9185 0040 00000000 		.quad	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD0Ev
 9185      00000000 
 9186 0048 00000000 		.quad	_ZNK12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccess7RunImplEv
 9186      00000000 
 9187              		.text
 9188 46e1 90       		.align 2
 9190              	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD2Ev:
 9191              	.LFB1639:
 135:TestXmlTestReporter.cpp **** {
 9192              		.loc 3 135 1 is_stmt 1
 9193              		.cfi_startproc
 9194 46e2 F30F1EFA 		endbr64
 9195 46e6 55       		pushq	%rbp
 9196              		.cfi_def_cfa_offset 16
 9197              		.cfi_offset 6, -16
 9198 46e7 4889E5   		movq	%rsp, %rbp
 9199              		.cfi_def_cfa_register 6
 9200 46ea 4883EC10 		subq	$16, %rsp
 9201 46ee 48897DF8 		movq	%rdi, -8(%rbp)
 9202              	.LBB165:
 135:TestXmlTestReporter.cpp **** {
 9203              		.loc 3 135 1
 9204 46f2 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE(%rip), %rdx
 9204      000000
 9205 46f9 488B45F8 		movq	-8(%rbp), %rax
 9206 46fd 488910   		movq	%rdx, (%rax)
 9207 4700 488B45F8 		movq	-8(%rbp), %rax
 9208 4704 4889C7   		movq	%rax, %rdi
 9209 4707 E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 9209      00
 9210              	.LBE165:
 9211 470c 90       		nop
 9212 470d C9       		leave
 9213              		.cfi_def_cfa 7, 8
 9214 470e C3       		ret
 9215              		.cfi_endproc
 9216              	.LFE1639:
 9218              		.set	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD1Ev,_ZN12_GLOBAL__N_149T
 9219 470f 90       		.align 2
 9221              	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD0Ev:
 9222              	.LFB1641:
 135:TestXmlTestReporter.cpp **** {
 9223              		.loc 3 135 1
 9224              		.cfi_startproc
 9225              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9226              		.cfi_lsda 0x1b,.LLSDA1641
 9227 4710 F30F1EFA 		endbr64
 9228 4714 55       		pushq	%rbp
 9229              		.cfi_def_cfa_offset 16
 9230              		.cfi_offset 6, -16
 9231 4715 4889E5   		movq	%rsp, %rbp
 9232              		.cfi_def_cfa_register 6
 9233 4718 53       		pushq	%rbx
 9234 4719 4883EC18 		subq	$24, %rsp
 9235              		.cfi_offset 3, -24
 9236 471d 48897DE8 		movq	%rdi, -24(%rbp)
 135:TestXmlTestReporter.cpp **** {
 9237              		.loc 3 135 1
 9238 4721 488B45E8 		movq	-24(%rbp), %rax
 9239 4725 4889C7   		movq	%rax, %rdi
 9240              	.LEHB263:
 9241 4728 E8B5FFFF 		call	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD1Ev
 9241      FF
 9242              	.LEHE263:
 135:TestXmlTestReporter.cpp **** {
 9243              		.loc 3 135 1 is_stmt 0 discriminator 2
 9244 472d 488B45E8 		movq	-24(%rbp), %rax
 9245 4731 4889C7   		movq	%rax, %rdi
 9246 4734 E8000000 		call	_ZdlPv@PLT
 9246      00
 9247 4739 EB1E     		jmp	.L476
 9248              	.L475:
 9249 473b F30F1EFA 		endbr64
 135:TestXmlTestReporter.cpp **** {
 9250              		.loc 3 135 1
 9251 473f 4889C3   		movq	%rax, %rbx
 9252 4742 488B45E8 		movq	-24(%rbp), %rax
 9253 4746 4889C7   		movq	%rax, %rdi
 9254 4749 E8000000 		call	_ZdlPv@PLT
 9254      00
 9255 474e 4889D8   		movq	%rbx, %rax
 9256 4751 4889C7   		movq	%rax, %rdi
 9257              	.LEHB264:
 9258 4754 E8000000 		call	_Unwind_Resume@PLT
 9258      00
 9259              	.LEHE264:
 9260              	.L476:
 9261 4759 488B5DF8 		movq	-8(%rbp), %rbx
 9262 475d C9       		leave
 9263              		.cfi_def_cfa 7, 8
 9264 475e C3       		ret
 9265              		.cfi_endproc
 9266              	.LFE1641:
 9267              		.section	.gcc_except_table
 9268              	.LLSDA1641:
 9269 07ac FF       		.byte	0xff
 9270 07ad FF       		.byte	0xff
 9271 07ae 01       		.byte	0x1
 9272 07af 08       		.uleb128 .LLSDACSE1641-.LLSDACSB1641
 9273              	.LLSDACSB1641:
 9274 07b0 18       		.uleb128 .LEHB263-.LFB1641
 9275 07b1 05       		.uleb128 .LEHE263-.LEHB263
 9276 07b2 2B       		.uleb128 .L475-.LFB1641
 9277 07b3 00       		.uleb128 0
 9278 07b4 44       		.uleb128 .LEHB264-.LFB1641
 9279 07b5 05       		.uleb128 .LEHE264-.LEHB264
 9280 07b6 00       		.uleb128 0
 9281 07b7 00       		.uleb128 0
 9282              	.LLSDACSE1641:
 9283              		.text
 9285              		.section	.data.rel.ro.local
 9286              		.align 8
 9289              	_ZTVN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE:
 9290 0050 00000000 		.quad	0
 9290      00000000 
 9291 0058 00000000 		.quad	_ZTIN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE
 9291      00000000 
 9292 0060 00000000 		.quad	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD1Ev
 9292      00000000 
 9293 0068 00000000 		.quad	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD0Ev
 9293      00000000 
 9294 0070 00000000 		.quad	_ZNK12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscaped7RunImplEv
 9294      00000000 
 9295              		.text
 9296 475f 90       		.align 2
 9298              	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD2Ev:
 9299              	.LFB1643:
 115:TestXmlTestReporter.cpp **** {
 9300              		.loc 3 115 1 is_stmt 1
 9301              		.cfi_startproc
 9302 4760 F30F1EFA 		endbr64
 9303 4764 55       		pushq	%rbp
 9304              		.cfi_def_cfa_offset 16
 9305              		.cfi_offset 6, -16
 9306 4765 4889E5   		movq	%rsp, %rbp
 9307              		.cfi_def_cfa_register 6
 9308 4768 4883EC10 		subq	$16, %rsp
 9309 476c 48897DF8 		movq	%rdi, -8(%rbp)
 9310              	.LBB166:
 115:TestXmlTestReporter.cpp **** {
 9311              		.loc 3 115 1
 9312 4770 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE(%rip), %rdx
 9312      000000
 9313 4777 488B45F8 		movq	-8(%rbp), %rax
 9314 477b 488910   		movq	%rdx, (%rax)
 9315 477e 488B45F8 		movq	-8(%rbp), %rax
 9316 4782 4889C7   		movq	%rax, %rdi
 9317 4785 E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 9317      00
 9318              	.LBE166:
 9319 478a 90       		nop
 9320 478b C9       		leave
 9321              		.cfi_def_cfa 7, 8
 9322 478c C3       		ret
 9323              		.cfi_endproc
 9324              	.LFE1643:
 9326              		.set	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD1Ev,_ZN12_GLOBAL__N_1
 9327 478d 90       		.align 2
 9329              	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD0Ev:
 9330              	.LFB1645:
 115:TestXmlTestReporter.cpp **** {
 9331              		.loc 3 115 1
 9332              		.cfi_startproc
 9333              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9334              		.cfi_lsda 0x1b,.LLSDA1645
 9335 478e F30F1EFA 		endbr64
 9336 4792 55       		pushq	%rbp
 9337              		.cfi_def_cfa_offset 16
 9338              		.cfi_offset 6, -16
 9339 4793 4889E5   		movq	%rsp, %rbp
 9340              		.cfi_def_cfa_register 6
 9341 4796 53       		pushq	%rbx
 9342 4797 4883EC18 		subq	$24, %rsp
 9343              		.cfi_offset 3, -24
 9344 479b 48897DE8 		movq	%rdi, -24(%rbp)
 115:TestXmlTestReporter.cpp **** {
 9345              		.loc 3 115 1
 9346 479f 488B45E8 		movq	-24(%rbp), %rax
 9347 47a3 4889C7   		movq	%rax, %rdi
 9348              	.LEHB265:
 9349 47a6 E8B5FFFF 		call	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD1Ev
 9349      FF
 9350              	.LEHE265:
 115:TestXmlTestReporter.cpp **** {
 9351              		.loc 3 115 1 is_stmt 0 discriminator 2
 9352 47ab 488B45E8 		movq	-24(%rbp), %rax
 9353 47af 4889C7   		movq	%rax, %rdi
 9354 47b2 E8000000 		call	_ZdlPv@PLT
 9354      00
 9355 47b7 EB1E     		jmp	.L481
 9356              	.L480:
 9357 47b9 F30F1EFA 		endbr64
 115:TestXmlTestReporter.cpp **** {
 9358              		.loc 3 115 1
 9359 47bd 4889C3   		movq	%rax, %rbx
 9360 47c0 488B45E8 		movq	-24(%rbp), %rax
 9361 47c4 4889C7   		movq	%rax, %rdi
 9362 47c7 E8000000 		call	_ZdlPv@PLT
 9362      00
 9363 47cc 4889D8   		movq	%rbx, %rax
 9364 47cf 4889C7   		movq	%rax, %rdi
 9365              	.LEHB266:
 9366 47d2 E8000000 		call	_Unwind_Resume@PLT
 9366      00
 9367              	.LEHE266:
 9368              	.L481:
 9369 47d7 488B5DF8 		movq	-8(%rbp), %rbx
 9370 47db C9       		leave
 9371              		.cfi_def_cfa 7, 8
 9372 47dc C3       		ret
 9373              		.cfi_endproc
 9374              	.LFE1645:
 9375              		.section	.gcc_except_table
 9376              	.LLSDA1645:
 9377 07b8 FF       		.byte	0xff
 9378 07b9 FF       		.byte	0xff
 9379 07ba 01       		.byte	0x1
 9380 07bb 08       		.uleb128 .LLSDACSE1645-.LLSDACSB1645
 9381              	.LLSDACSB1645:
 9382 07bc 18       		.uleb128 .LEHB265-.LFB1645
 9383 07bd 05       		.uleb128 .LEHE265-.LEHB265
 9384 07be 2B       		.uleb128 .L480-.LFB1645
 9385 07bf 00       		.uleb128 0
 9386 07c0 44       		.uleb128 .LEHB266-.LFB1645
 9387 07c1 05       		.uleb128 .LEHE266-.LEHB266
 9388 07c2 00       		.uleb128 0
 9389 07c3 00       		.uleb128 0
 9390              	.LLSDACSE1645:
 9391              		.text
 9393              		.section	.data.rel.ro.local
 9394              		.align 8
 9397              	_ZTVN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE:
 9398 0078 00000000 		.quad	0
 9398      00000000 
 9399 0080 00000000 		.quad	_ZTIN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE
 9399      00000000 
 9400 0088 00000000 		.quad	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD1Ev
 9400      00000000 
 9401 0090 00000000 		.quad	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD0Ev
 9401      00000000 
 9402 0098 00000000 		.quad	_ZNK12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormat7RunImplEv
 9402      00000000 
 9403              		.text
 9404 47dd 90       		.align 2
 9406              	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD2Ev:
 9407              	.LFB1647:
  96:TestXmlTestReporter.cpp **** {
 9408              		.loc 3 96 1 is_stmt 1
 9409              		.cfi_startproc
 9410 47de F30F1EFA 		endbr64
 9411 47e2 55       		pushq	%rbp
 9412              		.cfi_def_cfa_offset 16
 9413              		.cfi_offset 6, -16
 9414 47e3 4889E5   		movq	%rsp, %rbp
 9415              		.cfi_def_cfa_register 6
 9416 47e6 4883EC10 		subq	$16, %rsp
 9417 47ea 48897DF8 		movq	%rdi, -8(%rbp)
 9418              	.LBB167:
  96:TestXmlTestReporter.cpp **** {
 9419              		.loc 3 96 1
 9420 47ee 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE(%rip),
 9420      000000
 9421 47f5 488B45F8 		movq	-8(%rbp), %rax
 9422 47f9 488910   		movq	%rdx, (%rax)
 9423 47fc 488B45F8 		movq	-8(%rbp), %rax
 9424 4800 4889C7   		movq	%rax, %rdi
 9425 4803 E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 9425      00
 9426              	.LBE167:
 9427 4808 90       		nop
 9428 4809 C9       		leave
 9429              		.cfi_def_cfa 7, 8
 9430 480a C3       		ret
 9431              		.cfi_endproc
 9432              	.LFE1647:
 9434              		.set	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD1Ev,_ZN12_GL
 9435 480b 90       		.align 2
 9437              	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD0Ev:
 9438              	.LFB1649:
  96:TestXmlTestReporter.cpp **** {
 9439              		.loc 3 96 1
 9440              		.cfi_startproc
 9441              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9442              		.cfi_lsda 0x1b,.LLSDA1649
 9443 480c F30F1EFA 		endbr64
 9444 4810 55       		pushq	%rbp
 9445              		.cfi_def_cfa_offset 16
 9446              		.cfi_offset 6, -16
 9447 4811 4889E5   		movq	%rsp, %rbp
 9448              		.cfi_def_cfa_register 6
 9449 4814 53       		pushq	%rbx
 9450 4815 4883EC18 		subq	$24, %rsp
 9451              		.cfi_offset 3, -24
 9452 4819 48897DE8 		movq	%rdi, -24(%rbp)
  96:TestXmlTestReporter.cpp **** {
 9453              		.loc 3 96 1
 9454 481d 488B45E8 		movq	-24(%rbp), %rax
 9455 4821 4889C7   		movq	%rax, %rdi
 9456              	.LEHB267:
 9457 4824 E8B5FFFF 		call	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD1Ev
 9457      FF
 9458              	.LEHE267:
  96:TestXmlTestReporter.cpp **** {
 9459              		.loc 3 96 1 is_stmt 0 discriminator 2
 9460 4829 488B45E8 		movq	-24(%rbp), %rax
 9461 482d 4889C7   		movq	%rax, %rdi
 9462 4830 E8000000 		call	_ZdlPv@PLT
 9462      00
 9463 4835 EB1E     		jmp	.L486
 9464              	.L485:
 9465 4837 F30F1EFA 		endbr64
  96:TestXmlTestReporter.cpp **** {
 9466              		.loc 3 96 1
 9467 483b 4889C3   		movq	%rax, %rbx
 9468 483e 488B45E8 		movq	-24(%rbp), %rax
 9469 4842 4889C7   		movq	%rax, %rdi
 9470 4845 E8000000 		call	_ZdlPv@PLT
 9470      00
 9471 484a 4889D8   		movq	%rbx, %rax
 9472 484d 4889C7   		movq	%rax, %rdi
 9473              	.LEHB268:
 9474 4850 E8000000 		call	_Unwind_Resume@PLT
 9474      00
 9475              	.LEHE268:
 9476              	.L486:
 9477 4855 488B5DF8 		movq	-8(%rbp), %rbx
 9478 4859 C9       		leave
 9479              		.cfi_def_cfa 7, 8
 9480 485a C3       		ret
 9481              		.cfi_endproc
 9482              	.LFE1649:
 9483              		.section	.gcc_except_table
 9484              	.LLSDA1649:
 9485 07c4 FF       		.byte	0xff
 9486 07c5 FF       		.byte	0xff
 9487 07c6 01       		.byte	0x1
 9488 07c7 08       		.uleb128 .LLSDACSE1649-.LLSDACSB1649
 9489              	.LLSDACSB1649:
 9490 07c8 18       		.uleb128 .LEHB267-.LFB1649
 9491 07c9 05       		.uleb128 .LEHE267-.LEHB267
 9492 07ca 2B       		.uleb128 .L485-.LFB1649
 9493 07cb 00       		.uleb128 0
 9494 07cc 44       		.uleb128 .LEHB268-.LFB1649
 9495 07cd 05       		.uleb128 .LEHE268-.LEHB268
 9496 07ce 00       		.uleb128 0
 9497 07cf 00       		.uleb128 0
 9498              	.LLSDACSE1649:
 9499              		.text
 9501              		.section	.data.rel.ro.local
 9502              		.align 8
 9505              	_ZTVN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE:
 9506 00a0 00000000 		.quad	0
 9506      00000000 
 9507 00a8 00000000 		.quad	_ZTIN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE
 9507      00000000 
 9508 00b0 00000000 		.quad	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD1Ev
 9508      00000000 
 9509 00b8 00000000 		.quad	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD0Ev
 9509      00000000 
 9510 00c0 00000000 		.quad	_ZNK12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormat7RunImp
 9510      00000000 
 9511              		.text
 9512 485b 90       		.align 2
 9514              	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD2Ev:
 9515              	.LFB1651:
  80:TestXmlTestReporter.cpp **** {
 9516              		.loc 3 80 1 is_stmt 1
 9517              		.cfi_startproc
 9518 485c F30F1EFA 		endbr64
 9519 4860 55       		pushq	%rbp
 9520              		.cfi_def_cfa_offset 16
 9521              		.cfi_offset 6, -16
 9522 4861 4889E5   		movq	%rsp, %rbp
 9523              		.cfi_def_cfa_register 6
 9524 4864 4883EC10 		subq	$16, %rsp
 9525 4868 48897DF8 		movq	%rdi, -8(%rbp)
 9526              	.LBB168:
  80:TestXmlTestReporter.cpp **** {
 9527              		.loc 3 80 1
 9528 486c 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE(%r
 9528      000000
 9529 4873 488B45F8 		movq	-8(%rbp), %rax
 9530 4877 488910   		movq	%rdx, (%rax)
 9531 487a 488B45F8 		movq	-8(%rbp), %rax
 9532 487e 4889C7   		movq	%rax, %rdi
 9533 4881 E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 9533      00
 9534              	.LBE168:
 9535 4886 90       		nop
 9536 4887 C9       		leave
 9537              		.cfi_def_cfa 7, 8
 9538 4888 C3       		ret
 9539              		.cfi_endproc
 9540              	.LFE1651:
 9542              		.set	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD1Ev,_ZN1
 9543 4889 90       		.align 2
 9545              	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD0Ev:
 9546              	.LFB1653:
  80:TestXmlTestReporter.cpp **** {
 9547              		.loc 3 80 1
 9548              		.cfi_startproc
 9549              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9550              		.cfi_lsda 0x1b,.LLSDA1653
 9551 488a F30F1EFA 		endbr64
 9552 488e 55       		pushq	%rbp
 9553              		.cfi_def_cfa_offset 16
 9554              		.cfi_offset 6, -16
 9555 488f 4889E5   		movq	%rsp, %rbp
 9556              		.cfi_def_cfa_register 6
 9557 4892 53       		pushq	%rbx
 9558 4893 4883EC18 		subq	$24, %rsp
 9559              		.cfi_offset 3, -24
 9560 4897 48897DE8 		movq	%rdi, -24(%rbp)
  80:TestXmlTestReporter.cpp **** {
 9561              		.loc 3 80 1
 9562 489b 488B45E8 		movq	-24(%rbp), %rax
 9563 489f 4889C7   		movq	%rax, %rdi
 9564              	.LEHB269:
 9565 48a2 E8B5FFFF 		call	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD1Ev
 9565      FF
 9566              	.LEHE269:
  80:TestXmlTestReporter.cpp **** {
 9567              		.loc 3 80 1 is_stmt 0 discriminator 2
 9568 48a7 488B45E8 		movq	-24(%rbp), %rax
 9569 48ab 4889C7   		movq	%rax, %rdi
 9570 48ae E8000000 		call	_ZdlPv@PLT
 9570      00
 9571 48b3 EB1E     		jmp	.L491
 9572              	.L490:
 9573 48b5 F30F1EFA 		endbr64
  80:TestXmlTestReporter.cpp **** {
 9574              		.loc 3 80 1
 9575 48b9 4889C3   		movq	%rax, %rbx
 9576 48bc 488B45E8 		movq	-24(%rbp), %rax
 9577 48c0 4889C7   		movq	%rax, %rdi
 9578 48c3 E8000000 		call	_ZdlPv@PLT
 9578      00
 9579 48c8 4889D8   		movq	%rbx, %rax
 9580 48cb 4889C7   		movq	%rax, %rdi
 9581              	.LEHB270:
 9582 48ce E8000000 		call	_Unwind_Resume@PLT
 9582      00
 9583              	.LEHE270:
 9584              	.L491:
 9585 48d3 488B5DF8 		movq	-8(%rbp), %rbx
 9586 48d7 C9       		leave
 9587              		.cfi_def_cfa 7, 8
 9588 48d8 C3       		ret
 9589              		.cfi_endproc
 9590              	.LFE1653:
 9591              		.section	.gcc_except_table
 9592              	.LLSDA1653:
 9593 07d0 FF       		.byte	0xff
 9594 07d1 FF       		.byte	0xff
 9595 07d2 01       		.byte	0x1
 9596 07d3 08       		.uleb128 .LLSDACSE1653-.LLSDACSB1653
 9597              	.LLSDACSB1653:
 9598 07d4 18       		.uleb128 .LEHB269-.LFB1653
 9599 07d5 05       		.uleb128 .LEHE269-.LEHB269
 9600 07d6 2B       		.uleb128 .L490-.LFB1653
 9601 07d7 00       		.uleb128 0
 9602 07d8 44       		.uleb128 .LEHB270-.LFB1653
 9603 07d9 05       		.uleb128 .LEHE270-.LEHB270
 9604 07da 00       		.uleb128 0
 9605 07db 00       		.uleb128 0
 9606              	.LLSDACSE1653:
 9607              		.text
 9609              		.section	.data.rel.ro.local
 9610              		.align 8
 9613              	_ZTVN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE:
 9614 00c8 00000000 		.quad	0
 9614      00000000 
 9615 00d0 00000000 		.quad	_ZTIN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE
 9615      00000000 
 9616 00d8 00000000 		.quad	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD1Ev
 9616      00000000 
 9617 00e0 00000000 		.quad	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD0Ev
 9617      00000000 
 9618 00e8 00000000 		.quad	_ZNK12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormat7RunImplEv
 9618      00000000 
 9619              		.text
 9620 48d9 90       		.align 2
 9622              	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD2Ev:
 9623              	.LFB1655:
  68:TestXmlTestReporter.cpp **** {
 9624              		.loc 3 68 1 is_stmt 1
 9625              		.cfi_startproc
 9626 48da F30F1EFA 		endbr64
 9627 48de 55       		pushq	%rbp
 9628              		.cfi_def_cfa_offset 16
 9629              		.cfi_offset 6, -16
 9630 48df 4889E5   		movq	%rsp, %rbp
 9631              		.cfi_def_cfa_register 6
 9632 48e2 4883EC10 		subq	$16, %rsp
 9633 48e6 48897DF8 		movq	%rdi, -8(%rbp)
 9634              	.LBB169:
  68:TestXmlTestReporter.cpp **** {
 9635              		.loc 3 68 1
 9636 48ea 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE(%rip), %rdx
 9636      000000
 9637 48f1 488B45F8 		movq	-8(%rbp), %rax
 9638 48f5 488910   		movq	%rdx, (%rax)
 9639 48f8 488B45F8 		movq	-8(%rbp), %rax
 9640 48fc 4889C7   		movq	%rax, %rdi
 9641 48ff E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 9641      00
 9642              	.LBE169:
 9643 4904 90       		nop
 9644 4905 C9       		leave
 9645              		.cfi_def_cfa 7, 8
 9646 4906 C3       		ret
 9647              		.cfi_endproc
 9648              	.LFE1655:
 9650              		.set	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD1Ev,_ZN12_GLOBAL__N_150
 9651 4907 90       		.align 2
 9653              	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD0Ev:
 9654              	.LFB1657:
  68:TestXmlTestReporter.cpp **** {
 9655              		.loc 3 68 1
 9656              		.cfi_startproc
 9657              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9658              		.cfi_lsda 0x1b,.LLSDA1657
 9659 4908 F30F1EFA 		endbr64
 9660 490c 55       		pushq	%rbp
 9661              		.cfi_def_cfa_offset 16
 9662              		.cfi_offset 6, -16
 9663 490d 4889E5   		movq	%rsp, %rbp
 9664              		.cfi_def_cfa_register 6
 9665 4910 53       		pushq	%rbx
 9666 4911 4883EC18 		subq	$24, %rsp
 9667              		.cfi_offset 3, -24
 9668 4915 48897DE8 		movq	%rdi, -24(%rbp)
  68:TestXmlTestReporter.cpp **** {
 9669              		.loc 3 68 1
 9670 4919 488B45E8 		movq	-24(%rbp), %rax
 9671 491d 4889C7   		movq	%rax, %rdi
 9672              	.LEHB271:
 9673 4920 E8B5FFFF 		call	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD1Ev
 9673      FF
 9674              	.LEHE271:
  68:TestXmlTestReporter.cpp **** {
 9675              		.loc 3 68 1 is_stmt 0 discriminator 2
 9676 4925 488B45E8 		movq	-24(%rbp), %rax
 9677 4929 4889C7   		movq	%rax, %rdi
 9678 492c E8000000 		call	_ZdlPv@PLT
 9678      00
 9679 4931 EB1E     		jmp	.L496
 9680              	.L495:
 9681 4933 F30F1EFA 		endbr64
  68:TestXmlTestReporter.cpp **** {
 9682              		.loc 3 68 1
 9683 4937 4889C3   		movq	%rax, %rbx
 9684 493a 488B45E8 		movq	-24(%rbp), %rax
 9685 493e 4889C7   		movq	%rax, %rdi
 9686 4941 E8000000 		call	_ZdlPv@PLT
 9686      00
 9687 4946 4889D8   		movq	%rbx, %rax
 9688 4949 4889C7   		movq	%rax, %rdi
 9689              	.LEHB272:
 9690 494c E8000000 		call	_Unwind_Resume@PLT
 9690      00
 9691              	.LEHE272:
 9692              	.L496:
 9693 4951 488B5DF8 		movq	-8(%rbp), %rbx
 9694 4955 C9       		leave
 9695              		.cfi_def_cfa 7, 8
 9696 4956 C3       		ret
 9697              		.cfi_endproc
 9698              	.LFE1657:
 9699              		.section	.gcc_except_table
 9700              	.LLSDA1657:
 9701 07dc FF       		.byte	0xff
 9702 07dd FF       		.byte	0xff
 9703 07de 01       		.byte	0x1
 9704 07df 08       		.uleb128 .LLSDACSE1657-.LLSDACSB1657
 9705              	.LLSDACSB1657:
 9706 07e0 18       		.uleb128 .LEHB271-.LFB1657
 9707 07e1 05       		.uleb128 .LEHE271-.LEHB271
 9708 07e2 2B       		.uleb128 .L495-.LFB1657
 9709 07e3 00       		.uleb128 0
 9710 07e4 44       		.uleb128 .LEHB272-.LFB1657
 9711 07e5 05       		.uleb128 .LEHE272-.LEHB272
 9712 07e6 00       		.uleb128 0
 9713 07e7 00       		.uleb128 0
 9714              	.LLSDACSE1657:
 9715              		.text
 9717              		.section	.data.rel.ro.local
 9718              		.align 8
 9721              	_ZTVN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE:
 9722 00f0 00000000 		.quad	0
 9722      00000000 
 9723 00f8 00000000 		.quad	_ZTIN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE
 9723      00000000 
 9724 0100 00000000 		.quad	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD1Ev
 9724      00000000 
 9725 0108 00000000 		.quad	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD0Ev
 9725      00000000 
 9726 0110 00000000 		.quad	_ZNK12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalled7RunIm
 9726      00000000 
 9727              		.text
 9728 4957 90       		.align 2
 9730              	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD2Ev:
 9731              	.LFB1659:
  55:TestXmlTestReporter.cpp **** {
 9732              		.loc 3 55 1 is_stmt 1
 9733              		.cfi_startproc
 9734 4958 F30F1EFA 		endbr64
 9735 495c 55       		pushq	%rbp
 9736              		.cfi_def_cfa_offset 16
 9737              		.cfi_offset 6, -16
 9738 495d 4889E5   		movq	%rsp, %rbp
 9739              		.cfi_def_cfa_register 6
 9740 4960 4883EC10 		subq	$16, %rsp
 9741 4964 48897DF8 		movq	%rdi, -8(%rbp)
 9742              	.LBB170:
  55:TestXmlTestReporter.cpp **** {
 9743              		.loc 3 55 1
 9744 4968 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE(%
 9744      000000
 9745 496f 488B45F8 		movq	-8(%rbp), %rax
 9746 4973 488910   		movq	%rdx, (%rax)
 9747 4976 488B45F8 		movq	-8(%rbp), %rax
 9748 497a 4889C7   		movq	%rax, %rdi
 9749 497d E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 9749      00
 9750              	.LBE170:
 9751 4982 90       		nop
 9752 4983 C9       		leave
 9753              		.cfi_def_cfa 7, 8
 9754 4984 C3       		ret
 9755              		.cfi_endproc
 9756              	.LFE1659:
 9758              		.set	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD1Ev,_ZN
 9759 4985 90       		.align 2
 9761              	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD0Ev:
 9762              	.LFB1661:
  55:TestXmlTestReporter.cpp **** {
 9763              		.loc 3 55 1
 9764              		.cfi_startproc
 9765              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9766              		.cfi_lsda 0x1b,.LLSDA1661
 9767 4986 F30F1EFA 		endbr64
 9768 498a 55       		pushq	%rbp
 9769              		.cfi_def_cfa_offset 16
 9770              		.cfi_offset 6, -16
 9771 498b 4889E5   		movq	%rsp, %rbp
 9772              		.cfi_def_cfa_register 6
 9773 498e 53       		pushq	%rbx
 9774 498f 4883EC18 		subq	$24, %rsp
 9775              		.cfi_offset 3, -24
 9776 4993 48897DE8 		movq	%rdi, -24(%rbp)
  55:TestXmlTestReporter.cpp **** {
 9777              		.loc 3 55 1
 9778 4997 488B45E8 		movq	-24(%rbp), %rax
 9779 499b 4889C7   		movq	%rax, %rdi
 9780              	.LEHB273:
 9781 499e E8B5FFFF 		call	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD1Ev
 9781      FF
 9782              	.LEHE273:
  55:TestXmlTestReporter.cpp **** {
 9783              		.loc 3 55 1 is_stmt 0 discriminator 2
 9784 49a3 488B45E8 		movq	-24(%rbp), %rax
 9785 49a7 4889C7   		movq	%rax, %rdi
 9786 49aa E8000000 		call	_ZdlPv@PLT
 9786      00
 9787 49af EB1E     		jmp	.L501
 9788              	.L500:
 9789 49b1 F30F1EFA 		endbr64
  55:TestXmlTestReporter.cpp **** {
 9790              		.loc 3 55 1
 9791 49b5 4889C3   		movq	%rax, %rbx
 9792 49b8 488B45E8 		movq	-24(%rbp), %rax
 9793 49bc 4889C7   		movq	%rax, %rdi
 9794 49bf E8000000 		call	_ZdlPv@PLT
 9794      00
 9795 49c4 4889D8   		movq	%rbx, %rax
 9796 49c7 4889C7   		movq	%rax, %rdi
 9797              	.LEHB274:
 9798 49ca E8000000 		call	_Unwind_Resume@PLT
 9798      00
 9799              	.LEHE274:
 9800              	.L501:
 9801 49cf 488B5DF8 		movq	-8(%rbp), %rbx
 9802 49d3 C9       		leave
 9803              		.cfi_def_cfa 7, 8
 9804 49d4 C3       		ret
 9805              		.cfi_endproc
 9806              	.LFE1661:
 9807              		.section	.gcc_except_table
 9808              	.LLSDA1661:
 9809 07e8 FF       		.byte	0xff
 9810 07e9 FF       		.byte	0xff
 9811 07ea 01       		.byte	0x1
 9812 07eb 08       		.uleb128 .LLSDACSE1661-.LLSDACSB1661
 9813              	.LLSDACSB1661:
 9814 07ec 18       		.uleb128 .LEHB273-.LFB1661
 9815 07ed 05       		.uleb128 .LEHE273-.LEHB273
 9816 07ee 2B       		.uleb128 .L500-.LFB1661
 9817 07ef 00       		.uleb128 0
 9818 07f0 44       		.uleb128 .LEHB274-.LFB1661
 9819 07f1 05       		.uleb128 .LEHE274-.LEHB274
 9820 07f2 00       		.uleb128 0
 9821 07f3 00       		.uleb128 0
 9822              	.LLSDACSE1661:
 9823              		.text
 9825              		.section	.data.rel.ro.local
 9826              		.align 8
 9829              	_ZTVN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE:
 9830 0118 00000000 		.quad	0
 9830      00000000 
 9831 0120 00000000 		.quad	_ZTIN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE
 9831      00000000 
 9832 0128 00000000 		.quad	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD1Ev
 9832      00000000 
 9833 0130 00000000 		.quad	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD0Ev
 9833      00000000 
 9834 0138 00000000 		.quad	_ZNK12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscaped7RunImplEv
 9834      00000000 
 9835              		.text
 9836 49d5 90       		.align 2
 9838              	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD2Ev:
 9839              	.LFB1663:
  34:TestXmlTestReporter.cpp **** {
 9840              		.loc 3 34 1 is_stmt 1
 9841              		.cfi_startproc
 9842 49d6 F30F1EFA 		endbr64
 9843 49da 55       		pushq	%rbp
 9844              		.cfi_def_cfa_offset 16
 9845              		.cfi_offset 6, -16
 9846 49db 4889E5   		movq	%rsp, %rbp
 9847              		.cfi_def_cfa_register 6
 9848 49de 4883EC10 		subq	$16, %rsp
 9849 49e2 48897DF8 		movq	%rdi, -8(%rbp)
 9850              	.LBB171:
  34:TestXmlTestReporter.cpp **** {
 9851              		.loc 3 34 1
 9852 49e6 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE(%rip), %rdx
 9852      000000
 9853 49ed 488B45F8 		movq	-8(%rbp), %rax
 9854 49f1 488910   		movq	%rdx, (%rax)
 9855 49f4 488B45F8 		movq	-8(%rbp), %rax
 9856 49f8 4889C7   		movq	%rax, %rdi
 9857 49fb E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 9857      00
 9858              	.LBE171:
 9859 4a00 90       		nop
 9860 4a01 C9       		leave
 9861              		.cfi_def_cfa 7, 8
 9862 4a02 C3       		ret
 9863              		.cfi_endproc
 9864              	.LFE1663:
 9866              		.set	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD1Ev,_ZN12_GLOBAL__N
 9867 4a03 90       		.align 2
 9869              	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD0Ev:
 9870              	.LFB1665:
  34:TestXmlTestReporter.cpp **** {
 9871              		.loc 3 34 1
 9872              		.cfi_startproc
 9873              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9874              		.cfi_lsda 0x1b,.LLSDA1665
 9875 4a04 F30F1EFA 		endbr64
 9876 4a08 55       		pushq	%rbp
 9877              		.cfi_def_cfa_offset 16
 9878              		.cfi_offset 6, -16
 9879 4a09 4889E5   		movq	%rsp, %rbp
 9880              		.cfi_def_cfa_register 6
 9881 4a0c 53       		pushq	%rbx
 9882 4a0d 4883EC18 		subq	$24, %rsp
 9883              		.cfi_offset 3, -24
 9884 4a11 48897DE8 		movq	%rdi, -24(%rbp)
  34:TestXmlTestReporter.cpp **** {
 9885              		.loc 3 34 1
 9886 4a15 488B45E8 		movq	-24(%rbp), %rax
 9887 4a19 4889C7   		movq	%rax, %rdi
 9888              	.LEHB275:
 9889 4a1c E8B5FFFF 		call	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD1Ev
 9889      FF
 9890              	.LEHE275:
  34:TestXmlTestReporter.cpp **** {
 9891              		.loc 3 34 1 is_stmt 0 discriminator 2
 9892 4a21 488B45E8 		movq	-24(%rbp), %rax
 9893 4a25 4889C7   		movq	%rax, %rdi
 9894 4a28 E8000000 		call	_ZdlPv@PLT
 9894      00
 9895 4a2d EB1E     		jmp	.L506
 9896              	.L505:
 9897 4a2f F30F1EFA 		endbr64
  34:TestXmlTestReporter.cpp **** {
 9898              		.loc 3 34 1
 9899 4a33 4889C3   		movq	%rax, %rbx
 9900 4a36 488B45E8 		movq	-24(%rbp), %rax
 9901 4a3a 4889C7   		movq	%rax, %rdi
 9902 4a3d E8000000 		call	_ZdlPv@PLT
 9902      00
 9903 4a42 4889D8   		movq	%rbx, %rax
 9904 4a45 4889C7   		movq	%rax, %rdi
 9905              	.LEHB276:
 9906 4a48 E8000000 		call	_Unwind_Resume@PLT
 9906      00
 9907              	.LEHE276:
 9908              	.L506:
 9909 4a4d 488B5DF8 		movq	-8(%rbp), %rbx
 9910 4a51 C9       		leave
 9911              		.cfi_def_cfa 7, 8
 9912 4a52 C3       		ret
 9913              		.cfi_endproc
 9914              	.LFE1665:
 9915              		.section	.gcc_except_table
 9916              	.LLSDA1665:
 9917 07f4 FF       		.byte	0xff
 9918 07f5 FF       		.byte	0xff
 9919 07f6 01       		.byte	0x1
 9920 07f7 08       		.uleb128 .LLSDACSE1665-.LLSDACSB1665
 9921              	.LLSDACSB1665:
 9922 07f8 18       		.uleb128 .LEHB275-.LFB1665
 9923 07f9 05       		.uleb128 .LEHE275-.LEHB275
 9924 07fa 2B       		.uleb128 .L505-.LFB1665
 9925 07fb 00       		.uleb128 0
 9926 07fc 44       		.uleb128 .LEHB276-.LFB1665
 9927 07fd 05       		.uleb128 .LEHE276-.LEHB276
 9928 07fe 00       		.uleb128 0
 9929 07ff 00       		.uleb128 0
 9930              	.LLSDACSE1665:
 9931              		.text
 9933              		.weak	_ZTVN8UnitTest15MemoryOutStreamE
 9934              		.section	.data.rel.ro.local._ZTVN8UnitTest15MemoryOutStreamE,"awG",@progbits,_ZTVN8UnitTest15Memor
 9935              		.align 8
 9938              	_ZTVN8UnitTest15MemoryOutStreamE:
 9939 0000 90000000 		.quad	144
 9939      00000000 
 9940 0008 00000000 		.quad	0
 9940      00000000 
 9941 0010 00000000 		.quad	_ZTIN8UnitTest15MemoryOutStreamE
 9941      00000000 
 9942 0018 00000000 		.quad	_ZN8UnitTest15MemoryOutStreamD1Ev
 9942      00000000 
 9943 0020 00000000 		.quad	_ZN8UnitTest15MemoryOutStreamD0Ev
 9943      00000000 
 9944 0028 70FFFFFF 		.quad	-144
 9944      FFFFFFFF 
 9945 0030 70FFFFFF 		.quad	-144
 9945      FFFFFFFF 
 9946 0038 00000000 		.quad	_ZTIN8UnitTest15MemoryOutStreamE
 9946      00000000 
 9947 0040 00000000 		.quad	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
 9947      00000000 
 9948 0048 00000000 		.quad	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
 9948      00000000 
 9949              		.weak	_ZTTN8UnitTest15MemoryOutStreamE
 9950              		.section	.data.rel.ro.local._ZTTN8UnitTest15MemoryOutStreamE,"awG",@progbits,_ZTVN8UnitTest15Memor
 9951              		.align 8
 9954              	_ZTTN8UnitTest15MemoryOutStreamE:
 9955 0000 00000000 		.quad	_ZTVN8UnitTest15MemoryOutStreamE+24
 9955      00000000 
 9956 0008 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9956      00000000 
 9957 0010 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_So+24
 9957      00000000 
 9958 0018 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_So+64
 9958      00000000 
 9959 0020 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9959      00000000 
 9960 0028 00000000 		.quad	_ZTVN8UnitTest15MemoryOutStreamE+64
 9960      00000000 
 9961              		.hidden	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIc
 9962              		.weak	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9963              		.section	.data.rel.ro._ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char
 9964              		.align 8
 9967              	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE:
 9968 0000 90000000 		.quad	144
 9968      00000000 
 9969 0008 00000000 		.quad	0
 9969      00000000 
 9970 0010 00000000 		.quad	_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
 9970      00000000 
 9971 0018 00000000 		.quad	0
 9971      00000000 
 9972 0020 00000000 		.quad	0
 9972      00000000 
 9973 0028 70FFFFFF 		.quad	-144
 9973      FFFFFFFF 
 9974 0030 70FFFFFF 		.quad	-144
 9974      FFFFFFFF 
 9975 0038 00000000 		.quad	_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
 9975      00000000 
 9976 0040 00000000 		.quad	0
 9976      00000000 
 9977 0048 00000000 		.quad	0
 9977      00000000 
 9978              		.hidden	_ZTCN8UnitTest15MemoryOutStreamE0_So
 9979              		.weak	_ZTCN8UnitTest15MemoryOutStreamE0_So
 9980              		.section	.data.rel.ro._ZTCN8UnitTest15MemoryOutStreamE0_So,"awG",@progbits,_ZTVN8UnitTest15MemoryO
 9981              		.align 8
 9984              	_ZTCN8UnitTest15MemoryOutStreamE0_So:
 9985 0000 90000000 		.quad	144
 9985      00000000 
 9986 0008 00000000 		.quad	0
 9986      00000000 
 9987 0010 00000000 		.quad	_ZTISo
 9987      00000000 
 9988 0018 00000000 		.quad	0
 9988      00000000 
 9989 0020 00000000 		.quad	0
 9989      00000000 
 9990 0028 70FFFFFF 		.quad	-144
 9990      FFFFFFFF 
 9991 0030 70FFFFFF 		.quad	-144
 9991      FFFFFFFF 
 9992 0038 00000000 		.quad	_ZTISo
 9992      00000000 
 9993 0040 00000000 		.quad	0
 9993      00000000 
 9994 0048 00000000 		.quad	0
 9994      00000000 
 9995              		.section	.text._ZN8UnitTest15MemoryOutStreamD1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD1Ev
 9996              		.align 2
 9997              		.weak	_ZN8UnitTest15MemoryOutStreamD1Ev
 9999              	_ZN8UnitTest15MemoryOutStreamD1Ev:
 10000              	.LFB1668:
  13:../MemoryOutStream.h **** {
 10001              		.loc 2 13 7 is_stmt 1
 10002              		.cfi_startproc
 10003              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 10004              		.cfi_lsda 0x1b,.LLSDA1668
 10005 0000 F30F1EFA 		endbr64
 10006 0004 55       		pushq	%rbp
 10007              		.cfi_def_cfa_offset 16
 10008              		.cfi_offset 6, -16
 10009 0005 4889E5   		movq	%rsp, %rbp
 10010              		.cfi_def_cfa_register 6
 10011 0008 53       		pushq	%rbx
 10012 0009 4883EC18 		subq	$24, %rsp
 10013              		.cfi_offset 3, -24
 10014 000d 48897DE8 		movq	%rdi, -24(%rbp)
 10015              	.LBB172:
  13:../MemoryOutStream.h **** {
 10016              		.loc 2 13 7
 10017 0011 488D1500 		leaq	24+_ZTVN8UnitTest15MemoryOutStreamE(%rip), %rdx
 10017      000000
 10018 0018 488B45E8 		movq	-24(%rbp), %rax
 10019 001c 488910   		movq	%rdx, (%rax)
 10020 001f 488B45E8 		movq	-24(%rbp), %rax
 10021 0023 48059000 		addq	$144, %rax
 10021      0000
 10022 0029 488D1500 		leaq	64+_ZTVN8UnitTest15MemoryOutStreamE(%rip), %rdx
 10022      000000
 10023 0030 488910   		movq	%rdx, (%rax)
 10024 0033 488B45E8 		movq	-24(%rbp), %rax
 10025 0037 4883C070 		addq	$112, %rax
 10026 003b 4889C7   		movq	%rax, %rdi
 10027              	.LEHB277:
 10028 003e E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 10028      00
 10029              	.LEHE277:
  13:../MemoryOutStream.h **** {
 10030              		.loc 2 13 7 is_stmt 0 discriminator 2
 10031 0043 488B45E8 		movq	-24(%rbp), %rax
 10032 0047 488D1500 		leaq	8+_ZTTN8UnitTest15MemoryOutStreamE(%rip), %rdx
 10032      000000
 10033 004e 4889D6   		movq	%rdx, %rsi
 10034 0051 4889C7   		movq	%rax, %rdi
 10035              	.LEHB278:
 10036 0054 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev@PLT
 10036      00
 10037              	.LEHE278:
  13:../MemoryOutStream.h **** {
 10038              		.loc 2 13 7 discriminator 4
 10039 0059 488B45E8 		movq	-24(%rbp), %rax
 10040 005d 48059000 		addq	$144, %rax
 10040      0000
 10041 0063 4889C7   		movq	%rax, %rdi
 10042              	.LEHB279:
 10043 0066 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev@PLT
 10043      00
 10044              	.LEHE279:
 10045              	.LBE172:
 10046 006b EB43     		jmp	.L512
 10047              	.L510:
 10048 006d F30F1EFA 		endbr64
 10049              	.LBB173:
  13:../MemoryOutStream.h **** {
 10050              		.loc 2 13 7
 10051 0071 4889C3   		movq	%rax, %rbx
 10052 0074 488B45E8 		movq	-24(%rbp), %rax
 10053 0078 488D1500 		leaq	8+_ZTTN8UnitTest15MemoryOutStreamE(%rip), %rdx
 10053      000000
 10054 007f 4889D6   		movq	%rdx, %rsi
 10055 0082 4889C7   		movq	%rax, %rdi
 10056 0085 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev@PLT
 10056      00
 10057 008a EB07     		jmp	.L509
 10058              	.L511:
 10059 008c F30F1EFA 		endbr64
 10060 0090 4889C3   		movq	%rax, %rbx
 10061              	.L509:
  13:../MemoryOutStream.h **** {
 10062              		.loc 2 13 7 discriminator 3
 10063 0093 488B45E8 		movq	-24(%rbp), %rax
 10064 0097 48059000 		addq	$144, %rax
 10064      0000
 10065 009d 4889C7   		movq	%rax, %rdi
 10066 00a0 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev@PLT
 10066      00
 10067 00a5 4889D8   		movq	%rbx, %rax
 10068 00a8 4889C7   		movq	%rax, %rdi
 10069              	.LEHB280:
 10070 00ab E8000000 		call	_Unwind_Resume@PLT
 10070      00
 10071              	.LEHE280:
 10072              	.L512:
 10073              	.LBE173:
  13:../MemoryOutStream.h **** {
 10074              		.loc 2 13 7
 10075 00b0 488B5DF8 		movq	-8(%rbp), %rbx
 10076 00b4 C9       		leave
 10077              		.cfi_def_cfa 7, 8
 10078 00b5 C3       		ret
 10079              		.cfi_endproc
 10080              	.LFE1668:
 10081              		.section	.gcc_except_table
 10082              	.LLSDA1668:
 10083 0800 FF       		.byte	0xff
 10084 0801 FF       		.byte	0xff
 10085 0802 01       		.byte	0x1
 10086 0803 12       		.uleb128 .LLSDACSE1668-.LLSDACSB1668
 10087              	.LLSDACSB1668:
 10088 0804 3E       		.uleb128 .LEHB277-.LFB1668
 10089 0805 05       		.uleb128 .LEHE277-.LEHB277
 10090 0806 6D       		.uleb128 .L510-.LFB1668
 10091 0807 00       		.uleb128 0
 10092 0808 54       		.uleb128 .LEHB278-.LFB1668
 10093 0809 05       		.uleb128 .LEHE278-.LEHB278
 10094 080a 8C01     		.uleb128 .L511-.LFB1668
 10095 080c 00       		.uleb128 0
 10096 080d 66       		.uleb128 .LEHB279-.LFB1668
 10097 080e 05       		.uleb128 .LEHE279-.LEHB279
 10098 080f 00       		.uleb128 0
 10099 0810 00       		.uleb128 0
 10100 0811 AB01     		.uleb128 .LEHB280-.LFB1668
 10101 0813 05       		.uleb128 .LEHE280-.LEHB280
 10102 0814 00       		.uleb128 0
 10103 0815 00       		.uleb128 0
 10104              	.LLSDACSE1668:
 10105              		.section	.text._ZN8UnitTest15MemoryOutStreamD1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD1Ev
 10107              		.set	.LTHUNK0,_ZN8UnitTest15MemoryOutStreamD1Ev
 10108              		.weak	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
 10110              	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev:
 10111              	.LFB1734:
  13:../MemoryOutStream.h **** {
 10112              		.loc 2 13 7 is_stmt 1
 10113              		.cfi_startproc
 10114 00b6 F30F1EFA 		endbr64
 10115 00ba 4C8B17   		movq	(%rdi), %r10
 10116 00bd 49037AE8 		addq	-24(%r10), %rdi
 10117 00c1 E93AFFFF 		jmp	.LTHUNK0
 10117      FF
 10118              		.cfi_endproc
 10119              	.LFE1734:
 10121              		.section	.text._ZN8UnitTest15MemoryOutStreamD0Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD0Ev
 10122              		.align 2
 10123              		.weak	_ZN8UnitTest15MemoryOutStreamD0Ev
 10125              	_ZN8UnitTest15MemoryOutStreamD0Ev:
 10126              	.LFB1669:
  13:../MemoryOutStream.h **** {
 10127              		.loc 2 13 7
 10128              		.cfi_startproc
 10129              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 10130              		.cfi_lsda 0x1b,.LLSDA1669
 10131 0000 F30F1EFA 		endbr64
 10132 0004 55       		pushq	%rbp
 10133              		.cfi_def_cfa_offset 16
 10134              		.cfi_offset 6, -16
 10135 0005 4889E5   		movq	%rsp, %rbp
 10136              		.cfi_def_cfa_register 6
 10137 0008 53       		pushq	%rbx
 10138 0009 4883EC18 		subq	$24, %rsp
 10139              		.cfi_offset 3, -24
 10140 000d 48897DE8 		movq	%rdi, -24(%rbp)
  13:../MemoryOutStream.h **** {
 10141              		.loc 2 13 7
 10142 0011 488B45E8 		movq	-24(%rbp), %rax
 10143 0015 4889C7   		movq	%rax, %rdi
 10144              	.LEHB281:
 10145 0018 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 10145      00
 10146              	.LEHE281:
  13:../MemoryOutStream.h **** {
 10147              		.loc 2 13 7 is_stmt 0 discriminator 2
 10148 001d 488B45E8 		movq	-24(%rbp), %rax
 10149 0021 4889C7   		movq	%rax, %rdi
 10150 0024 E8000000 		call	_ZdlPv@PLT
 10150      00
 10151 0029 EB1E     		jmp	.L516
 10152              	.L515:
 10153 002b F30F1EFA 		endbr64
  13:../MemoryOutStream.h **** {
 10154              		.loc 2 13 7
 10155 002f 4889C3   		movq	%rax, %rbx
 10156 0032 488B45E8 		movq	-24(%rbp), %rax
 10157 0036 4889C7   		movq	%rax, %rdi
 10158 0039 E8000000 		call	_ZdlPv@PLT
 10158      00
 10159 003e 4889D8   		movq	%rbx, %rax
 10160 0041 4889C7   		movq	%rax, %rdi
 10161              	.LEHB282:
 10162 0044 E8000000 		call	_Unwind_Resume@PLT
 10162      00
 10163              	.LEHE282:
 10164              	.L516:
 10165 0049 488B5DF8 		movq	-8(%rbp), %rbx
 10166 004d C9       		leave
 10167              		.cfi_def_cfa 7, 8
 10168 004e C3       		ret
 10169              		.cfi_endproc
 10170              	.LFE1669:
 10171              		.section	.gcc_except_table
 10172              	.LLSDA1669:
 10173 0816 FF       		.byte	0xff
 10174 0817 FF       		.byte	0xff
 10175 0818 01       		.byte	0x1
 10176 0819 08       		.uleb128 .LLSDACSE1669-.LLSDACSB1669
 10177              	.LLSDACSB1669:
 10178 081a 18       		.uleb128 .LEHB281-.LFB1669
 10179 081b 05       		.uleb128 .LEHE281-.LEHB281
 10180 081c 2B       		.uleb128 .L515-.LFB1669
 10181 081d 00       		.uleb128 0
 10182 081e 44       		.uleb128 .LEHB282-.LFB1669
 10183 081f 05       		.uleb128 .LEHE282-.LEHB282
 10184 0820 00       		.uleb128 0
 10185 0821 00       		.uleb128 0
 10186              	.LLSDACSE1669:
 10187              		.section	.text._ZN8UnitTest15MemoryOutStreamD0Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD0Ev
 10189              		.set	.LTHUNK1,_ZN8UnitTest15MemoryOutStreamD0Ev
 10190              		.weak	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
 10192              	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev:
 10193              	.LFB1735:
  13:../MemoryOutStream.h **** {
 10194              		.loc 2 13 7 is_stmt 1
 10195              		.cfi_startproc
 10196 004f F30F1EFA 		endbr64
 10197 0053 4C8B17   		movq	(%rdi), %r10
 10198 0056 49037AE8 		addq	-24(%r10), %rdi
 10199 005a EBA4     		jmp	.LTHUNK1
 10200              		.cfi_endproc
 10201              	.LFE1735:
 10203              		.section	.rodata
 10204 0977 00000000 		.align 32
 10204      00000000 
 10204      00
 10207              	_ZTSN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE:
 10208 0980 2A4E3132 		.string	"*N12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE"
 10208      5F474C4F 
 10208      42414C5F 
 10208      5F4E5F31 
 10208      34325465 
 10209              		.section	.data.rel.ro,"aw"
 10210              		.align 8
 10213              	_ZTIN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE:
 10214 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10214      00000000 
 10215 0008 00000000 		.quad	_ZTSN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE
 10215      00000000 
 10216 0010 00000000 		.quad	_ZTIN8UnitTest4TestE
 10216      00000000 
 10217              		.section	.rodata
 10218 09be 0000     		.align 32
 10221              	_ZTSN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE:
 10222 09c0 2A4E3132 		.string	"*N12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE"
 10222      5F474C4F 
 10222      42414C5F 
 10222      5F4E5F31 
 10222      34395465 
 10223              		.section	.data.rel.ro
 10224              		.align 8
 10227              	_ZTIN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE:
 10228 0018 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10228      00000000 
 10229 0020 00000000 		.quad	_ZTSN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE
 10229      00000000 
 10230 0028 00000000 		.quad	_ZTIN8UnitTest4TestE
 10230      00000000 
 10231              		.section	.rodata
 10232 0a05 00000000 		.align 32
 10232      00000000 
 10232      00000000 
 10232      00000000 
 10232      00000000 
 10235              	_ZTSN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE:
 10236 0a20 2A4E3132 		.string	"*N12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE"
 10236      5F474C4F 
 10236      42414C5F 
 10236      5F4E5F31 
 10236      35325465 
 10237              		.section	.data.rel.ro
 10238              		.align 8
 10241              	_ZTIN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE:
 10242 0030 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10242      00000000 
 10243 0038 00000000 		.quad	_ZTSN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE
 10243      00000000 
 10244 0040 00000000 		.quad	_ZTIN8UnitTest4TestE
 10244      00000000 
 10245              		.section	.rodata
 10246 0a68 00000000 		.align 32
 10246      00000000 
 10246      00000000 
 10246      00000000 
 10246      00000000 
 10249              	_ZTSN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE:
 10250 0a80 2A4E3132 		.string	"*N12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE"
 10250      5F474C4F 
 10250      42414C5F 
 10250      5F4E5F31 
 10250      36315465 
 10251              		.section	.data.rel.ro
 10252              		.align 8
 10255              	_ZTIN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE:
 10256 0048 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10256      00000000 
 10257 0050 00000000 		.quad	_ZTSN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE
 10257      00000000 
 10258 0058 00000000 		.quad	_ZTIN8UnitTest4TestE
 10258      00000000 
 10259              		.section	.rodata
 10260 0ad1 00000000 		.align 32
 10260      00000000 
 10260      00000000 
 10260      000000
 10263              	_ZTSN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE:
 10264 0ae0 2A4E3132 		.string	"*N12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE"
 10264      5F474C4F 
 10264      42414C5F 
 10264      5F4E5F31 
 10264      36355465 
 10265              		.section	.data.rel.ro
 10266              		.align 8
 10269              	_ZTIN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE:
 10270 0060 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10270      00000000 
 10271 0068 00000000 		.quad	_ZTSN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE
 10271      00000000 
 10272 0070 00000000 		.quad	_ZTIN8UnitTest4TestE
 10272      00000000 
 10273              		.section	.rodata
 10274 0b35 00000000 		.align 32
 10274      00000000 
 10274      000000
 10277              	_ZTSN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE:
 10278 0b40 2A4E3132 		.string	"*N12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE"
 10278      5F474C4F 
 10278      42414C5F 
 10278      5F4E5F31 
 10278      35305465 
 10279              		.section	.data.rel.ro
 10280              		.align 8
 10283              	_ZTIN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE:
 10284 0078 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10284      00000000 
 10285 0080 00000000 		.quad	_ZTSN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE
 10285      00000000 
 10286 0088 00000000 		.quad	_ZTIN8UnitTest4TestE
 10286      00000000 
 10287              		.section	.rodata
 10288 0b86 00000000 		.align 32
 10288      00000000 
 10288      00000000 
 10288      00000000 
 10288      00000000 
 10291              	_ZTSN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE:
 10292 0ba0 2A4E3132 		.string	"*N12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE"
 10292      5F474C4F 
 10292      42414C5F 
 10292      5F4E5F31 
 10292      36365465 
 10293              		.section	.data.rel.ro
 10294              		.align 8
 10297              	_ZTIN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE:
 10298 0090 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10298      00000000 
 10299 0098 00000000 		.quad	_ZTSN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE
 10299      00000000 
 10300 00a0 00000000 		.quad	_ZTIN8UnitTest4TestE
 10300      00000000 
 10301              		.section	.rodata
 10302 0bf6 00000000 		.align 32
 10302      00000000 
 10302      0000
 10305              	_ZTSN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE:
 10306 0c00 2A4E3132 		.string	"*N12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE"
 10306      5F474C4F 
 10306      42414C5F 
 10306      5F4E5F31 
 10306      35345465 
 10307              		.section	.data.rel.ro
 10308              		.align 8
 10311              	_ZTIN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE:
 10312 00a8 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10312      00000000 
 10313 00b0 00000000 		.quad	_ZTSN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE
 10313      00000000 
 10314 00b8 00000000 		.quad	_ZTIN8UnitTest4TestE
 10314      00000000 
 10315              		.weak	_ZTIN8UnitTest15MemoryOutStreamE
 10316              		.section	.data.rel.ro._ZTIN8UnitTest15MemoryOutStreamE,"awG",@progbits,_ZTIN8UnitTest15MemoryOutSt
 10317              		.align 8
 10320              	_ZTIN8UnitTest15MemoryOutStreamE:
 10321 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10321      00000000 
 10322 0008 00000000 		.quad	_ZTSN8UnitTest15MemoryOutStreamE
 10322      00000000 
 10323 0010 00000000 		.quad	_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
 10323      00000000 
 10324              		.weak	_ZTSN8UnitTest15MemoryOutStreamE
 10325              		.section	.rodata._ZTSN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTSN8UnitTest15MemoryOutStreamE,
 10326              		.align 16
 10329              	_ZTSN8UnitTest15MemoryOutStreamE:
 10330 0000 4E38556E 		.string	"N8UnitTest15MemoryOutStreamE"
 10330      69745465 
 10330      73743135 
 10330      4D656D6F 
 10330      72794F75 
 10331              		.text
 10333              	_Z41__static_initialization_and_destruction_0ii:
 10334              	.LFB1670:
 182:TestXmlTestReporter.cpp **** 
 183:TestXmlTestReporter.cpp **** }
 10335              		.loc 3 183 1
 10336              		.cfi_startproc
 10337 4a53 F30F1EFA 		endbr64
 10338 4a57 55       		pushq	%rbp
 10339              		.cfi_def_cfa_offset 16
 10340              		.cfi_offset 6, -16
 10341 4a58 4889E5   		movq	%rsp, %rbp
 10342              		.cfi_def_cfa_register 6
 10343 4a5b 4883EC10 		subq	$16, %rsp
 10344 4a5f 897DFC   		movl	%edi, -4(%rbp)
 10345 4a62 8975F8   		movl	%esi, -8(%rbp)
 10346              		.loc 3 183 1
 10347 4a65 837DFC01 		cmpl	$1, -4(%rbp)
 10348 4a69 0F85BD02 		jne	.L519
 10348      0000
 10349              		.loc 3 183 1 is_stmt 0 discriminator 1
 10350 4a6f 817DF8FF 		cmpl	$65535, -8(%rbp)
 10350      FF0000
 10351 4a76 0F85B002 		jne	.L519
 10351      0000
  34:TestXmlTestReporter.cpp **** {
 10352              		.loc 3 34 1 is_stmt 1
 10353 4a7c 488D0500 		leaq	_ZN12_GLOBAL__N_162testXmlTestReporterFixtureMultipleCharactersAreEscapedInstanceE(%rip), %ra
 10353      000000
 10354 4a83 4889C7   		movq	%rax, %rdi
 10355 4a86 E84FB6FF 		call	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedC1Ev
 10355      FF
 10356 4a8b 488D0500 		leaq	__dso_handle(%rip), %rax
 10356      000000
 10357 4a92 4889C2   		movq	%rax, %rdx
 10358 4a95 488D0500 		leaq	_ZN12_GLOBAL__N_162testXmlTestReporterFixtureMultipleCharactersAreEscapedInstanceE(%rip), %ra
 10358      000000
 10359 4a9c 4889C6   		movq	%rax, %rsi
 10360 4a9f 488D0530 		leaq	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD1Ev(%rip), %rax
 10360      FFFFFF
 10361 4aa6 4889C7   		movq	%rax, %rdi
 10362 4aa9 E8000000 		call	__cxa_atexit@PLT
 10362      00
 10363 4aae E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 10363      00
 10364 4ab3 4889C1   		movq	%rax, %rcx
 10365 4ab6 488D0500 		leaq	_ZN12_GLOBAL__N_162testXmlTestReporterFixtureMultipleCharactersAreEscapedInstanceE(%rip), %ra
 10365      000000
 10366 4abd 4889C2   		movq	%rax, %rdx
 10367 4ac0 4889CE   		movq	%rcx, %rsi
 10368 4ac3 488D0500 		leaq	_ZN12_GLOBAL__N_155adderXmlTestReporterFixtureMultipleCharactersAreEscapedE(%rip), %rax
 10368      000000
 10369 4aca 4889C7   		movq	%rax, %rdi
 10370 4acd E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 10370      00
  55:TestXmlTestReporter.cpp **** {
 10371              		.loc 3 55 1
 10372 4ad2 488D0500 		leaq	_ZN12_GLOBAL__N_174testXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledInstance
 10372      000000
 10373 4ad9 4889C7   		movq	%rax, %rdi
 10374 4adc E8A7BBFF 		call	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledC1Ev
 10374      FF
 10375 4ae1 488D0500 		leaq	__dso_handle(%rip), %rax
 10375      000000
 10376 4ae8 4889C2   		movq	%rax, %rdx
 10377 4aeb 488D0500 		leaq	_ZN12_GLOBAL__N_174testXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledInstance
 10377      000000
 10378 4af2 4889C6   		movq	%rax, %rsi
 10379 4af5 488D055C 		leaq	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD1Ev(%ri
 10379      FEFFFF
 10380 4afc 4889C7   		movq	%rax, %rdi
 10381 4aff E8000000 		call	__cxa_atexit@PLT
 10381      00
 10382 4b04 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 10382      00
 10383 4b09 4889C1   		movq	%rax, %rcx
 10384 4b0c 488D0500 		leaq	_ZN12_GLOBAL__N_174testXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledInstance
 10384      000000
 10385 4b13 4889C2   		movq	%rax, %rdx
 10386 4b16 4889CE   		movq	%rcx, %rsi
 10387 4b19 488D0500 		leaq	_ZN12_GLOBAL__N_167adderXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE(%rip)
 10387      000000
 10388 4b20 4889C7   		movq	%rax, %rdi
 10389 4b23 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 10389      00
  68:TestXmlTestReporter.cpp **** {
 10390              		.loc 3 68 1
 10391 4b28 488D0500 		leaq	_ZN12_GLOBAL__N_158testXmlTestReporterFixtureEmptyReportSummaryFormatInstanceE(%rip), %rax
 10391      000000
 10392 4b2f 4889C7   		movq	%rax, %rdi
 10393 4b32 E813C2FF 		call	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatC1Ev
 10393      FF
 10394 4b37 488D0500 		leaq	__dso_handle(%rip), %rax
 10394      000000
 10395 4b3e 4889C2   		movq	%rax, %rdx
 10396 4b41 488D0500 		leaq	_ZN12_GLOBAL__N_158testXmlTestReporterFixtureEmptyReportSummaryFormatInstanceE(%rip), %rax
 10396      000000
 10397 4b48 4889C6   		movq	%rax, %rsi
 10398 4b4b 488D0588 		leaq	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD1Ev(%rip), %rax
 10398      FDFFFF
 10399 4b52 4889C7   		movq	%rax, %rdi
 10400 4b55 E8000000 		call	__cxa_atexit@PLT
 10400      00
 10401 4b5a E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 10401      00
 10402 4b5f 4889C1   		movq	%rax, %rcx
 10403 4b62 488D0500 		leaq	_ZN12_GLOBAL__N_158testXmlTestReporterFixtureEmptyReportSummaryFormatInstanceE(%rip), %rax
 10403      000000
 10404 4b69 4889C2   		movq	%rax, %rdx
 10405 4b6c 4889CE   		movq	%rcx, %rsi
 10406 4b6f 488D0500 		leaq	_ZN12_GLOBAL__N_151adderXmlTestReporterFixtureEmptyReportSummaryFormatE(%rip), %rax
 10406      000000
 10407 4b76 4889C7   		movq	%rax, %rdi
 10408 4b79 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 10408      00
  80:TestXmlTestReporter.cpp **** {
 10409              		.loc 3 80 1
 10410 4b7e 488D0500 		leaq	_ZN12_GLOBAL__N_173testXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatInstanceE
 10410      000000
 10411 4b85 4889C7   		movq	%rax, %rdi
 10412 4b88 E8C7C6FF 		call	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatC1Ev
 10412      FF
 10413 4b8d 488D0500 		leaq	__dso_handle(%rip), %rax
 10413      000000
 10414 4b94 4889C2   		movq	%rax, %rdx
 10415 4b97 488D0500 		leaq	_ZN12_GLOBAL__N_173testXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatInstanceE
 10415      000000
 10416 4b9e 4889C6   		movq	%rax, %rsi
 10417 4ba1 488D05B4 		leaq	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD1Ev(%rip
 10417      FCFFFF
 10418 4ba8 4889C7   		movq	%rax, %rdi
 10419 4bab E8000000 		call	__cxa_atexit@PLT
 10419      00
 10420 4bb0 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 10420      00
 10421 4bb5 4889C1   		movq	%rax, %rcx
 10422 4bb8 488D0500 		leaq	_ZN12_GLOBAL__N_173testXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatInstanceE
 10422      000000
 10423 4bbf 4889C2   		movq	%rax, %rdx
 10424 4bc2 4889CE   		movq	%rcx, %rsi
 10425 4bc5 488D0500 		leaq	_ZN12_GLOBAL__N_166adderXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE(%rip),
 10425      000000
 10426 4bcc 4889C7   		movq	%rax, %rdi
 10427 4bcf E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 10427      00
  96:TestXmlTestReporter.cpp **** {
 10428              		.loc 3 96 1
 10429 4bd4 488D0500 		leaq	_ZN12_GLOBAL__N_169testXmlTestReporterFixtureSingleFailedTestReportSummaryFormatInstanceE(%ri
 10429      000000
 10430 4bdb 4889C7   		movq	%rax, %rdi
 10431 4bde E8D3CBFF 		call	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatC1Ev
 10431      FF
 10432 4be3 488D0500 		leaq	__dso_handle(%rip), %rax
 10432      000000
 10433 4bea 4889C2   		movq	%rax, %rdx
 10434 4bed 488D0500 		leaq	_ZN12_GLOBAL__N_169testXmlTestReporterFixtureSingleFailedTestReportSummaryFormatInstanceE(%ri
 10434      000000
 10435 4bf4 4889C6   		movq	%rax, %rsi
 10436 4bf7 488D05E0 		leaq	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD1Ev(%rip), %
 10436      FBFFFF
 10437 4bfe 4889C7   		movq	%rax, %rdi
 10438 4c01 E8000000 		call	__cxa_atexit@PLT
 10438      00
 10439 4c06 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 10439      00
 10440 4c0b 4889C1   		movq	%rax, %rcx
 10441 4c0e 488D0500 		leaq	_ZN12_GLOBAL__N_169testXmlTestReporterFixtureSingleFailedTestReportSummaryFormatInstanceE(%ri
 10441      000000
 10442 4c15 4889C2   		movq	%rax, %rdx
 10443 4c18 4889CE   		movq	%rcx, %rsi
 10444 4c1b 488D0500 		leaq	_ZN12_GLOBAL__N_162adderXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE(%rip), %ra
 10444      000000
 10445 4c22 4889C7   		movq	%rax, %rdi
 10446 4c25 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 10446      00
 115:TestXmlTestReporter.cpp **** {
 10447              		.loc 3 115 1
 10448 4c2a 488D0500 		leaq	_ZN12_GLOBAL__N_160testXmlTestReporterFixtureFailureMessageIsXMLEscapedInstanceE(%rip), %rax
 10448      000000
 10449 4c31 4889C7   		movq	%rax, %rdi
 10450 4c34 E803D1FF 		call	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedC1Ev
 10450      FF
 10451 4c39 488D0500 		leaq	__dso_handle(%rip), %rax
 10451      000000
 10452 4c40 4889C2   		movq	%rax, %rdx
 10453 4c43 488D0500 		leaq	_ZN12_GLOBAL__N_160testXmlTestReporterFixtureFailureMessageIsXMLEscapedInstanceE(%rip), %rax
 10453      000000
 10454 4c4a 4889C6   		movq	%rax, %rsi
 10455 4c4d 488D050C 		leaq	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD1Ev(%rip), %rax
 10455      FBFFFF
 10456 4c54 4889C7   		movq	%rax, %rdi
 10457 4c57 E8000000 		call	__cxa_atexit@PLT
 10457      00
 10458 4c5c E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 10458      00
 10459 4c61 4889C1   		movq	%rax, %rcx
 10460 4c64 488D0500 		leaq	_ZN12_GLOBAL__N_160testXmlTestReporterFixtureFailureMessageIsXMLEscapedInstanceE(%rip), %rax
 10460      000000
 10461 4c6b 4889C2   		movq	%rax, %rdx
 10462 4c6e 4889CE   		movq	%rcx, %rsi
 10463 4c71 488D0500 		leaq	_ZN12_GLOBAL__N_153adderXmlTestReporterFixtureFailureMessageIsXMLEscapedE(%rip), %rax
 10463      000000
 10464 4c78 4889C7   		movq	%rax, %rdi
 10465 4c7b E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 10465      00
 135:TestXmlTestReporter.cpp **** {
 10466              		.loc 3 135 1
 10467 4c80 488D0500 		leaq	_ZN12_GLOBAL__N_157testXmlTestReporterFixtureOneFailureAndOneSuccessInstanceE(%rip), %rax
 10467      000000
 10468 4c87 4889C7   		movq	%rax, %rdi
 10469 4c8a E85BD6FF 		call	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessC1Ev
 10469      FF
 10470 4c8f 488D0500 		leaq	__dso_handle(%rip), %rax
 10470      000000
 10471 4c96 4889C2   		movq	%rax, %rdx
 10472 4c99 488D0500 		leaq	_ZN12_GLOBAL__N_157testXmlTestReporterFixtureOneFailureAndOneSuccessInstanceE(%rip), %rax
 10472      000000
 10473 4ca0 4889C6   		movq	%rax, %rsi
 10474 4ca3 488D0538 		leaq	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD1Ev(%rip), %rax
 10474      FAFFFF
 10475 4caa 4889C7   		movq	%rax, %rdi
 10476 4cad E8000000 		call	__cxa_atexit@PLT
 10476      00
 10477 4cb2 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 10477      00
 10478 4cb7 4889C1   		movq	%rax, %rcx
 10479 4cba 488D0500 		leaq	_ZN12_GLOBAL__N_157testXmlTestReporterFixtureOneFailureAndOneSuccessInstanceE(%rip), %rax
 10479      000000
 10480 4cc1 4889C2   		movq	%rax, %rdx
 10481 4cc4 4889CE   		movq	%rcx, %rsi
 10482 4cc7 488D0500 		leaq	_ZN12_GLOBAL__N_150adderXmlTestReporterFixtureOneFailureAndOneSuccessE(%rip), %rax
 10482      000000
 10483 4cce 4889C7   		movq	%rax, %rdi
 10484 4cd1 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 10484      00
 159:TestXmlTestReporter.cpp **** {
 10485              		.loc 3 159 1
 10486 4cd6 488D0500 		leaq	_ZN12_GLOBAL__N_150testXmlTestReporterFixtureMultipleFailuresInstanceE(%rip), %rax
 10486      000000
 10487 4cdd 4889C7   		movq	%rax, %rdi
 10488 4ce0 E82DDCFF 		call	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresC1Ev
 10488      FF
 10489 4ce5 488D0500 		leaq	__dso_handle(%rip), %rax
 10489      000000
 10490 4cec 4889C2   		movq	%rax, %rdx
 10491 4cef 488D0500 		leaq	_ZN12_GLOBAL__N_150testXmlTestReporterFixtureMultipleFailuresInstanceE(%rip), %rax
 10491      000000
 10492 4cf6 4889C6   		movq	%rax, %rsi
 10493 4cf9 488D0564 		leaq	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD1Ev(%rip), %rax
 10493      F9FFFF
 10494 4d00 4889C7   		movq	%rax, %rdi
 10495 4d03 E8000000 		call	__cxa_atexit@PLT
 10495      00
 10496 4d08 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 10496      00
 10497 4d0d 4889C1   		movq	%rax, %rcx
 10498 4d10 488D0500 		leaq	_ZN12_GLOBAL__N_150testXmlTestReporterFixtureMultipleFailuresInstanceE(%rip), %rax
 10498      000000
 10499 4d17 4889C2   		movq	%rax, %rdx
 10500 4d1a 4889CE   		movq	%rcx, %rsi
 10501 4d1d 488D0500 		leaq	_ZN12_GLOBAL__N_143adderXmlTestReporterFixtureMultipleFailuresE(%rip), %rax
 10501      000000
 10502 4d24 4889C7   		movq	%rax, %rdi
 10503 4d27 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 10503      00
 10504              	.L519:
 10505              		.loc 3 183 1
 10506 4d2c 90       		nop
 10507 4d2d C9       		leave
 10508              		.cfi_def_cfa 7, 8
 10509 4d2e C3       		ret
 10510              		.cfi_endproc
 10511              	.LFE1670:
 10513              		.section	.text._ZN8UnitTest20DeferredTestReporterD2Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 10514              		.align 2
 10515              		.weak	_ZN8UnitTest20DeferredTestReporterD2Ev
 10517              	_ZN8UnitTest20DeferredTestReporterD2Ev:
 10518              	.LFB1673:
 10519              		.file 7 "../DeferredTestReporter.h"
   1:../DeferredTestReporter.h **** #ifndef UNITTEST_DEFERREDTESTREPORTER_H
   2:../DeferredTestReporter.h **** #define UNITTEST_DEFERREDTESTREPORTER_H
   3:../DeferredTestReporter.h **** 
   4:../DeferredTestReporter.h **** #include "TestReporter.h"
   5:../DeferredTestReporter.h **** #include "DeferredTestResult.h"
   6:../DeferredTestReporter.h **** 
   7:../DeferredTestReporter.h **** #include <vector>
   8:../DeferredTestReporter.h **** 
   9:../DeferredTestReporter.h **** namespace UnitTest
  10:../DeferredTestReporter.h **** {
  11:../DeferredTestReporter.h **** 
  12:../DeferredTestReporter.h **** class DeferredTestReporter : public TestReporter
 10520              		.loc 7 12 7
 10521              		.cfi_startproc
 10522              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 10523              		.cfi_lsda 0x1b,.LLSDA1673
 10524 0000 F30F1EFA 		endbr64
 10525 0004 55       		pushq	%rbp
 10526              		.cfi_def_cfa_offset 16
 10527              		.cfi_offset 6, -16
 10528 0005 4889E5   		movq	%rsp, %rbp
 10529              		.cfi_def_cfa_register 6
 10530 0008 53       		pushq	%rbx
 10531 0009 4883EC18 		subq	$24, %rsp
 10532              		.cfi_offset 3, -24
 10533 000d 48897DE8 		movq	%rdi, -24(%rbp)
 10534              	.LBB174:
 10535              		.loc 7 12 7
 10536 0011 488D1500 		leaq	16+_ZTVN8UnitTest20DeferredTestReporterE(%rip), %rdx
 10536      000000
 10537 0018 488B45E8 		movq	-24(%rbp), %rax
 10538 001c 488910   		movq	%rdx, (%rax)
 10539 001f 488B45E8 		movq	-24(%rbp), %rax
 10540 0023 4883C008 		addq	$8, %rax
 10541 0027 4889C7   		movq	%rax, %rdi
 10542              	.LEHB283:
 10543 002a E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
 10543      00
 10544              	.LEHE283:
 10545              		.loc 7 12 7 is_stmt 0 discriminator 2
 10546 002f 488B45E8 		movq	-24(%rbp), %rax
 10547 0033 4889C7   		movq	%rax, %rdi
 10548              	.LEHB284:
 10549 0036 E8000000 		call	_ZN8UnitTest12TestReporterD2Ev@PLT
 10549      00
 10550              	.LEHE284:
 10551              	.LBE174:
 10552 003b EB1E     		jmp	.L523
 10553              	.L522:
 10554 003d F30F1EFA 		endbr64
 10555              	.LBB175:
 10556              		.loc 7 12 7
 10557 0041 4889C3   		movq	%rax, %rbx
 10558 0044 488B45E8 		movq	-24(%rbp), %rax
 10559 0048 4889C7   		movq	%rax, %rdi
 10560 004b E8000000 		call	_ZN8UnitTest12TestReporterD2Ev@PLT
 10560      00
 10561 0050 4889D8   		movq	%rbx, %rax
 10562 0053 4889C7   		movq	%rax, %rdi
 10563              	.LEHB285:
 10564 0056 E8000000 		call	_Unwind_Resume@PLT
 10564      00
 10565              	.LEHE285:
 10566              	.L523:
 10567              	.LBE175:
 10568 005b 488B5DF8 		movq	-8(%rbp), %rbx
 10569 005f C9       		leave
 10570              		.cfi_def_cfa 7, 8
 10571 0060 C3       		ret
 10572              		.cfi_endproc
 10573              	.LFE1673:
 10574              		.section	.gcc_except_table
 10575              	.LLSDA1673:
 10576 0822 FF       		.byte	0xff
 10577 0823 FF       		.byte	0xff
 10578 0824 01       		.byte	0x1
 10579 0825 0C       		.uleb128 .LLSDACSE1673-.LLSDACSB1673
 10580              	.LLSDACSB1673:
 10581 0826 2A       		.uleb128 .LEHB283-.LFB1673
 10582 0827 05       		.uleb128 .LEHE283-.LEHB283
 10583 0828 3D       		.uleb128 .L522-.LFB1673
 10584 0829 00       		.uleb128 0
 10585 082a 36       		.uleb128 .LEHB284-.LFB1673
 10586 082b 05       		.uleb128 .LEHE284-.LEHB284
 10587 082c 00       		.uleb128 0
 10588 082d 00       		.uleb128 0
 10589 082e 56       		.uleb128 .LEHB285-.LFB1673
 10590 082f 05       		.uleb128 .LEHE285-.LEHB285
 10591 0830 00       		.uleb128 0
 10592 0831 00       		.uleb128 0
 10593              	.LLSDACSE1673:
 10594              		.section	.text._ZN8UnitTest20DeferredTestReporterD2Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 10596              		.weak	_ZN8UnitTest20DeferredTestReporterD1Ev
 10597              		.set	_ZN8UnitTest20DeferredTestReporterD1Ev,_ZN8UnitTest20DeferredTestReporterD2Ev
 10598              		.section	.text._ZN8UnitTest20DeferredTestReporterD0Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 10599              		.align 2
 10600              		.weak	_ZN8UnitTest20DeferredTestReporterD0Ev
 10602              	_ZN8UnitTest20DeferredTestReporterD0Ev:
 10603              	.LFB1675:
 10604              		.loc 7 12 7 is_stmt 1
 10605              		.cfi_startproc
 10606              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 10607              		.cfi_lsda 0x1b,.LLSDA1675
 10608 0000 F30F1EFA 		endbr64
 10609 0004 55       		pushq	%rbp
 10610              		.cfi_def_cfa_offset 16
 10611              		.cfi_offset 6, -16
 10612 0005 4889E5   		movq	%rsp, %rbp
 10613              		.cfi_def_cfa_register 6
 10614 0008 53       		pushq	%rbx
 10615 0009 4883EC18 		subq	$24, %rsp
 10616              		.cfi_offset 3, -24
 10617 000d 48897DE8 		movq	%rdi, -24(%rbp)
 10618              		.loc 7 12 7
 10619 0011 488B45E8 		movq	-24(%rbp), %rax
 10620 0015 4889C7   		movq	%rax, %rdi
 10621              	.LEHB286:
 10622 0018 E8000000 		call	_ZN8UnitTest20DeferredTestReporterD1Ev
 10622      00
 10623              	.LEHE286:
 10624              		.loc 7 12 7 is_stmt 0 discriminator 2
 10625 001d 488B45E8 		movq	-24(%rbp), %rax
 10626 0021 4889C7   		movq	%rax, %rdi
 10627 0024 E8000000 		call	_ZdlPv@PLT
 10627      00
 10628 0029 EB1E     		jmp	.L527
 10629              	.L526:
 10630 002b F30F1EFA 		endbr64
 10631              		.loc 7 12 7
 10632 002f 4889C3   		movq	%rax, %rbx
 10633 0032 488B45E8 		movq	-24(%rbp), %rax
 10634 0036 4889C7   		movq	%rax, %rdi
 10635 0039 E8000000 		call	_ZdlPv@PLT
 10635      00
 10636 003e 4889D8   		movq	%rbx, %rax
 10637 0041 4889C7   		movq	%rax, %rdi
 10638              	.LEHB287:
 10639 0044 E8000000 		call	_Unwind_Resume@PLT
 10639      00
 10640              	.LEHE287:
 10641              	.L527:
 10642 0049 488B5DF8 		movq	-8(%rbp), %rbx
 10643 004d C9       		leave
 10644              		.cfi_def_cfa 7, 8
 10645 004e C3       		ret
 10646              		.cfi_endproc
 10647              	.LFE1675:
 10648              		.section	.gcc_except_table
 10649              	.LLSDA1675:
 10650 0832 FF       		.byte	0xff
 10651 0833 FF       		.byte	0xff
 10652 0834 01       		.byte	0x1
 10653 0835 08       		.uleb128 .LLSDACSE1675-.LLSDACSB1675
 10654              	.LLSDACSB1675:
 10655 0836 18       		.uleb128 .LEHB286-.LFB1675
 10656 0837 05       		.uleb128 .LEHE286-.LEHB286
 10657 0838 2B       		.uleb128 .L526-.LFB1675
 10658 0839 00       		.uleb128 0
 10659 083a 44       		.uleb128 .LEHB287-.LFB1675
 10660 083b 05       		.uleb128 .LEHE287-.LEHB287
 10661 083c 00       		.uleb128 0
 10662 083d 00       		.uleb128 0
 10663              	.LLSDACSE1675:
 10664              		.section	.text._ZN8UnitTest20DeferredTestReporterD0Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 10666              		.section	.text._ZN8UnitTest15XmlTestReporterD2Ev,"axG",@progbits,_ZN8UnitTest15XmlTestReporterD5Ev
 10667              		.align 2
 10668              		.weak	_ZN8UnitTest15XmlTestReporterD2Ev
 10670              	_ZN8UnitTest15XmlTestReporterD2Ev:
 10671              	.LFB1676:
 10672              		.file 8 "../XmlTestReporter.h"
   1:../XmlTestReporter.h **** #ifndef UNITTEST_XMLTESTREPORTER_H
   2:../XmlTestReporter.h **** #define UNITTEST_XMLTESTREPORTER_H
   3:../XmlTestReporter.h **** 
   4:../XmlTestReporter.h **** #include "DeferredTestReporter.h"
   5:../XmlTestReporter.h **** 
   6:../XmlTestReporter.h **** #include <iosfwd>
   7:../XmlTestReporter.h **** 
   8:../XmlTestReporter.h **** namespace UnitTest
   9:../XmlTestReporter.h **** {
  10:../XmlTestReporter.h **** 
  11:../XmlTestReporter.h **** class XmlTestReporter : public DeferredTestReporter
 10673              		.loc 8 11 7 is_stmt 1
 10674              		.cfi_startproc
 10675 0000 F30F1EFA 		endbr64
 10676 0004 55       		pushq	%rbp
 10677              		.cfi_def_cfa_offset 16
 10678              		.cfi_offset 6, -16
 10679 0005 4889E5   		movq	%rsp, %rbp
 10680              		.cfi_def_cfa_register 6
 10681 0008 4883EC10 		subq	$16, %rsp
 10682 000c 48897DF8 		movq	%rdi, -8(%rbp)
 10683              	.LBB176:
 10684              		.loc 8 11 7
 10685 0010 488D1500 		leaq	16+_ZTVN8UnitTest15XmlTestReporterE(%rip), %rdx
 10685      000000
 10686 0017 488B45F8 		movq	-8(%rbp), %rax
 10687 001b 488910   		movq	%rdx, (%rax)
 10688 001e 488B45F8 		movq	-8(%rbp), %rax
 10689 0022 4889C7   		movq	%rax, %rdi
 10690 0025 E8000000 		call	_ZN8UnitTest20DeferredTestReporterD2Ev
 10690      00
 10691              	.LBE176:
 10692 002a 90       		nop
 10693 002b C9       		leave
 10694              		.cfi_def_cfa 7, 8
 10695 002c C3       		ret
 10696              		.cfi_endproc
 10697              	.LFE1676:
 10699              		.weak	_ZN8UnitTest15XmlTestReporterD1Ev
 10700              		.set	_ZN8UnitTest15XmlTestReporterD1Ev,_ZN8UnitTest15XmlTestReporterD2Ev
 10701              		.section	.text._ZN8UnitTest15XmlTestReporterD0Ev,"axG",@progbits,_ZN8UnitTest15XmlTestReporterD5Ev
 10702              		.align 2
 10703              		.weak	_ZN8UnitTest15XmlTestReporterD0Ev
 10705              	_ZN8UnitTest15XmlTestReporterD0Ev:
 10706              	.LFB1678:
 10707              		.loc 8 11 7
 10708              		.cfi_startproc
 10709              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 10710              		.cfi_lsda 0x1b,.LLSDA1678
 10711 0000 F30F1EFA 		endbr64
 10712 0004 55       		pushq	%rbp
 10713              		.cfi_def_cfa_offset 16
 10714              		.cfi_offset 6, -16
 10715 0005 4889E5   		movq	%rsp, %rbp
 10716              		.cfi_def_cfa_register 6
 10717 0008 53       		pushq	%rbx
 10718 0009 4883EC18 		subq	$24, %rsp
 10719              		.cfi_offset 3, -24
 10720 000d 48897DE8 		movq	%rdi, -24(%rbp)
 10721              		.loc 8 11 7
 10722 0011 488B45E8 		movq	-24(%rbp), %rax
 10723 0015 4889C7   		movq	%rax, %rdi
 10724              	.LEHB288:
 10725 0018 E8000000 		call	_ZN8UnitTest15XmlTestReporterD1Ev
 10725      00
 10726              	.LEHE288:
 10727              		.loc 8 11 7 is_stmt 0 discriminator 2
 10728 001d 488B45E8 		movq	-24(%rbp), %rax
 10729 0021 4889C7   		movq	%rax, %rdi
 10730 0024 E8000000 		call	_ZdlPv@PLT
 10730      00
 10731 0029 EB1E     		jmp	.L532
 10732              	.L531:
 10733 002b F30F1EFA 		endbr64
 10734              		.loc 8 11 7
 10735 002f 4889C3   		movq	%rax, %rbx
 10736 0032 488B45E8 		movq	-24(%rbp), %rax
 10737 0036 4889C7   		movq	%rax, %rdi
 10738 0039 E8000000 		call	_ZdlPv@PLT
 10738      00
 10739 003e 4889D8   		movq	%rbx, %rax
 10740 0041 4889C7   		movq	%rax, %rdi
 10741              	.LEHB289:
 10742 0044 E8000000 		call	_Unwind_Resume@PLT
 10742      00
 10743              	.LEHE289:
 10744              	.L532:
 10745 0049 488B5DF8 		movq	-8(%rbp), %rbx
 10746 004d C9       		leave
 10747              		.cfi_def_cfa 7, 8
 10748 004e C3       		ret
 10749              		.cfi_endproc
 10750              	.LFE1678:
 10751              		.section	.gcc_except_table
 10752              	.LLSDA1678:
 10753 083e FF       		.byte	0xff
 10754 083f FF       		.byte	0xff
 10755 0840 01       		.byte	0x1
 10756 0841 08       		.uleb128 .LLSDACSE1678-.LLSDACSB1678
 10757              	.LLSDACSB1678:
 10758 0842 18       		.uleb128 .LEHB288-.LFB1678
 10759 0843 05       		.uleb128 .LEHE288-.LEHB288
 10760 0844 2B       		.uleb128 .L531-.LFB1678
 10761 0845 00       		.uleb128 0
 10762 0846 44       		.uleb128 .LEHB289-.LFB1678
 10763 0847 05       		.uleb128 .LEHE289-.LEHB289
 10764 0848 00       		.uleb128 0
 10765 0849 00       		.uleb128 0
 10766              	.LLSDACSE1678:
 10767              		.section	.text._ZN8UnitTest15XmlTestReporterD0Ev,"axG",@progbits,_ZN8UnitTest15XmlTestReporterD5Ev
 10769              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vect
 10770              		.align 2
 10771              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 10773              	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:
 10774              	.LFB1680:
 10775              		.file 9 "/usr/include/c++/11/bits/stl_vector.h"
   1:/usr/include/c++/11/bits/stl_vector.h **** // Vector implementation -*- C++ -*-
   2:/usr/include/c++/11/bits/stl_vector.h **** 
   3:/usr/include/c++/11/bits/stl_vector.h **** // Copyright (C) 2001-2021 Free Software Foundation, Inc.
   4:/usr/include/c++/11/bits/stl_vector.h **** //
   5:/usr/include/c++/11/bits/stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/11/bits/stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/11/bits/stl_vector.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/11/bits/stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/11/bits/stl_vector.h **** // any later version.
  10:/usr/include/c++/11/bits/stl_vector.h **** 
  11:/usr/include/c++/11/bits/stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/11/bits/stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/11/bits/stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/11/bits/stl_vector.h **** // GNU General Public License for more details.
  15:/usr/include/c++/11/bits/stl_vector.h **** 
  16:/usr/include/c++/11/bits/stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/11/bits/stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/11/bits/stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/11/bits/stl_vector.h **** 
  20:/usr/include/c++/11/bits/stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/11/bits/stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/11/bits/stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/11/bits/stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/11/bits/stl_vector.h **** 
  25:/usr/include/c++/11/bits/stl_vector.h **** /*
  26:/usr/include/c++/11/bits/stl_vector.h ****  *
  27:/usr/include/c++/11/bits/stl_vector.h ****  * Copyright (c) 1994
  28:/usr/include/c++/11/bits/stl_vector.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/11/bits/stl_vector.h ****  *
  30:/usr/include/c++/11/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/11/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/11/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/11/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/11/bits/stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/11/bits/stl_vector.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/11/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/11/bits/stl_vector.h ****  *
  38:/usr/include/c++/11/bits/stl_vector.h ****  *
  39:/usr/include/c++/11/bits/stl_vector.h ****  * Copyright (c) 1996
  40:/usr/include/c++/11/bits/stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/11/bits/stl_vector.h ****  *
  42:/usr/include/c++/11/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/11/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/11/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/11/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/11/bits/stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/11/bits/stl_vector.h ****  * representations about the suitability of this  software for any
  48:/usr/include/c++/11/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/11/bits/stl_vector.h ****  */
  50:/usr/include/c++/11/bits/stl_vector.h **** 
  51:/usr/include/c++/11/bits/stl_vector.h **** /** @file bits/stl_vector.h
  52:/usr/include/c++/11/bits/stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/11/bits/stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:/usr/include/c++/11/bits/stl_vector.h ****  */
  55:/usr/include/c++/11/bits/stl_vector.h **** 
  56:/usr/include/c++/11/bits/stl_vector.h **** #ifndef _STL_VECTOR_H
  57:/usr/include/c++/11/bits/stl_vector.h **** #define _STL_VECTOR_H 1
  58:/usr/include/c++/11/bits/stl_vector.h **** 
  59:/usr/include/c++/11/bits/stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:/usr/include/c++/11/bits/stl_vector.h **** #include <bits/functexcept.h>
  61:/usr/include/c++/11/bits/stl_vector.h **** #include <bits/concept_check.h>
  62:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
  63:/usr/include/c++/11/bits/stl_vector.h **** #include <initializer_list>
  64:/usr/include/c++/11/bits/stl_vector.h **** #endif
  65:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus > 201703L
  66:/usr/include/c++/11/bits/stl_vector.h **** # include <compare>
  67:/usr/include/c++/11/bits/stl_vector.h **** #endif
  68:/usr/include/c++/11/bits/stl_vector.h **** 
  69:/usr/include/c++/11/bits/stl_vector.h **** #include <debug/assertions.h>
  70:/usr/include/c++/11/bits/stl_vector.h **** 
  71:/usr/include/c++/11/bits/stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
  72:/usr/include/c++/11/bits/stl_vector.h **** extern "C" void
  73:/usr/include/c++/11/bits/stl_vector.h **** __sanitizer_annotate_contiguous_container(const void*, const void*,
  74:/usr/include/c++/11/bits/stl_vector.h **** 					  const void*, const void*);
  75:/usr/include/c++/11/bits/stl_vector.h **** #endif
  76:/usr/include/c++/11/bits/stl_vector.h **** 
  77:/usr/include/c++/11/bits/stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  78:/usr/include/c++/11/bits/stl_vector.h **** {
  79:/usr/include/c++/11/bits/stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  80:/usr/include/c++/11/bits/stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  81:/usr/include/c++/11/bits/stl_vector.h **** 
  82:/usr/include/c++/11/bits/stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  83:/usr/include/c++/11/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc>
  84:/usr/include/c++/11/bits/stl_vector.h ****     struct _Vector_base
  85:/usr/include/c++/11/bits/stl_vector.h ****     {
  86:/usr/include/c++/11/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  87:/usr/include/c++/11/bits/stl_vector.h **** 	rebind<_Tp>::other _Tp_alloc_type;
  88:/usr/include/c++/11/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  89:/usr/include/c++/11/bits/stl_vector.h ****        	pointer;
  90:/usr/include/c++/11/bits/stl_vector.h **** 
  91:/usr/include/c++/11/bits/stl_vector.h ****       struct _Vector_impl_data
  92:/usr/include/c++/11/bits/stl_vector.h ****       {
  93:/usr/include/c++/11/bits/stl_vector.h **** 	pointer _M_start;
  94:/usr/include/c++/11/bits/stl_vector.h **** 	pointer _M_finish;
  95:/usr/include/c++/11/bits/stl_vector.h **** 	pointer _M_end_of_storage;
  96:/usr/include/c++/11/bits/stl_vector.h **** 
  97:/usr/include/c++/11/bits/stl_vector.h **** 	_Vector_impl_data() _GLIBCXX_NOEXCEPT
  98:/usr/include/c++/11/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
  99:/usr/include/c++/11/bits/stl_vector.h **** 	{ }
 100:/usr/include/c++/11/bits/stl_vector.h **** 
 101:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
 102:/usr/include/c++/11/bits/stl_vector.h **** 	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
 103:/usr/include/c++/11/bits/stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 104:/usr/include/c++/11/bits/stl_vector.h **** 	  _M_end_of_storage(__x._M_end_of_storage)
 105:/usr/include/c++/11/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 106:/usr/include/c++/11/bits/stl_vector.h **** #endif
 107:/usr/include/c++/11/bits/stl_vector.h **** 
 108:/usr/include/c++/11/bits/stl_vector.h **** 	void
 109:/usr/include/c++/11/bits/stl_vector.h **** 	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
 110:/usr/include/c++/11/bits/stl_vector.h **** 	{
 111:/usr/include/c++/11/bits/stl_vector.h **** 	  _M_start = __x._M_start;
 112:/usr/include/c++/11/bits/stl_vector.h **** 	  _M_finish = __x._M_finish;
 113:/usr/include/c++/11/bits/stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 114:/usr/include/c++/11/bits/stl_vector.h **** 	}
 115:/usr/include/c++/11/bits/stl_vector.h **** 
 116:/usr/include/c++/11/bits/stl_vector.h **** 	void
 117:/usr/include/c++/11/bits/stl_vector.h **** 	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
 118:/usr/include/c++/11/bits/stl_vector.h **** 	{
 119:/usr/include/c++/11/bits/stl_vector.h **** 	  // Do not use std::swap(_M_start, __x._M_start), etc as it loses
 120:/usr/include/c++/11/bits/stl_vector.h **** 	  // information used by TBAA.
 121:/usr/include/c++/11/bits/stl_vector.h **** 	  _Vector_impl_data __tmp;
 122:/usr/include/c++/11/bits/stl_vector.h **** 	  __tmp._M_copy_data(*this);
 123:/usr/include/c++/11/bits/stl_vector.h **** 	  _M_copy_data(__x);
 124:/usr/include/c++/11/bits/stl_vector.h **** 	  __x._M_copy_data(__tmp);
 125:/usr/include/c++/11/bits/stl_vector.h **** 	}
 126:/usr/include/c++/11/bits/stl_vector.h ****       };
 127:/usr/include/c++/11/bits/stl_vector.h **** 
 128:/usr/include/c++/11/bits/stl_vector.h ****       struct _Vector_impl
 129:/usr/include/c++/11/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 130:/usr/include/c++/11/bits/stl_vector.h ****       {
 131:/usr/include/c++/11/bits/stl_vector.h **** 	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 132:/usr/include/c++/11/bits/stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 133:/usr/include/c++/11/bits/stl_vector.h **** 	: _Tp_alloc_type()
 134:/usr/include/c++/11/bits/stl_vector.h **** 	{ }
 135:/usr/include/c++/11/bits/stl_vector.h **** 
 136:/usr/include/c++/11/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 137:/usr/include/c++/11/bits/stl_vector.h **** 	: _Tp_alloc_type(__a)
 138:/usr/include/c++/11/bits/stl_vector.h **** 	{ }
 139:/usr/include/c++/11/bits/stl_vector.h **** 
 140:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
 141:/usr/include/c++/11/bits/stl_vector.h **** 	// Not defaulted, to enforce noexcept(true) even when
 142:/usr/include/c++/11/bits/stl_vector.h **** 	// !is_nothrow_move_constructible<_Tp_alloc_type>.
 143:/usr/include/c++/11/bits/stl_vector.h **** 	_Vector_impl(_Vector_impl&& __x) noexcept
 144:/usr/include/c++/11/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 145:/usr/include/c++/11/bits/stl_vector.h **** 	{ }
 146:/usr/include/c++/11/bits/stl_vector.h **** 
 147:/usr/include/c++/11/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
 148:/usr/include/c++/11/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__a))
 149:/usr/include/c++/11/bits/stl_vector.h **** 	{ }
 150:/usr/include/c++/11/bits/stl_vector.h **** 
 151:/usr/include/c++/11/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a, _Vector_impl&& __rv) noexcept
 152:/usr/include/c++/11/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)), _Vector_impl_data(std::move(__rv))
 153:/usr/include/c++/11/bits/stl_vector.h **** 	{ }
 154:/usr/include/c++/11/bits/stl_vector.h **** #endif
 155:/usr/include/c++/11/bits/stl_vector.h **** 
 156:/usr/include/c++/11/bits/stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 157:/usr/include/c++/11/bits/stl_vector.h **** 	template<typename = _Tp_alloc_type>
 158:/usr/include/c++/11/bits/stl_vector.h **** 	  struct _Asan
 159:/usr/include/c++/11/bits/stl_vector.h **** 	  {
 160:/usr/include/c++/11/bits/stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 161:/usr/include/c++/11/bits/stl_vector.h **** 	      ::size_type size_type;
 162:/usr/include/c++/11/bits/stl_vector.h **** 
 163:/usr/include/c++/11/bits/stl_vector.h **** 	    static void _S_shrink(_Vector_impl&, size_type) { }
 164:/usr/include/c++/11/bits/stl_vector.h **** 	    static void _S_on_dealloc(_Vector_impl&) { }
 165:/usr/include/c++/11/bits/stl_vector.h **** 
 166:/usr/include/c++/11/bits/stl_vector.h **** 	    typedef _Vector_impl& _Reinit;
 167:/usr/include/c++/11/bits/stl_vector.h **** 
 168:/usr/include/c++/11/bits/stl_vector.h **** 	    struct _Grow
 169:/usr/include/c++/11/bits/stl_vector.h **** 	    {
 170:/usr/include/c++/11/bits/stl_vector.h **** 	      _Grow(_Vector_impl&, size_type) { }
 171:/usr/include/c++/11/bits/stl_vector.h **** 	      void _M_grew(size_type) { }
 172:/usr/include/c++/11/bits/stl_vector.h **** 	    };
 173:/usr/include/c++/11/bits/stl_vector.h **** 	  };
 174:/usr/include/c++/11/bits/stl_vector.h **** 
 175:/usr/include/c++/11/bits/stl_vector.h **** 	// Enable ASan annotations for memory obtained from std::allocator.
 176:/usr/include/c++/11/bits/stl_vector.h **** 	template<typename _Up>
 177:/usr/include/c++/11/bits/stl_vector.h **** 	  struct _Asan<allocator<_Up> >
 178:/usr/include/c++/11/bits/stl_vector.h **** 	  {
 179:/usr/include/c++/11/bits/stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 180:/usr/include/c++/11/bits/stl_vector.h **** 	      ::size_type size_type;
 181:/usr/include/c++/11/bits/stl_vector.h **** 
 182:/usr/include/c++/11/bits/stl_vector.h **** 	    // Adjust ASan annotation for [_M_start, _M_end_of_storage) to
 183:/usr/include/c++/11/bits/stl_vector.h **** 	    // mark end of valid region as __curr instead of __prev.
 184:/usr/include/c++/11/bits/stl_vector.h **** 	    static void
 185:/usr/include/c++/11/bits/stl_vector.h **** 	    _S_adjust(_Vector_impl& __impl, pointer __prev, pointer __curr)
 186:/usr/include/c++/11/bits/stl_vector.h **** 	    {
 187:/usr/include/c++/11/bits/stl_vector.h **** 	      __sanitizer_annotate_contiguous_container(__impl._M_start,
 188:/usr/include/c++/11/bits/stl_vector.h **** 		  __impl._M_end_of_storage, __prev, __curr);
 189:/usr/include/c++/11/bits/stl_vector.h **** 	    }
 190:/usr/include/c++/11/bits/stl_vector.h **** 
 191:/usr/include/c++/11/bits/stl_vector.h **** 	    static void
 192:/usr/include/c++/11/bits/stl_vector.h **** 	    _S_grow(_Vector_impl& __impl, size_type __n)
 193:/usr/include/c++/11/bits/stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish, __impl._M_finish + __n); }
 194:/usr/include/c++/11/bits/stl_vector.h **** 
 195:/usr/include/c++/11/bits/stl_vector.h **** 	    static void
 196:/usr/include/c++/11/bits/stl_vector.h **** 	    _S_shrink(_Vector_impl& __impl, size_type __n)
 197:/usr/include/c++/11/bits/stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish + __n, __impl._M_finish); }
 198:/usr/include/c++/11/bits/stl_vector.h **** 
 199:/usr/include/c++/11/bits/stl_vector.h **** 	    static void
 200:/usr/include/c++/11/bits/stl_vector.h **** 	    _S_on_dealloc(_Vector_impl& __impl)
 201:/usr/include/c++/11/bits/stl_vector.h **** 	    {
 202:/usr/include/c++/11/bits/stl_vector.h **** 	      if (__impl._M_start)
 203:/usr/include/c++/11/bits/stl_vector.h **** 		_S_adjust(__impl, __impl._M_finish, __impl._M_end_of_storage);
 204:/usr/include/c++/11/bits/stl_vector.h **** 	    }
 205:/usr/include/c++/11/bits/stl_vector.h **** 
 206:/usr/include/c++/11/bits/stl_vector.h **** 	    // Used on reallocation to tell ASan unused capacity is invalid.
 207:/usr/include/c++/11/bits/stl_vector.h **** 	    struct _Reinit
 208:/usr/include/c++/11/bits/stl_vector.h **** 	    {
 209:/usr/include/c++/11/bits/stl_vector.h **** 	      explicit _Reinit(_Vector_impl& __impl) : _M_impl(__impl)
 210:/usr/include/c++/11/bits/stl_vector.h **** 	      {
 211:/usr/include/c++/11/bits/stl_vector.h **** 		// Mark unused capacity as valid again before deallocating it.
 212:/usr/include/c++/11/bits/stl_vector.h **** 		_S_on_dealloc(_M_impl);
 213:/usr/include/c++/11/bits/stl_vector.h **** 	      }
 214:/usr/include/c++/11/bits/stl_vector.h **** 
 215:/usr/include/c++/11/bits/stl_vector.h **** 	      ~_Reinit()
 216:/usr/include/c++/11/bits/stl_vector.h **** 	      {
 217:/usr/include/c++/11/bits/stl_vector.h **** 		// Mark unused capacity as invalid after reallocation.
 218:/usr/include/c++/11/bits/stl_vector.h **** 		if (_M_impl._M_start)
 219:/usr/include/c++/11/bits/stl_vector.h **** 		  _S_adjust(_M_impl, _M_impl._M_end_of_storage,
 220:/usr/include/c++/11/bits/stl_vector.h **** 			    _M_impl._M_finish);
 221:/usr/include/c++/11/bits/stl_vector.h **** 	      }
 222:/usr/include/c++/11/bits/stl_vector.h **** 
 223:/usr/include/c++/11/bits/stl_vector.h **** 	      _Vector_impl& _M_impl;
 224:/usr/include/c++/11/bits/stl_vector.h **** 
 225:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
 226:/usr/include/c++/11/bits/stl_vector.h **** 	      _Reinit(const _Reinit&) = delete;
 227:/usr/include/c++/11/bits/stl_vector.h **** 	      _Reinit& operator=(const _Reinit&) = delete;
 228:/usr/include/c++/11/bits/stl_vector.h **** #endif
 229:/usr/include/c++/11/bits/stl_vector.h **** 	    };
 230:/usr/include/c++/11/bits/stl_vector.h **** 
 231:/usr/include/c++/11/bits/stl_vector.h **** 	    // Tell ASan when unused capacity is initialized to be valid.
 232:/usr/include/c++/11/bits/stl_vector.h **** 	    struct _Grow
 233:/usr/include/c++/11/bits/stl_vector.h **** 	    {
 234:/usr/include/c++/11/bits/stl_vector.h **** 	      _Grow(_Vector_impl& __impl, size_type __n)
 235:/usr/include/c++/11/bits/stl_vector.h **** 	      : _M_impl(__impl), _M_n(__n)
 236:/usr/include/c++/11/bits/stl_vector.h **** 	      { _S_grow(_M_impl, __n); }
 237:/usr/include/c++/11/bits/stl_vector.h **** 
 238:/usr/include/c++/11/bits/stl_vector.h **** 	      ~_Grow() { if (_M_n) _S_shrink(_M_impl, _M_n); }
 239:/usr/include/c++/11/bits/stl_vector.h **** 
 240:/usr/include/c++/11/bits/stl_vector.h **** 	      void _M_grew(size_type __n) { _M_n -= __n; }
 241:/usr/include/c++/11/bits/stl_vector.h **** 
 242:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
 243:/usr/include/c++/11/bits/stl_vector.h **** 	      _Grow(const _Grow&) = delete;
 244:/usr/include/c++/11/bits/stl_vector.h **** 	      _Grow& operator=(const _Grow&) = delete;
 245:/usr/include/c++/11/bits/stl_vector.h **** #endif
 246:/usr/include/c++/11/bits/stl_vector.h **** 	    private:
 247:/usr/include/c++/11/bits/stl_vector.h **** 	      _Vector_impl& _M_impl;
 248:/usr/include/c++/11/bits/stl_vector.h **** 	      size_type _M_n;
 249:/usr/include/c++/11/bits/stl_vector.h **** 	    };
 250:/usr/include/c++/11/bits/stl_vector.h **** 	  };
 251:/usr/include/c++/11/bits/stl_vector.h **** 
 252:/usr/include/c++/11/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT \
 253:/usr/include/c++/11/bits/stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Reinit const \
 254:/usr/include/c++/11/bits/stl_vector.h **** 	__attribute__((__unused__)) __reinit_guard(this->_M_impl)
 255:/usr/include/c++/11/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n) \
 256:/usr/include/c++/11/bits/stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Grow \
 257:/usr/include/c++/11/bits/stl_vector.h **** 	__attribute__((__unused__)) __grow_guard(this->_M_impl, (n))
 258:/usr/include/c++/11/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n) __grow_guard._M_grew(n)
 259:/usr/include/c++/11/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n) \
 260:/usr/include/c++/11/bits/stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_shrink(this->_M_impl, n)
 261:/usr/include/c++/11/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC \
 262:/usr/include/c++/11/bits/stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_on_dealloc(this->_M_impl)
 263:/usr/include/c++/11/bits/stl_vector.h **** #else // ! (_GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR)
 264:/usr/include/c++/11/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT
 265:/usr/include/c++/11/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n)
 266:/usr/include/c++/11/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n)
 267:/usr/include/c++/11/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n)
 268:/usr/include/c++/11/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC
 269:/usr/include/c++/11/bits/stl_vector.h **** #endif // _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 270:/usr/include/c++/11/bits/stl_vector.h ****       };
 271:/usr/include/c++/11/bits/stl_vector.h **** 
 272:/usr/include/c++/11/bits/stl_vector.h ****     public:
 273:/usr/include/c++/11/bits/stl_vector.h ****       typedef _Alloc allocator_type;
 274:/usr/include/c++/11/bits/stl_vector.h **** 
 275:/usr/include/c++/11/bits/stl_vector.h ****       _Tp_alloc_type&
 276:/usr/include/c++/11/bits/stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 277:/usr/include/c++/11/bits/stl_vector.h ****       { return this->_M_impl; }
 278:/usr/include/c++/11/bits/stl_vector.h **** 
 279:/usr/include/c++/11/bits/stl_vector.h ****       const _Tp_alloc_type&
 280:/usr/include/c++/11/bits/stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 281:/usr/include/c++/11/bits/stl_vector.h ****       { return this->_M_impl; }
 282:/usr/include/c++/11/bits/stl_vector.h **** 
 283:/usr/include/c++/11/bits/stl_vector.h ****       allocator_type
 284:/usr/include/c++/11/bits/stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 285:/usr/include/c++/11/bits/stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 286:/usr/include/c++/11/bits/stl_vector.h **** 
 287:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
 288:/usr/include/c++/11/bits/stl_vector.h ****       _Vector_base() = default;
 289:/usr/include/c++/11/bits/stl_vector.h **** #else
 290:/usr/include/c++/11/bits/stl_vector.h ****       _Vector_base() { }
 291:/usr/include/c++/11/bits/stl_vector.h **** #endif
 292:/usr/include/c++/11/bits/stl_vector.h **** 
 293:/usr/include/c++/11/bits/stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 294:/usr/include/c++/11/bits/stl_vector.h ****       : _M_impl(__a) { }
 295:/usr/include/c++/11/bits/stl_vector.h **** 
 296:/usr/include/c++/11/bits/stl_vector.h ****       // Kept for ABI compatibility.
 297:/usr/include/c++/11/bits/stl_vector.h **** #if !_GLIBCXX_INLINE_VERSION
 298:/usr/include/c++/11/bits/stl_vector.h ****       _Vector_base(size_t __n)
 299:/usr/include/c++/11/bits/stl_vector.h ****       : _M_impl()
 300:/usr/include/c++/11/bits/stl_vector.h ****       { _M_create_storage(__n); }
 301:/usr/include/c++/11/bits/stl_vector.h **** #endif
 302:/usr/include/c++/11/bits/stl_vector.h **** 
 303:/usr/include/c++/11/bits/stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 304:/usr/include/c++/11/bits/stl_vector.h ****       : _M_impl(__a)
 305:/usr/include/c++/11/bits/stl_vector.h ****       { _M_create_storage(__n); }
 306:/usr/include/c++/11/bits/stl_vector.h **** 
 307:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
 308:/usr/include/c++/11/bits/stl_vector.h ****       _Vector_base(_Vector_base&&) = default;
 309:/usr/include/c++/11/bits/stl_vector.h **** 
 310:/usr/include/c++/11/bits/stl_vector.h ****       // Kept for ABI compatibility.
 311:/usr/include/c++/11/bits/stl_vector.h **** # if !_GLIBCXX_INLINE_VERSION
 312:/usr/include/c++/11/bits/stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 313:/usr/include/c++/11/bits/stl_vector.h ****       : _M_impl(std::move(__a)) { }
 314:/usr/include/c++/11/bits/stl_vector.h **** 
 315:/usr/include/c++/11/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 316:/usr/include/c++/11/bits/stl_vector.h ****       : _M_impl(__a)
 317:/usr/include/c++/11/bits/stl_vector.h ****       {
 318:/usr/include/c++/11/bits/stl_vector.h **** 	if (__x.get_allocator() == __a)
 319:/usr/include/c++/11/bits/stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 320:/usr/include/c++/11/bits/stl_vector.h **** 	else
 321:/usr/include/c++/11/bits/stl_vector.h **** 	  {
 322:/usr/include/c++/11/bits/stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 323:/usr/include/c++/11/bits/stl_vector.h **** 	    _M_create_storage(__n);
 324:/usr/include/c++/11/bits/stl_vector.h **** 	  }
 325:/usr/include/c++/11/bits/stl_vector.h ****       }
 326:/usr/include/c++/11/bits/stl_vector.h **** # endif
 327:/usr/include/c++/11/bits/stl_vector.h **** 
 328:/usr/include/c++/11/bits/stl_vector.h ****       _Vector_base(const allocator_type& __a, _Vector_base&& __x)
 329:/usr/include/c++/11/bits/stl_vector.h ****       : _M_impl(_Tp_alloc_type(__a), std::move(__x._M_impl))
 330:/usr/include/c++/11/bits/stl_vector.h ****       { }
 331:/usr/include/c++/11/bits/stl_vector.h **** #endif
 332:/usr/include/c++/11/bits/stl_vector.h **** 
 333:/usr/include/c++/11/bits/stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 334:/usr/include/c++/11/bits/stl_vector.h ****       {
 335:/usr/include/c++/11/bits/stl_vector.h **** 	_M_deallocate(_M_impl._M_start,
 336:/usr/include/c++/11/bits/stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 337:/usr/include/c++/11/bits/stl_vector.h ****       }
 338:/usr/include/c++/11/bits/stl_vector.h **** 
 339:/usr/include/c++/11/bits/stl_vector.h ****     public:
 340:/usr/include/c++/11/bits/stl_vector.h ****       _Vector_impl _M_impl;
 341:/usr/include/c++/11/bits/stl_vector.h **** 
 342:/usr/include/c++/11/bits/stl_vector.h ****       pointer
 343:/usr/include/c++/11/bits/stl_vector.h ****       _M_allocate(size_t __n)
 344:/usr/include/c++/11/bits/stl_vector.h ****       {
 345:/usr/include/c++/11/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 346:/usr/include/c++/11/bits/stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 347:/usr/include/c++/11/bits/stl_vector.h ****       }
 348:/usr/include/c++/11/bits/stl_vector.h **** 
 349:/usr/include/c++/11/bits/stl_vector.h ****       void
 350:/usr/include/c++/11/bits/stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 351:/usr/include/c++/11/bits/stl_vector.h ****       {
 352:/usr/include/c++/11/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 353:/usr/include/c++/11/bits/stl_vector.h **** 	if (__p)
 354:/usr/include/c++/11/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 355:/usr/include/c++/11/bits/stl_vector.h ****       }
 356:/usr/include/c++/11/bits/stl_vector.h **** 
 357:/usr/include/c++/11/bits/stl_vector.h ****     protected:
 358:/usr/include/c++/11/bits/stl_vector.h ****       void
 359:/usr/include/c++/11/bits/stl_vector.h ****       _M_create_storage(size_t __n)
 360:/usr/include/c++/11/bits/stl_vector.h ****       {
 361:/usr/include/c++/11/bits/stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 362:/usr/include/c++/11/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 363:/usr/include/c++/11/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 364:/usr/include/c++/11/bits/stl_vector.h ****       }
 365:/usr/include/c++/11/bits/stl_vector.h ****     };
 366:/usr/include/c++/11/bits/stl_vector.h **** 
 367:/usr/include/c++/11/bits/stl_vector.h ****   /**
 368:/usr/include/c++/11/bits/stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 369:/usr/include/c++/11/bits/stl_vector.h ****    *  individual elements in any order.
 370:/usr/include/c++/11/bits/stl_vector.h ****    *
 371:/usr/include/c++/11/bits/stl_vector.h ****    *  @ingroup sequences
 372:/usr/include/c++/11/bits/stl_vector.h ****    *
 373:/usr/include/c++/11/bits/stl_vector.h ****    *  @tparam _Tp  Type of element.
 374:/usr/include/c++/11/bits/stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 375:/usr/include/c++/11/bits/stl_vector.h ****    *
 376:/usr/include/c++/11/bits/stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 377:/usr/include/c++/11/bits/stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 378:/usr/include/c++/11/bits/stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 379:/usr/include/c++/11/bits/stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 380:/usr/include/c++/11/bits/stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 381:/usr/include/c++/11/bits/stl_vector.h ****    *
 382:/usr/include/c++/11/bits/stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 383:/usr/include/c++/11/bits/stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 384:/usr/include/c++/11/bits/stl_vector.h ****    *  elements in any order and saves the user from worrying about
 385:/usr/include/c++/11/bits/stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 386:/usr/include/c++/11/bits/stl_vector.h ****    *  also provided as with C-style arrays.
 387:/usr/include/c++/11/bits/stl_vector.h ****   */
 388:/usr/include/c++/11/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 389:/usr/include/c++/11/bits/stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 390:/usr/include/c++/11/bits/stl_vector.h ****     {
 391:/usr/include/c++/11/bits/stl_vector.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 392:/usr/include/c++/11/bits/stl_vector.h ****       // Concept requirements.
 393:/usr/include/c++/11/bits/stl_vector.h ****       typedef typename _Alloc::value_type		_Alloc_value_type;
 394:/usr/include/c++/11/bits/stl_vector.h **** # if __cplusplus < 201103L
 395:/usr/include/c++/11/bits/stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 396:/usr/include/c++/11/bits/stl_vector.h **** # endif
 397:/usr/include/c++/11/bits/stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 398:/usr/include/c++/11/bits/stl_vector.h **** #endif
 399:/usr/include/c++/11/bits/stl_vector.h **** 
 400:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
 401:/usr/include/c++/11/bits/stl_vector.h ****       static_assert(is_same<typename remove_cv<_Tp>::type, _Tp>::value,
 402:/usr/include/c++/11/bits/stl_vector.h **** 	  "std::vector must have a non-const, non-volatile value_type");
 403:/usr/include/c++/11/bits/stl_vector.h **** # if __cplusplus > 201703L || defined __STRICT_ANSI__
 404:/usr/include/c++/11/bits/stl_vector.h ****       static_assert(is_same<typename _Alloc::value_type, _Tp>::value,
 405:/usr/include/c++/11/bits/stl_vector.h **** 	  "std::vector must have the same value_type as its allocator");
 406:/usr/include/c++/11/bits/stl_vector.h **** # endif
 407:/usr/include/c++/11/bits/stl_vector.h **** #endif
 408:/usr/include/c++/11/bits/stl_vector.h **** 
 409:/usr/include/c++/11/bits/stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			_Base;
 410:/usr/include/c++/11/bits/stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		_Tp_alloc_type;
 411:/usr/include/c++/11/bits/stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	_Alloc_traits;
 412:/usr/include/c++/11/bits/stl_vector.h **** 
 413:/usr/include/c++/11/bits/stl_vector.h ****     public:
 414:/usr/include/c++/11/bits/stl_vector.h ****       typedef _Tp					value_type;
 415:/usr/include/c++/11/bits/stl_vector.h ****       typedef typename _Base::pointer			pointer;
 416:/usr/include/c++/11/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
 417:/usr/include/c++/11/bits/stl_vector.h ****       typedef typename _Alloc_traits::reference		reference;
 418:/usr/include/c++/11/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
 419:/usr/include/c++/11/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 420:/usr/include/c++/11/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 421:/usr/include/c++/11/bits/stl_vector.h ****       const_iterator;
 422:/usr/include/c++/11/bits/stl_vector.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 423:/usr/include/c++/11/bits/stl_vector.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 424:/usr/include/c++/11/bits/stl_vector.h ****       typedef size_t					size_type;
 425:/usr/include/c++/11/bits/stl_vector.h ****       typedef ptrdiff_t					difference_type;
 426:/usr/include/c++/11/bits/stl_vector.h ****       typedef _Alloc					allocator_type;
 427:/usr/include/c++/11/bits/stl_vector.h **** 
 428:/usr/include/c++/11/bits/stl_vector.h ****     private:
 429:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
 430:/usr/include/c++/11/bits/stl_vector.h ****       static constexpr bool
 431:/usr/include/c++/11/bits/stl_vector.h ****       _S_nothrow_relocate(true_type)
 432:/usr/include/c++/11/bits/stl_vector.h ****       {
 433:/usr/include/c++/11/bits/stl_vector.h **** 	return noexcept(std::__relocate_a(std::declval<pointer>(),
 434:/usr/include/c++/11/bits/stl_vector.h **** 					  std::declval<pointer>(),
 435:/usr/include/c++/11/bits/stl_vector.h **** 					  std::declval<pointer>(),
 436:/usr/include/c++/11/bits/stl_vector.h **** 					  std::declval<_Tp_alloc_type&>()));
 437:/usr/include/c++/11/bits/stl_vector.h ****       }
 438:/usr/include/c++/11/bits/stl_vector.h **** 
 439:/usr/include/c++/11/bits/stl_vector.h ****       static constexpr bool
 440:/usr/include/c++/11/bits/stl_vector.h ****       _S_nothrow_relocate(false_type)
 441:/usr/include/c++/11/bits/stl_vector.h ****       { return false; }
 442:/usr/include/c++/11/bits/stl_vector.h **** 
 443:/usr/include/c++/11/bits/stl_vector.h ****       static constexpr bool
 444:/usr/include/c++/11/bits/stl_vector.h ****       _S_use_relocate()
 445:/usr/include/c++/11/bits/stl_vector.h ****       {
 446:/usr/include/c++/11/bits/stl_vector.h **** 	// Instantiating std::__relocate_a might cause an error outside the
 447:/usr/include/c++/11/bits/stl_vector.h **** 	// immediate context (in __relocate_object_a's noexcept-specifier),
 448:/usr/include/c++/11/bits/stl_vector.h **** 	// so only do it if we know the type can be move-inserted into *this.
 449:/usr/include/c++/11/bits/stl_vector.h **** 	return _S_nothrow_relocate(__is_move_insertable<_Tp_alloc_type>{});
 450:/usr/include/c++/11/bits/stl_vector.h ****       }
 451:/usr/include/c++/11/bits/stl_vector.h **** 
 452:/usr/include/c++/11/bits/stl_vector.h ****       static pointer
 453:/usr/include/c++/11/bits/stl_vector.h ****       _S_do_relocate(pointer __first, pointer __last, pointer __result,
 454:/usr/include/c++/11/bits/stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 455:/usr/include/c++/11/bits/stl_vector.h ****       {
 456:/usr/include/c++/11/bits/stl_vector.h **** 	return std::__relocate_a(__first, __last, __result, __alloc);
 457:/usr/include/c++/11/bits/stl_vector.h ****       }
 458:/usr/include/c++/11/bits/stl_vector.h **** 
 459:/usr/include/c++/11/bits/stl_vector.h ****       static pointer
 460:/usr/include/c++/11/bits/stl_vector.h ****       _S_do_relocate(pointer, pointer, pointer __result,
 461:/usr/include/c++/11/bits/stl_vector.h **** 		     _Tp_alloc_type&, false_type) noexcept
 462:/usr/include/c++/11/bits/stl_vector.h ****       { return __result; }
 463:/usr/include/c++/11/bits/stl_vector.h **** 
 464:/usr/include/c++/11/bits/stl_vector.h ****       static pointer
 465:/usr/include/c++/11/bits/stl_vector.h ****       _S_relocate(pointer __first, pointer __last, pointer __result,
 466:/usr/include/c++/11/bits/stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 467:/usr/include/c++/11/bits/stl_vector.h ****       {
 468:/usr/include/c++/11/bits/stl_vector.h **** 	using __do_it = __bool_constant<_S_use_relocate()>;
 469:/usr/include/c++/11/bits/stl_vector.h **** 	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 470:/usr/include/c++/11/bits/stl_vector.h ****       }
 471:/usr/include/c++/11/bits/stl_vector.h **** #endif // C++11
 472:/usr/include/c++/11/bits/stl_vector.h **** 
 473:/usr/include/c++/11/bits/stl_vector.h ****     protected:
 474:/usr/include/c++/11/bits/stl_vector.h ****       using _Base::_M_allocate;
 475:/usr/include/c++/11/bits/stl_vector.h ****       using _Base::_M_deallocate;
 476:/usr/include/c++/11/bits/stl_vector.h ****       using _Base::_M_impl;
 477:/usr/include/c++/11/bits/stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 478:/usr/include/c++/11/bits/stl_vector.h **** 
 479:/usr/include/c++/11/bits/stl_vector.h ****     public:
 480:/usr/include/c++/11/bits/stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 481:/usr/include/c++/11/bits/stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 482:/usr/include/c++/11/bits/stl_vector.h **** 
 483:/usr/include/c++/11/bits/stl_vector.h ****       /**
 484:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 485:/usr/include/c++/11/bits/stl_vector.h ****        */
 486:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
 487:/usr/include/c++/11/bits/stl_vector.h ****       vector() = default;
 488:/usr/include/c++/11/bits/stl_vector.h **** #else
 489:/usr/include/c++/11/bits/stl_vector.h ****       vector() { }
 490:/usr/include/c++/11/bits/stl_vector.h **** #endif
 491:/usr/include/c++/11/bits/stl_vector.h **** 
 492:/usr/include/c++/11/bits/stl_vector.h ****       /**
 493:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 494:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __a  An allocator object.
 495:/usr/include/c++/11/bits/stl_vector.h ****        */
 496:/usr/include/c++/11/bits/stl_vector.h ****       explicit
 497:/usr/include/c++/11/bits/stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 498:/usr/include/c++/11/bits/stl_vector.h ****       : _Base(__a) { }
 499:/usr/include/c++/11/bits/stl_vector.h **** 
 500:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
 501:/usr/include/c++/11/bits/stl_vector.h ****       /**
 502:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 503:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 504:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __a  An allocator.
 505:/usr/include/c++/11/bits/stl_vector.h ****        *
 506:/usr/include/c++/11/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 507:/usr/include/c++/11/bits/stl_vector.h ****        *  constructed elements.
 508:/usr/include/c++/11/bits/stl_vector.h ****        */
 509:/usr/include/c++/11/bits/stl_vector.h ****       explicit
 510:/usr/include/c++/11/bits/stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 511:/usr/include/c++/11/bits/stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 512:/usr/include/c++/11/bits/stl_vector.h ****       { _M_default_initialize(__n); }
 513:/usr/include/c++/11/bits/stl_vector.h **** 
 514:/usr/include/c++/11/bits/stl_vector.h ****       /**
 515:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 516:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 517:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 518:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __a  An allocator.
 519:/usr/include/c++/11/bits/stl_vector.h ****        *
 520:/usr/include/c++/11/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 521:/usr/include/c++/11/bits/stl_vector.h ****        */
 522:/usr/include/c++/11/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value,
 523:/usr/include/c++/11/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 524:/usr/include/c++/11/bits/stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 525:/usr/include/c++/11/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 526:/usr/include/c++/11/bits/stl_vector.h **** #else
 527:/usr/include/c++/11/bits/stl_vector.h ****       /**
 528:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 529:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 530:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 531:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __a  An allocator.
 532:/usr/include/c++/11/bits/stl_vector.h ****        *
 533:/usr/include/c++/11/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 534:/usr/include/c++/11/bits/stl_vector.h ****        */
 535:/usr/include/c++/11/bits/stl_vector.h ****       explicit
 536:/usr/include/c++/11/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 537:/usr/include/c++/11/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 538:/usr/include/c++/11/bits/stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 539:/usr/include/c++/11/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 540:/usr/include/c++/11/bits/stl_vector.h **** #endif
 541:/usr/include/c++/11/bits/stl_vector.h **** 
 542:/usr/include/c++/11/bits/stl_vector.h ****       /**
 543:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  %Vector copy constructor.
 544:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 545:/usr/include/c++/11/bits/stl_vector.h ****        *
 546:/usr/include/c++/11/bits/stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 547:/usr/include/c++/11/bits/stl_vector.h ****        *  @a __x  will not be copied
 548:/usr/include/c++/11/bits/stl_vector.h ****        *  (i.e. capacity() == size() in the new %vector).
 549:/usr/include/c++/11/bits/stl_vector.h ****        *
 550:/usr/include/c++/11/bits/stl_vector.h ****        *  The newly-created %vector uses a copy of the allocator object used
 551:/usr/include/c++/11/bits/stl_vector.h ****        *  by @a __x (unless the allocator traits dictate a different object).
 552:/usr/include/c++/11/bits/stl_vector.h ****        */
 553:/usr/include/c++/11/bits/stl_vector.h ****       vector(const vector& __x)
 554:/usr/include/c++/11/bits/stl_vector.h ****       : _Base(__x.size(),
 555:/usr/include/c++/11/bits/stl_vector.h **** 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 556:/usr/include/c++/11/bits/stl_vector.h ****       {
 557:/usr/include/c++/11/bits/stl_vector.h **** 	this->_M_impl._M_finish =
 558:/usr/include/c++/11/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 559:/usr/include/c++/11/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 560:/usr/include/c++/11/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 561:/usr/include/c++/11/bits/stl_vector.h ****       }
 562:/usr/include/c++/11/bits/stl_vector.h **** 
 563:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
 564:/usr/include/c++/11/bits/stl_vector.h ****       /**
 565:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  %Vector move constructor.
 566:/usr/include/c++/11/bits/stl_vector.h ****        *
 567:/usr/include/c++/11/bits/stl_vector.h ****        *  The newly-created %vector contains the exact contents of the
 568:/usr/include/c++/11/bits/stl_vector.h ****        *  moved instance.
 569:/usr/include/c++/11/bits/stl_vector.h ****        *  The contents of the moved instance are a valid, but unspecified
 570:/usr/include/c++/11/bits/stl_vector.h ****        *  %vector.
 571:/usr/include/c++/11/bits/stl_vector.h ****        */
 572:/usr/include/c++/11/bits/stl_vector.h ****       vector(vector&&) noexcept = default;
 573:/usr/include/c++/11/bits/stl_vector.h **** 
 574:/usr/include/c++/11/bits/stl_vector.h ****       /// Copy constructor with alternative allocator
 575:/usr/include/c++/11/bits/stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 576:/usr/include/c++/11/bits/stl_vector.h ****       : _Base(__x.size(), __a)
 577:/usr/include/c++/11/bits/stl_vector.h ****       {
 578:/usr/include/c++/11/bits/stl_vector.h **** 	this->_M_impl._M_finish =
 579:/usr/include/c++/11/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 580:/usr/include/c++/11/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 581:/usr/include/c++/11/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 582:/usr/include/c++/11/bits/stl_vector.h ****       }
 583:/usr/include/c++/11/bits/stl_vector.h **** 
 584:/usr/include/c++/11/bits/stl_vector.h ****     private:
 585:/usr/include/c++/11/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, true_type) noexcept
 586:/usr/include/c++/11/bits/stl_vector.h ****       : _Base(__m, std::move(__rv))
 587:/usr/include/c++/11/bits/stl_vector.h ****       { }
 588:/usr/include/c++/11/bits/stl_vector.h **** 
 589:/usr/include/c++/11/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, false_type)
 590:/usr/include/c++/11/bits/stl_vector.h ****       : _Base(__m)
 591:/usr/include/c++/11/bits/stl_vector.h ****       {
 592:/usr/include/c++/11/bits/stl_vector.h **** 	if (__rv.get_allocator() == __m)
 593:/usr/include/c++/11/bits/stl_vector.h **** 	  this->_M_impl._M_swap_data(__rv._M_impl);
 594:/usr/include/c++/11/bits/stl_vector.h **** 	else if (!__rv.empty())
 595:/usr/include/c++/11/bits/stl_vector.h **** 	  {
 596:/usr/include/c++/11/bits/stl_vector.h **** 	    this->_M_create_storage(__rv.size());
 597:/usr/include/c++/11/bits/stl_vector.h **** 	    this->_M_impl._M_finish =
 598:/usr/include/c++/11/bits/stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 599:/usr/include/c++/11/bits/stl_vector.h **** 					  this->_M_impl._M_start,
 600:/usr/include/c++/11/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
 601:/usr/include/c++/11/bits/stl_vector.h **** 	    __rv.clear();
 602:/usr/include/c++/11/bits/stl_vector.h **** 	  }
 603:/usr/include/c++/11/bits/stl_vector.h ****       }
 604:/usr/include/c++/11/bits/stl_vector.h **** 
 605:/usr/include/c++/11/bits/stl_vector.h ****     public:
 606:/usr/include/c++/11/bits/stl_vector.h ****       /// Move constructor with alternative allocator
 607:/usr/include/c++/11/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 608:/usr/include/c++/11/bits/stl_vector.h ****       noexcept( noexcept(
 609:/usr/include/c++/11/bits/stl_vector.h **** 	vector(std::declval<vector&&>(), std::declval<const allocator_type&>(),
 610:/usr/include/c++/11/bits/stl_vector.h **** 	       std::declval<typename _Alloc_traits::is_always_equal>())) )
 611:/usr/include/c++/11/bits/stl_vector.h ****       : vector(std::move(__rv), __m, typename _Alloc_traits::is_always_equal{})
 612:/usr/include/c++/11/bits/stl_vector.h ****       { }
 613:/usr/include/c++/11/bits/stl_vector.h **** 
 614:/usr/include/c++/11/bits/stl_vector.h ****       /**
 615:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 616:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 617:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __a  An allocator.
 618:/usr/include/c++/11/bits/stl_vector.h ****        *
 619:/usr/include/c++/11/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 620:/usr/include/c++/11/bits/stl_vector.h ****        *  initializer_list @a __l.
 621:/usr/include/c++/11/bits/stl_vector.h ****        *
 622:/usr/include/c++/11/bits/stl_vector.h ****        *  This will call the element type's copy constructor N times
 623:/usr/include/c++/11/bits/stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 624:/usr/include/c++/11/bits/stl_vector.h ****        */
 625:/usr/include/c++/11/bits/stl_vector.h ****       vector(initializer_list<value_type> __l,
 626:/usr/include/c++/11/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 627:/usr/include/c++/11/bits/stl_vector.h ****       : _Base(__a)
 628:/usr/include/c++/11/bits/stl_vector.h ****       {
 629:/usr/include/c++/11/bits/stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 630:/usr/include/c++/11/bits/stl_vector.h **** 			    random_access_iterator_tag());
 631:/usr/include/c++/11/bits/stl_vector.h ****       }
 632:/usr/include/c++/11/bits/stl_vector.h **** #endif
 633:/usr/include/c++/11/bits/stl_vector.h **** 
 634:/usr/include/c++/11/bits/stl_vector.h ****       /**
 635:/usr/include/c++/11/bits/stl_vector.h ****        *  @brief  Builds a %vector from a range.
 636:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 637:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __last  An input iterator.
 638:/usr/include/c++/11/bits/stl_vector.h ****        *  @param  __a  An allocator.
 639:/usr/include/c++/11/bits/stl_vector.h ****        *
 640:/usr/include/c++/11/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 641:/usr/include/c++/11/bits/stl_vector.h ****        *  [first,last).
 642:/usr/include/c++/11/bits/stl_vector.h ****        *
 643:/usr/include/c++/11/bits/stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 644:/usr/include/c++/11/bits/stl_vector.h ****        *  random-access, then this will call the elements' copy
 645:/usr/include/c++/11/bits/stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 646:/usr/include/c++/11/bits/stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 647:/usr/include/c++/11/bits/stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 648:/usr/include/c++/11/bits/stl_vector.h ****        *  constructor, and logN memory reallocations.
 649:/usr/include/c++/11/bits/stl_vector.h ****        */
 650:/usr/include/c++/11/bits/stl_vector.h **** #if __cplusplus >= 201103L
 651:/usr/include/c++/11/bits/stl_vector.h ****       template<typename _InputIterator,
 652:/usr/include/c++/11/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 653:/usr/include/c++/11/bits/stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 654:/usr/include/c++/11/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 655:/usr/include/c++/11/bits/stl_vector.h **** 	: _Base(__a)
 656:/usr/include/c++/11/bits/stl_vector.h **** 	{
 657:/usr/include/c++/11/bits/stl_vector.h **** 	  _M_range_initialize(__first, __last,
 658:/usr/include/c++/11/bits/stl_vector.h **** 			      std::__iterator_category(__first));
 659:/usr/include/c++/11/bits/stl_vector.h **** 	}
 660:/usr/include/c++/11/bits/stl_vector.h **** #else
 661:/usr/include/c++/11/bits/stl_vector.h ****       template<typename _InputIterator>
 662:/usr/include/c++/11/bits/stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 663:/usr/include/c++/11/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 664:/usr/include/c++/11/bits/stl_vector.h **** 	: _Base(__a)
 665:/usr/include/c++/11/bits/stl_vector.h **** 	{
 666:/usr/include/c++/11/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 667:/usr/include/c++/11/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 668:/usr/include/c++/11/bits/stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 669:/usr/include/c++/11/bits/stl_vector.h **** 	}
 670:/usr/include/c++/11/bits/stl_vector.h **** #endif
 671:/usr/include/c++/11/bits/stl_vector.h **** 
 672:/usr/include/c++/11/bits/stl_vector.h ****       /**
 673:/usr/include/c++/11/bits/stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 674:/usr/include/c++/11/bits/stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 675:/usr/include/c++/11/bits/stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 676:/usr/include/c++/11/bits/stl_vector.h ****        *  responsibility.
 677:/usr/include/c++/11/bits/stl_vector.h ****        */
 678:/usr/include/c++/11/bits/stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 10776              		.loc 9 678 7 is_stmt 1
 10777              		.cfi_startproc
 10778              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 10779              		.cfi_lsda 0x1b,.LLSDA1680
 10780 0000 F30F1EFA 		endbr64
 10781 0004 55       		pushq	%rbp
 10782              		.cfi_def_cfa_offset 16
 10783              		.cfi_offset 6, -16
 10784 0005 4889E5   		movq	%rsp, %rbp
 10785              		.cfi_def_cfa_register 6
 10786 0008 53       		pushq	%rbx
 10787 0009 4883EC18 		subq	$24, %rsp
 10788              		.cfi_offset 3, -24
 10789 000d 48897DE8 		movq	%rdi, -24(%rbp)
 10790              	.LBB177:
 679:/usr/include/c++/11/bits/stl_vector.h ****       {
 680:/usr/include/c++/11/bits/stl_vector.h **** 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 681:/usr/include/c++/11/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 10791              		.loc 9 681 28
 10792 0011 488B45E8 		movq	-24(%rbp), %rax
 10793 0015 4889C7   		movq	%rax, %rdi
 10794 0018 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
 10794      00
 10795 001d 4889C2   		movq	%rax, %rdx
 680:/usr/include/c++/11/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 10796              		.loc 9 680 15
 10797 0020 488B45E8 		movq	-24(%rbp), %rax
 10798 0024 488B4808 		movq	8(%rax), %rcx
 10799 0028 488B45E8 		movq	-24(%rbp), %rax
 10800 002c 488B00   		movq	(%rax), %rax
 10801 002f 4889CE   		movq	%rcx, %rsi
 10802 0032 4889C7   		movq	%rax, %rdi
 10803              	.LEHB290:
 10804 0035 E8000000 		call	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E
 10804      00
 10805              	.LEHE290:
 682:/usr/include/c++/11/bits/stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
 683:/usr/include/c++/11/bits/stl_vector.h ****       }
 10806              		.loc 9 683 7
 10807 003a 488B45E8 		movq	-24(%rbp), %rax
 10808 003e 4889C7   		movq	%rax, %rdi
 10809              	.LEHB291:
 10810 0041 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 10810      00
 10811              	.LEHE291:
 10812              	.LBE177:
 10813 0046 EB1E     		jmp	.L536
 10814              	.L535:
 10815 0048 F30F1EFA 		endbr64
 10816              	.LBB178:
 10817 004c 4889C3   		movq	%rax, %rbx
 10818 004f 488B45E8 		movq	-24(%rbp), %rax
 10819 0053 4889C7   		movq	%rax, %rdi
 10820 0056 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 10820      00
 10821 005b 4889D8   		movq	%rbx, %rax
 10822 005e 4889C7   		movq	%rax, %rdi
 10823              	.LEHB292:
 10824 0061 E8000000 		call	_Unwind_Resume@PLT
 10824      00
 10825              	.LEHE292:
 10826              	.L536:
 10827              	.LBE178:
 10828 0066 488B5DF8 		movq	-8(%rbp), %rbx
 10829 006a C9       		leave
 10830              		.cfi_def_cfa 7, 8
 10831 006b C3       		ret
 10832              		.cfi_endproc
 10833              	.LFE1680:
 10834              		.section	.gcc_except_table
 10835              	.LLSDA1680:
 10836 084a FF       		.byte	0xff
 10837 084b FF       		.byte	0xff
 10838 084c 01       		.byte	0x1
 10839 084d 0C       		.uleb128 .LLSDACSE1680-.LLSDACSB1680
 10840              	.LLSDACSB1680:
 10841 084e 35       		.uleb128 .LEHB290-.LFB1680
 10842 084f 05       		.uleb128 .LEHE290-.LEHB290
 10843 0850 48       		.uleb128 .L535-.LFB1680
 10844 0851 00       		.uleb128 0
 10845 0852 41       		.uleb128 .LEHB291-.LFB1680
 10846 0853 05       		.uleb128 .LEHE291-.LEHB291
 10847 0854 00       		.uleb128 0
 10848 0855 00       		.uleb128 0
 10849 0856 61       		.uleb128 .LEHB292-.LFB1680
 10850 0857 05       		.uleb128 .LEHE292-.LEHB292
 10851 0858 00       		.uleb128 0
 10852 0859 00       		.uleb128 0
 10853              	.LLSDACSE1680:
 10854              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vect
 10856              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
 10857              		.set	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev,_ZNSt6vectorIN8UnitTest18DeferredTes
 10858              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev,"axG"
 10859              		.align 2
 10860              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev
 10862              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev:
 10863              	.LFB1684:
 128:/usr/include/c++/11/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 10864              		.loc 9 128 14
 10865              		.cfi_startproc
 10866 0000 F30F1EFA 		endbr64
 10867 0004 55       		pushq	%rbp
 10868              		.cfi_def_cfa_offset 16
 10869              		.cfi_offset 6, -16
 10870 0005 4889E5   		movq	%rsp, %rbp
 10871              		.cfi_def_cfa_register 6
 10872 0008 4883EC10 		subq	$16, %rsp
 10873 000c 48897DF8 		movq	%rdi, -8(%rbp)
 10874              	.LBB179:
 128:/usr/include/c++/11/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 10875              		.loc 9 128 14
 10876 0010 488B45F8 		movq	-8(%rbp), %rax
 10877 0014 4889C7   		movq	%rax, %rdi
 10878 0017 E8000000 		call	_ZNSaIN8UnitTest18DeferredTestResultEED2Ev
 10878      00
 10879              	.LBE179:
 10880 001c 90       		nop
 10881 001d C9       		leave
 10882              		.cfi_def_cfa 7, 8
 10883 001e C3       		ret
 10884              		.cfi_endproc
 10885              	.LFE1684:
 10887              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
 10888              		.set	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev,_ZNSt12_Vector_
 10889              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZN
 10890              		.align 2
 10891              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 10893              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:
 10894              	.LFB1686:
 333:/usr/include/c++/11/bits/stl_vector.h ****       {
 10895              		.loc 9 333 7
 10896              		.cfi_startproc
 10897              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 10898              		.cfi_lsda 0x1b,.LLSDA1686
 10899 0000 F30F1EFA 		endbr64
 10900 0004 55       		pushq	%rbp
 10901              		.cfi_def_cfa_offset 16
 10902              		.cfi_offset 6, -16
 10903 0005 4889E5   		movq	%rsp, %rbp
 10904              		.cfi_def_cfa_register 6
 10905 0008 53       		pushq	%rbx
 10906 0009 4883EC18 		subq	$24, %rsp
 10907              		.cfi_offset 3, -24
 10908 000d 48897DE8 		movq	%rdi, -24(%rbp)
 10909              	.LBB180:
 336:/usr/include/c++/11/bits/stl_vector.h ****       }
 10910              		.loc 9 336 17
 10911 0011 488B45E8 		movq	-24(%rbp), %rax
 10912 0015 488B5010 		movq	16(%rax), %rdx
 336:/usr/include/c++/11/bits/stl_vector.h ****       }
 10913              		.loc 9 336 45
 10914 0019 488B45E8 		movq	-24(%rbp), %rax
 10915 001d 488B08   		movq	(%rax), %rcx
 336:/usr/include/c++/11/bits/stl_vector.h ****       }
 10916              		.loc 9 336 35
 10917 0020 4889D0   		movq	%rdx, %rax
 10918 0023 4829C8   		subq	%rcx, %rax
 10919 0026 48C1F807 		sarq	$7, %rax
 335:/usr/include/c++/11/bits/stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 10920              		.loc 9 335 15
 10921 002a 4889C2   		movq	%rax, %rdx
 10922 002d 488B45E8 		movq	-24(%rbp), %rax
 10923 0031 488B08   		movq	(%rax), %rcx
 10924 0034 488B45E8 		movq	-24(%rbp), %rax
 10925 0038 4889CE   		movq	%rcx, %rsi
 10926 003b 4889C7   		movq	%rax, %rdi
 10927              	.LEHB293:
 10928 003e E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m
 10928      00
 10929              	.LEHE293:
 337:/usr/include/c++/11/bits/stl_vector.h **** 
 10930              		.loc 9 337 7
 10931 0043 488B45E8 		movq	-24(%rbp), %rax
 10932 0047 4889C7   		movq	%rax, %rdi
 10933 004a E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
 10933      00
 10934              	.LBE180:
 10935 004f EB1E     		jmp	.L541
 10936              	.L540:
 10937 0051 F30F1EFA 		endbr64
 10938              	.LBB181:
 10939 0055 4889C3   		movq	%rax, %rbx
 10940 0058 488B45E8 		movq	-24(%rbp), %rax
 10941 005c 4889C7   		movq	%rax, %rdi
 10942 005f E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
 10942      00
 10943 0064 4889D8   		movq	%rbx, %rax
 10944 0067 4889C7   		movq	%rax, %rdi
 10945              	.LEHB294:
 10946 006a E8000000 		call	_Unwind_Resume@PLT
 10946      00
 10947              	.LEHE294:
 10948              	.L541:
 10949              	.LBE181:
 10950 006f 488B5DF8 		movq	-8(%rbp), %rbx
 10951 0073 C9       		leave
 10952              		.cfi_def_cfa 7, 8
 10953 0074 C3       		ret
 10954              		.cfi_endproc
 10955              	.LFE1686:
 10956              		.section	.gcc_except_table
 10957              	.LLSDA1686:
 10958 085a FF       		.byte	0xff
 10959 085b FF       		.byte	0xff
 10960 085c 01       		.byte	0x1
 10961 085d 08       		.uleb128 .LLSDACSE1686-.LLSDACSB1686
 10962              	.LLSDACSB1686:
 10963 085e 3E       		.uleb128 .LEHB293-.LFB1686
 10964 085f 05       		.uleb128 .LEHE293-.LEHB293
 10965 0860 51       		.uleb128 .L540-.LFB1686
 10966 0861 00       		.uleb128 0
 10967 0862 6A       		.uleb128 .LEHB294-.LFB1686
 10968 0863 05       		.uleb128 .LEHE294-.LEHB294
 10969 0864 00       		.uleb128 0
 10970 0865 00       		.uleb128 0
 10971              	.LLSDACSE1686:
 10972              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZN
 10974              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
 10975              		.set	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED1Ev,_ZNSt12_Vector_baseIN8UnitTes
 10976              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv,
 10977              		.align 2
 10978              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
 10980              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv:
 10981              	.LFB1688:
 276:/usr/include/c++/11/bits/stl_vector.h ****       { return this->_M_impl; }
 10982              		.loc 9 276 7
 10983              		.cfi_startproc
 10984 0000 F30F1EFA 		endbr64
 10985 0004 55       		pushq	%rbp
 10986              		.cfi_def_cfa_offset 16
 10987              		.cfi_offset 6, -16
 10988 0005 4889E5   		movq	%rsp, %rbp
 10989              		.cfi_def_cfa_register 6
 10990 0008 48897DF8 		movq	%rdi, -8(%rbp)
 277:/usr/include/c++/11/bits/stl_vector.h **** 
 10991              		.loc 9 277 22
 10992 000c 488B45F8 		movq	-8(%rbp), %rax
 277:/usr/include/c++/11/bits/stl_vector.h **** 
 10993              		.loc 9 277 31
 10994 0010 5D       		popq	%rbp
 10995              		.cfi_def_cfa 7, 8
 10996 0011 C3       		ret
 10997              		.cfi_endproc
 10998              	.LFE1688:
 11000              		.section	.text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E,"axG",@progbits,_Z
 11001              		.weak	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E
 11003              	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E:
 11004              	.LFB1689:
 11005              		.file 10 "/usr/include/c++/11/bits/alloc_traits.h"
   1:/usr/include/c++/11/bits/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/usr/include/c++/11/bits/alloc_traits.h **** 
   3:/usr/include/c++/11/bits/alloc_traits.h **** // Copyright (C) 2011-2021 Free Software Foundation, Inc.
   4:/usr/include/c++/11/bits/alloc_traits.h **** //
   5:/usr/include/c++/11/bits/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/11/bits/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/11/bits/alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/11/bits/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/11/bits/alloc_traits.h **** // any later version.
  10:/usr/include/c++/11/bits/alloc_traits.h **** 
  11:/usr/include/c++/11/bits/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/11/bits/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/11/bits/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/11/bits/alloc_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/11/bits/alloc_traits.h **** 
  16:/usr/include/c++/11/bits/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/11/bits/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/11/bits/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/11/bits/alloc_traits.h **** 
  20:/usr/include/c++/11/bits/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/11/bits/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/11/bits/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/11/bits/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/11/bits/alloc_traits.h **** 
  25:/usr/include/c++/11/bits/alloc_traits.h **** /** @file bits/alloc_traits.h
  26:/usr/include/c++/11/bits/alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/11/bits/alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:/usr/include/c++/11/bits/alloc_traits.h ****  */
  29:/usr/include/c++/11/bits/alloc_traits.h **** 
  30:/usr/include/c++/11/bits/alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:/usr/include/c++/11/bits/alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:/usr/include/c++/11/bits/alloc_traits.h **** 
  33:/usr/include/c++/11/bits/alloc_traits.h **** #include <bits/stl_construct.h>
  34:/usr/include/c++/11/bits/alloc_traits.h **** #include <bits/memoryfwd.h>
  35:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus >= 201103L
  36:/usr/include/c++/11/bits/alloc_traits.h **** # include <bits/allocator.h>
  37:/usr/include/c++/11/bits/alloc_traits.h **** # include <bits/ptr_traits.h>
  38:/usr/include/c++/11/bits/alloc_traits.h **** # include <ext/numeric_traits.h>
  39:/usr/include/c++/11/bits/alloc_traits.h **** #endif
  40:/usr/include/c++/11/bits/alloc_traits.h **** 
  41:/usr/include/c++/11/bits/alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/11/bits/alloc_traits.h **** {
  43:/usr/include/c++/11/bits/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/11/bits/alloc_traits.h **** 
  45:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus >= 201103L
  46:/usr/include/c++/11/bits/alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  47:/usr/include/c++/11/bits/alloc_traits.h **** 
  48:/usr/include/c++/11/bits/alloc_traits.h ****   /// @cond undocumented
  49:/usr/include/c++/11/bits/alloc_traits.h ****   struct __allocator_traits_base
  50:/usr/include/c++/11/bits/alloc_traits.h ****   {
  51:/usr/include/c++/11/bits/alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  52:/usr/include/c++/11/bits/alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
  53:/usr/include/c++/11/bits/alloc_traits.h **** 
  54:/usr/include/c++/11/bits/alloc_traits.h ****     template<typename _Tp, typename _Up>
  55:/usr/include/c++/11/bits/alloc_traits.h ****       struct __rebind<_Tp, _Up,
  56:/usr/include/c++/11/bits/alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
  57:/usr/include/c++/11/bits/alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
  58:/usr/include/c++/11/bits/alloc_traits.h **** 
  59:/usr/include/c++/11/bits/alloc_traits.h ****   protected:
  60:/usr/include/c++/11/bits/alloc_traits.h ****     template<typename _Tp>
  61:/usr/include/c++/11/bits/alloc_traits.h ****       using __pointer = typename _Tp::pointer;
  62:/usr/include/c++/11/bits/alloc_traits.h ****     template<typename _Tp>
  63:/usr/include/c++/11/bits/alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
  64:/usr/include/c++/11/bits/alloc_traits.h ****     template<typename _Tp>
  65:/usr/include/c++/11/bits/alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  66:/usr/include/c++/11/bits/alloc_traits.h ****     template<typename _Tp>
  67:/usr/include/c++/11/bits/alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  68:/usr/include/c++/11/bits/alloc_traits.h ****     template<typename _Tp>
  69:/usr/include/c++/11/bits/alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  70:/usr/include/c++/11/bits/alloc_traits.h ****     template<typename _Tp>
  71:/usr/include/c++/11/bits/alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
  72:/usr/include/c++/11/bits/alloc_traits.h ****     template<typename _Tp>
  73:/usr/include/c++/11/bits/alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  74:/usr/include/c++/11/bits/alloc_traits.h ****     template<typename _Tp>
  75:/usr/include/c++/11/bits/alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
  76:/usr/include/c++/11/bits/alloc_traits.h ****   };
  77:/usr/include/c++/11/bits/alloc_traits.h **** 
  78:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc, typename _Up>
  79:/usr/include/c++/11/bits/alloc_traits.h ****     using __alloc_rebind
  80:/usr/include/c++/11/bits/alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  81:/usr/include/c++/11/bits/alloc_traits.h ****   /// @endcond
  82:/usr/include/c++/11/bits/alloc_traits.h **** 
  83:/usr/include/c++/11/bits/alloc_traits.h ****   /**
  84:/usr/include/c++/11/bits/alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  85:/usr/include/c++/11/bits/alloc_traits.h ****    * @headerfile memory
  86:/usr/include/c++/11/bits/alloc_traits.h ****    * @ingroup allocators
  87:/usr/include/c++/11/bits/alloc_traits.h ****    * @since C++11
  88:/usr/include/c++/11/bits/alloc_traits.h ****   */
  89:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
  90:/usr/include/c++/11/bits/alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  91:/usr/include/c++/11/bits/alloc_traits.h ****     {
  92:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator type
  93:/usr/include/c++/11/bits/alloc_traits.h ****       typedef _Alloc allocator_type;
  94:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocated type
  95:/usr/include/c++/11/bits/alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  96:/usr/include/c++/11/bits/alloc_traits.h **** 
  97:/usr/include/c++/11/bits/alloc_traits.h ****       /**
  98:/usr/include/c++/11/bits/alloc_traits.h ****        * @brief   The allocator's pointer type.
  99:/usr/include/c++/11/bits/alloc_traits.h ****        *
 100:/usr/include/c++/11/bits/alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
 101:/usr/include/c++/11/bits/alloc_traits.h ****       */
 102:/usr/include/c++/11/bits/alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
 103:/usr/include/c++/11/bits/alloc_traits.h **** 
 104:/usr/include/c++/11/bits/alloc_traits.h ****     private:
 105:/usr/include/c++/11/bits/alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
 106:/usr/include/c++/11/bits/alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
 107:/usr/include/c++/11/bits/alloc_traits.h **** 	struct _Ptr
 108:/usr/include/c++/11/bits/alloc_traits.h **** 	{
 109:/usr/include/c++/11/bits/alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 110:/usr/include/c++/11/bits/alloc_traits.h **** 	};
 111:/usr/include/c++/11/bits/alloc_traits.h **** 
 112:/usr/include/c++/11/bits/alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
 113:/usr/include/c++/11/bits/alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
 114:/usr/include/c++/11/bits/alloc_traits.h **** 	{
 115:/usr/include/c++/11/bits/alloc_traits.h **** 	  using type = _Func<_Alloc>;
 116:/usr/include/c++/11/bits/alloc_traits.h **** 	};
 117:/usr/include/c++/11/bits/alloc_traits.h **** 
 118:/usr/include/c++/11/bits/alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
 119:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 120:/usr/include/c++/11/bits/alloc_traits.h **** 	struct _Diff
 121:/usr/include/c++/11/bits/alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
 122:/usr/include/c++/11/bits/alloc_traits.h **** 
 123:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _A2, typename _PtrT>
 124:/usr/include/c++/11/bits/alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 125:/usr/include/c++/11/bits/alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 126:/usr/include/c++/11/bits/alloc_traits.h **** 
 127:/usr/include/c++/11/bits/alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 128:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
 129:/usr/include/c++/11/bits/alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 130:/usr/include/c++/11/bits/alloc_traits.h **** 
 131:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _A2, typename _DiffT>
 132:/usr/include/c++/11/bits/alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
 133:/usr/include/c++/11/bits/alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 134:/usr/include/c++/11/bits/alloc_traits.h **** 
 135:/usr/include/c++/11/bits/alloc_traits.h ****     public:
 136:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 137:/usr/include/c++/11/bits/alloc_traits.h ****        * @brief   The allocator's const pointer type.
 138:/usr/include/c++/11/bits/alloc_traits.h ****        *
 139:/usr/include/c++/11/bits/alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 140:/usr/include/c++/11/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 141:/usr/include/c++/11/bits/alloc_traits.h ****       */
 142:/usr/include/c++/11/bits/alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
 143:/usr/include/c++/11/bits/alloc_traits.h **** 
 144:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 145:/usr/include/c++/11/bits/alloc_traits.h ****        * @brief   The allocator's void pointer type.
 146:/usr/include/c++/11/bits/alloc_traits.h ****        *
 147:/usr/include/c++/11/bits/alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 148:/usr/include/c++/11/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 149:/usr/include/c++/11/bits/alloc_traits.h ****       */
 150:/usr/include/c++/11/bits/alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
 151:/usr/include/c++/11/bits/alloc_traits.h **** 
 152:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 153:/usr/include/c++/11/bits/alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 154:/usr/include/c++/11/bits/alloc_traits.h ****        *
 155:/usr/include/c++/11/bits/alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 156:/usr/include/c++/11/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 157:/usr/include/c++/11/bits/alloc_traits.h ****       */
 158:/usr/include/c++/11/bits/alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 159:/usr/include/c++/11/bits/alloc_traits.h **** 
 160:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 161:/usr/include/c++/11/bits/alloc_traits.h ****        * @brief   The allocator's difference type
 162:/usr/include/c++/11/bits/alloc_traits.h ****        *
 163:/usr/include/c++/11/bits/alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 164:/usr/include/c++/11/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 165:/usr/include/c++/11/bits/alloc_traits.h ****       */
 166:/usr/include/c++/11/bits/alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 167:/usr/include/c++/11/bits/alloc_traits.h **** 
 168:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 169:/usr/include/c++/11/bits/alloc_traits.h ****        * @brief   The allocator's size type
 170:/usr/include/c++/11/bits/alloc_traits.h ****        *
 171:/usr/include/c++/11/bits/alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 172:/usr/include/c++/11/bits/alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 173:/usr/include/c++/11/bits/alloc_traits.h ****       */
 174:/usr/include/c++/11/bits/alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
 175:/usr/include/c++/11/bits/alloc_traits.h **** 
 176:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 177:/usr/include/c++/11/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 178:/usr/include/c++/11/bits/alloc_traits.h ****        *
 179:/usr/include/c++/11/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 180:/usr/include/c++/11/bits/alloc_traits.h ****        * otherwise @c false_type
 181:/usr/include/c++/11/bits/alloc_traits.h ****       */
 182:/usr/include/c++/11/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment
 183:/usr/include/c++/11/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 184:/usr/include/c++/11/bits/alloc_traits.h **** 
 185:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 186:/usr/include/c++/11/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 187:/usr/include/c++/11/bits/alloc_traits.h ****        *
 188:/usr/include/c++/11/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
 189:/usr/include/c++/11/bits/alloc_traits.h ****        * otherwise @c false_type
 190:/usr/include/c++/11/bits/alloc_traits.h ****       */
 191:/usr/include/c++/11/bits/alloc_traits.h ****       using propagate_on_container_move_assignment
 192:/usr/include/c++/11/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
 193:/usr/include/c++/11/bits/alloc_traits.h **** 
 194:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 195:/usr/include/c++/11/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 196:/usr/include/c++/11/bits/alloc_traits.h ****        *
 197:/usr/include/c++/11/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 198:/usr/include/c++/11/bits/alloc_traits.h ****        * otherwise @c false_type
 199:/usr/include/c++/11/bits/alloc_traits.h ****       */
 200:/usr/include/c++/11/bits/alloc_traits.h ****       using propagate_on_container_swap
 201:/usr/include/c++/11/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 202:/usr/include/c++/11/bits/alloc_traits.h **** 
 203:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 204:/usr/include/c++/11/bits/alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 205:/usr/include/c++/11/bits/alloc_traits.h ****        *
 206:/usr/include/c++/11/bits/alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
 207:/usr/include/c++/11/bits/alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
 208:/usr/include/c++/11/bits/alloc_traits.h ****       */
 209:/usr/include/c++/11/bits/alloc_traits.h ****       using is_always_equal
 210:/usr/include/c++/11/bits/alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 211:/usr/include/c++/11/bits/alloc_traits.h **** 
 212:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Tp>
 213:/usr/include/c++/11/bits/alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 214:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Tp>
 215:/usr/include/c++/11/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 216:/usr/include/c++/11/bits/alloc_traits.h **** 
 217:/usr/include/c++/11/bits/alloc_traits.h ****     private:
 218:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Alloc2>
 219:/usr/include/c++/11/bits/alloc_traits.h **** 	static constexpr auto
 220:/usr/include/c++/11/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
 221:/usr/include/c++/11/bits/alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
 222:/usr/include/c++/11/bits/alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 223:/usr/include/c++/11/bits/alloc_traits.h **** 
 224:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Alloc2>
 225:/usr/include/c++/11/bits/alloc_traits.h **** 	static constexpr pointer
 226:/usr/include/c++/11/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
 227:/usr/include/c++/11/bits/alloc_traits.h **** 	{ return __a.allocate(__n); }
 228:/usr/include/c++/11/bits/alloc_traits.h **** 
 229:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 230:/usr/include/c++/11/bits/alloc_traits.h **** 	struct __construct_helper
 231:/usr/include/c++/11/bits/alloc_traits.h **** 	{
 232:/usr/include/c++/11/bits/alloc_traits.h **** 	  template<typename _Alloc2,
 233:/usr/include/c++/11/bits/alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 234:/usr/include/c++/11/bits/alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 235:/usr/include/c++/11/bits/alloc_traits.h **** 	    static true_type __test(int);
 236:/usr/include/c++/11/bits/alloc_traits.h **** 
 237:/usr/include/c++/11/bits/alloc_traits.h **** 	  template<typename>
 238:/usr/include/c++/11/bits/alloc_traits.h **** 	    static false_type __test(...);
 239:/usr/include/c++/11/bits/alloc_traits.h **** 
 240:/usr/include/c++/11/bits/alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 241:/usr/include/c++/11/bits/alloc_traits.h **** 	};
 242:/usr/include/c++/11/bits/alloc_traits.h **** 
 243:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 244:/usr/include/c++/11/bits/alloc_traits.h **** 	using __has_construct
 245:/usr/include/c++/11/bits/alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
 246:/usr/include/c++/11/bits/alloc_traits.h **** 
 247:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 248:/usr/include/c++/11/bits/alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR _Require<__has_construct<_Tp, _Args...>>
 249:/usr/include/c++/11/bits/alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 250:/usr/include/c++/11/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 251:/usr/include/c++/11/bits/alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 252:/usr/include/c++/11/bits/alloc_traits.h **** 
 253:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 254:/usr/include/c++/11/bits/alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR
 255:/usr/include/c++/11/bits/alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 256:/usr/include/c++/11/bits/alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 257:/usr/include/c++/11/bits/alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 258:/usr/include/c++/11/bits/alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Tp, _Args...>::value)
 259:/usr/include/c++/11/bits/alloc_traits.h **** 	{
 260:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus <= 201703L
 261:/usr/include/c++/11/bits/alloc_traits.h **** 	  ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
 262:/usr/include/c++/11/bits/alloc_traits.h **** #else
 263:/usr/include/c++/11/bits/alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 264:/usr/include/c++/11/bits/alloc_traits.h **** #endif
 265:/usr/include/c++/11/bits/alloc_traits.h **** 	}
 266:/usr/include/c++/11/bits/alloc_traits.h **** 
 267:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 268:/usr/include/c++/11/bits/alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR auto
 269:/usr/include/c++/11/bits/alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 270:/usr/include/c++/11/bits/alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 271:/usr/include/c++/11/bits/alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 272:/usr/include/c++/11/bits/alloc_traits.h **** 	{ __a.destroy(__p); }
 273:/usr/include/c++/11/bits/alloc_traits.h **** 
 274:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 275:/usr/include/c++/11/bits/alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR void
 276:/usr/include/c++/11/bits/alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
 277:/usr/include/c++/11/bits/alloc_traits.h **** 	noexcept(std::is_nothrow_destructible<_Tp>::value)
 278:/usr/include/c++/11/bits/alloc_traits.h **** 	{ std::_Destroy(__p); }
 279:/usr/include/c++/11/bits/alloc_traits.h **** 
 280:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Alloc2>
 281:/usr/include/c++/11/bits/alloc_traits.h **** 	static constexpr auto
 282:/usr/include/c++/11/bits/alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 283:/usr/include/c++/11/bits/alloc_traits.h **** 	-> decltype(__a.max_size())
 284:/usr/include/c++/11/bits/alloc_traits.h **** 	{ return __a.max_size(); }
 285:/usr/include/c++/11/bits/alloc_traits.h **** 
 286:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Alloc2>
 287:/usr/include/c++/11/bits/alloc_traits.h **** 	static constexpr size_type
 288:/usr/include/c++/11/bits/alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 289:/usr/include/c++/11/bits/alloc_traits.h **** 	{
 290:/usr/include/c++/11/bits/alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 291:/usr/include/c++/11/bits/alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 292:/usr/include/c++/11/bits/alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
 293:/usr/include/c++/11/bits/alloc_traits.h **** 	    / sizeof(value_type);
 294:/usr/include/c++/11/bits/alloc_traits.h **** 	}
 295:/usr/include/c++/11/bits/alloc_traits.h **** 
 296:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Alloc2>
 297:/usr/include/c++/11/bits/alloc_traits.h **** 	static constexpr auto
 298:/usr/include/c++/11/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 299:/usr/include/c++/11/bits/alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
 300:/usr/include/c++/11/bits/alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 301:/usr/include/c++/11/bits/alloc_traits.h **** 
 302:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Alloc2>
 303:/usr/include/c++/11/bits/alloc_traits.h **** 	static constexpr _Alloc2
 304:/usr/include/c++/11/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 305:/usr/include/c++/11/bits/alloc_traits.h **** 	{ return __a; }
 306:/usr/include/c++/11/bits/alloc_traits.h **** 
 307:/usr/include/c++/11/bits/alloc_traits.h ****     public:
 308:/usr/include/c++/11/bits/alloc_traits.h **** 
 309:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 310:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 311:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 312:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 313:/usr/include/c++/11/bits/alloc_traits.h ****        *
 314:/usr/include/c++/11/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 315:/usr/include/c++/11/bits/alloc_traits.h ****       */
 316:/usr/include/c++/11/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 317:/usr/include/c++/11/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 318:/usr/include/c++/11/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 319:/usr/include/c++/11/bits/alloc_traits.h **** 
 320:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 321:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 322:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 323:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 324:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 325:/usr/include/c++/11/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 326:/usr/include/c++/11/bits/alloc_traits.h ****        *          of type @c value_type
 327:/usr/include/c++/11/bits/alloc_traits.h ****        *
 328:/usr/include/c++/11/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 329:/usr/include/c++/11/bits/alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 330:/usr/include/c++/11/bits/alloc_traits.h ****       */
 331:/usr/include/c++/11/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 332:/usr/include/c++/11/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 333:/usr/include/c++/11/bits/alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
 334:/usr/include/c++/11/bits/alloc_traits.h **** 
 335:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 336:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 337:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 338:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 339:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 340:/usr/include/c++/11/bits/alloc_traits.h ****        *
 341:/usr/include/c++/11/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 342:/usr/include/c++/11/bits/alloc_traits.h ****       */
 343:/usr/include/c++/11/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 344:/usr/include/c++/11/bits/alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
 345:/usr/include/c++/11/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 346:/usr/include/c++/11/bits/alloc_traits.h **** 
 347:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 348:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Construct an object of type `_Tp`
 349:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 350:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 351:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __args Constructor arguments.
 352:/usr/include/c++/11/bits/alloc_traits.h ****        *
 353:/usr/include/c++/11/bits/alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 354:/usr/include/c++/11/bits/alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 355:/usr/include/c++/11/bits/alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 356:/usr/include/c++/11/bits/alloc_traits.h ****        *  arguments @a __args...
 357:/usr/include/c++/11/bits/alloc_traits.h ****       */
 358:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 359:/usr/include/c++/11/bits/alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR auto
 360:/usr/include/c++/11/bits/alloc_traits.h **** 	construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 361:/usr/include/c++/11/bits/alloc_traits.h **** 	noexcept(noexcept(_S_construct(__a, __p,
 362:/usr/include/c++/11/bits/alloc_traits.h **** 				       std::forward<_Args>(__args)...)))
 363:/usr/include/c++/11/bits/alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 364:/usr/include/c++/11/bits/alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 365:/usr/include/c++/11/bits/alloc_traits.h **** 
 366:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 367:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 368:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 369:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 370:/usr/include/c++/11/bits/alloc_traits.h ****        *
 371:/usr/include/c++/11/bits/alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 372:/usr/include/c++/11/bits/alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 373:/usr/include/c++/11/bits/alloc_traits.h ****       */
 374:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Tp>
 375:/usr/include/c++/11/bits/alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 376:/usr/include/c++/11/bits/alloc_traits.h **** 	destroy(_Alloc& __a, _Tp* __p)
 377:/usr/include/c++/11/bits/alloc_traits.h **** 	noexcept(noexcept(_S_destroy(__a, __p, 0)))
 378:/usr/include/c++/11/bits/alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
 379:/usr/include/c++/11/bits/alloc_traits.h **** 
 380:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 381:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  The maximum supported allocation size
 382:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 383:/usr/include/c++/11/bits/alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 384:/usr/include/c++/11/bits/alloc_traits.h ****        *
 385:/usr/include/c++/11/bits/alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 386:/usr/include/c++/11/bits/alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 387:/usr/include/c++/11/bits/alloc_traits.h ****       */
 388:/usr/include/c++/11/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 389:/usr/include/c++/11/bits/alloc_traits.h ****       max_size(const _Alloc& __a) noexcept
 390:/usr/include/c++/11/bits/alloc_traits.h ****       { return _S_max_size(__a, 0); }
 391:/usr/include/c++/11/bits/alloc_traits.h **** 
 392:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 393:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 394:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __rhs  An allocator.
 395:/usr/include/c++/11/bits/alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 396:/usr/include/c++/11/bits/alloc_traits.h ****        *
 397:/usr/include/c++/11/bits/alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 398:/usr/include/c++/11/bits/alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 399:/usr/include/c++/11/bits/alloc_traits.h ****       */
 400:/usr/include/c++/11/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR _Alloc
 401:/usr/include/c++/11/bits/alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 402:/usr/include/c++/11/bits/alloc_traits.h ****       { return _S_select(__rhs, 0); }
 403:/usr/include/c++/11/bits/alloc_traits.h ****     };
 404:/usr/include/c++/11/bits/alloc_traits.h **** 
 405:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus > 201703L
 406:/usr/include/c++/11/bits/alloc_traits.h **** # define __cpp_lib_constexpr_dynamic_alloc 201907L
 407:/usr/include/c++/11/bits/alloc_traits.h **** #endif
 408:/usr/include/c++/11/bits/alloc_traits.h **** 
 409:/usr/include/c++/11/bits/alloc_traits.h ****   /// Partial specialization for std::allocator.
 410:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Tp>
 411:/usr/include/c++/11/bits/alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 412:/usr/include/c++/11/bits/alloc_traits.h ****     {
 413:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator type
 414:/usr/include/c++/11/bits/alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 415:/usr/include/c++/11/bits/alloc_traits.h **** 
 416:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocated type
 417:/usr/include/c++/11/bits/alloc_traits.h ****       using value_type = _Tp;
 418:/usr/include/c++/11/bits/alloc_traits.h **** 
 419:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator's pointer type.
 420:/usr/include/c++/11/bits/alloc_traits.h ****       using pointer = _Tp*;
 421:/usr/include/c++/11/bits/alloc_traits.h **** 
 422:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator's const pointer type.
 423:/usr/include/c++/11/bits/alloc_traits.h ****       using const_pointer = const _Tp*;
 424:/usr/include/c++/11/bits/alloc_traits.h **** 
 425:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator's void pointer type.
 426:/usr/include/c++/11/bits/alloc_traits.h ****       using void_pointer = void*;
 427:/usr/include/c++/11/bits/alloc_traits.h **** 
 428:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator's const void pointer type.
 429:/usr/include/c++/11/bits/alloc_traits.h ****       using const_void_pointer = const void*;
 430:/usr/include/c++/11/bits/alloc_traits.h **** 
 431:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator's difference type
 432:/usr/include/c++/11/bits/alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 433:/usr/include/c++/11/bits/alloc_traits.h **** 
 434:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator's size type
 435:/usr/include/c++/11/bits/alloc_traits.h ****       using size_type = std::size_t;
 436:/usr/include/c++/11/bits/alloc_traits.h **** 
 437:/usr/include/c++/11/bits/alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 438:/usr/include/c++/11/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 439:/usr/include/c++/11/bits/alloc_traits.h **** 
 440:/usr/include/c++/11/bits/alloc_traits.h ****       /// How the allocator is propagated on move assignment
 441:/usr/include/c++/11/bits/alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 442:/usr/include/c++/11/bits/alloc_traits.h **** 
 443:/usr/include/c++/11/bits/alloc_traits.h ****       /// How the allocator is propagated on swap
 444:/usr/include/c++/11/bits/alloc_traits.h ****       using propagate_on_container_swap = false_type;
 445:/usr/include/c++/11/bits/alloc_traits.h **** 
 446:/usr/include/c++/11/bits/alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 447:/usr/include/c++/11/bits/alloc_traits.h ****       using is_always_equal = true_type;
 448:/usr/include/c++/11/bits/alloc_traits.h **** 
 449:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Up>
 450:/usr/include/c++/11/bits/alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 451:/usr/include/c++/11/bits/alloc_traits.h **** 
 452:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Up>
 453:/usr/include/c++/11/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 454:/usr/include/c++/11/bits/alloc_traits.h **** 
 455:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 456:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 457:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 458:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 459:/usr/include/c++/11/bits/alloc_traits.h ****        *
 460:/usr/include/c++/11/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 461:/usr/include/c++/11/bits/alloc_traits.h ****       */
 462:/usr/include/c++/11/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 463:/usr/include/c++/11/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 464:/usr/include/c++/11/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 465:/usr/include/c++/11/bits/alloc_traits.h **** 
 466:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 467:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 468:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 469:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 470:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 471:/usr/include/c++/11/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 472:/usr/include/c++/11/bits/alloc_traits.h ****        *          of type @c value_type
 473:/usr/include/c++/11/bits/alloc_traits.h ****        *
 474:/usr/include/c++/11/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 475:/usr/include/c++/11/bits/alloc_traits.h ****       */
 476:/usr/include/c++/11/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 477:/usr/include/c++/11/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 478:/usr/include/c++/11/bits/alloc_traits.h ****       {
 479:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus <= 201703L
 480:/usr/include/c++/11/bits/alloc_traits.h **** 	return __a.allocate(__n, __hint);
 481:/usr/include/c++/11/bits/alloc_traits.h **** #else
 482:/usr/include/c++/11/bits/alloc_traits.h **** 	return __a.allocate(__n);
 483:/usr/include/c++/11/bits/alloc_traits.h **** #endif
 484:/usr/include/c++/11/bits/alloc_traits.h ****       }
 485:/usr/include/c++/11/bits/alloc_traits.h **** 
 486:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 487:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 488:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 489:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 490:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 491:/usr/include/c++/11/bits/alloc_traits.h ****        *
 492:/usr/include/c++/11/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 493:/usr/include/c++/11/bits/alloc_traits.h ****       */
 494:/usr/include/c++/11/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 495:/usr/include/c++/11/bits/alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 496:/usr/include/c++/11/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 497:/usr/include/c++/11/bits/alloc_traits.h **** 
 498:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 499:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Construct an object of type `_Up`
 500:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 501:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for
 502:/usr/include/c++/11/bits/alloc_traits.h ****        *	       an object of type `_Up`.
 503:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __args Constructor arguments.
 504:/usr/include/c++/11/bits/alloc_traits.h ****        *
 505:/usr/include/c++/11/bits/alloc_traits.h ****        *  Calls `__a.construct(__p, std::forward<_Args>(__args)...)`
 506:/usr/include/c++/11/bits/alloc_traits.h ****        *  in C++11, C++14 and C++17. Changed in C++20 to call
 507:/usr/include/c++/11/bits/alloc_traits.h ****        *  `std::construct_at(__p, std::forward<_Args>(__args)...)` instead.
 508:/usr/include/c++/11/bits/alloc_traits.h ****       */
 509:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Up, typename... _Args>
 510:/usr/include/c++/11/bits/alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 511:/usr/include/c++/11/bits/alloc_traits.h **** 	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
 512:/usr/include/c++/11/bits/alloc_traits.h **** 		  _Args&&... __args)
 513:/usr/include/c++/11/bits/alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 514:/usr/include/c++/11/bits/alloc_traits.h **** 	{
 515:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus <= 201703L
 516:/usr/include/c++/11/bits/alloc_traits.h **** 	  __a.construct(__p, std::forward<_Args>(__args)...);
 517:/usr/include/c++/11/bits/alloc_traits.h **** #else
 518:/usr/include/c++/11/bits/alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 519:/usr/include/c++/11/bits/alloc_traits.h **** #endif
 520:/usr/include/c++/11/bits/alloc_traits.h **** 	}
 521:/usr/include/c++/11/bits/alloc_traits.h **** 
 522:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 523:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Destroy an object of type @a _Up
 524:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 525:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 526:/usr/include/c++/11/bits/alloc_traits.h ****        *
 527:/usr/include/c++/11/bits/alloc_traits.h ****        *  Calls @c __a.destroy(__p).
 528:/usr/include/c++/11/bits/alloc_traits.h ****       */
 529:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Up>
 530:/usr/include/c++/11/bits/alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 531:/usr/include/c++/11/bits/alloc_traits.h **** 	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
 532:/usr/include/c++/11/bits/alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 533:/usr/include/c++/11/bits/alloc_traits.h **** 	{
 534:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus <= 201703L
 535:/usr/include/c++/11/bits/alloc_traits.h **** 	  __a.destroy(__p);
 536:/usr/include/c++/11/bits/alloc_traits.h **** #else
 537:/usr/include/c++/11/bits/alloc_traits.h **** 	  std::destroy_at(__p);
 538:/usr/include/c++/11/bits/alloc_traits.h **** #endif
 539:/usr/include/c++/11/bits/alloc_traits.h **** 	}
 540:/usr/include/c++/11/bits/alloc_traits.h **** 
 541:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 542:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  The maximum supported allocation size
 543:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 544:/usr/include/c++/11/bits/alloc_traits.h ****        *  @return @c __a.max_size()
 545:/usr/include/c++/11/bits/alloc_traits.h ****       */
 546:/usr/include/c++/11/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 547:/usr/include/c++/11/bits/alloc_traits.h ****       max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
 548:/usr/include/c++/11/bits/alloc_traits.h ****       {
 549:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus <= 201703L
 550:/usr/include/c++/11/bits/alloc_traits.h **** 	return __a.max_size();
 551:/usr/include/c++/11/bits/alloc_traits.h **** #else
 552:/usr/include/c++/11/bits/alloc_traits.h **** 	return size_t(-1) / sizeof(value_type);
 553:/usr/include/c++/11/bits/alloc_traits.h **** #endif
 554:/usr/include/c++/11/bits/alloc_traits.h ****       }
 555:/usr/include/c++/11/bits/alloc_traits.h **** 
 556:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 557:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 558:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __rhs  An allocator.
 559:/usr/include/c++/11/bits/alloc_traits.h ****        *  @return @c __rhs
 560:/usr/include/c++/11/bits/alloc_traits.h ****       */
 561:/usr/include/c++/11/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR allocator_type
 562:/usr/include/c++/11/bits/alloc_traits.h ****       select_on_container_copy_construction(const allocator_type& __rhs)
 563:/usr/include/c++/11/bits/alloc_traits.h ****       { return __rhs; }
 564:/usr/include/c++/11/bits/alloc_traits.h ****     };
 565:/usr/include/c++/11/bits/alloc_traits.h **** 
 566:/usr/include/c++/11/bits/alloc_traits.h ****   /// Explicit specialization for std::allocator<void>.
 567:/usr/include/c++/11/bits/alloc_traits.h ****   template<>
 568:/usr/include/c++/11/bits/alloc_traits.h ****     struct allocator_traits<allocator<void>>
 569:/usr/include/c++/11/bits/alloc_traits.h ****     {
 570:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator type
 571:/usr/include/c++/11/bits/alloc_traits.h ****       using allocator_type = allocator<void>;
 572:/usr/include/c++/11/bits/alloc_traits.h **** 
 573:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocated type
 574:/usr/include/c++/11/bits/alloc_traits.h ****       using value_type = void;
 575:/usr/include/c++/11/bits/alloc_traits.h **** 
 576:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator's pointer type.
 577:/usr/include/c++/11/bits/alloc_traits.h ****       using pointer = void*;
 578:/usr/include/c++/11/bits/alloc_traits.h **** 
 579:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator's const pointer type.
 580:/usr/include/c++/11/bits/alloc_traits.h ****       using const_pointer = const void*;
 581:/usr/include/c++/11/bits/alloc_traits.h **** 
 582:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator's void pointer type.
 583:/usr/include/c++/11/bits/alloc_traits.h ****       using void_pointer = void*;
 584:/usr/include/c++/11/bits/alloc_traits.h **** 
 585:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator's const void pointer type.
 586:/usr/include/c++/11/bits/alloc_traits.h ****       using const_void_pointer = const void*;
 587:/usr/include/c++/11/bits/alloc_traits.h **** 
 588:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator's difference type
 589:/usr/include/c++/11/bits/alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 590:/usr/include/c++/11/bits/alloc_traits.h **** 
 591:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator's size type
 592:/usr/include/c++/11/bits/alloc_traits.h ****       using size_type = std::size_t;
 593:/usr/include/c++/11/bits/alloc_traits.h **** 
 594:/usr/include/c++/11/bits/alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 595:/usr/include/c++/11/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 596:/usr/include/c++/11/bits/alloc_traits.h **** 
 597:/usr/include/c++/11/bits/alloc_traits.h ****       /// How the allocator is propagated on move assignment
 598:/usr/include/c++/11/bits/alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 599:/usr/include/c++/11/bits/alloc_traits.h **** 
 600:/usr/include/c++/11/bits/alloc_traits.h ****       /// How the allocator is propagated on swap
 601:/usr/include/c++/11/bits/alloc_traits.h ****       using propagate_on_container_swap = false_type;
 602:/usr/include/c++/11/bits/alloc_traits.h **** 
 603:/usr/include/c++/11/bits/alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 604:/usr/include/c++/11/bits/alloc_traits.h ****       using is_always_equal = true_type;
 605:/usr/include/c++/11/bits/alloc_traits.h **** 
 606:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Up>
 607:/usr/include/c++/11/bits/alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 608:/usr/include/c++/11/bits/alloc_traits.h **** 
 609:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Up>
 610:/usr/include/c++/11/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 611:/usr/include/c++/11/bits/alloc_traits.h **** 
 612:/usr/include/c++/11/bits/alloc_traits.h ****       /// allocate is ill-formed for allocator<void>
 613:/usr/include/c++/11/bits/alloc_traits.h ****       static void*
 614:/usr/include/c++/11/bits/alloc_traits.h ****       allocate(allocator_type&, size_type, const void* = nullptr) = delete;
 615:/usr/include/c++/11/bits/alloc_traits.h **** 
 616:/usr/include/c++/11/bits/alloc_traits.h ****       /// deallocate is ill-formed for allocator<void>
 617:/usr/include/c++/11/bits/alloc_traits.h ****       static void
 618:/usr/include/c++/11/bits/alloc_traits.h ****       deallocate(allocator_type&, void*, size_type) = delete;
 619:/usr/include/c++/11/bits/alloc_traits.h **** 
 620:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 621:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Construct an object of type `_Up`
 622:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 623:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for
 624:/usr/include/c++/11/bits/alloc_traits.h ****        *	       an object of type `_Up`.
 625:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __args Constructor arguments.
 626:/usr/include/c++/11/bits/alloc_traits.h ****        *
 627:/usr/include/c++/11/bits/alloc_traits.h ****        *  Calls `__a.construct(__p, std::forward<_Args>(__args)...)`
 628:/usr/include/c++/11/bits/alloc_traits.h ****        *  in C++11, C++14 and C++17. Changed in C++20 to call
 629:/usr/include/c++/11/bits/alloc_traits.h ****        *  `std::construct_at(__p, std::forward<_Args>(__args)...)` instead.
 630:/usr/include/c++/11/bits/alloc_traits.h ****       */
 631:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Up, typename... _Args>
 632:/usr/include/c++/11/bits/alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 633:/usr/include/c++/11/bits/alloc_traits.h **** 	construct(allocator_type&, _Up* __p, _Args&&... __args)
 634:/usr/include/c++/11/bits/alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 635:/usr/include/c++/11/bits/alloc_traits.h **** 	{ std::_Construct(__p, std::forward<_Args>(__args)...); }
 636:/usr/include/c++/11/bits/alloc_traits.h **** 
 637:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 638:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Destroy an object of type `_Up`
 639:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 640:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 641:/usr/include/c++/11/bits/alloc_traits.h ****        *
 642:/usr/include/c++/11/bits/alloc_traits.h ****        *  Invokes the destructor for `*__p`.
 643:/usr/include/c++/11/bits/alloc_traits.h ****       */
 644:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Up>
 645:/usr/include/c++/11/bits/alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 646:/usr/include/c++/11/bits/alloc_traits.h **** 	destroy(allocator_type&, _Up* __p)
 647:/usr/include/c++/11/bits/alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 648:/usr/include/c++/11/bits/alloc_traits.h **** 	{ std::_Destroy(__p); }
 649:/usr/include/c++/11/bits/alloc_traits.h **** 
 650:/usr/include/c++/11/bits/alloc_traits.h ****       /// max_size is ill-formed for allocator<void>
 651:/usr/include/c++/11/bits/alloc_traits.h ****       static size_type
 652:/usr/include/c++/11/bits/alloc_traits.h ****       max_size(const allocator_type&) = delete;
 653:/usr/include/c++/11/bits/alloc_traits.h **** 
 654:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 655:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 656:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __rhs  An allocator.
 657:/usr/include/c++/11/bits/alloc_traits.h ****        *  @return `__rhs`
 658:/usr/include/c++/11/bits/alloc_traits.h ****       */
 659:/usr/include/c++/11/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR allocator_type
 660:/usr/include/c++/11/bits/alloc_traits.h ****       select_on_container_copy_construction(const allocator_type& __rhs)
 661:/usr/include/c++/11/bits/alloc_traits.h ****       { return __rhs; }
 662:/usr/include/c++/11/bits/alloc_traits.h ****     };
 663:/usr/include/c++/11/bits/alloc_traits.h **** 
 664:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus < 201703L
 665:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 666:/usr/include/c++/11/bits/alloc_traits.h ****     inline void
 667:/usr/include/c++/11/bits/alloc_traits.h ****     __do_alloc_on_copy(_Alloc& __one, const _Alloc& __two, true_type)
 668:/usr/include/c++/11/bits/alloc_traits.h ****     { __one = __two; }
 669:/usr/include/c++/11/bits/alloc_traits.h **** 
 670:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 671:/usr/include/c++/11/bits/alloc_traits.h ****     inline void
 672:/usr/include/c++/11/bits/alloc_traits.h ****     __do_alloc_on_copy(_Alloc&, const _Alloc&, false_type)
 673:/usr/include/c++/11/bits/alloc_traits.h ****     { }
 674:/usr/include/c++/11/bits/alloc_traits.h **** #endif
 675:/usr/include/c++/11/bits/alloc_traits.h **** 
 676:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 677:/usr/include/c++/11/bits/alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 678:/usr/include/c++/11/bits/alloc_traits.h ****     __alloc_on_copy(_Alloc& __one, const _Alloc& __two)
 679:/usr/include/c++/11/bits/alloc_traits.h ****     {
 680:/usr/include/c++/11/bits/alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 681:/usr/include/c++/11/bits/alloc_traits.h ****       typedef typename __traits::propagate_on_container_copy_assignment __pocca;
 682:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus >= 201703L
 683:/usr/include/c++/11/bits/alloc_traits.h ****       if constexpr (__pocca::value)
 684:/usr/include/c++/11/bits/alloc_traits.h **** 	__one = __two;
 685:/usr/include/c++/11/bits/alloc_traits.h **** #else
 686:/usr/include/c++/11/bits/alloc_traits.h ****       __do_alloc_on_copy(__one, __two, __pocca());
 687:/usr/include/c++/11/bits/alloc_traits.h **** #endif
 688:/usr/include/c++/11/bits/alloc_traits.h ****     }
 689:/usr/include/c++/11/bits/alloc_traits.h **** 
 690:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 691:/usr/include/c++/11/bits/alloc_traits.h ****     constexpr _Alloc
 692:/usr/include/c++/11/bits/alloc_traits.h ****     __alloc_on_copy(const _Alloc& __a)
 693:/usr/include/c++/11/bits/alloc_traits.h ****     {
 694:/usr/include/c++/11/bits/alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 695:/usr/include/c++/11/bits/alloc_traits.h ****       return __traits::select_on_container_copy_construction(__a);
 696:/usr/include/c++/11/bits/alloc_traits.h ****     }
 697:/usr/include/c++/11/bits/alloc_traits.h **** 
 698:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus < 201703L
 699:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 700:/usr/include/c++/11/bits/alloc_traits.h ****     inline void __do_alloc_on_move(_Alloc& __one, _Alloc& __two, true_type)
 701:/usr/include/c++/11/bits/alloc_traits.h ****     { __one = std::move(__two); }
 702:/usr/include/c++/11/bits/alloc_traits.h **** 
 703:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 704:/usr/include/c++/11/bits/alloc_traits.h ****     inline void __do_alloc_on_move(_Alloc&, _Alloc&, false_type)
 705:/usr/include/c++/11/bits/alloc_traits.h ****     { }
 706:/usr/include/c++/11/bits/alloc_traits.h **** #endif
 707:/usr/include/c++/11/bits/alloc_traits.h **** 
 708:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 709:/usr/include/c++/11/bits/alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 710:/usr/include/c++/11/bits/alloc_traits.h ****     __alloc_on_move(_Alloc& __one, _Alloc& __two)
 711:/usr/include/c++/11/bits/alloc_traits.h ****     {
 712:/usr/include/c++/11/bits/alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 713:/usr/include/c++/11/bits/alloc_traits.h ****       typedef typename __traits::propagate_on_container_move_assignment __pocma;
 714:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus >= 201703L
 715:/usr/include/c++/11/bits/alloc_traits.h ****       if constexpr (__pocma::value)
 716:/usr/include/c++/11/bits/alloc_traits.h **** 	__one = std::move(__two);
 717:/usr/include/c++/11/bits/alloc_traits.h **** #else
 718:/usr/include/c++/11/bits/alloc_traits.h ****       __do_alloc_on_move(__one, __two, __pocma());
 719:/usr/include/c++/11/bits/alloc_traits.h **** #endif
 720:/usr/include/c++/11/bits/alloc_traits.h ****     }
 721:/usr/include/c++/11/bits/alloc_traits.h **** 
 722:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus < 201703L
 723:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 724:/usr/include/c++/11/bits/alloc_traits.h ****     inline void __do_alloc_on_swap(_Alloc& __one, _Alloc& __two, true_type)
 725:/usr/include/c++/11/bits/alloc_traits.h ****     {
 726:/usr/include/c++/11/bits/alloc_traits.h ****       using std::swap;
 727:/usr/include/c++/11/bits/alloc_traits.h ****       swap(__one, __two);
 728:/usr/include/c++/11/bits/alloc_traits.h ****     }
 729:/usr/include/c++/11/bits/alloc_traits.h **** 
 730:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 731:/usr/include/c++/11/bits/alloc_traits.h ****     inline void __do_alloc_on_swap(_Alloc&, _Alloc&, false_type)
 732:/usr/include/c++/11/bits/alloc_traits.h ****     { }
 733:/usr/include/c++/11/bits/alloc_traits.h **** #endif
 734:/usr/include/c++/11/bits/alloc_traits.h **** 
 735:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 736:/usr/include/c++/11/bits/alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 737:/usr/include/c++/11/bits/alloc_traits.h ****     __alloc_on_swap(_Alloc& __one, _Alloc& __two)
 738:/usr/include/c++/11/bits/alloc_traits.h ****     {
 739:/usr/include/c++/11/bits/alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 740:/usr/include/c++/11/bits/alloc_traits.h ****       typedef typename __traits::propagate_on_container_swap __pocs;
 741:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus >= 201703L
 742:/usr/include/c++/11/bits/alloc_traits.h ****       if constexpr (__pocs::value)
 743:/usr/include/c++/11/bits/alloc_traits.h **** 	{
 744:/usr/include/c++/11/bits/alloc_traits.h **** 	  using std::swap;
 745:/usr/include/c++/11/bits/alloc_traits.h **** 	  swap(__one, __two);
 746:/usr/include/c++/11/bits/alloc_traits.h **** 	}
 747:/usr/include/c++/11/bits/alloc_traits.h **** #else
 748:/usr/include/c++/11/bits/alloc_traits.h ****       __do_alloc_on_swap(__one, __two, __pocs());
 749:/usr/include/c++/11/bits/alloc_traits.h **** #endif
 750:/usr/include/c++/11/bits/alloc_traits.h ****     }
 751:/usr/include/c++/11/bits/alloc_traits.h **** 
 752:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc, typename _Tp,
 753:/usr/include/c++/11/bits/alloc_traits.h **** 	   typename _ValueT = __remove_cvref_t<typename _Alloc::value_type>,
 754:/usr/include/c++/11/bits/alloc_traits.h **** 	   typename = void>
 755:/usr/include/c++/11/bits/alloc_traits.h ****     struct __is_alloc_insertable_impl
 756:/usr/include/c++/11/bits/alloc_traits.h ****     : false_type
 757:/usr/include/c++/11/bits/alloc_traits.h ****     { };
 758:/usr/include/c++/11/bits/alloc_traits.h **** 
 759:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc, typename _Tp, typename _ValueT>
 760:/usr/include/c++/11/bits/alloc_traits.h ****     struct __is_alloc_insertable_impl<_Alloc, _Tp, _ValueT,
 761:/usr/include/c++/11/bits/alloc_traits.h ****       __void_t<decltype(allocator_traits<_Alloc>::construct(
 762:/usr/include/c++/11/bits/alloc_traits.h **** 		   std::declval<_Alloc&>(), std::declval<_ValueT*>(),
 763:/usr/include/c++/11/bits/alloc_traits.h **** 		   std::declval<_Tp>()))>>
 764:/usr/include/c++/11/bits/alloc_traits.h ****     : true_type
 765:/usr/include/c++/11/bits/alloc_traits.h ****     { };
 766:/usr/include/c++/11/bits/alloc_traits.h **** 
 767:/usr/include/c++/11/bits/alloc_traits.h ****   // true if _Alloc::value_type is CopyInsertable into containers using _Alloc
 768:/usr/include/c++/11/bits/alloc_traits.h ****   // (might be wrong if _Alloc::construct exists but is not constrained,
 769:/usr/include/c++/11/bits/alloc_traits.h ****   // i.e. actually trying to use it would still be invalid. Use with caution.)
 770:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 771:/usr/include/c++/11/bits/alloc_traits.h ****     struct __is_copy_insertable
 772:/usr/include/c++/11/bits/alloc_traits.h ****     : __is_alloc_insertable_impl<_Alloc,
 773:/usr/include/c++/11/bits/alloc_traits.h **** 				 typename _Alloc::value_type const&>::type
 774:/usr/include/c++/11/bits/alloc_traits.h ****     { };
 775:/usr/include/c++/11/bits/alloc_traits.h **** 
 776:/usr/include/c++/11/bits/alloc_traits.h ****   // std::allocator<_Tp> just requires CopyConstructible
 777:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Tp>
 778:/usr/include/c++/11/bits/alloc_traits.h ****     struct __is_copy_insertable<allocator<_Tp>>
 779:/usr/include/c++/11/bits/alloc_traits.h ****     : is_copy_constructible<_Tp>
 780:/usr/include/c++/11/bits/alloc_traits.h ****     { };
 781:/usr/include/c++/11/bits/alloc_traits.h **** 
 782:/usr/include/c++/11/bits/alloc_traits.h ****   // true if _Alloc::value_type is MoveInsertable into containers using _Alloc
 783:/usr/include/c++/11/bits/alloc_traits.h ****   // (might be wrong if _Alloc::construct exists but is not constrained,
 784:/usr/include/c++/11/bits/alloc_traits.h ****   // i.e. actually trying to use it would still be invalid. Use with caution.)
 785:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 786:/usr/include/c++/11/bits/alloc_traits.h ****     struct __is_move_insertable
 787:/usr/include/c++/11/bits/alloc_traits.h ****     : __is_alloc_insertable_impl<_Alloc, typename _Alloc::value_type>::type
 788:/usr/include/c++/11/bits/alloc_traits.h ****     { };
 789:/usr/include/c++/11/bits/alloc_traits.h **** 
 790:/usr/include/c++/11/bits/alloc_traits.h ****   // std::allocator<_Tp> just requires MoveConstructible
 791:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Tp>
 792:/usr/include/c++/11/bits/alloc_traits.h ****     struct __is_move_insertable<allocator<_Tp>>
 793:/usr/include/c++/11/bits/alloc_traits.h ****     : is_move_constructible<_Tp>
 794:/usr/include/c++/11/bits/alloc_traits.h ****     { };
 795:/usr/include/c++/11/bits/alloc_traits.h **** 
 796:/usr/include/c++/11/bits/alloc_traits.h ****   // Trait to detect Allocator-like types.
 797:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc, typename = void>
 798:/usr/include/c++/11/bits/alloc_traits.h ****     struct __is_allocator : false_type { };
 799:/usr/include/c++/11/bits/alloc_traits.h **** 
 800:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 801:/usr/include/c++/11/bits/alloc_traits.h ****     struct __is_allocator<_Alloc,
 802:/usr/include/c++/11/bits/alloc_traits.h ****       __void_t<typename _Alloc::value_type,
 803:/usr/include/c++/11/bits/alloc_traits.h **** 	       decltype(std::declval<_Alloc&>().allocate(size_t{}))>>
 804:/usr/include/c++/11/bits/alloc_traits.h ****     : true_type { };
 805:/usr/include/c++/11/bits/alloc_traits.h **** 
 806:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 807:/usr/include/c++/11/bits/alloc_traits.h ****     using _RequireAllocator
 808:/usr/include/c++/11/bits/alloc_traits.h ****       = typename enable_if<__is_allocator<_Alloc>::value, _Alloc>::type;
 809:/usr/include/c++/11/bits/alloc_traits.h **** 
 810:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 811:/usr/include/c++/11/bits/alloc_traits.h ****     using _RequireNotAllocator
 812:/usr/include/c++/11/bits/alloc_traits.h ****       = typename enable_if<!__is_allocator<_Alloc>::value, _Alloc>::type;
 813:/usr/include/c++/11/bits/alloc_traits.h **** 
 814:/usr/include/c++/11/bits/alloc_traits.h **** #if __cpp_concepts >= 201907L
 815:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
 816:/usr/include/c++/11/bits/alloc_traits.h ****     concept __allocator_like = requires (_Alloc& __a) {
 817:/usr/include/c++/11/bits/alloc_traits.h ****       typename _Alloc::value_type;
 818:/usr/include/c++/11/bits/alloc_traits.h ****       __a.deallocate(__a.allocate(1u), 1u);
 819:/usr/include/c++/11/bits/alloc_traits.h ****     };
 820:/usr/include/c++/11/bits/alloc_traits.h **** #endif
 821:/usr/include/c++/11/bits/alloc_traits.h **** #endif // C++11
 822:/usr/include/c++/11/bits/alloc_traits.h **** 
 823:/usr/include/c++/11/bits/alloc_traits.h ****   /**
 824:/usr/include/c++/11/bits/alloc_traits.h ****    * Destroy a range of objects using the supplied allocator.  For
 825:/usr/include/c++/11/bits/alloc_traits.h ****    * non-default allocators we do not optimize away invocation of
 826:/usr/include/c++/11/bits/alloc_traits.h ****    * destroy() even if _Tp has a trivial destructor.
 827:/usr/include/c++/11/bits/alloc_traits.h ****    */
 828:/usr/include/c++/11/bits/alloc_traits.h **** 
 829:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _ForwardIterator, typename _Allocator>
 830:/usr/include/c++/11/bits/alloc_traits.h ****     void
 831:/usr/include/c++/11/bits/alloc_traits.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 832:/usr/include/c++/11/bits/alloc_traits.h **** 	     _Allocator& __alloc)
 833:/usr/include/c++/11/bits/alloc_traits.h ****     {
 834:/usr/include/c++/11/bits/alloc_traits.h ****       for (; __first != __last; ++__first)
 835:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus < 201103L
 836:/usr/include/c++/11/bits/alloc_traits.h **** 	__alloc.destroy(std::__addressof(*__first));
 837:/usr/include/c++/11/bits/alloc_traits.h **** #else
 838:/usr/include/c++/11/bits/alloc_traits.h **** 	allocator_traits<_Allocator>::destroy(__alloc,
 839:/usr/include/c++/11/bits/alloc_traits.h **** 					      std::__addressof(*__first));
 840:/usr/include/c++/11/bits/alloc_traits.h **** #endif
 841:/usr/include/c++/11/bits/alloc_traits.h ****     }
 842:/usr/include/c++/11/bits/alloc_traits.h **** 
 843:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _ForwardIterator, typename _Tp>
 844:/usr/include/c++/11/bits/alloc_traits.h ****     inline void
 845:/usr/include/c++/11/bits/alloc_traits.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 11006              		.loc 10 845 5
 11007              		.cfi_startproc
 11008 0000 F30F1EFA 		endbr64
 11009 0004 55       		pushq	%rbp
 11010              		.cfi_def_cfa_offset 16
 11011              		.cfi_offset 6, -16
 11012 0005 4889E5   		movq	%rsp, %rbp
 11013              		.cfi_def_cfa_register 6
 11014 0008 4883EC20 		subq	$32, %rsp
 11015 000c 48897DF8 		movq	%rdi, -8(%rbp)
 11016 0010 488975F0 		movq	%rsi, -16(%rbp)
 11017 0014 488955E8 		movq	%rdx, -24(%rbp)
 846:/usr/include/c++/11/bits/alloc_traits.h **** 	     allocator<_Tp>&)
 847:/usr/include/c++/11/bits/alloc_traits.h ****     {
 848:/usr/include/c++/11/bits/alloc_traits.h ****       _Destroy(__first, __last);
 11018              		.loc 10 848 15
 11019 0018 488B55F0 		movq	-16(%rbp), %rdx
 11020 001c 488B45F8 		movq	-8(%rbp), %rax
 11021 0020 4889D6   		movq	%rdx, %rsi
 11022 0023 4889C7   		movq	%rax, %rdi
 11023 0026 E8000000 		call	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_
 11023      00
 849:/usr/include/c++/11/bits/alloc_traits.h ****     }
 11024              		.loc 10 849 5
 11025 002b 90       		nop
 11026 002c C9       		leave
 11027              		.cfi_def_cfa 7, 8
 11028 002d C3       		ret
 11029              		.cfi_endproc
 11030              	.LFE1689:
 11032              		.section	.text._ZNSaIN8UnitTest18DeferredTestResultEED2Ev,"axG",@progbits,_ZNSaIN8UnitTest18Deferr
 11033              		.align 2
 11034              		.weak	_ZNSaIN8UnitTest18DeferredTestResultEED2Ev
 11036              	_ZNSaIN8UnitTest18DeferredTestResultEED2Ev:
 11037              	.LFB1691:
 11038              		.file 11 "/usr/include/c++/11/bits/allocator.h"
   1:/usr/include/c++/11/bits/allocator.h **** // Allocators -*- C++ -*-
   2:/usr/include/c++/11/bits/allocator.h **** 
   3:/usr/include/c++/11/bits/allocator.h **** // Copyright (C) 2001-2021 Free Software Foundation, Inc.
   4:/usr/include/c++/11/bits/allocator.h **** //
   5:/usr/include/c++/11/bits/allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/11/bits/allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/11/bits/allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/11/bits/allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/11/bits/allocator.h **** // any later version.
  10:/usr/include/c++/11/bits/allocator.h **** 
  11:/usr/include/c++/11/bits/allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/11/bits/allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/11/bits/allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/11/bits/allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/11/bits/allocator.h **** 
  16:/usr/include/c++/11/bits/allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/11/bits/allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/11/bits/allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/11/bits/allocator.h **** 
  20:/usr/include/c++/11/bits/allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/11/bits/allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/11/bits/allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/11/bits/allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/11/bits/allocator.h **** 
  25:/usr/include/c++/11/bits/allocator.h **** /*
  26:/usr/include/c++/11/bits/allocator.h ****  * Copyright (c) 1996-1997
  27:/usr/include/c++/11/bits/allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:/usr/include/c++/11/bits/allocator.h ****  *
  29:/usr/include/c++/11/bits/allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/usr/include/c++/11/bits/allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/usr/include/c++/11/bits/allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:/usr/include/c++/11/bits/allocator.h ****  * that both that copyright notice and this permission notice appear
  33:/usr/include/c++/11/bits/allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:/usr/include/c++/11/bits/allocator.h ****  * representations about the suitability of this software for any
  35:/usr/include/c++/11/bits/allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/usr/include/c++/11/bits/allocator.h ****  */
  37:/usr/include/c++/11/bits/allocator.h **** 
  38:/usr/include/c++/11/bits/allocator.h **** /** @file bits/allocator.h
  39:/usr/include/c++/11/bits/allocator.h ****  *  This is an internal header file, included by other library headers.
  40:/usr/include/c++/11/bits/allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:/usr/include/c++/11/bits/allocator.h ****  */
  42:/usr/include/c++/11/bits/allocator.h **** 
  43:/usr/include/c++/11/bits/allocator.h **** #ifndef _ALLOCATOR_H
  44:/usr/include/c++/11/bits/allocator.h **** #define _ALLOCATOR_H 1
  45:/usr/include/c++/11/bits/allocator.h **** 
  46:/usr/include/c++/11/bits/allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:/usr/include/c++/11/bits/allocator.h **** #include <bits/memoryfwd.h>
  48:/usr/include/c++/11/bits/allocator.h **** #if __cplusplus >= 201103L
  49:/usr/include/c++/11/bits/allocator.h **** #include <type_traits>
  50:/usr/include/c++/11/bits/allocator.h **** #endif
  51:/usr/include/c++/11/bits/allocator.h **** 
  52:/usr/include/c++/11/bits/allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:/usr/include/c++/11/bits/allocator.h **** 
  54:/usr/include/c++/11/bits/allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  55:/usr/include/c++/11/bits/allocator.h **** {
  56:/usr/include/c++/11/bits/allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  57:/usr/include/c++/11/bits/allocator.h **** 
  58:/usr/include/c++/11/bits/allocator.h ****   /**
  59:/usr/include/c++/11/bits/allocator.h ****    *  @addtogroup allocators
  60:/usr/include/c++/11/bits/allocator.h ****    *  @{
  61:/usr/include/c++/11/bits/allocator.h ****    */
  62:/usr/include/c++/11/bits/allocator.h **** 
  63:/usr/include/c++/11/bits/allocator.h ****   // Since C++20 the primary template should be used for allocator<void>,
  64:/usr/include/c++/11/bits/allocator.h ****   // but then it would have a non-trivial default ctor and dtor for C++20,
  65:/usr/include/c++/11/bits/allocator.h ****   // but trivial for C++98-17, which would be an ABI incompatibiliy between
  66:/usr/include/c++/11/bits/allocator.h ****   // different standard dialects. So C++20 still uses the allocator<void>
  67:/usr/include/c++/11/bits/allocator.h ****   // explicit specialization, with the historical ABI properties, but with
  68:/usr/include/c++/11/bits/allocator.h ****   // the same members that are present in the primary template.
  69:/usr/include/c++/11/bits/allocator.h **** 
  70:/usr/include/c++/11/bits/allocator.h ****   /// allocator<void> specialization.
  71:/usr/include/c++/11/bits/allocator.h ****   template<>
  72:/usr/include/c++/11/bits/allocator.h ****     class allocator<void>
  73:/usr/include/c++/11/bits/allocator.h ****     {
  74:/usr/include/c++/11/bits/allocator.h ****     public:
  75:/usr/include/c++/11/bits/allocator.h ****       typedef void        value_type;
  76:/usr/include/c++/11/bits/allocator.h ****       typedef size_t      size_type;
  77:/usr/include/c++/11/bits/allocator.h ****       typedef ptrdiff_t   difference_type;
  78:/usr/include/c++/11/bits/allocator.h **** 
  79:/usr/include/c++/11/bits/allocator.h **** #if __cplusplus <= 201703L
  80:/usr/include/c++/11/bits/allocator.h ****       // These were removed for C++20, allocator_traits does the right thing.
  81:/usr/include/c++/11/bits/allocator.h ****       typedef void*       pointer;
  82:/usr/include/c++/11/bits/allocator.h ****       typedef const void* const_pointer;
  83:/usr/include/c++/11/bits/allocator.h **** 
  84:/usr/include/c++/11/bits/allocator.h ****       template<typename _Tp1>
  85:/usr/include/c++/11/bits/allocator.h **** 	struct rebind
  86:/usr/include/c++/11/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
  87:/usr/include/c++/11/bits/allocator.h **** #endif
  88:/usr/include/c++/11/bits/allocator.h **** 
  89:/usr/include/c++/11/bits/allocator.h **** #if __cplusplus >= 201103L
  90:/usr/include/c++/11/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  91:/usr/include/c++/11/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  92:/usr/include/c++/11/bits/allocator.h ****       using propagate_on_container_move_assignment = true_type;
  93:/usr/include/c++/11/bits/allocator.h **** 
  94:/usr/include/c++/11/bits/allocator.h ****       using is_always_equal
  95:/usr/include/c++/11/bits/allocator.h **** 	_GLIBCXX20_DEPRECATED_SUGGEST("std::allocator_traits::is_always_equal")
  96:/usr/include/c++/11/bits/allocator.h **** 	= true_type;
  97:/usr/include/c++/11/bits/allocator.h **** 
  98:/usr/include/c++/11/bits/allocator.h **** #if __cplusplus >= 202002L
  99:/usr/include/c++/11/bits/allocator.h ****       // As noted above, these members are present for C++20 to provide the
 100:/usr/include/c++/11/bits/allocator.h ****       // same API as the primary template, but still trivial as in pre-C++20.
 101:/usr/include/c++/11/bits/allocator.h ****       allocator() = default;
 102:/usr/include/c++/11/bits/allocator.h ****       ~allocator() = default;
 103:/usr/include/c++/11/bits/allocator.h **** 
 104:/usr/include/c++/11/bits/allocator.h ****       template<typename _Up>
 105:/usr/include/c++/11/bits/allocator.h **** 	constexpr
 106:/usr/include/c++/11/bits/allocator.h **** 	allocator(const allocator<_Up>&) noexcept { }
 107:/usr/include/c++/11/bits/allocator.h **** 
 108:/usr/include/c++/11/bits/allocator.h ****       // No allocate member because it's ill-formed by LWG 3307.
 109:/usr/include/c++/11/bits/allocator.h ****       // No deallocate member because it would be undefined to call it
 110:/usr/include/c++/11/bits/allocator.h ****       // with any pointer which wasn't obtained from allocate.
 111:/usr/include/c++/11/bits/allocator.h **** #endif // C++20
 112:/usr/include/c++/11/bits/allocator.h **** #endif // C++11
 113:/usr/include/c++/11/bits/allocator.h ****     };
 114:/usr/include/c++/11/bits/allocator.h **** 
 115:/usr/include/c++/11/bits/allocator.h ****   /**
 116:/usr/include/c++/11/bits/allocator.h ****    * @brief  The @a standard allocator, as per C++03 [20.4.1].
 117:/usr/include/c++/11/bits/allocator.h ****    *
 118:/usr/include/c++/11/bits/allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 119:/usr/include/c++/11/bits/allocator.h ****    *  for further details.
 120:/usr/include/c++/11/bits/allocator.h ****    *
 121:/usr/include/c++/11/bits/allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 122:/usr/include/c++/11/bits/allocator.h ****    */
 123:/usr/include/c++/11/bits/allocator.h ****   template<typename _Tp>
 124:/usr/include/c++/11/bits/allocator.h ****     class allocator : public __allocator_base<_Tp>
 125:/usr/include/c++/11/bits/allocator.h ****     {
 126:/usr/include/c++/11/bits/allocator.h ****     public:
 127:/usr/include/c++/11/bits/allocator.h ****       typedef _Tp        value_type;
 128:/usr/include/c++/11/bits/allocator.h ****       typedef size_t     size_type;
 129:/usr/include/c++/11/bits/allocator.h ****       typedef ptrdiff_t  difference_type;
 130:/usr/include/c++/11/bits/allocator.h **** 
 131:/usr/include/c++/11/bits/allocator.h **** #if __cplusplus <= 201703L
 132:/usr/include/c++/11/bits/allocator.h ****       // These were removed for C++20.
 133:/usr/include/c++/11/bits/allocator.h ****       typedef _Tp*       pointer;
 134:/usr/include/c++/11/bits/allocator.h ****       typedef const _Tp* const_pointer;
 135:/usr/include/c++/11/bits/allocator.h ****       typedef _Tp&       reference;
 136:/usr/include/c++/11/bits/allocator.h ****       typedef const _Tp& const_reference;
 137:/usr/include/c++/11/bits/allocator.h **** 
 138:/usr/include/c++/11/bits/allocator.h ****       template<typename _Tp1>
 139:/usr/include/c++/11/bits/allocator.h **** 	struct rebind
 140:/usr/include/c++/11/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
 141:/usr/include/c++/11/bits/allocator.h **** #endif
 142:/usr/include/c++/11/bits/allocator.h **** 
 143:/usr/include/c++/11/bits/allocator.h **** #if __cplusplus >= 201103L
 144:/usr/include/c++/11/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 145:/usr/include/c++/11/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 146:/usr/include/c++/11/bits/allocator.h ****       using propagate_on_container_move_assignment = true_type;
 147:/usr/include/c++/11/bits/allocator.h **** 
 148:/usr/include/c++/11/bits/allocator.h ****       using is_always_equal
 149:/usr/include/c++/11/bits/allocator.h **** 	_GLIBCXX20_DEPRECATED_SUGGEST("std::allocator_traits::is_always_equal")
 150:/usr/include/c++/11/bits/allocator.h **** 	= true_type;
 151:/usr/include/c++/11/bits/allocator.h **** #endif
 152:/usr/include/c++/11/bits/allocator.h **** 
 153:/usr/include/c++/11/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 154:/usr/include/c++/11/bits/allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 155:/usr/include/c++/11/bits/allocator.h ****       _GLIBCXX20_CONSTEXPR
 156:/usr/include/c++/11/bits/allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
 157:/usr/include/c++/11/bits/allocator.h **** 
 158:/usr/include/c++/11/bits/allocator.h ****       _GLIBCXX20_CONSTEXPR
 159:/usr/include/c++/11/bits/allocator.h ****       allocator(const allocator& __a) _GLIBCXX_NOTHROW
 160:/usr/include/c++/11/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 161:/usr/include/c++/11/bits/allocator.h **** 
 162:/usr/include/c++/11/bits/allocator.h **** #if __cplusplus >= 201103L
 163:/usr/include/c++/11/bits/allocator.h ****       // Avoid implicit deprecation.
 164:/usr/include/c++/11/bits/allocator.h ****       allocator& operator=(const allocator&) = default;
 165:/usr/include/c++/11/bits/allocator.h **** #endif
 166:/usr/include/c++/11/bits/allocator.h **** 
 167:/usr/include/c++/11/bits/allocator.h ****       template<typename _Tp1>
 168:/usr/include/c++/11/bits/allocator.h **** 	_GLIBCXX20_CONSTEXPR
 169:/usr/include/c++/11/bits/allocator.h **** 	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 170:/usr/include/c++/11/bits/allocator.h **** 
 171:/usr/include/c++/11/bits/allocator.h **** #if __cpp_constexpr_dynamic_alloc
 172:/usr/include/c++/11/bits/allocator.h ****       constexpr
 173:/usr/include/c++/11/bits/allocator.h **** #endif
 174:/usr/include/c++/11/bits/allocator.h ****       ~allocator() _GLIBCXX_NOTHROW { }
 11039              		.loc 11 174 7
 11040              		.cfi_startproc
 11041 0000 F30F1EFA 		endbr64
 11042 0004 55       		pushq	%rbp
 11043              		.cfi_def_cfa_offset 16
 11044              		.cfi_offset 6, -16
 11045 0005 4889E5   		movq	%rsp, %rbp
 11046              		.cfi_def_cfa_register 6
 11047 0008 4883EC10 		subq	$16, %rsp
 11048 000c 48897DF8 		movq	%rdi, -8(%rbp)
 11049              	.LBB182:
 11050              		.loc 11 174 39
 11051 0010 488B45F8 		movq	-8(%rbp), %rax
 11052 0014 4889C7   		movq	%rax, %rdi
 11053 0017 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev
 11053      00
 11054              	.LBE182:
 11055 001c 90       		nop
 11056 001d C9       		leave
 11057              		.cfi_def_cfa 7, 8
 11058 001e C3       		ret
 11059              		.cfi_endproc
 11060              	.LFE1691:
 11062              		.weak	_ZNSaIN8UnitTest18DeferredTestResultEED1Ev
 11063              		.set	_ZNSaIN8UnitTest18DeferredTestResultEED1Ev,_ZNSaIN8UnitTest18DeferredTestResultEED2Ev
 11064              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m,"a
 11065              		.align 2
 11066              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m
 11068              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m:
 11069              	.LFB1693:
 350:/usr/include/c++/11/bits/stl_vector.h ****       {
 11070              		.loc 9 350 7
 11071              		.cfi_startproc
 11072 0000 F30F1EFA 		endbr64
 11073 0004 55       		pushq	%rbp
 11074              		.cfi_def_cfa_offset 16
 11075              		.cfi_offset 6, -16
 11076 0005 4889E5   		movq	%rsp, %rbp
 11077              		.cfi_def_cfa_register 6
 11078 0008 4883EC20 		subq	$32, %rsp
 11079 000c 48897DF8 		movq	%rdi, -8(%rbp)
 11080 0010 488975F0 		movq	%rsi, -16(%rbp)
 11081 0014 488955E8 		movq	%rdx, -24(%rbp)
 353:/usr/include/c++/11/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 11082              		.loc 9 353 2
 11083 0018 48837DF0 		cmpq	$0, -16(%rbp)
 11083      00
 11084 001d 7417     		je	.L548
 354:/usr/include/c++/11/bits/stl_vector.h ****       }
 11085              		.loc 9 354 20
 11086 001f 488B45F8 		movq	-8(%rbp), %rax
 354:/usr/include/c++/11/bits/stl_vector.h ****       }
 11087              		.loc 9 354 19
 11088 0023 488B55E8 		movq	-24(%rbp), %rdx
 11089 0027 488B4DF0 		movq	-16(%rbp), %rcx
 11090 002b 4889CE   		movq	%rcx, %rsi
 11091 002e 4889C7   		movq	%rax, %rdi
 11092 0031 E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEES2_E10deallocateERS3_PS2_m
 11092      00
 11093              	.L548:
 355:/usr/include/c++/11/bits/stl_vector.h **** 
 11094              		.loc 9 355 7
 11095 0036 90       		nop
 11096 0037 C9       		leave
 11097              		.cfi_def_cfa 7, 8
 11098 0038 C3       		ret
 11099              		.cfi_endproc
 11100              	.LFE1693:
 11102              		.section	.text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_,"axG",@progbits,_ZSt8_Destroy
 11103              		.weak	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_
 11105              	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_:
 11106              	.LFB1694:
 11107              		.file 12 "/usr/include/c++/11/bits/stl_construct.h"
   1:/usr/include/c++/11/bits/stl_construct.h **** // nonstandard construct and destroy functions -*- C++ -*-
   2:/usr/include/c++/11/bits/stl_construct.h **** 
   3:/usr/include/c++/11/bits/stl_construct.h **** // Copyright (C) 2001-2021 Free Software Foundation, Inc.
   4:/usr/include/c++/11/bits/stl_construct.h **** //
   5:/usr/include/c++/11/bits/stl_construct.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/11/bits/stl_construct.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/11/bits/stl_construct.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/11/bits/stl_construct.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/11/bits/stl_construct.h **** // any later version.
  10:/usr/include/c++/11/bits/stl_construct.h **** 
  11:/usr/include/c++/11/bits/stl_construct.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/11/bits/stl_construct.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/11/bits/stl_construct.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/11/bits/stl_construct.h **** // GNU General Public License for more details.
  15:/usr/include/c++/11/bits/stl_construct.h **** 
  16:/usr/include/c++/11/bits/stl_construct.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/11/bits/stl_construct.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/11/bits/stl_construct.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/11/bits/stl_construct.h **** 
  20:/usr/include/c++/11/bits/stl_construct.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/11/bits/stl_construct.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/11/bits/stl_construct.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/11/bits/stl_construct.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/11/bits/stl_construct.h **** 
  25:/usr/include/c++/11/bits/stl_construct.h **** /*
  26:/usr/include/c++/11/bits/stl_construct.h ****  *
  27:/usr/include/c++/11/bits/stl_construct.h ****  * Copyright (c) 1994
  28:/usr/include/c++/11/bits/stl_construct.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/11/bits/stl_construct.h ****  *
  30:/usr/include/c++/11/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/11/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/11/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/11/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/11/bits/stl_construct.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/11/bits/stl_construct.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/11/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/11/bits/stl_construct.h ****  *
  38:/usr/include/c++/11/bits/stl_construct.h ****  *
  39:/usr/include/c++/11/bits/stl_construct.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/11/bits/stl_construct.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/11/bits/stl_construct.h ****  *
  42:/usr/include/c++/11/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/11/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/11/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/11/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/11/bits/stl_construct.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/11/bits/stl_construct.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/11/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/11/bits/stl_construct.h ****  */
  50:/usr/include/c++/11/bits/stl_construct.h **** 
  51:/usr/include/c++/11/bits/stl_construct.h **** /** @file bits/stl_construct.h
  52:/usr/include/c++/11/bits/stl_construct.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/11/bits/stl_construct.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:/usr/include/c++/11/bits/stl_construct.h ****  */
  55:/usr/include/c++/11/bits/stl_construct.h **** 
  56:/usr/include/c++/11/bits/stl_construct.h **** #ifndef _STL_CONSTRUCT_H
  57:/usr/include/c++/11/bits/stl_construct.h **** #define _STL_CONSTRUCT_H 1
  58:/usr/include/c++/11/bits/stl_construct.h **** 
  59:/usr/include/c++/11/bits/stl_construct.h **** #include <new>
  60:/usr/include/c++/11/bits/stl_construct.h **** #include <bits/move.h>
  61:/usr/include/c++/11/bits/stl_construct.h **** #include <bits/stl_iterator_base_types.h> // for iterator_traits
  62:/usr/include/c++/11/bits/stl_construct.h **** #include <bits/stl_iterator_base_funcs.h> // for advance
  63:/usr/include/c++/11/bits/stl_construct.h **** 
  64:/usr/include/c++/11/bits/stl_construct.h **** /* This file provides the C++17 functions std::destroy_at, std::destroy, and
  65:/usr/include/c++/11/bits/stl_construct.h ****  * std::destroy_n, and the C++20 function std::construct_at.
  66:/usr/include/c++/11/bits/stl_construct.h ****  * It also provides std::_Construct, std::_Destroy,and std::_Destroy_n functions
  67:/usr/include/c++/11/bits/stl_construct.h ****  * which are defined in all standard modes and so can be used in C++98-14 code.
  68:/usr/include/c++/11/bits/stl_construct.h ****  * The _Destroy functions will dispatch to destroy_at during constant
  69:/usr/include/c++/11/bits/stl_construct.h ****  * evaluation, because calls to that function are intercepted by the compiler
  70:/usr/include/c++/11/bits/stl_construct.h ****  * to allow use in constant expressions.
  71:/usr/include/c++/11/bits/stl_construct.h ****  */
  72:/usr/include/c++/11/bits/stl_construct.h **** 
  73:/usr/include/c++/11/bits/stl_construct.h **** namespace std _GLIBCXX_VISIBILITY(default)
  74:/usr/include/c++/11/bits/stl_construct.h **** {
  75:/usr/include/c++/11/bits/stl_construct.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  76:/usr/include/c++/11/bits/stl_construct.h **** 
  77:/usr/include/c++/11/bits/stl_construct.h **** #if __cplusplus >= 201703L
  78:/usr/include/c++/11/bits/stl_construct.h ****   template <typename _Tp>
  79:/usr/include/c++/11/bits/stl_construct.h ****     _GLIBCXX20_CONSTEXPR inline void
  80:/usr/include/c++/11/bits/stl_construct.h ****     destroy_at(_Tp* __location)
  81:/usr/include/c++/11/bits/stl_construct.h ****     {
  82:/usr/include/c++/11/bits/stl_construct.h ****       if constexpr (__cplusplus > 201703L && is_array_v<_Tp>)
  83:/usr/include/c++/11/bits/stl_construct.h **** 	{
  84:/usr/include/c++/11/bits/stl_construct.h **** 	  for (auto& __x : *__location)
  85:/usr/include/c++/11/bits/stl_construct.h **** 	    std::destroy_at(std::__addressof(__x));
  86:/usr/include/c++/11/bits/stl_construct.h **** 	}
  87:/usr/include/c++/11/bits/stl_construct.h ****       else
  88:/usr/include/c++/11/bits/stl_construct.h **** 	__location->~_Tp();
  89:/usr/include/c++/11/bits/stl_construct.h ****     }
  90:/usr/include/c++/11/bits/stl_construct.h **** 
  91:/usr/include/c++/11/bits/stl_construct.h **** #if __cplusplus >= 202002L
  92:/usr/include/c++/11/bits/stl_construct.h ****   template<typename _Tp, typename... _Args>
  93:/usr/include/c++/11/bits/stl_construct.h ****     constexpr auto
  94:/usr/include/c++/11/bits/stl_construct.h ****     construct_at(_Tp* __location, _Args&&... __args)
  95:/usr/include/c++/11/bits/stl_construct.h ****     noexcept(noexcept(::new((void*)0) _Tp(std::declval<_Args>()...)))
  96:/usr/include/c++/11/bits/stl_construct.h ****     -> decltype(::new((void*)0) _Tp(std::declval<_Args>()...))
  97:/usr/include/c++/11/bits/stl_construct.h ****     { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
  98:/usr/include/c++/11/bits/stl_construct.h **** #endif // C++20
  99:/usr/include/c++/11/bits/stl_construct.h **** #endif// C++17
 100:/usr/include/c++/11/bits/stl_construct.h **** 
 101:/usr/include/c++/11/bits/stl_construct.h ****   /**
 102:/usr/include/c++/11/bits/stl_construct.h ****    * Constructs an object in existing memory by invoking an allocated
 103:/usr/include/c++/11/bits/stl_construct.h ****    * object's constructor with an initializer.
 104:/usr/include/c++/11/bits/stl_construct.h ****    */
 105:/usr/include/c++/11/bits/stl_construct.h **** #if __cplusplus >= 201103L
 106:/usr/include/c++/11/bits/stl_construct.h ****   template<typename _Tp, typename... _Args>
 107:/usr/include/c++/11/bits/stl_construct.h ****     _GLIBCXX20_CONSTEXPR
 108:/usr/include/c++/11/bits/stl_construct.h ****     inline void
 109:/usr/include/c++/11/bits/stl_construct.h ****     _Construct(_Tp* __p, _Args&&... __args)
 110:/usr/include/c++/11/bits/stl_construct.h ****     {
 111:/usr/include/c++/11/bits/stl_construct.h **** #if __cplusplus >= 202002L && __has_builtin(__builtin_is_constant_evaluated)
 112:/usr/include/c++/11/bits/stl_construct.h ****       if (__builtin_is_constant_evaluated())
 113:/usr/include/c++/11/bits/stl_construct.h **** 	{
 114:/usr/include/c++/11/bits/stl_construct.h **** 	  // Allow std::_Construct to be used in constant expressions.
 115:/usr/include/c++/11/bits/stl_construct.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 116:/usr/include/c++/11/bits/stl_construct.h **** 	  return;
 117:/usr/include/c++/11/bits/stl_construct.h **** 	}
 118:/usr/include/c++/11/bits/stl_construct.h **** #endif
 119:/usr/include/c++/11/bits/stl_construct.h ****       ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...);
 120:/usr/include/c++/11/bits/stl_construct.h ****     }
 121:/usr/include/c++/11/bits/stl_construct.h **** #else
 122:/usr/include/c++/11/bits/stl_construct.h ****   template<typename _T1, typename _T2>
 123:/usr/include/c++/11/bits/stl_construct.h ****     inline void
 124:/usr/include/c++/11/bits/stl_construct.h ****     _Construct(_T1* __p, const _T2& __value)
 125:/usr/include/c++/11/bits/stl_construct.h ****     {
 126:/usr/include/c++/11/bits/stl_construct.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 127:/usr/include/c++/11/bits/stl_construct.h ****       // 402. wrong new expression in [some_]allocator::construct
 128:/usr/include/c++/11/bits/stl_construct.h ****       ::new(static_cast<void*>(__p)) _T1(__value);
 129:/usr/include/c++/11/bits/stl_construct.h ****     }
 130:/usr/include/c++/11/bits/stl_construct.h **** #endif
 131:/usr/include/c++/11/bits/stl_construct.h **** 
 132:/usr/include/c++/11/bits/stl_construct.h ****   template<typename _T1>
 133:/usr/include/c++/11/bits/stl_construct.h ****     inline void
 134:/usr/include/c++/11/bits/stl_construct.h ****     _Construct_novalue(_T1* __p)
 135:/usr/include/c++/11/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1; }
 136:/usr/include/c++/11/bits/stl_construct.h **** 
 137:/usr/include/c++/11/bits/stl_construct.h ****   template<typename _ForwardIterator>
 138:/usr/include/c++/11/bits/stl_construct.h ****     _GLIBCXX20_CONSTEXPR void
 139:/usr/include/c++/11/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last);
 140:/usr/include/c++/11/bits/stl_construct.h **** 
 141:/usr/include/c++/11/bits/stl_construct.h ****   /**
 142:/usr/include/c++/11/bits/stl_construct.h ****    * Destroy the object pointed to by a pointer type.
 143:/usr/include/c++/11/bits/stl_construct.h ****    */
 144:/usr/include/c++/11/bits/stl_construct.h ****   template<typename _Tp>
 145:/usr/include/c++/11/bits/stl_construct.h ****     _GLIBCXX14_CONSTEXPR inline void
 146:/usr/include/c++/11/bits/stl_construct.h ****     _Destroy(_Tp* __pointer)
 147:/usr/include/c++/11/bits/stl_construct.h ****     {
 148:/usr/include/c++/11/bits/stl_construct.h **** #if __cplusplus > 201703L
 149:/usr/include/c++/11/bits/stl_construct.h ****       std::destroy_at(__pointer);
 150:/usr/include/c++/11/bits/stl_construct.h **** #else
 151:/usr/include/c++/11/bits/stl_construct.h ****       __pointer->~_Tp();
 152:/usr/include/c++/11/bits/stl_construct.h **** #endif
 153:/usr/include/c++/11/bits/stl_construct.h ****     }
 154:/usr/include/c++/11/bits/stl_construct.h **** 
 155:/usr/include/c++/11/bits/stl_construct.h ****   template<bool>
 156:/usr/include/c++/11/bits/stl_construct.h ****     struct _Destroy_aux
 157:/usr/include/c++/11/bits/stl_construct.h ****     {
 158:/usr/include/c++/11/bits/stl_construct.h ****       template<typename _ForwardIterator>
 159:/usr/include/c++/11/bits/stl_construct.h **** 	static _GLIBCXX20_CONSTEXPR void
 160:/usr/include/c++/11/bits/stl_construct.h **** 	__destroy(_ForwardIterator __first, _ForwardIterator __last)
 161:/usr/include/c++/11/bits/stl_construct.h **** 	{
 162:/usr/include/c++/11/bits/stl_construct.h **** 	  for (; __first != __last; ++__first)
 163:/usr/include/c++/11/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 164:/usr/include/c++/11/bits/stl_construct.h **** 	}
 165:/usr/include/c++/11/bits/stl_construct.h ****     };
 166:/usr/include/c++/11/bits/stl_construct.h **** 
 167:/usr/include/c++/11/bits/stl_construct.h ****   template<>
 168:/usr/include/c++/11/bits/stl_construct.h ****     struct _Destroy_aux<true>
 169:/usr/include/c++/11/bits/stl_construct.h ****     {
 170:/usr/include/c++/11/bits/stl_construct.h ****       template<typename _ForwardIterator>
 171:/usr/include/c++/11/bits/stl_construct.h ****         static void
 172:/usr/include/c++/11/bits/stl_construct.h ****         __destroy(_ForwardIterator, _ForwardIterator) { }
 173:/usr/include/c++/11/bits/stl_construct.h ****     };
 174:/usr/include/c++/11/bits/stl_construct.h **** 
 175:/usr/include/c++/11/bits/stl_construct.h ****   /**
 176:/usr/include/c++/11/bits/stl_construct.h ****    * Destroy a range of objects.  If the value_type of the object has
 177:/usr/include/c++/11/bits/stl_construct.h ****    * a trivial destructor, the compiler should optimize all of this
 178:/usr/include/c++/11/bits/stl_construct.h ****    * away, otherwise the objects' destructors must be invoked.
 179:/usr/include/c++/11/bits/stl_construct.h ****    */
 180:/usr/include/c++/11/bits/stl_construct.h ****   template<typename _ForwardIterator>
 181:/usr/include/c++/11/bits/stl_construct.h ****     _GLIBCXX20_CONSTEXPR inline void
 182:/usr/include/c++/11/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 11108              		.loc 12 182 5
 11109              		.cfi_startproc
 11110 0000 F30F1EFA 		endbr64
 11111 0004 55       		pushq	%rbp
 11112              		.cfi_def_cfa_offset 16
 11113              		.cfi_offset 6, -16
 11114 0005 4889E5   		movq	%rsp, %rbp
 11115              		.cfi_def_cfa_register 6
 11116 0008 4883EC10 		subq	$16, %rsp
 11117 000c 48897DF8 		movq	%rdi, -8(%rbp)
 11118 0010 488975F0 		movq	%rsi, -16(%rbp)
 183:/usr/include/c++/11/bits/stl_construct.h ****     {
 184:/usr/include/c++/11/bits/stl_construct.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 185:/usr/include/c++/11/bits/stl_construct.h ****                        _Value_type;
 186:/usr/include/c++/11/bits/stl_construct.h **** #if __cplusplus >= 201103L
 187:/usr/include/c++/11/bits/stl_construct.h ****       // A deleted destructor is trivial, this ensures we reject such types:
 188:/usr/include/c++/11/bits/stl_construct.h ****       static_assert(is_destructible<_Value_type>::value,
 189:/usr/include/c++/11/bits/stl_construct.h **** 		    "value type is destructible");
 190:/usr/include/c++/11/bits/stl_construct.h **** #endif
 191:/usr/include/c++/11/bits/stl_construct.h **** #if __cplusplus > 201703L && defined __cpp_lib_is_constant_evaluated
 192:/usr/include/c++/11/bits/stl_construct.h ****       if (std::is_constant_evaluated())
 193:/usr/include/c++/11/bits/stl_construct.h **** 	return _Destroy_aux<false>::__destroy(__first, __last);
 194:/usr/include/c++/11/bits/stl_construct.h **** #endif
 195:/usr/include/c++/11/bits/stl_construct.h ****       std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
 196:/usr/include/c++/11/bits/stl_construct.h **** 	__destroy(__first, __last);
 11119              		.loc 12 196 11
 11120 0014 488B55F0 		movq	-16(%rbp), %rdx
 11121 0018 488B45F8 		movq	-8(%rbp), %rax
 11122 001c 4889D6   		movq	%rdx, %rsi
 11123 001f 4889C7   		movq	%rax, %rdi
 11124 0022 E8000000 		call	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_
 11124      00
 197:/usr/include/c++/11/bits/stl_construct.h ****     }
 11125              		.loc 12 197 5
 11126 0027 90       		nop
 11127 0028 C9       		leave
 11128              		.cfi_def_cfa 7, 8
 11129 0029 C3       		ret
 11130              		.cfi_endproc
 11131              	.LFE1694:
 11133              		.section	.text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev,"axG",@progbits,_
 11134              		.align 2
 11135              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev
 11137              	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev:
 11138              	.LFB1696:
 11139              		.file 13 "/usr/include/c++/11/ext/new_allocator.h"
   1:/usr/include/c++/11/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:/usr/include/c++/11/ext/new_allocator.h **** 
   3:/usr/include/c++/11/ext/new_allocator.h **** // Copyright (C) 2001-2021 Free Software Foundation, Inc.
   4:/usr/include/c++/11/ext/new_allocator.h **** //
   5:/usr/include/c++/11/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/11/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/11/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/11/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/11/ext/new_allocator.h **** // any later version.
  10:/usr/include/c++/11/ext/new_allocator.h **** 
  11:/usr/include/c++/11/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/11/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/11/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/11/ext/new_allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/11/ext/new_allocator.h **** 
  16:/usr/include/c++/11/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/11/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/11/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/11/ext/new_allocator.h **** 
  20:/usr/include/c++/11/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/11/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/11/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/11/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/11/ext/new_allocator.h **** 
  25:/usr/include/c++/11/ext/new_allocator.h **** /** @file ext/new_allocator.h
  26:/usr/include/c++/11/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/11/ext/new_allocator.h ****  */
  28:/usr/include/c++/11/ext/new_allocator.h **** 
  29:/usr/include/c++/11/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:/usr/include/c++/11/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:/usr/include/c++/11/ext/new_allocator.h **** 
  32:/usr/include/c++/11/ext/new_allocator.h **** #include <bits/c++config.h>
  33:/usr/include/c++/11/ext/new_allocator.h **** #include <new>
  34:/usr/include/c++/11/ext/new_allocator.h **** #include <bits/functexcept.h>
  35:/usr/include/c++/11/ext/new_allocator.h **** #include <bits/move.h>
  36:/usr/include/c++/11/ext/new_allocator.h **** #if __cplusplus >= 201103L
  37:/usr/include/c++/11/ext/new_allocator.h **** #include <type_traits>
  38:/usr/include/c++/11/ext/new_allocator.h **** #endif
  39:/usr/include/c++/11/ext/new_allocator.h **** 
  40:/usr/include/c++/11/ext/new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:/usr/include/c++/11/ext/new_allocator.h **** {
  42:/usr/include/c++/11/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/usr/include/c++/11/ext/new_allocator.h **** 
  44:/usr/include/c++/11/ext/new_allocator.h ****   /**
  45:/usr/include/c++/11/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per C++03 [20.4.1].
  46:/usr/include/c++/11/ext/new_allocator.h ****    *  @ingroup allocators
  47:/usr/include/c++/11/ext/new_allocator.h ****    *
  48:/usr/include/c++/11/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  49:/usr/include/c++/11/ext/new_allocator.h ****    *    - all allocation calls operator new
  50:/usr/include/c++/11/ext/new_allocator.h ****    *    - all deallocation calls operator delete
  51:/usr/include/c++/11/ext/new_allocator.h ****    *
  52:/usr/include/c++/11/ext/new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  53:/usr/include/c++/11/ext/new_allocator.h ****    */
  54:/usr/include/c++/11/ext/new_allocator.h ****   template<typename _Tp>
  55:/usr/include/c++/11/ext/new_allocator.h ****     class new_allocator
  56:/usr/include/c++/11/ext/new_allocator.h ****     {
  57:/usr/include/c++/11/ext/new_allocator.h ****     public:
  58:/usr/include/c++/11/ext/new_allocator.h ****       typedef _Tp        value_type;
  59:/usr/include/c++/11/ext/new_allocator.h ****       typedef std::size_t     size_type;
  60:/usr/include/c++/11/ext/new_allocator.h ****       typedef std::ptrdiff_t  difference_type;
  61:/usr/include/c++/11/ext/new_allocator.h **** #if __cplusplus <= 201703L
  62:/usr/include/c++/11/ext/new_allocator.h ****       typedef _Tp*       pointer;
  63:/usr/include/c++/11/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  64:/usr/include/c++/11/ext/new_allocator.h ****       typedef _Tp&       reference;
  65:/usr/include/c++/11/ext/new_allocator.h ****       typedef const _Tp& const_reference;
  66:/usr/include/c++/11/ext/new_allocator.h **** 
  67:/usr/include/c++/11/ext/new_allocator.h ****       template<typename _Tp1>
  68:/usr/include/c++/11/ext/new_allocator.h **** 	struct rebind
  69:/usr/include/c++/11/ext/new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  70:/usr/include/c++/11/ext/new_allocator.h **** #endif
  71:/usr/include/c++/11/ext/new_allocator.h **** 
  72:/usr/include/c++/11/ext/new_allocator.h **** #if __cplusplus >= 201103L
  73:/usr/include/c++/11/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  74:/usr/include/c++/11/ext/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  75:/usr/include/c++/11/ext/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  76:/usr/include/c++/11/ext/new_allocator.h **** #endif
  77:/usr/include/c++/11/ext/new_allocator.h **** 
  78:/usr/include/c++/11/ext/new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  79:/usr/include/c++/11/ext/new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:/usr/include/c++/11/ext/new_allocator.h **** 
  81:/usr/include/c++/11/ext/new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  82:/usr/include/c++/11/ext/new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  83:/usr/include/c++/11/ext/new_allocator.h **** 
  84:/usr/include/c++/11/ext/new_allocator.h ****       template<typename _Tp1>
  85:/usr/include/c++/11/ext/new_allocator.h **** 	_GLIBCXX20_CONSTEXPR
  86:/usr/include/c++/11/ext/new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  87:/usr/include/c++/11/ext/new_allocator.h **** 
  88:/usr/include/c++/11/ext/new_allocator.h **** #if __cplusplus <= 201703L
  89:/usr/include/c++/11/ext/new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 11140              		.loc 13 89 7
 11141              		.cfi_startproc
 11142 0000 F30F1EFA 		endbr64
 11143 0004 55       		pushq	%rbp
 11144              		.cfi_def_cfa_offset 16
 11145              		.cfi_offset 6, -16
 11146 0005 4889E5   		movq	%rsp, %rbp
 11147              		.cfi_def_cfa_register 6
 11148 0008 48897DF8 		movq	%rdi, -8(%rbp)
 11149              		.loc 13 89 48
 11150 000c 90       		nop
 11151 000d 5D       		popq	%rbp
 11152              		.cfi_def_cfa 7, 8
 11153 000e C3       		ret
 11154              		.cfi_endproc
 11155              	.LFE1696:
 11157              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED1Ev
 11158              		.set	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED1Ev,_ZN9__gnu_cxx13new_allocato
 11159              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEES2_E10deallocateER
 11160              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEES2_E10deallocateERS3_PS2_m
 11162              	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEES2_E10deallocateERS3_PS2_m:
 11163              	.LFB1698:
 11164              		.file 14 "/usr/include/c++/11/ext/alloc_traits.h"
   1:/usr/include/c++/11/ext/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/usr/include/c++/11/ext/alloc_traits.h **** 
   3:/usr/include/c++/11/ext/alloc_traits.h **** // Copyright (C) 2011-2021 Free Software Foundation, Inc.
   4:/usr/include/c++/11/ext/alloc_traits.h **** //
   5:/usr/include/c++/11/ext/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/11/ext/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/11/ext/alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/11/ext/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/11/ext/alloc_traits.h **** // any later version.
  10:/usr/include/c++/11/ext/alloc_traits.h **** 
  11:/usr/include/c++/11/ext/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/11/ext/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/11/ext/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/11/ext/alloc_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/11/ext/alloc_traits.h **** 
  16:/usr/include/c++/11/ext/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/11/ext/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/11/ext/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/11/ext/alloc_traits.h **** 
  20:/usr/include/c++/11/ext/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/11/ext/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/11/ext/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/11/ext/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/11/ext/alloc_traits.h **** 
  25:/usr/include/c++/11/ext/alloc_traits.h **** /** @file ext/alloc_traits.h
  26:/usr/include/c++/11/ext/alloc_traits.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/11/ext/alloc_traits.h ****  */
  28:/usr/include/c++/11/ext/alloc_traits.h **** 
  29:/usr/include/c++/11/ext/alloc_traits.h **** #ifndef _EXT_ALLOC_TRAITS_H
  30:/usr/include/c++/11/ext/alloc_traits.h **** #define _EXT_ALLOC_TRAITS_H 1
  31:/usr/include/c++/11/ext/alloc_traits.h **** 
  32:/usr/include/c++/11/ext/alloc_traits.h **** #pragma GCC system_header
  33:/usr/include/c++/11/ext/alloc_traits.h **** 
  34:/usr/include/c++/11/ext/alloc_traits.h **** # include <bits/alloc_traits.h>
  35:/usr/include/c++/11/ext/alloc_traits.h **** #if __cplusplus < 201103L
  36:/usr/include/c++/11/ext/alloc_traits.h **** # include <bits/allocator.h>  // for __alloc_swap
  37:/usr/include/c++/11/ext/alloc_traits.h **** #endif
  38:/usr/include/c++/11/ext/alloc_traits.h **** 
  39:/usr/include/c++/11/ext/alloc_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  40:/usr/include/c++/11/ext/alloc_traits.h **** {
  41:/usr/include/c++/11/ext/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  42:/usr/include/c++/11/ext/alloc_traits.h **** 
  43:/usr/include/c++/11/ext/alloc_traits.h **** /**
  44:/usr/include/c++/11/ext/alloc_traits.h ****  * @brief  Uniform interface to C++98 and C++11 allocators.
  45:/usr/include/c++/11/ext/alloc_traits.h ****  * @ingroup allocators
  46:/usr/include/c++/11/ext/alloc_traits.h **** */
  47:/usr/include/c++/11/ext/alloc_traits.h **** template<typename _Alloc, typename = typename _Alloc::value_type>
  48:/usr/include/c++/11/ext/alloc_traits.h ****   struct __alloc_traits
  49:/usr/include/c++/11/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  50:/usr/include/c++/11/ext/alloc_traits.h ****   : std::allocator_traits<_Alloc>
  51:/usr/include/c++/11/ext/alloc_traits.h **** #endif
  52:/usr/include/c++/11/ext/alloc_traits.h ****   {
  53:/usr/include/c++/11/ext/alloc_traits.h ****     typedef _Alloc allocator_type;
  54:/usr/include/c++/11/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  55:/usr/include/c++/11/ext/alloc_traits.h ****     typedef std::allocator_traits<_Alloc>           _Base_type;
  56:/usr/include/c++/11/ext/alloc_traits.h ****     typedef typename _Base_type::value_type         value_type;
  57:/usr/include/c++/11/ext/alloc_traits.h ****     typedef typename _Base_type::pointer            pointer;
  58:/usr/include/c++/11/ext/alloc_traits.h ****     typedef typename _Base_type::const_pointer      const_pointer;
  59:/usr/include/c++/11/ext/alloc_traits.h ****     typedef typename _Base_type::size_type          size_type;
  60:/usr/include/c++/11/ext/alloc_traits.h ****     typedef typename _Base_type::difference_type    difference_type;
  61:/usr/include/c++/11/ext/alloc_traits.h ****     // C++11 allocators do not define reference or const_reference
  62:/usr/include/c++/11/ext/alloc_traits.h ****     typedef value_type&                             reference;
  63:/usr/include/c++/11/ext/alloc_traits.h ****     typedef const value_type&                       const_reference;
  64:/usr/include/c++/11/ext/alloc_traits.h ****     using _Base_type::allocate;
  65:/usr/include/c++/11/ext/alloc_traits.h ****     using _Base_type::deallocate;
  66:/usr/include/c++/11/ext/alloc_traits.h ****     using _Base_type::construct;
  67:/usr/include/c++/11/ext/alloc_traits.h ****     using _Base_type::destroy;
  68:/usr/include/c++/11/ext/alloc_traits.h ****     using _Base_type::max_size;
  69:/usr/include/c++/11/ext/alloc_traits.h **** 
  70:/usr/include/c++/11/ext/alloc_traits.h ****   private:
  71:/usr/include/c++/11/ext/alloc_traits.h ****     template<typename _Ptr>
  72:/usr/include/c++/11/ext/alloc_traits.h ****       using __is_custom_pointer
  73:/usr/include/c++/11/ext/alloc_traits.h **** 	= std::__and_<std::is_same<pointer, _Ptr>,
  74:/usr/include/c++/11/ext/alloc_traits.h **** 		      std::__not_<std::is_pointer<_Ptr>>>;
  75:/usr/include/c++/11/ext/alloc_traits.h **** 
  76:/usr/include/c++/11/ext/alloc_traits.h ****   public:
  77:/usr/include/c++/11/ext/alloc_traits.h ****     // overload construct for non-standard pointer types
  78:/usr/include/c++/11/ext/alloc_traits.h ****     template<typename _Ptr, typename... _Args>
  79:/usr/include/c++/11/ext/alloc_traits.h ****       static _GLIBCXX14_CONSTEXPR
  80:/usr/include/c++/11/ext/alloc_traits.h ****       std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
  81:/usr/include/c++/11/ext/alloc_traits.h ****       construct(_Alloc& __a, _Ptr __p, _Args&&... __args)
  82:/usr/include/c++/11/ext/alloc_traits.h ****       noexcept(noexcept(_Base_type::construct(__a, std::__to_address(__p),
  83:/usr/include/c++/11/ext/alloc_traits.h **** 					      std::forward<_Args>(__args)...)))
  84:/usr/include/c++/11/ext/alloc_traits.h ****       {
  85:/usr/include/c++/11/ext/alloc_traits.h **** 	_Base_type::construct(__a, std::__to_address(__p),
  86:/usr/include/c++/11/ext/alloc_traits.h **** 			      std::forward<_Args>(__args)...);
  87:/usr/include/c++/11/ext/alloc_traits.h ****       }
  88:/usr/include/c++/11/ext/alloc_traits.h **** 
  89:/usr/include/c++/11/ext/alloc_traits.h ****     // overload destroy for non-standard pointer types
  90:/usr/include/c++/11/ext/alloc_traits.h ****     template<typename _Ptr>
  91:/usr/include/c++/11/ext/alloc_traits.h ****       static _GLIBCXX14_CONSTEXPR
  92:/usr/include/c++/11/ext/alloc_traits.h ****       std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
  93:/usr/include/c++/11/ext/alloc_traits.h ****       destroy(_Alloc& __a, _Ptr __p)
  94:/usr/include/c++/11/ext/alloc_traits.h ****       noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
  95:/usr/include/c++/11/ext/alloc_traits.h ****       { _Base_type::destroy(__a, std::__to_address(__p)); }
  96:/usr/include/c++/11/ext/alloc_traits.h **** 
  97:/usr/include/c++/11/ext/alloc_traits.h ****     static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
  98:/usr/include/c++/11/ext/alloc_traits.h ****     { return _Base_type::select_on_container_copy_construction(__a); }
  99:/usr/include/c++/11/ext/alloc_traits.h **** 
 100:/usr/include/c++/11/ext/alloc_traits.h ****     static _GLIBCXX14_CONSTEXPR void _S_on_swap(_Alloc& __a, _Alloc& __b)
 101:/usr/include/c++/11/ext/alloc_traits.h ****     { std::__alloc_on_swap(__a, __b); }
 102:/usr/include/c++/11/ext/alloc_traits.h **** 
 103:/usr/include/c++/11/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_copy_assign()
 104:/usr/include/c++/11/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_copy_assignment::value; }
 105:/usr/include/c++/11/ext/alloc_traits.h **** 
 106:/usr/include/c++/11/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_move_assign()
 107:/usr/include/c++/11/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_move_assignment::value; }
 108:/usr/include/c++/11/ext/alloc_traits.h **** 
 109:/usr/include/c++/11/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_swap()
 110:/usr/include/c++/11/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_swap::value; }
 111:/usr/include/c++/11/ext/alloc_traits.h **** 
 112:/usr/include/c++/11/ext/alloc_traits.h ****     static constexpr bool _S_always_equal()
 113:/usr/include/c++/11/ext/alloc_traits.h ****     { return _Base_type::is_always_equal::value; }
 114:/usr/include/c++/11/ext/alloc_traits.h **** 
 115:/usr/include/c++/11/ext/alloc_traits.h ****     static constexpr bool _S_nothrow_move()
 116:/usr/include/c++/11/ext/alloc_traits.h ****     { return _S_propagate_on_move_assign() || _S_always_equal(); }
 117:/usr/include/c++/11/ext/alloc_traits.h **** 
 118:/usr/include/c++/11/ext/alloc_traits.h ****     template<typename _Tp>
 119:/usr/include/c++/11/ext/alloc_traits.h ****       struct rebind
 120:/usr/include/c++/11/ext/alloc_traits.h ****       { typedef typename _Base_type::template rebind_alloc<_Tp> other; };
 121:/usr/include/c++/11/ext/alloc_traits.h **** #else // ! C++11
 122:/usr/include/c++/11/ext/alloc_traits.h **** 
 123:/usr/include/c++/11/ext/alloc_traits.h ****     typedef typename _Alloc::pointer                pointer;
 124:/usr/include/c++/11/ext/alloc_traits.h ****     typedef typename _Alloc::const_pointer          const_pointer;
 125:/usr/include/c++/11/ext/alloc_traits.h ****     typedef typename _Alloc::value_type             value_type;
 126:/usr/include/c++/11/ext/alloc_traits.h ****     typedef typename _Alloc::reference              reference;
 127:/usr/include/c++/11/ext/alloc_traits.h ****     typedef typename _Alloc::const_reference        const_reference;
 128:/usr/include/c++/11/ext/alloc_traits.h ****     typedef typename _Alloc::size_type              size_type;
 129:/usr/include/c++/11/ext/alloc_traits.h ****     typedef typename _Alloc::difference_type        difference_type;
 130:/usr/include/c++/11/ext/alloc_traits.h **** 
 131:/usr/include/c++/11/ext/alloc_traits.h ****     _GLIBCXX_NODISCARD static pointer
 132:/usr/include/c++/11/ext/alloc_traits.h ****     allocate(_Alloc& __a, size_type __n)
 133:/usr/include/c++/11/ext/alloc_traits.h ****     { return __a.allocate(__n); }
 134:/usr/include/c++/11/ext/alloc_traits.h **** 
 135:/usr/include/c++/11/ext/alloc_traits.h ****     template<typename _Hint>
 136:/usr/include/c++/11/ext/alloc_traits.h ****       _GLIBCXX_NODISCARD static pointer
 137:/usr/include/c++/11/ext/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, _Hint __hint)
 138:/usr/include/c++/11/ext/alloc_traits.h ****       { return __a.allocate(__n, __hint); }
 139:/usr/include/c++/11/ext/alloc_traits.h **** 
 140:/usr/include/c++/11/ext/alloc_traits.h ****     static void deallocate(_Alloc& __a, pointer __p, size_type __n)
 11165              		.loc 14 140 17
 11166              		.cfi_startproc
 11167 0000 F30F1EFA 		endbr64
 11168 0004 55       		pushq	%rbp
 11169              		.cfi_def_cfa_offset 16
 11170              		.cfi_offset 6, -16
 11171 0005 4889E5   		movq	%rsp, %rbp
 11172              		.cfi_def_cfa_register 6
 11173 0008 4883EC20 		subq	$32, %rsp
 11174 000c 48897DF8 		movq	%rdi, -8(%rbp)
 11175 0010 488975F0 		movq	%rsi, -16(%rbp)
 11176 0014 488955E8 		movq	%rdx, -24(%rbp)
 141:/usr/include/c++/11/ext/alloc_traits.h ****     { __a.deallocate(__p, __n); }
 11177              		.loc 14 141 21
 11178 0018 488B55E8 		movq	-24(%rbp), %rdx
 11179 001c 488B4DF0 		movq	-16(%rbp), %rcx
 11180 0020 488B45F8 		movq	-8(%rbp), %rax
 11181 0024 4889CE   		movq	%rcx, %rsi
 11182 0027 4889C7   		movq	%rax, %rdi
 11183 002a E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m
 11183      00
 11184              		.loc 14 141 33
 11185 002f 90       		nop
 11186 0030 C9       		leave
 11187              		.cfi_def_cfa 7, 8
 11188 0031 C3       		ret
 11189              		.cfi_endproc
 11190              	.LFE1698:
 11192              		.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_,"axG",
 11193              		.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_
 11195              	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_:
 11196              	.LFB1699:
 160:/usr/include/c++/11/bits/stl_construct.h **** 	{
 11197              		.loc 12 160 2
 11198              		.cfi_startproc
 11199 0000 F30F1EFA 		endbr64
 11200 0004 55       		pushq	%rbp
 11201              		.cfi_def_cfa_offset 16
 11202              		.cfi_offset 6, -16
 11203 0005 4889E5   		movq	%rsp, %rbp
 11204              		.cfi_def_cfa_register 6
 11205 0008 4883EC10 		subq	$16, %rsp
 11206 000c 48897DF8 		movq	%rdi, -8(%rbp)
 11207 0010 488975F0 		movq	%rsi, -16(%rbp)
 162:/usr/include/c++/11/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 11208              		.loc 12 162 4
 11209 0014 EB19     		jmp	.L553
 11210              	.L554:
 163:/usr/include/c++/11/bits/stl_construct.h **** 	}
 11211              		.loc 12 163 19 discriminator 2
 11212 0016 488B45F8 		movq	-8(%rbp), %rax
 11213 001a 4889C7   		movq	%rax, %rdi
 11214 001d E8000000 		call	_ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_
 11214      00
 11215 0022 4889C7   		movq	%rax, %rdi
 11216 0025 E8000000 		call	_ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_
 11216      00
 162:/usr/include/c++/11/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 11217              		.loc 12 162 4 discriminator 2
 11218 002a 48836DF8 		subq	$-128, -8(%rbp)
 11218      80
 11219              	.L553:
 162:/usr/include/c++/11/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 11220              		.loc 12 162 19 discriminator 1
 11221 002f 488B45F8 		movq	-8(%rbp), %rax
 11222 0033 483B45F0 		cmpq	-16(%rbp), %rax
 11223 0037 75DD     		jne	.L554
 164:/usr/include/c++/11/bits/stl_construct.h ****     };
 11224              		.loc 12 164 2
 11225 0039 90       		nop
 11226 003a 90       		nop
 11227 003b C9       		leave
 11228              		.cfi_def_cfa 7, 8
 11229 003c C3       		ret
 11230              		.cfi_endproc
 11231              	.LFE1699:
 11233              		.section	.text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m,"ax
 11234              		.align 2
 11235              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m
 11237              	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m:
 11238              	.LFB1700:
  90:/usr/include/c++/11/ext/new_allocator.h **** 
  91:/usr/include/c++/11/ext/new_allocator.h ****       pointer
  92:/usr/include/c++/11/ext/new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  93:/usr/include/c++/11/ext/new_allocator.h ****       { return std::__addressof(__x); }
  94:/usr/include/c++/11/ext/new_allocator.h **** 
  95:/usr/include/c++/11/ext/new_allocator.h ****       const_pointer
  96:/usr/include/c++/11/ext/new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  97:/usr/include/c++/11/ext/new_allocator.h ****       { return std::__addressof(__x); }
  98:/usr/include/c++/11/ext/new_allocator.h **** #endif
  99:/usr/include/c++/11/ext/new_allocator.h **** 
 100:/usr/include/c++/11/ext/new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
 101:/usr/include/c++/11/ext/new_allocator.h ****       // about what the return value is when __n == 0.
 102:/usr/include/c++/11/ext/new_allocator.h ****       _GLIBCXX_NODISCARD _Tp*
 103:/usr/include/c++/11/ext/new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 104:/usr/include/c++/11/ext/new_allocator.h ****       {
 105:/usr/include/c++/11/ext/new_allocator.h **** #if __cplusplus >= 201103L
 106:/usr/include/c++/11/ext/new_allocator.h **** 	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
 107:/usr/include/c++/11/ext/new_allocator.h **** 	 // 3308. std::allocator<void>().allocate(n)
 108:/usr/include/c++/11/ext/new_allocator.h **** 	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
 109:/usr/include/c++/11/ext/new_allocator.h **** #endif
 110:/usr/include/c++/11/ext/new_allocator.h **** 
 111:/usr/include/c++/11/ext/new_allocator.h **** 	if (__builtin_expect(__n > this->_M_max_size(), false))
 112:/usr/include/c++/11/ext/new_allocator.h **** 	  {
 113:/usr/include/c++/11/ext/new_allocator.h **** 	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
 114:/usr/include/c++/11/ext/new_allocator.h **** 	    // 3190. allocator::allocate sometimes returns too little storage
 115:/usr/include/c++/11/ext/new_allocator.h **** 	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
 116:/usr/include/c++/11/ext/new_allocator.h **** 	      std::__throw_bad_array_new_length();
 117:/usr/include/c++/11/ext/new_allocator.h **** 	    std::__throw_bad_alloc();
 118:/usr/include/c++/11/ext/new_allocator.h **** 	  }
 119:/usr/include/c++/11/ext/new_allocator.h **** 
 120:/usr/include/c++/11/ext/new_allocator.h **** #if __cpp_aligned_new
 121:/usr/include/c++/11/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 122:/usr/include/c++/11/ext/new_allocator.h **** 	  {
 123:/usr/include/c++/11/ext/new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 124:/usr/include/c++/11/ext/new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 125:/usr/include/c++/11/ext/new_allocator.h **** 	  }
 126:/usr/include/c++/11/ext/new_allocator.h **** #endif
 127:/usr/include/c++/11/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 128:/usr/include/c++/11/ext/new_allocator.h ****       }
 129:/usr/include/c++/11/ext/new_allocator.h **** 
 130:/usr/include/c++/11/ext/new_allocator.h ****       // __p is not permitted to be a null pointer.
 131:/usr/include/c++/11/ext/new_allocator.h ****       void
 132:/usr/include/c++/11/ext/new_allocator.h ****       deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
 11239              		.loc 13 132 7
 11240              		.cfi_startproc
 11241 0000 F30F1EFA 		endbr64
 11242 0004 55       		pushq	%rbp
 11243              		.cfi_def_cfa_offset 16
 11244              		.cfi_offset 6, -16
 11245 0005 4889E5   		movq	%rsp, %rbp
 11246              		.cfi_def_cfa_register 6
 11247 0008 4883EC20 		subq	$32, %rsp
 11248 000c 48897DF8 		movq	%rdi, -8(%rbp)
 11249 0010 488975F0 		movq	%rsi, -16(%rbp)
 11250 0014 488955E8 		movq	%rdx, -24(%rbp)
 133:/usr/include/c++/11/ext/new_allocator.h ****       {
 134:/usr/include/c++/11/ext/new_allocator.h **** #if __cpp_aligned_new
 135:/usr/include/c++/11/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 136:/usr/include/c++/11/ext/new_allocator.h **** 	  {
 137:/usr/include/c++/11/ext/new_allocator.h **** 	    ::operator delete(__p,
 138:/usr/include/c++/11/ext/new_allocator.h **** # if __cpp_sized_deallocation
 139:/usr/include/c++/11/ext/new_allocator.h **** 			      __t * sizeof(_Tp),
 140:/usr/include/c++/11/ext/new_allocator.h **** # endif
 141:/usr/include/c++/11/ext/new_allocator.h **** 			      std::align_val_t(alignof(_Tp)));
 142:/usr/include/c++/11/ext/new_allocator.h **** 	    return;
 143:/usr/include/c++/11/ext/new_allocator.h **** 	  }
 144:/usr/include/c++/11/ext/new_allocator.h **** #endif
 145:/usr/include/c++/11/ext/new_allocator.h **** 	::operator delete(__p
 11251              		.loc 13 145 19
 11252 0018 488B45F0 		movq	-16(%rbp), %rax
 11253 001c 4889C7   		movq	%rax, %rdi
 11254 001f E8000000 		call	_ZdlPv@PLT
 11254      00
 146:/usr/include/c++/11/ext/new_allocator.h **** #if __cpp_sized_deallocation
 147:/usr/include/c++/11/ext/new_allocator.h **** 			  , __t * sizeof(_Tp)
 148:/usr/include/c++/11/ext/new_allocator.h **** #endif
 149:/usr/include/c++/11/ext/new_allocator.h **** 			 );
 150:/usr/include/c++/11/ext/new_allocator.h ****       }
 11255              		.loc 13 150 7
 11256 0024 90       		nop
 11257 0025 C9       		leave
 11258              		.cfi_def_cfa 7, 8
 11259 0026 C3       		ret
 11260              		.cfi_endproc
 11261              	.LFE1700:
 11263              		.section	.text._ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_,"axG",@progbits,_ZSt11__a
 11264              		.weak	_ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_
 11266              	_ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_:
 11267              	.LFB1701:
 11268              		.file 15 "/usr/include/c++/11/bits/move.h"
   1:/usr/include/c++/11/bits/move.h **** // Move, forward and identity for C++11 + swap -*- C++ -*-
   2:/usr/include/c++/11/bits/move.h **** 
   3:/usr/include/c++/11/bits/move.h **** // Copyright (C) 2007-2021 Free Software Foundation, Inc.
   4:/usr/include/c++/11/bits/move.h **** //
   5:/usr/include/c++/11/bits/move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/11/bits/move.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/11/bits/move.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/11/bits/move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/11/bits/move.h **** // any later version.
  10:/usr/include/c++/11/bits/move.h **** 
  11:/usr/include/c++/11/bits/move.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/11/bits/move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/11/bits/move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/11/bits/move.h **** // GNU General Public License for more details.
  15:/usr/include/c++/11/bits/move.h **** 
  16:/usr/include/c++/11/bits/move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/11/bits/move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/11/bits/move.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/11/bits/move.h **** 
  20:/usr/include/c++/11/bits/move.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/11/bits/move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/11/bits/move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/11/bits/move.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/11/bits/move.h **** 
  25:/usr/include/c++/11/bits/move.h **** /** @file bits/move.h
  26:/usr/include/c++/11/bits/move.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/11/bits/move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:/usr/include/c++/11/bits/move.h ****  */
  29:/usr/include/c++/11/bits/move.h **** 
  30:/usr/include/c++/11/bits/move.h **** #ifndef _MOVE_H
  31:/usr/include/c++/11/bits/move.h **** #define _MOVE_H 1
  32:/usr/include/c++/11/bits/move.h **** 
  33:/usr/include/c++/11/bits/move.h **** #include <bits/c++config.h>
  34:/usr/include/c++/11/bits/move.h **** #if __cplusplus < 201103L
  35:/usr/include/c++/11/bits/move.h **** # include <bits/concept_check.h>
  36:/usr/include/c++/11/bits/move.h **** #endif
  37:/usr/include/c++/11/bits/move.h **** 
  38:/usr/include/c++/11/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  39:/usr/include/c++/11/bits/move.h **** {
  40:/usr/include/c++/11/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  41:/usr/include/c++/11/bits/move.h **** 
  42:/usr/include/c++/11/bits/move.h ****   // Used, in C++03 mode too, by allocators, etc.
  43:/usr/include/c++/11/bits/move.h ****   /**
  44:/usr/include/c++/11/bits/move.h ****    *  @brief Same as C++11 std::addressof
  45:/usr/include/c++/11/bits/move.h ****    *  @ingroup utilities
  46:/usr/include/c++/11/bits/move.h ****    */
  47:/usr/include/c++/11/bits/move.h ****   template<typename _Tp>
  48:/usr/include/c++/11/bits/move.h ****     inline _GLIBCXX_CONSTEXPR _Tp*
  49:/usr/include/c++/11/bits/move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 11269              		.loc 15 49 5
 11270              		.cfi_startproc
 11271 0000 F30F1EFA 		endbr64
 11272 0004 55       		pushq	%rbp
 11273              		.cfi_def_cfa_offset 16
 11274              		.cfi_offset 6, -16
 11275 0005 4889E5   		movq	%rsp, %rbp
 11276              		.cfi_def_cfa_register 6
 11277 0008 48897DF8 		movq	%rdi, -8(%rbp)
  50:/usr/include/c++/11/bits/move.h ****     { return __builtin_addressof(__r); }
 11278              		.loc 15 50 37
 11279 000c 488B45F8 		movq	-8(%rbp), %rax
 11280              		.loc 15 50 40
 11281 0010 5D       		popq	%rbp
 11282              		.cfi_def_cfa 7, 8
 11283 0011 C3       		ret
 11284              		.cfi_endproc
 11285              	.LFE1701:
 11287              		.section	.text._ZN8UnitTest18DeferredTestResultD2Ev,"axG",@progbits,_ZN8UnitTest18DeferredTestResu
 11288              		.align 2
 11289              		.weak	_ZN8UnitTest18DeferredTestResultD2Ev
 11291              	_ZN8UnitTest18DeferredTestResultD2Ev:
 11292              	.LFB1704:
 11293              		.file 16 "../DeferredTestResult.h"
   1:../DeferredTestResult.h **** #ifndef UNITTEST_DEFERREDTESTRESULT_H
   2:../DeferredTestResult.h **** #define UNITTEST_DEFERREDTESTRESULT_H
   3:../DeferredTestResult.h **** 
   4:../DeferredTestResult.h **** #include <string>
   5:../DeferredTestResult.h **** #include <vector>
   6:../DeferredTestResult.h **** 
   7:../DeferredTestResult.h **** namespace UnitTest
   8:../DeferredTestResult.h **** {
   9:../DeferredTestResult.h **** 
  10:../DeferredTestResult.h **** struct DeferredTestResult
 11294              		.loc 16 10 8
 11295              		.cfi_startproc
 11296              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 11297              		.cfi_lsda 0x1b,.LLSDA1704
 11298 0000 F30F1EFA 		endbr64
 11299 0004 55       		pushq	%rbp
 11300              		.cfi_def_cfa_offset 16
 11301              		.cfi_offset 6, -16
 11302 0005 4889E5   		movq	%rsp, %rbp
 11303              		.cfi_def_cfa_register 6
 11304 0008 53       		pushq	%rbx
 11305 0009 4883EC18 		subq	$24, %rsp
 11306              		.cfi_offset 3, -24
 11307 000d 48897DE8 		movq	%rdi, -24(%rbp)
 11308              	.LBB183:
 11309              		.loc 16 10 8
 11310 0011 488B45E8 		movq	-24(%rbp), %rax
 11311 0015 4883C060 		addq	$96, %rax
 11312 0019 4889C7   		movq	%rax, %rdi
 11313              	.LEHB295:
 11314 001c E8000000 		call	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev
 11314      00
 11315              	.LEHE295:
 11316              		.loc 16 10 8 is_stmt 0 discriminator 2
 11317 0021 488B45E8 		movq	-24(%rbp), %rax
 11318 0025 4883C040 		addq	$64, %rax
 11319 0029 4889C7   		movq	%rax, %rdi
 11320              	.LEHB296:
 11321 002c E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 11321      00
 11322              	.LEHE296:
 11323              		.loc 16 10 8 discriminator 4
 11324 0031 488B45E8 		movq	-24(%rbp), %rax
 11325 0035 4883C020 		addq	$32, %rax
 11326 0039 4889C7   		movq	%rax, %rdi
 11327              	.LEHB297:
 11328 003c E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 11328      00
 11329              	.LEHE297:
 11330              		.loc 16 10 8 discriminator 6
 11331 0041 488B45E8 		movq	-24(%rbp), %rax
 11332 0045 4889C7   		movq	%rax, %rdi
 11333              	.LEHB298:
 11334 0048 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 11334      00
 11335              	.LEHE298:
 11336              	.LBE183:
 11337 004d EB50     		jmp	.L565
 11338              	.L562:
 11339 004f F30F1EFA 		endbr64
 11340              	.LBB184:
 11341              		.loc 16 10 8
 11342 0053 4889C3   		movq	%rax, %rbx
 11343 0056 488B45E8 		movq	-24(%rbp), %rax
 11344 005a 4883C040 		addq	$64, %rax
 11345 005e 4889C7   		movq	%rax, %rdi
 11346 0061 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 11346      00
 11347 0066 EB07     		jmp	.L560
 11348              	.L563:
 11349 0068 F30F1EFA 		endbr64
 11350 006c 4889C3   		movq	%rax, %rbx
 11351              	.L560:
 11352              		.loc 16 10 8 discriminator 3
 11353 006f 488B45E8 		movq	-24(%rbp), %rax
 11354 0073 4883C020 		addq	$32, %rax
 11355 0077 4889C7   		movq	%rax, %rdi
 11356 007a E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 11356      00
 11357 007f EB07     		jmp	.L561
 11358              	.L564:
 11359 0081 F30F1EFA 		endbr64
 11360              		.loc 16 10 8
 11361 0085 4889C3   		movq	%rax, %rbx
 11362              	.L561:
 11363              		.loc 16 10 8 discriminator 5
 11364 0088 488B45E8 		movq	-24(%rbp), %rax
 11365 008c 4889C7   		movq	%rax, %rdi
 11366 008f E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 11366      00
 11367 0094 4889D8   		movq	%rbx, %rax
 11368 0097 4889C7   		movq	%rax, %rdi
 11369              	.LEHB299:
 11370 009a E8000000 		call	_Unwind_Resume@PLT
 11370      00
 11371              	.LEHE299:
 11372              	.L565:
 11373              	.LBE184:
 11374              		.loc 16 10 8
 11375 009f 488B5DF8 		movq	-8(%rbp), %rbx
 11376 00a3 C9       		leave
 11377              		.cfi_def_cfa 7, 8
 11378 00a4 C3       		ret
 11379              		.cfi_endproc
 11380              	.LFE1704:
 11381              		.section	.gcc_except_table
 11382              	.LLSDA1704:
 11383 0866 FF       		.byte	0xff
 11384 0867 FF       		.byte	0xff
 11385 0868 01       		.byte	0x1
 11386 0869 16       		.uleb128 .LLSDACSE1704-.LLSDACSB1704
 11387              	.LLSDACSB1704:
 11388 086a 1C       		.uleb128 .LEHB295-.LFB1704
 11389 086b 05       		.uleb128 .LEHE295-.LEHB295
 11390 086c 4F       		.uleb128 .L562-.LFB1704
 11391 086d 00       		.uleb128 0
 11392 086e 2C       		.uleb128 .LEHB296-.LFB1704
 11393 086f 05       		.uleb128 .LEHE296-.LEHB296
 11394 0870 68       		.uleb128 .L563-.LFB1704
 11395 0871 00       		.uleb128 0
 11396 0872 3C       		.uleb128 .LEHB297-.LFB1704
 11397 0873 05       		.uleb128 .LEHE297-.LEHB297
 11398 0874 8101     		.uleb128 .L564-.LFB1704
 11399 0876 00       		.uleb128 0
 11400 0877 48       		.uleb128 .LEHB298-.LFB1704
 11401 0878 05       		.uleb128 .LEHE298-.LEHB298
 11402 0879 00       		.uleb128 0
 11403 087a 00       		.uleb128 0
 11404 087b 9A01     		.uleb128 .LEHB299-.LFB1704
 11405 087d 05       		.uleb128 .LEHE299-.LEHB299
 11406 087e 00       		.uleb128 0
 11407 087f 00       		.uleb128 0
 11408              	.LLSDACSE1704:
 11409              		.section	.text._ZN8UnitTest18DeferredTestResultD2Ev,"axG",@progbits,_ZN8UnitTest18DeferredTestResu
 11411              		.weak	_ZN8UnitTest18DeferredTestResultD1Ev
 11412              		.set	_ZN8UnitTest18DeferredTestResultD1Ev,_ZN8UnitTest18DeferredTestResultD2Ev
 11413              		.section	.text._ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_,"axG",@progbits,_ZSt8_DestroyIN8
 11414              		.weak	_ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_
 11416              	_ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_:
 11417              	.LFB1702:
 146:/usr/include/c++/11/bits/stl_construct.h ****     {
 11418              		.loc 12 146 5 is_stmt 1
 11419              		.cfi_startproc
 11420 0000 F30F1EFA 		endbr64
 11421 0004 55       		pushq	%rbp
 11422              		.cfi_def_cfa_offset 16
 11423              		.cfi_offset 6, -16
 11424 0005 4889E5   		movq	%rsp, %rbp
 11425              		.cfi_def_cfa_register 6
 11426 0008 4883EC10 		subq	$16, %rsp
 11427 000c 48897DF8 		movq	%rdi, -8(%rbp)
 151:/usr/include/c++/11/bits/stl_construct.h **** #endif
 11428              		.loc 12 151 22
 11429 0010 488B45F8 		movq	-8(%rbp), %rax
 11430 0014 4889C7   		movq	%rax, %rdi
 11431 0017 E8000000 		call	_ZN8UnitTest18DeferredTestResultD1Ev
 11431      00
 153:/usr/include/c++/11/bits/stl_construct.h **** 
 11432              		.loc 12 153 5
 11433 001c 90       		nop
 11434 001d C9       		leave
 11435              		.cfi_def_cfa 7, 8
 11436 001e C3       		ret
 11437              		.cfi_endproc
 11438              	.LFE1702:
 11440              		.section	.text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE
 11441              		.align 2
 11442              		.weak	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev
 11444              	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:
 11445              	.LFB1707:
 678:/usr/include/c++/11/bits/stl_vector.h ****       {
 11446              		.loc 9 678 7
 11447              		.cfi_startproc
 11448              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 11449              		.cfi_lsda 0x1b,.LLSDA1707
 11450 0000 F30F1EFA 		endbr64
 11451 0004 55       		pushq	%rbp
 11452              		.cfi_def_cfa_offset 16
 11453              		.cfi_offset 6, -16
 11454 0005 4889E5   		movq	%rsp, %rbp
 11455              		.cfi_def_cfa_register 6
 11456 0008 53       		pushq	%rbx
 11457 0009 4883EC18 		subq	$24, %rsp
 11458              		.cfi_offset 3, -24
 11459 000d 48897DE8 		movq	%rdi, -24(%rbp)
 11460              	.LBB185:
 681:/usr/include/c++/11/bits/stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
 11461              		.loc 9 681 28
 11462 0011 488B45E8 		movq	-24(%rbp), %rax
 11463 0015 4889C7   		movq	%rax, %rdi
 11464 0018 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_
 11464      00
 11465 001d 4889C2   		movq	%rax, %rdx
 680:/usr/include/c++/11/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 11466              		.loc 9 680 15
 11467 0020 488B45E8 		movq	-24(%rbp), %rax
 11468 0024 488B4808 		movq	8(%rax), %rcx
 11469 0028 488B45E8 		movq	-24(%rbp), %rax
 11470 002c 488B00   		movq	(%rax), %rax
 11471 002f 4889CE   		movq	%rcx, %rsi
 11472 0032 4889C7   		movq	%rax, %rdi
 11473              	.LEHB300:
 11474 0035 E8000000 		call	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT0
 11474      00
 11475              	.LEHE300:
 11476              		.loc 9 683 7
 11477 003a 488B45E8 		movq	-24(%rbp), %rax
 11478 003e 4889C7   		movq	%rax, %rdi
 11479              	.LEHB301:
 11480 0041 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2E
 11480      00
 11481              	.LEHE301:
 11482              	.LBE185:
 11483 0046 EB1E     		jmp	.L570
 11484              	.L569:
 11485 0048 F30F1EFA 		endbr64
 11486              	.LBB186:
 11487 004c 4889C3   		movq	%rax, %rbx
 11488 004f 488B45E8 		movq	-24(%rbp), %rax
 11489 0053 4889C7   		movq	%rax, %rdi
 11490 0056 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2E
 11490      00
 11491 005b 4889D8   		movq	%rbx, %rax
 11492 005e 4889C7   		movq	%rax, %rdi
 11493              	.LEHB302:
 11494 0061 E8000000 		call	_Unwind_Resume@PLT
 11494      00
 11495              	.LEHE302:
 11496              	.L570:
 11497              	.LBE186:
 11498 0066 488B5DF8 		movq	-8(%rbp), %rbx
 11499 006a C9       		leave
 11500              		.cfi_def_cfa 7, 8
 11501 006b C3       		ret
 11502              		.cfi_endproc
 11503              	.LFE1707:
 11504              		.section	.gcc_except_table
 11505              	.LLSDA1707:
 11506 0880 FF       		.byte	0xff
 11507 0881 FF       		.byte	0xff
 11508 0882 01       		.byte	0x1
 11509 0883 0C       		.uleb128 .LLSDACSE1707-.LLSDACSB1707
 11510              	.LLSDACSB1707:
 11511 0884 35       		.uleb128 .LEHB300-.LFB1707
 11512 0885 05       		.uleb128 .LEHE300-.LEHB300
 11513 0886 48       		.uleb128 .L569-.LFB1707
 11514 0887 00       		.uleb128 0
 11515 0888 41       		.uleb128 .LEHB301-.LFB1707
 11516 0889 05       		.uleb128 .LEHE301-.LEHB301
 11517 088a 00       		.uleb128 0
 11518 088b 00       		.uleb128 0
 11519 088c 61       		.uleb128 .LEHB302-.LFB1707
 11520 088d 05       		.uleb128 .LEHE302-.LEHB302
 11521 088e 00       		.uleb128 0
 11522 088f 00       		.uleb128 0
 11523              	.LLSDACSE1707:
 11524              		.section	.text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE
 11526              		.weak	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev
 11527              		.set	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev,_ZNSt
 11528              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 11529              		.align 2
 11530              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12
 11532              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector
 11533              	.LFB1711:
 128:/usr/include/c++/11/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 11534              		.loc 9 128 14
 11535              		.cfi_startproc
 11536 0000 F30F1EFA 		endbr64
 11537 0004 55       		pushq	%rbp
 11538              		.cfi_def_cfa_offset 16
 11539              		.cfi_offset 6, -16
 11540 0005 4889E5   		movq	%rsp, %rbp
 11541              		.cfi_def_cfa_register 6
 11542 0008 4883EC10 		subq	$16, %rsp
 11543 000c 48897DF8 		movq	%rdi, -8(%rbp)
 11544              	.LBB187:
 128:/usr/include/c++/11/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 11545              		.loc 9 128 14
 11546 0010 488B45F8 		movq	-8(%rbp), %rax
 11547 0014 4889C7   		movq	%rax, %rdi
 11548 0017 E8000000 		call	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev
 11548      00
 11549              	.LBE187:
 11550 001c 90       		nop
 11551 001d C9       		leave
 11552              		.cfi_def_cfa 7, 8
 11553 001e C3       		ret
 11554              		.cfi_endproc
 11555              	.LFE1711:
 11557              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12
 11558              		.set	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_
 11559              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 11560              		.align 2
 11561              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2
 11563              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:
 11564              	.LFB1713:
 333:/usr/include/c++/11/bits/stl_vector.h ****       {
 11565              		.loc 9 333 7
 11566              		.cfi_startproc
 11567              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 11568              		.cfi_lsda 0x1b,.LLSDA1713
 11569 0000 F30F1EFA 		endbr64
 11570 0004 55       		pushq	%rbp
 11571              		.cfi_def_cfa_offset 16
 11572              		.cfi_offset 6, -16
 11573 0005 4889E5   		movq	%rsp, %rbp
 11574              		.cfi_def_cfa_register 6
 11575 0008 53       		pushq	%rbx
 11576 0009 4883EC18 		subq	$24, %rsp
 11577              		.cfi_offset 3, -24
 11578 000d 48897DE8 		movq	%rdi, -24(%rbp)
 11579              	.LBB188:
 336:/usr/include/c++/11/bits/stl_vector.h ****       }
 11580              		.loc 9 336 17
 11581 0011 488B45E8 		movq	-24(%rbp), %rax
 11582 0015 488B5010 		movq	16(%rax), %rdx
 336:/usr/include/c++/11/bits/stl_vector.h ****       }
 11583              		.loc 9 336 45
 11584 0019 488B45E8 		movq	-24(%rbp), %rax
 11585 001d 488B08   		movq	(%rax), %rcx
 336:/usr/include/c++/11/bits/stl_vector.h ****       }
 11586              		.loc 9 336 35
 11587 0020 4889D0   		movq	%rdx, %rax
 11588 0023 4829C8   		subq	%rcx, %rax
 11589 0026 48C1F803 		sarq	$3, %rax
 11590 002a 4889C2   		movq	%rax, %rdx
 11591 002d 48B8CDCC 		movabsq	$-3689348814741910323, %rax
 11591      CCCCCCCC 
 11591      CCCC
 11592 0037 480FAFC2 		imulq	%rdx, %rax
 335:/usr/include/c++/11/bits/stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 11593              		.loc 9 335 15
 11594 003b 4889C2   		movq	%rax, %rdx
 11595 003e 488B45E8 		movq	-24(%rbp), %rax
 11596 0042 488B08   		movq	(%rax), %rcx
 11597 0045 488B45E8 		movq	-24(%rbp), %rax
 11598 0049 4889CE   		movq	%rcx, %rsi
 11599 004c 4889C7   		movq	%rax, %rdi
 11600              	.LEHB303:
 11601 004f E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_
 11601      00
 11602              	.LEHE303:
 337:/usr/include/c++/11/bits/stl_vector.h **** 
 11603              		.loc 9 337 7
 11604 0054 488B45E8 		movq	-24(%rbp), %rax
 11605 0058 4889C7   		movq	%rax, %rdi
 11606 005b E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_
 11606      00
 11607              	.LBE188:
 11608 0060 EB1E     		jmp	.L575
 11609              	.L574:
 11610 0062 F30F1EFA 		endbr64
 11611              	.LBB189:
 11612 0066 4889C3   		movq	%rax, %rbx
 11613 0069 488B45E8 		movq	-24(%rbp), %rax
 11614 006d 4889C7   		movq	%rax, %rdi
 11615 0070 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_
 11615      00
 11616 0075 4889D8   		movq	%rbx, %rax
 11617 0078 4889C7   		movq	%rax, %rdi
 11618              	.LEHB304:
 11619 007b E8000000 		call	_Unwind_Resume@PLT
 11619      00
 11620              	.LEHE304:
 11621              	.L575:
 11622              	.LBE189:
 11623 0080 488B5DF8 		movq	-8(%rbp), %rbx
 11624 0084 C9       		leave
 11625              		.cfi_def_cfa 7, 8
 11626 0085 C3       		ret
 11627              		.cfi_endproc
 11628              	.LFE1713:
 11629              		.section	.gcc_except_table
 11630              	.LLSDA1713:
 11631 0890 FF       		.byte	0xff
 11632 0891 FF       		.byte	0xff
 11633 0892 01       		.byte	0x1
 11634 0893 08       		.uleb128 .LLSDACSE1713-.LLSDACSB1713
 11635              	.LLSDACSB1713:
 11636 0894 4F       		.uleb128 .LEHB303-.LFB1713
 11637 0895 05       		.uleb128 .LEHE303-.LEHB303
 11638 0896 62       		.uleb128 .L574-.LFB1713
 11639 0897 00       		.uleb128 0
 11640 0898 7B       		.uleb128 .LEHB304-.LFB1713
 11641 0899 05       		.uleb128 .LEHE304-.LEHB304
 11642 089a 00       		.uleb128 0
 11643 089b 00       		.uleb128 0
 11644              	.LLSDACSE1713:
 11645              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 11647              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1
 11648              		.set	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1E
 11649              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 11650              		.align 2
 11651              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19
 11653              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_M_get_
 11654              	.LFB1715:
 276:/usr/include/c++/11/bits/stl_vector.h ****       { return this->_M_impl; }
 11655              		.loc 9 276 7
 11656              		.cfi_startproc
 11657 0000 F30F1EFA 		endbr64
 11658 0004 55       		pushq	%rbp
 11659              		.cfi_def_cfa_offset 16
 11660              		.cfi_offset 6, -16
 11661 0005 4889E5   		movq	%rsp, %rbp
 11662              		.cfi_def_cfa_register 6
 11663 0008 48897DF8 		movq	%rdi, -8(%rbp)
 277:/usr/include/c++/11/bits/stl_vector.h **** 
 11664              		.loc 9 277 22
 11665 000c 488B45F8 		movq	-8(%rbp), %rax
 277:/usr/include/c++/11/bits/stl_vector.h **** 
 11666              		.loc 9 277 31
 11667 0010 5D       		popq	%rbp
 11668              		.cfi_def_cfa 7, 8
 11669 0011 C3       		ret
 11670              		.cfi_endproc
 11671              	.LFE1715:
 11673              		.section	.text._ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT
 11674              		.weak	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT
 11676              	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT0_E:
 11677              	.LFB1716:
 845:/usr/include/c++/11/bits/alloc_traits.h **** 	     allocator<_Tp>&)
 11678              		.loc 10 845 5
 11679              		.cfi_startproc
 11680 0000 F30F1EFA 		endbr64
 11681 0004 55       		pushq	%rbp
 11682              		.cfi_def_cfa_offset 16
 11683              		.cfi_offset 6, -16
 11684 0005 4889E5   		movq	%rsp, %rbp
 11685              		.cfi_def_cfa_register 6
 11686 0008 4883EC20 		subq	$32, %rsp
 11687 000c 48897DF8 		movq	%rdi, -8(%rbp)
 11688 0010 488975F0 		movq	%rsi, -16(%rbp)
 11689 0014 488955E8 		movq	%rdx, -24(%rbp)
 848:/usr/include/c++/11/bits/alloc_traits.h ****     }
 11690              		.loc 10 848 15
 11691 0018 488B55F0 		movq	-16(%rbp), %rdx
 11692 001c 488B45F8 		movq	-8(%rbp), %rax
 11693 0020 4889D6   		movq	%rdx, %rsi
 11694 0023 4889C7   		movq	%rax, %rdi
 11695 0026 E8000000 		call	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_
 11695      00
 11696              		.loc 10 849 5
 11697 002b 90       		nop
 11698 002c C9       		leave
 11699              		.cfi_def_cfa 7, 8
 11700 002d C3       		ret
 11701              		.cfi_endproc
 11702              	.LFE1716:
 11704              		.section	.text._ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev,"axG",@pr
 11705              		.align 2
 11706              		.weak	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev
 11708              	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:
 11709              	.LFB1718:
 11710              		.loc 11 174 7
 11711              		.cfi_startproc
 11712 0000 F30F1EFA 		endbr64
 11713 0004 55       		pushq	%rbp
 11714              		.cfi_def_cfa_offset 16
 11715              		.cfi_offset 6, -16
 11716 0005 4889E5   		movq	%rsp, %rbp
 11717              		.cfi_def_cfa_register 6
 11718 0008 4883EC10 		subq	$16, %rsp
 11719 000c 48897DF8 		movq	%rdi, -8(%rbp)
 11720              	.LBB190:
 11721              		.loc 11 174 39
 11722 0010 488B45F8 		movq	-8(%rbp), %rax
 11723 0014 4889C7   		movq	%rax, %rdi
 11724 0017 E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED
 11724      00
 11725              	.LBE190:
 11726 001c 90       		nop
 11727 001d C9       		leave
 11728              		.cfi_def_cfa 7, 8
 11729 001e C3       		ret
 11730              		.cfi_endproc
 11731              	.LFE1718:
 11733              		.weak	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev
 11734              		.set	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev,_ZNSaISt4pairIiNSt7
 11735              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 11736              		.align 2
 11737              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13
 11739              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_M_deal
 11740              	.LFB1720:
 350:/usr/include/c++/11/bits/stl_vector.h ****       {
 11741              		.loc 9 350 7
 11742              		.cfi_startproc
 11743 0000 F30F1EFA 		endbr64
 11744 0004 55       		pushq	%rbp
 11745              		.cfi_def_cfa_offset 16
 11746              		.cfi_offset 6, -16
 11747 0005 4889E5   		movq	%rsp, %rbp
 11748              		.cfi_def_cfa_register 6
 11749 0008 4883EC20 		subq	$32, %rsp
 11750 000c 48897DF8 		movq	%rdi, -8(%rbp)
 11751 0010 488975F0 		movq	%rsi, -16(%rbp)
 11752 0014 488955E8 		movq	%rdx, -24(%rbp)
 353:/usr/include/c++/11/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 11753              		.loc 9 353 2
 11754 0018 48837DF0 		cmpq	$0, -16(%rbp)
 11754      00
 11755 001d 7417     		je	.L582
 354:/usr/include/c++/11/bits/stl_vector.h ****       }
 11756              		.loc 9 354 20
 11757 001f 488B45F8 		movq	-8(%rbp), %rax
 354:/usr/include/c++/11/bits/stl_vector.h ****       }
 11758              		.loc 9 354 19
 11759 0023 488B55E8 		movq	-24(%rbp), %rdx
 11760 0027 488B4DF0 		movq	-16(%rbp), %rcx
 11761 002b 4889CE   		movq	%rcx, %rsi
 11762 002e 4889C7   		movq	%rax, %rdi
 11763 0031 E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE
 11763      00
 11764              	.L582:
 355:/usr/include/c++/11/bits/stl_vector.h **** 
 11765              		.loc 9 355 7
 11766 0036 90       		nop
 11767 0037 C9       		leave
 11768              		.cfi_def_cfa 7, 8
 11769 0038 C3       		ret
 11770              		.cfi_endproc
 11771              	.LFE1720:
 11773              		.section	.text._ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9
 11774              		.weak	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_
 11776              	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_:
 11777              	.LFB1721:
 182:/usr/include/c++/11/bits/stl_construct.h ****     {
 11778              		.loc 12 182 5
 11779              		.cfi_startproc
 11780 0000 F30F1EFA 		endbr64
 11781 0004 55       		pushq	%rbp
 11782              		.cfi_def_cfa_offset 16
 11783              		.cfi_offset 6, -16
 11784 0005 4889E5   		movq	%rsp, %rbp
 11785              		.cfi_def_cfa_register 6
 11786 0008 4883EC10 		subq	$16, %rsp
 11787 000c 48897DF8 		movq	%rdi, -8(%rbp)
 11788 0010 488975F0 		movq	%rsi, -16(%rbp)
 196:/usr/include/c++/11/bits/stl_construct.h ****     }
 11789              		.loc 12 196 11
 11790 0014 488B55F0 		movq	-16(%rbp), %rdx
 11791 0018 488B45F8 		movq	-8(%rbp), %rax
 11792 001c 4889D6   		movq	%rdx, %rsi
 11793 001f 4889C7   		movq	%rax, %rdi
 11794 0022 E8000000 		call	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESa
 11794      00
 11795              		.loc 12 197 5
 11796 0027 90       		nop
 11797 0028 C9       		leave
 11798              		.cfi_def_cfa 7, 8
 11799 0029 C3       		ret
 11800              		.cfi_endproc
 11801              	.LFE1721:
 11803              		.section	.text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcE
 11804              		.align 2
 11805              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE
 11807              	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:
 11808              	.LFB1723:
  89:/usr/include/c++/11/ext/new_allocator.h **** 
 11809              		.loc 13 89 7
 11810              		.cfi_startproc
 11811 0000 F30F1EFA 		endbr64
 11812 0004 55       		pushq	%rbp
 11813              		.cfi_def_cfa_offset 16
 11814              		.cfi_offset 6, -16
 11815 0005 4889E5   		movq	%rsp, %rbp
 11816              		.cfi_def_cfa_register 6
 11817 0008 48897DF8 		movq	%rdi, -8(%rbp)
  89:/usr/include/c++/11/ext/new_allocator.h **** 
 11818              		.loc 13 89 48
 11819 000c 90       		nop
 11820 000d 5D       		popq	%rbp
 11821              		.cfi_def_cfa 7, 8
 11822 000e C3       		ret
 11823              		.cfi_endproc
 11824              	.LFE1723:
 11826              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE
 11827              		.set	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED
 11828              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_trait
 11829              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcE
 11831              	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES8_
 11832              	.LFB1725:
 140:/usr/include/c++/11/ext/alloc_traits.h ****     { __a.deallocate(__p, __n); }
 11833              		.loc 14 140 17
 11834              		.cfi_startproc
 11835 0000 F30F1EFA 		endbr64
 11836 0004 55       		pushq	%rbp
 11837              		.cfi_def_cfa_offset 16
 11838              		.cfi_offset 6, -16
 11839 0005 4889E5   		movq	%rsp, %rbp
 11840              		.cfi_def_cfa_register 6
 11841 0008 4883EC20 		subq	$32, %rsp
 11842 000c 48897DF8 		movq	%rdi, -8(%rbp)
 11843 0010 488975F0 		movq	%rsi, -16(%rbp)
 11844 0014 488955E8 		movq	%rdx, -24(%rbp)
 11845              		.loc 14 141 21
 11846 0018 488B55E8 		movq	-24(%rbp), %rdx
 11847 001c 488B4DF0 		movq	-16(%rbp), %rcx
 11848 0020 488B45F8 		movq	-8(%rbp), %rax
 11849 0024 4889CE   		movq	%rcx, %rsi
 11850 0027 4889C7   		movq	%rax, %rdi
 11851 002a E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE1
 11851      00
 11852              		.loc 14 141 33
 11853 002f 90       		nop
 11854 0030 C9       		leave
 11855              		.cfi_def_cfa 7, 8
 11856 0031 C3       		ret
 11857              		.cfi_endproc
 11858              	.LFE1725:
 11860              		.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_t
 11861              		.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcES
 11863              	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 11864              	.LFB1726:
 160:/usr/include/c++/11/bits/stl_construct.h **** 	{
 11865              		.loc 12 160 2
 11866              		.cfi_startproc
 11867 0000 F30F1EFA 		endbr64
 11868 0004 55       		pushq	%rbp
 11869              		.cfi_def_cfa_offset 16
 11870              		.cfi_offset 6, -16
 11871 0005 4889E5   		movq	%rsp, %rbp
 11872              		.cfi_def_cfa_register 6
 11873 0008 4883EC10 		subq	$16, %rsp
 11874 000c 48897DF8 		movq	%rdi, -8(%rbp)
 11875 0010 488975F0 		movq	%rsi, -16(%rbp)
 162:/usr/include/c++/11/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 11876              		.loc 12 162 4
 11877 0014 EB19     		jmp	.L587
 11878              	.L588:
 163:/usr/include/c++/11/bits/stl_construct.h **** 	}
 11879              		.loc 12 163 19 discriminator 2
 11880 0016 488B45F8 		movq	-8(%rbp), %rax
 11881 001a 4889C7   		movq	%rax, %rdi
 11882 001d E8000000 		call	_ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_
 11882      00
 11883 0022 4889C7   		movq	%rax, %rdi
 11884 0025 E8000000 		call	_ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_
 11884      00
 162:/usr/include/c++/11/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 11885              		.loc 12 162 4 discriminator 2
 11886 002a 488345F8 		addq	$40, -8(%rbp)
 11886      28
 11887              	.L587:
 162:/usr/include/c++/11/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 11888              		.loc 12 162 19 discriminator 1
 11889 002f 488B45F8 		movq	-8(%rbp), %rax
 11890 0033 483B45F0 		cmpq	-16(%rbp), %rax
 11891 0037 75DD     		jne	.L588
 164:/usr/include/c++/11/bits/stl_construct.h ****     };
 11892              		.loc 12 164 2
 11893 0039 90       		nop
 11894 003a 90       		nop
 11895 003b C9       		leave
 11896              		.cfi_def_cfa 7, 8
 11897 003c C3       		ret
 11898              		.cfi_endproc
 11899              	.LFE1726:
 11901              		.section	.text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcE
 11902              		.align 2
 11903              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE
 11905              	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deall
 11906              	.LFB1727:
 132:/usr/include/c++/11/ext/new_allocator.h ****       {
 11907              		.loc 13 132 7
 11908              		.cfi_startproc
 11909 0000 F30F1EFA 		endbr64
 11910 0004 55       		pushq	%rbp
 11911              		.cfi_def_cfa_offset 16
 11912              		.cfi_offset 6, -16
 11913 0005 4889E5   		movq	%rsp, %rbp
 11914              		.cfi_def_cfa_register 6
 11915 0008 4883EC20 		subq	$32, %rsp
 11916 000c 48897DF8 		movq	%rdi, -8(%rbp)
 11917 0010 488975F0 		movq	%rsi, -16(%rbp)
 11918 0014 488955E8 		movq	%rdx, -24(%rbp)
 145:/usr/include/c++/11/ext/new_allocator.h **** #if __cpp_sized_deallocation
 11919              		.loc 13 145 19
 11920 0018 488B45F0 		movq	-16(%rbp), %rax
 11921 001c 4889C7   		movq	%rax, %rdi
 11922 001f E8000000 		call	_ZdlPv@PLT
 11922      00
 11923              		.loc 13 150 7
 11924 0024 90       		nop
 11925 0025 C9       		leave
 11926              		.cfi_def_cfa 7, 8
 11927 0026 C3       		ret
 11928              		.cfi_endproc
 11929              	.LFE1727:
 11931              		.section	.text._ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT
 11932              		.weak	_ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_
 11934              	_ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_:
 11935              	.LFB1728:
  49:/usr/include/c++/11/bits/move.h ****     { return __builtin_addressof(__r); }
 11936              		.loc 15 49 5
 11937              		.cfi_startproc
 11938 0000 F30F1EFA 		endbr64
 11939 0004 55       		pushq	%rbp
 11940              		.cfi_def_cfa_offset 16
 11941              		.cfi_offset 6, -16
 11942 0005 4889E5   		movq	%rsp, %rbp
 11943              		.cfi_def_cfa_register 6
 11944 0008 48897DF8 		movq	%rdi, -8(%rbp)
 11945              		.loc 15 50 37
 11946 000c 488B45F8 		movq	-8(%rbp), %rax
 11947              		.loc 15 50 40
 11948 0010 5D       		popq	%rbp
 11949              		.cfi_def_cfa 7, 8
 11950 0011 C3       		ret
 11951              		.cfi_endproc
 11952              	.LFE1728:
 11954              		.section	.text._ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev,"axG",@progbi
 11955              		.align 2
 11956              		.weak	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev
 11958              	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:
 11959              	.LFB1731:
 11960              		.file 17 "/usr/include/c++/11/bits/stl_pair.h"
   1:/usr/include/c++/11/bits/stl_pair.h **** // Pair implementation -*- C++ -*-
   2:/usr/include/c++/11/bits/stl_pair.h **** 
   3:/usr/include/c++/11/bits/stl_pair.h **** // Copyright (C) 2001-2021 Free Software Foundation, Inc.
   4:/usr/include/c++/11/bits/stl_pair.h **** //
   5:/usr/include/c++/11/bits/stl_pair.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/11/bits/stl_pair.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/11/bits/stl_pair.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/11/bits/stl_pair.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/11/bits/stl_pair.h **** // any later version.
  10:/usr/include/c++/11/bits/stl_pair.h **** 
  11:/usr/include/c++/11/bits/stl_pair.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/11/bits/stl_pair.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/11/bits/stl_pair.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/11/bits/stl_pair.h **** // GNU General Public License for more details.
  15:/usr/include/c++/11/bits/stl_pair.h **** 
  16:/usr/include/c++/11/bits/stl_pair.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/11/bits/stl_pair.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/11/bits/stl_pair.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/11/bits/stl_pair.h **** 
  20:/usr/include/c++/11/bits/stl_pair.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/11/bits/stl_pair.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/11/bits/stl_pair.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/11/bits/stl_pair.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/11/bits/stl_pair.h **** 
  25:/usr/include/c++/11/bits/stl_pair.h **** /*
  26:/usr/include/c++/11/bits/stl_pair.h ****  *
  27:/usr/include/c++/11/bits/stl_pair.h ****  * Copyright (c) 1994
  28:/usr/include/c++/11/bits/stl_pair.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/11/bits/stl_pair.h ****  *
  30:/usr/include/c++/11/bits/stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/11/bits/stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/11/bits/stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/11/bits/stl_pair.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/11/bits/stl_pair.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/11/bits/stl_pair.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/11/bits/stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/11/bits/stl_pair.h ****  *
  38:/usr/include/c++/11/bits/stl_pair.h ****  *
  39:/usr/include/c++/11/bits/stl_pair.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/11/bits/stl_pair.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/11/bits/stl_pair.h ****  *
  42:/usr/include/c++/11/bits/stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/11/bits/stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/11/bits/stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/11/bits/stl_pair.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/11/bits/stl_pair.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/11/bits/stl_pair.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/11/bits/stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/11/bits/stl_pair.h ****  */
  50:/usr/include/c++/11/bits/stl_pair.h **** 
  51:/usr/include/c++/11/bits/stl_pair.h **** /** @file bits/stl_pair.h
  52:/usr/include/c++/11/bits/stl_pair.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/11/bits/stl_pair.h ****  *  Do not attempt to use it directly. @headername{utility}
  54:/usr/include/c++/11/bits/stl_pair.h ****  */
  55:/usr/include/c++/11/bits/stl_pair.h **** 
  56:/usr/include/c++/11/bits/stl_pair.h **** #ifndef _STL_PAIR_H
  57:/usr/include/c++/11/bits/stl_pair.h **** #define _STL_PAIR_H 1
  58:/usr/include/c++/11/bits/stl_pair.h **** 
  59:/usr/include/c++/11/bits/stl_pair.h **** #include <bits/move.h> // for std::move / std::forward, and std::swap
  60:/usr/include/c++/11/bits/stl_pair.h **** 
  61:/usr/include/c++/11/bits/stl_pair.h **** #if __cplusplus >= 201103L
  62:/usr/include/c++/11/bits/stl_pair.h **** # include <type_traits> // for std::__decay_and_strip, std::is_reference_v
  63:/usr/include/c++/11/bits/stl_pair.h **** #endif
  64:/usr/include/c++/11/bits/stl_pair.h **** #if __cplusplus > 201703L
  65:/usr/include/c++/11/bits/stl_pair.h **** # include <compare>
  66:/usr/include/c++/11/bits/stl_pair.h **** # define __cpp_lib_constexpr_utility 201811L
  67:/usr/include/c++/11/bits/stl_pair.h **** #endif
  68:/usr/include/c++/11/bits/stl_pair.h **** 
  69:/usr/include/c++/11/bits/stl_pair.h **** namespace std _GLIBCXX_VISIBILITY(default)
  70:/usr/include/c++/11/bits/stl_pair.h **** {
  71:/usr/include/c++/11/bits/stl_pair.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  72:/usr/include/c++/11/bits/stl_pair.h **** 
  73:/usr/include/c++/11/bits/stl_pair.h ****   /**
  74:/usr/include/c++/11/bits/stl_pair.h ****    *  @addtogroup utilities
  75:/usr/include/c++/11/bits/stl_pair.h ****    *  @{
  76:/usr/include/c++/11/bits/stl_pair.h ****    */
  77:/usr/include/c++/11/bits/stl_pair.h **** 
  78:/usr/include/c++/11/bits/stl_pair.h **** #if __cplusplus >= 201103L
  79:/usr/include/c++/11/bits/stl_pair.h ****   /// Tag type for piecewise construction of std::pair objects.
  80:/usr/include/c++/11/bits/stl_pair.h ****   struct piecewise_construct_t { explicit piecewise_construct_t() = default; };
  81:/usr/include/c++/11/bits/stl_pair.h **** 
  82:/usr/include/c++/11/bits/stl_pair.h ****   /// Tag for piecewise construction of std::pair objects.
  83:/usr/include/c++/11/bits/stl_pair.h ****   _GLIBCXX17_INLINE constexpr piecewise_construct_t piecewise_construct =
  84:/usr/include/c++/11/bits/stl_pair.h ****     piecewise_construct_t();
  85:/usr/include/c++/11/bits/stl_pair.h **** 
  86:/usr/include/c++/11/bits/stl_pair.h ****   /// @cond undocumented
  87:/usr/include/c++/11/bits/stl_pair.h **** 
  88:/usr/include/c++/11/bits/stl_pair.h ****   // Forward declarations.
  89:/usr/include/c++/11/bits/stl_pair.h ****   template<typename...>
  90:/usr/include/c++/11/bits/stl_pair.h ****     class tuple;
  91:/usr/include/c++/11/bits/stl_pair.h **** 
  92:/usr/include/c++/11/bits/stl_pair.h ****   template<size_t...>
  93:/usr/include/c++/11/bits/stl_pair.h ****     struct _Index_tuple;
  94:/usr/include/c++/11/bits/stl_pair.h **** 
  95:/usr/include/c++/11/bits/stl_pair.h ****   // Concept utility functions, reused in conditionally-explicit
  96:/usr/include/c++/11/bits/stl_pair.h ****   // constructors.
  97:/usr/include/c++/11/bits/stl_pair.h ****   // See PR 70437, don't look at is_constructible or
  98:/usr/include/c++/11/bits/stl_pair.h ****   // is_convertible if the types are the same to
  99:/usr/include/c++/11/bits/stl_pair.h ****   // avoid querying those properties for incomplete types.
 100:/usr/include/c++/11/bits/stl_pair.h ****   template <bool, typename _T1, typename _T2>
 101:/usr/include/c++/11/bits/stl_pair.h ****     struct _PCC
 102:/usr/include/c++/11/bits/stl_pair.h ****     {
 103:/usr/include/c++/11/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 104:/usr/include/c++/11/bits/stl_pair.h ****       static constexpr bool _ConstructiblePair()
 105:/usr/include/c++/11/bits/stl_pair.h ****       {
 106:/usr/include/c++/11/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 107:/usr/include/c++/11/bits/stl_pair.h **** 		      is_constructible<_T2, const _U2&>>::value;
 108:/usr/include/c++/11/bits/stl_pair.h ****       }
 109:/usr/include/c++/11/bits/stl_pair.h **** 
 110:/usr/include/c++/11/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 111:/usr/include/c++/11/bits/stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 112:/usr/include/c++/11/bits/stl_pair.h ****       {
 113:/usr/include/c++/11/bits/stl_pair.h **** 	return __and_<is_convertible<const _U1&, _T1>,
 114:/usr/include/c++/11/bits/stl_pair.h **** 		      is_convertible<const _U2&, _T2>>::value;
 115:/usr/include/c++/11/bits/stl_pair.h ****       }
 116:/usr/include/c++/11/bits/stl_pair.h **** 
 117:/usr/include/c++/11/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 118:/usr/include/c++/11/bits/stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 119:/usr/include/c++/11/bits/stl_pair.h ****       {
 120:/usr/include/c++/11/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 121:/usr/include/c++/11/bits/stl_pair.h **** 		      is_constructible<_T2, _U2&&>>::value;
 122:/usr/include/c++/11/bits/stl_pair.h ****       }
 123:/usr/include/c++/11/bits/stl_pair.h **** 
 124:/usr/include/c++/11/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 125:/usr/include/c++/11/bits/stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 126:/usr/include/c++/11/bits/stl_pair.h ****       {
 127:/usr/include/c++/11/bits/stl_pair.h **** 	return __and_<is_convertible<_U1&&, _T1>,
 128:/usr/include/c++/11/bits/stl_pair.h **** 		      is_convertible<_U2&&, _T2>>::value;
 129:/usr/include/c++/11/bits/stl_pair.h ****       }
 130:/usr/include/c++/11/bits/stl_pair.h **** 
 131:/usr/include/c++/11/bits/stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 132:/usr/include/c++/11/bits/stl_pair.h ****       static constexpr bool _CopyMovePair()
 133:/usr/include/c++/11/bits/stl_pair.h ****       {
 134:/usr/include/c++/11/bits/stl_pair.h **** 	using __do_converts = __and_<is_convertible<const _U1&, _T1>,
 135:/usr/include/c++/11/bits/stl_pair.h **** 				  is_convertible<_U2&&, _T2>>;
 136:/usr/include/c++/11/bits/stl_pair.h **** 	using __converts = typename conditional<__implicit,
 137:/usr/include/c++/11/bits/stl_pair.h **** 				       __do_converts,
 138:/usr/include/c++/11/bits/stl_pair.h **** 				       __not_<__do_converts>>::type;
 139:/usr/include/c++/11/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 140:/usr/include/c++/11/bits/stl_pair.h **** 		      is_constructible<_T2, _U2&&>,
 141:/usr/include/c++/11/bits/stl_pair.h **** 		      __converts
 142:/usr/include/c++/11/bits/stl_pair.h **** 		      >::value;
 143:/usr/include/c++/11/bits/stl_pair.h ****       }
 144:/usr/include/c++/11/bits/stl_pair.h **** 
 145:/usr/include/c++/11/bits/stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 146:/usr/include/c++/11/bits/stl_pair.h ****       static constexpr bool _MoveCopyPair()
 147:/usr/include/c++/11/bits/stl_pair.h ****       {
 148:/usr/include/c++/11/bits/stl_pair.h **** 	using __do_converts = __and_<is_convertible<_U1&&, _T1>,
 149:/usr/include/c++/11/bits/stl_pair.h **** 				  is_convertible<const _U2&, _T2>>;
 150:/usr/include/c++/11/bits/stl_pair.h **** 	using __converts = typename conditional<__implicit,
 151:/usr/include/c++/11/bits/stl_pair.h **** 				       __do_converts,
 152:/usr/include/c++/11/bits/stl_pair.h **** 				       __not_<__do_converts>>::type;
 153:/usr/include/c++/11/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 154:/usr/include/c++/11/bits/stl_pair.h **** 		      is_constructible<_T2, const _U2&&>,
 155:/usr/include/c++/11/bits/stl_pair.h **** 		      __converts
 156:/usr/include/c++/11/bits/stl_pair.h **** 		      >::value;
 157:/usr/include/c++/11/bits/stl_pair.h ****       }
 158:/usr/include/c++/11/bits/stl_pair.h ****   };
 159:/usr/include/c++/11/bits/stl_pair.h **** 
 160:/usr/include/c++/11/bits/stl_pair.h ****   template <typename _T1, typename _T2>
 161:/usr/include/c++/11/bits/stl_pair.h ****     struct _PCC<false, _T1, _T2>
 162:/usr/include/c++/11/bits/stl_pair.h ****     {
 163:/usr/include/c++/11/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 164:/usr/include/c++/11/bits/stl_pair.h ****       static constexpr bool _ConstructiblePair()
 165:/usr/include/c++/11/bits/stl_pair.h ****       {
 166:/usr/include/c++/11/bits/stl_pair.h **** 	return false;
 167:/usr/include/c++/11/bits/stl_pair.h ****       }
 168:/usr/include/c++/11/bits/stl_pair.h **** 
 169:/usr/include/c++/11/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 170:/usr/include/c++/11/bits/stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 171:/usr/include/c++/11/bits/stl_pair.h ****       {
 172:/usr/include/c++/11/bits/stl_pair.h **** 	return false;
 173:/usr/include/c++/11/bits/stl_pair.h ****       }
 174:/usr/include/c++/11/bits/stl_pair.h **** 
 175:/usr/include/c++/11/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 176:/usr/include/c++/11/bits/stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 177:/usr/include/c++/11/bits/stl_pair.h ****       {
 178:/usr/include/c++/11/bits/stl_pair.h **** 	return false;
 179:/usr/include/c++/11/bits/stl_pair.h ****       }
 180:/usr/include/c++/11/bits/stl_pair.h **** 
 181:/usr/include/c++/11/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 182:/usr/include/c++/11/bits/stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 183:/usr/include/c++/11/bits/stl_pair.h ****       {
 184:/usr/include/c++/11/bits/stl_pair.h **** 	return false;
 185:/usr/include/c++/11/bits/stl_pair.h ****       }
 186:/usr/include/c++/11/bits/stl_pair.h ****   };
 187:/usr/include/c++/11/bits/stl_pair.h **** #endif // C++11
 188:/usr/include/c++/11/bits/stl_pair.h **** 
 189:/usr/include/c++/11/bits/stl_pair.h ****   template<typename _U1, typename _U2> class __pair_base
 190:/usr/include/c++/11/bits/stl_pair.h ****   {
 191:/usr/include/c++/11/bits/stl_pair.h **** #if __cplusplus >= 201103L
 192:/usr/include/c++/11/bits/stl_pair.h ****     template<typename _T1, typename _T2> friend struct pair;
 193:/usr/include/c++/11/bits/stl_pair.h ****     __pair_base() = default;
 194:/usr/include/c++/11/bits/stl_pair.h ****     ~__pair_base() = default;
 195:/usr/include/c++/11/bits/stl_pair.h ****     __pair_base(const __pair_base&) = default;
 196:/usr/include/c++/11/bits/stl_pair.h ****     __pair_base& operator=(const __pair_base&) = delete;
 197:/usr/include/c++/11/bits/stl_pair.h **** #endif // C++11
 198:/usr/include/c++/11/bits/stl_pair.h ****   };
 199:/usr/include/c++/11/bits/stl_pair.h **** 
 200:/usr/include/c++/11/bits/stl_pair.h ****   /// @endcond
 201:/usr/include/c++/11/bits/stl_pair.h **** 
 202:/usr/include/c++/11/bits/stl_pair.h ****  /**
 203:/usr/include/c++/11/bits/stl_pair.h ****    *  @brief Struct holding two objects of arbitrary type.
 204:/usr/include/c++/11/bits/stl_pair.h ****    *
 205:/usr/include/c++/11/bits/stl_pair.h ****    *  @tparam _T1  Type of first object.
 206:/usr/include/c++/11/bits/stl_pair.h ****    *  @tparam _T2  Type of second object.
 207:/usr/include/c++/11/bits/stl_pair.h ****    *
 208:/usr/include/c++/11/bits/stl_pair.h ****    *  <https://gcc.gnu.org/onlinedocs/libstdc++/manual/utilities.html>
 209:/usr/include/c++/11/bits/stl_pair.h ****    */
 210:/usr/include/c++/11/bits/stl_pair.h ****   template<typename _T1, typename _T2>
 211:/usr/include/c++/11/bits/stl_pair.h ****     struct pair
 11961              		.loc 17 211 12
 11962              		.cfi_startproc
 11963 0000 F30F1EFA 		endbr64
 11964 0004 55       		pushq	%rbp
 11965              		.cfi_def_cfa_offset 16
 11966              		.cfi_offset 6, -16
 11967 0005 4889E5   		movq	%rsp, %rbp
 11968              		.cfi_def_cfa_register 6
 11969 0008 4883EC10 		subq	$16, %rsp
 11970 000c 48897DF8 		movq	%rdi, -8(%rbp)
 11971              	.LBB191:
 11972              		.loc 17 211 12
 11973 0010 488B45F8 		movq	-8(%rbp), %rax
 11974 0014 4883C008 		addq	$8, %rax
 11975 0018 4889C7   		movq	%rax, %rdi
 11976 001b E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 11976      00
 11977              	.LBE191:
 11978 0020 90       		nop
 11979 0021 C9       		leave
 11980              		.cfi_def_cfa 7, 8
 11981 0022 C3       		ret
 11982              		.cfi_endproc
 11983              	.LFE1731:
 11985              		.weak	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev
 11986              		.set	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev,_ZNSt4pairIiNSt7__cxx11
 11987              		.section	.text._ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_,"
 11988              		.weak	_ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_
 11990              	_ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_:
 11991              	.LFB1729:
 146:/usr/include/c++/11/bits/stl_construct.h ****     {
 11992              		.loc 12 146 5
 11993              		.cfi_startproc
 11994 0000 F30F1EFA 		endbr64
 11995 0004 55       		pushq	%rbp
 11996              		.cfi_def_cfa_offset 16
 11997              		.cfi_offset 6, -16
 11998 0005 4889E5   		movq	%rsp, %rbp
 11999              		.cfi_def_cfa_register 6
 12000 0008 4883EC10 		subq	$16, %rsp
 12001 000c 48897DF8 		movq	%rdi, -8(%rbp)
 151:/usr/include/c++/11/bits/stl_construct.h **** #endif
 12002              		.loc 12 151 22
 12003 0010 488B45F8 		movq	-8(%rbp), %rax
 12004 0014 4889C7   		movq	%rax, %rdi
 12005 0017 E8000000 		call	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev
 12005      00
 153:/usr/include/c++/11/bits/stl_construct.h **** 
 12006              		.loc 12 153 5
 12007 001c 90       		nop
 12008 001d C9       		leave
 12009              		.cfi_def_cfa 7, 8
 12010 001e C3       		ret
 12011              		.cfi_endproc
 12012              	.LFE1729:
 12014              		.text
 12016              	_GLOBAL__sub_I_TestXmlTestReporter.cpp:
 12017              	.LFB1733:
 12018              		.loc 3 183 1
 12019              		.cfi_startproc
 12020 4d2f F30F1EFA 		endbr64
 12021 4d33 55       		pushq	%rbp
 12022              		.cfi_def_cfa_offset 16
 12023              		.cfi_offset 6, -16
 12024 4d34 4889E5   		movq	%rsp, %rbp
 12025              		.cfi_def_cfa_register 6
 12026              		.loc 3 183 1
 12027 4d37 BEFFFF00 		movl	$65535, %esi
 12027      00
 12028 4d3c BF010000 		movl	$1, %edi
 12028      00
 12029 4d41 E80DFDFF 		call	_Z41__static_initialization_and_destruction_0ii
 12029      FF
 12030 4d46 5D       		popq	%rbp
 12031              		.cfi_def_cfa 7, 8
 12032 4d47 C3       		ret
 12033              		.cfi_endproc
 12034              	.LFE1733:
 12036              		.section	.init_array,"aw"
 12037              		.align 8
 12038 0000 00000000 		.quad	_GLOBAL__sub_I_TestXmlTestReporter.cpp
 12038      00000000 
 12039              		.section	.rodata
 12040 0c4a 0000     		.align 4
 12041              	.LC10:
 12042 0c4c CDCCCC3D 		.long	1036831949
 12043              		.align 4
 12044              	.LC16:
 12045 0c50 0000803F 		.long	1065353216
 12046              		.align 4
 12047              	.LC38:
 12048 0c54 CDCC8C3F 		.long	1066192077
 12049              		.text
 12050              	.Letext0:
 12051              		.file 18 "../TestDetails.h"
 12052              		.file 19 "../TestList.h"
 12053              		.file 20 "../TestResults.h"
 12054              		.file 21 "../Test.h"
 12055              		.file 22 "../TestReporter.h"
 12056              		.file 23 "../PosixUtils/SignalTranslator.h"
 12057              		.file 24 "../CurrentTest.h"
 12058              		.file 25 "../AssertException.h"
 12059              		.file 26 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h"
 12060              		.file 27 "<built-in>"
 12061              		.file 28 "/usr/include/x86_64-linux-gnu/bits/types/wint_t.h"
 12062              		.file 29 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h"
 12063              		.file 30 "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h"
 12064              		.file 31 "/usr/include/x86_64-linux-gnu/bits/types/__FILE.h"
 12065              		.file 32 "/usr/include/c++/11/cwchar"
 12066              		.file 33 "/usr/include/c++/11/bits/char_traits.h"
 12067              		.file 34 "/usr/include/x86_64-linux-gnu/c++/11/bits/c++config.h"
 12068              		.file 35 "/usr/include/c++/11/clocale"
 12069              		.file 36 "/usr/include/c++/11/bits/basic_string.tcc"
 12070              		.file 37 "/usr/include/c++/11/sstream"
 12071              		.file 38 "/usr/include/c++/11/bits/stringfwd.h"
 12072              		.file 39 "/usr/include/c++/11/cwctype"
 12073              		.file 40 "/usr/include/c++/11/bits/vector.tcc"
 12074              		.file 41 "/usr/include/c++/11/iosfwd"
 12075              		.file 42 "/usr/include/c++/11/bits/stl_iterator_base_types.h"
 12076              		.file 43 "/usr/include/c++/11/bits/cpp_type_traits.h"
 12077              		.file 44 "/usr/include/c++/11/ostream"
 12078              		.file 45 "/usr/include/c++/11/bits/basic_ios.h"
 12079              		.file 46 "/usr/include/wchar.h"
 12080              		.file 47 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h"
 12081              		.file 48 "/usr/include/c++/11/debug/debug.h"
 12082              		.file 49 "/usr/include/c++/11/bits/predefined_ops.h"
 12083              		.file 50 "/usr/include/c++/11/bits/stl_iterator.h"
 12084              		.file 51 "/usr/include/locale.h"
 12085              		.file 52 "/usr/include/x86_64-linux-gnu/bits/types.h"
 12086              		.file 53 "/usr/include/x86_64-linux-gnu/bits/setjmp.h"
 12087              		.file 54 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h"
 12088              		.file 55 "/usr/include/x86_64-linux-gnu/bits/types/struct___jmp_buf_tag.h"
 12089              		.file 56 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h"
 12090              		.file 57 "/usr/include/wctype.h"
 12091              		.file 58 "/usr/include/setjmp.h"
 12092              		.file 59 "/usr/include/x86_64-linux-gnu/bits/types/__sigval_t.h"
 12093              		.file 60 "/usr/include/x86_64-linux-gnu/bits/types/siginfo_t.h"
 12094              		.file 61 "/usr/include/signal.h"
 12095              		.file 62 "/usr/include/x86_64-linux-gnu/bits/sigaction.h"
 12096              		.file 63 "/usr/include/c++/11/new"
 34345              		.align 8
 34348              	DW.ref._ZTIN8UnitTest15AssertExceptionE:
 34349 0000 00000000 		.quad	_ZTIN8UnitTest15AssertExceptionE
 34349      00000000 
 34350              		.hidden	DW.ref._ZTISt9exception
 34351              		.weak	DW.ref._ZTISt9exception
 34352              		.section	.data.rel.local.DW.ref._ZTISt9exception,"awG",@progbits,DW.ref._ZTISt9exception,comdat
 34353              		.align 8
 34356              	DW.ref._ZTISt9exception:
 34357 0000 00000000 		.quad	_ZTISt9exception
 34357      00000000 
 34358              		.hidden	DW.ref.__gxx_personality_v0
 34359              		.weak	DW.ref.__gxx_personality_v0
 34360              		.section	.data.rel.local.DW.ref.__gxx_personality_v0,"awG",@progbits,DW.ref.__gxx_personality_v0,c
 34361              		.align 8
 34364              	DW.ref.__gxx_personality_v0:
 34365 0000 00000000 		.quad	__gxx_personality_v0
 34365      00000000 
 34366              		.hidden	__dso_handle
 34367              		.ident	"GCC: (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0"
 34368              		.section	.note.GNU-stack,"",@progbits
 34369              		.section	.note.gnu.property,"a"
 34370              		.align 8
 34371 0000 04000000 		.long	1f - 0f
 34372 0004 10000000 		.long	4f - 1f
 34373 0008 05000000 		.long	5
 34374              	0:
 34375 000c 474E5500 		.string	"GNU"
 34376              	1:
 34377              		.align 8
 34378 0010 020000C0 		.long	0xc0000002
 34379 0014 04000000 		.long	3f - 2f
 34380              	2:
 34381 0018 03000000 		.long	0x3
 34382              	3:
 34383 001c 00000000 		.align 8
 34384              	4:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 TestXmlTestReporter.cpp
     /tmp/ccQioqsS.s:11     .text._ZN13UnitTestSuite12GetSuiteNameEv:0000000000000000 _ZN13UnitTestSuite12GetSuiteNameEv
     /tmp/ccQioqsS.s:35     .text._ZN8UnitTest15MemoryOutStreamC1Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamC1Ev
     /tmp/ccQioqsS.s:34364  .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccQioqsS.s:9954   .data.rel.ro.local._ZTTN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTTN8UnitTest15MemoryOutStreamE
     /tmp/ccQioqsS.s:9938   .data.rel.ro.local._ZTVN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTVN8UnitTest15MemoryOutStreamE
     /tmp/ccQioqsS.s:147    .text:0000000000000000 _ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
     /tmp/ccQioqsS.s:226    .text:000000000000005a _ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
     /tmp/ccQioqsS.s:10670  .text._ZN8UnitTest15XmlTestReporterD2Ev:0000000000000000 _ZN8UnitTest15XmlTestReporterD1Ev
     /tmp/ccQioqsS.s:302    .text:00000000000000ac _ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/ccQioqsS.s:302    .text:00000000000000ac _ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/ccQioqsS.s:339    .text:00000000000000da _ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedC2Ev
     /tmp/ccQioqsS.s:9829   .data.rel.ro.local:0000000000000118 _ZTVN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE
     /tmp/ccQioqsS.s:339    .text:00000000000000da _ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedC1Ev
     /tmp/ccQioqsS.s:378    .bss:0000000000000000 _ZN12_GLOBAL__N_162testXmlTestReporterFixtureMultipleCharactersAreEscapedInstanceE
     /tmp/ccQioqsS.s:378    .bss:0000000000000038 _ZN12_GLOBAL__N_155adderXmlTestReporterFixtureMultipleCharactersAreEscapedE
     /tmp/ccQioqsS.s:383    .text:000000000000012a _ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperD2Ev
     /tmp/ccQioqsS.s:383    .text:000000000000012a _ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperD1Ev
     /tmp/ccQioqsS.s:420    .text:0000000000000146 _ZNK12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscaped7RunImplEv
     /tmp/ccQioqsS.s:5897   .text:0000000000002eeb _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccQioqsS.s:9999   .text._ZN8UnitTest15MemoryOutStreamD1Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamD1Ev
     /tmp/ccQioqsS.s:34356  .data.rel.local.DW.ref._ZTISt9exception:0000000000000000 DW.ref._ZTISt9exception
     /tmp/ccQioqsS.s:34348  .data.rel.local.DW.ref._ZTIN8UnitTest15AssertExceptionE:0000000000000000 DW.ref._ZTIN8UnitTest15AssertExceptionE
     /tmp/ccQioqsS.s:788    .text:0000000000000472 _ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelper7RunImplEv
     /tmp/ccQioqsS.s:6275   .text._ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
     /tmp/ccQioqsS.s:1002   .text:000000000000065a _ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/ccQioqsS.s:1002   .text:000000000000065a _ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/ccQioqsS.s:1038   .text:0000000000000688 _ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledC2Ev
     /tmp/ccQioqsS.s:9721   .data.rel.ro.local:00000000000000f0 _ZTVN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE
     /tmp/ccQioqsS.s:1038   .text:0000000000000688 _ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledC1Ev
     /tmp/ccQioqsS.s:1077   .bss:0000000000000040 _ZN12_GLOBAL__N_174testXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledInstanceE
     /tmp/ccQioqsS.s:1077   .bss:0000000000000078 _ZN12_GLOBAL__N_167adderXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE
     /tmp/ccQioqsS.s:1082   .text:00000000000006d8 _ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperD2Ev
     /tmp/ccQioqsS.s:1082   .text:00000000000006d8 _ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperD1Ev
     /tmp/ccQioqsS.s:1109   .text:00000000000006f4 _ZNK12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalled7RunImplEv
     /tmp/ccQioqsS.s:6422   .text:00000000000031da _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccQioqsS.s:1477   .text:0000000000000a20 _ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelper7RunImplEv
     /tmp/ccQioqsS.s:6794   .text._ZN8UnitTest5CheckIbEEbT_:0000000000000000 _ZN8UnitTest5CheckIbEEbT_
     /tmp/ccQioqsS.s:1825   .text:0000000000000d1c _ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/ccQioqsS.s:1825   .text:0000000000000d1c _ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/ccQioqsS.s:1860   .text:0000000000000d4a _ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatC2Ev
     /tmp/ccQioqsS.s:9613   .data.rel.ro.local:00000000000000c8 _ZTVN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE
     /tmp/ccQioqsS.s:1860   .text:0000000000000d4a _ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatC1Ev
     /tmp/ccQioqsS.s:1899   .bss:0000000000000080 _ZN12_GLOBAL__N_158testXmlTestReporterFixtureEmptyReportSummaryFormatInstanceE
     /tmp/ccQioqsS.s:1899   .bss:00000000000000b8 _ZN12_GLOBAL__N_151adderXmlTestReporterFixtureEmptyReportSummaryFormatE
     /tmp/ccQioqsS.s:1904   .text:0000000000000d9a _ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperD2Ev
     /tmp/ccQioqsS.s:1904   .text:0000000000000d9a _ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperD1Ev
     /tmp/ccQioqsS.s:1931   .text:0000000000000db6 _ZNK12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormat7RunImplEv
     /tmp/ccQioqsS.s:6817   .text:00000000000034c9 _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccQioqsS.s:2288   .text:00000000000010e2 _ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelper7RunImplEv
     /tmp/ccQioqsS.s:2469   .text:0000000000001226 _ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/ccQioqsS.s:2469   .text:0000000000001226 _ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/ccQioqsS.s:2505   .text:0000000000001254 _ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatC2Ev
     /tmp/ccQioqsS.s:9505   .data.rel.ro.local:00000000000000a0 _ZTVN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE
     /tmp/ccQioqsS.s:2505   .text:0000000000001254 _ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatC1Ev
     /tmp/ccQioqsS.s:2544   .bss:00000000000000c0 _ZN12_GLOBAL__N_173testXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatInstanceE
     /tmp/ccQioqsS.s:2544   .bss:00000000000000f8 _ZN12_GLOBAL__N_166adderXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE
     /tmp/ccQioqsS.s:2549   .text:00000000000012a4 _ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperD2Ev
     /tmp/ccQioqsS.s:2549   .text:00000000000012a4 _ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperD1Ev
     /tmp/ccQioqsS.s:2576   .text:00000000000012c0 _ZNK12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormat7RunImplEv
     /tmp/ccQioqsS.s:7187   .text:00000000000037b8 _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccQioqsS.s:2933   .text:00000000000015ec _ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelper7RunImplEv
     /tmp/ccQioqsS.s:3130   .text:0000000000001788 _ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/ccQioqsS.s:3130   .text:0000000000001788 _ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/ccQioqsS.s:3166   .text:00000000000017b6 _ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatC2Ev
     /tmp/ccQioqsS.s:9397   .data.rel.ro.local:0000000000000078 _ZTVN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE
     /tmp/ccQioqsS.s:3166   .text:00000000000017b6 _ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatC1Ev
     /tmp/ccQioqsS.s:3205   .bss:0000000000000100 _ZN12_GLOBAL__N_169testXmlTestReporterFixtureSingleFailedTestReportSummaryFormatInstanceE
     /tmp/ccQioqsS.s:3205   .bss:0000000000000138 _ZN12_GLOBAL__N_162adderXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE
     /tmp/ccQioqsS.s:3210   .text:0000000000001806 _ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperD2Ev
     /tmp/ccQioqsS.s:3210   .text:0000000000001806 _ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperD1Ev
     /tmp/ccQioqsS.s:3237   .text:0000000000001822 _ZNK12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormat7RunImplEv
     /tmp/ccQioqsS.s:7557   .text:0000000000003aa7 _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccQioqsS.s:3600   .text:0000000000001b4e _ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelper7RunImplEv
     /tmp/ccQioqsS.s:3805   .text:0000000000001d0e _ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/ccQioqsS.s:3805   .text:0000000000001d0e _ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/ccQioqsS.s:3840   .text:0000000000001d3c _ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedC2Ev
     /tmp/ccQioqsS.s:9289   .data.rel.ro.local:0000000000000050 _ZTVN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE
     /tmp/ccQioqsS.s:3840   .text:0000000000001d3c _ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedC1Ev
     /tmp/ccQioqsS.s:3879   .bss:0000000000000140 _ZN12_GLOBAL__N_160testXmlTestReporterFixtureFailureMessageIsXMLEscapedInstanceE
     /tmp/ccQioqsS.s:3879   .bss:0000000000000178 _ZN12_GLOBAL__N_153adderXmlTestReporterFixtureFailureMessageIsXMLEscapedE
     /tmp/ccQioqsS.s:3884   .text:0000000000001d8c _ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperD2Ev
     /tmp/ccQioqsS.s:3884   .text:0000000000001d8c _ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperD1Ev
     /tmp/ccQioqsS.s:3911   .text:0000000000001da8 _ZNK12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscaped7RunImplEv
     /tmp/ccQioqsS.s:7927   .text:0000000000003d96 _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccQioqsS.s:4270   .text:00000000000020d4 _ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelper7RunImplEv
     /tmp/ccQioqsS.s:4484   .text:00000000000022bc _ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/ccQioqsS.s:4484   .text:00000000000022bc _ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/ccQioqsS.s:4519   .text:00000000000022ea _ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessC2Ev
     /tmp/ccQioqsS.s:9181   .data.rel.ro.local:0000000000000028 _ZTVN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE
     /tmp/ccQioqsS.s:4519   .text:00000000000022ea _ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessC1Ev
     /tmp/ccQioqsS.s:4558   .bss:0000000000000180 _ZN12_GLOBAL__N_157testXmlTestReporterFixtureOneFailureAndOneSuccessInstanceE
     /tmp/ccQioqsS.s:4558   .bss:00000000000001b8 _ZN12_GLOBAL__N_150adderXmlTestReporterFixtureOneFailureAndOneSuccessE
     /tmp/ccQioqsS.s:4563   .text:000000000000233a _ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperD2Ev
     /tmp/ccQioqsS.s:4563   .text:000000000000233a _ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperD1Ev
     /tmp/ccQioqsS.s:4590   .text:0000000000002356 _ZNK12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccess7RunImplEv
     /tmp/ccQioqsS.s:8297   .text:0000000000004085 _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccQioqsS.s:4956   .text:0000000000002682 _ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelper7RunImplEv
     /tmp/ccQioqsS.s:5195   .text:00000000000028e4 _ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/ccQioqsS.s:5195   .text:00000000000028e4 _ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/ccQioqsS.s:5230   .text:0000000000002912 _ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresC2Ev
     /tmp/ccQioqsS.s:9073   .data.rel.ro.local:0000000000000000 _ZTVN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE
     /tmp/ccQioqsS.s:5230   .text:0000000000002912 _ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresC1Ev
     /tmp/ccQioqsS.s:5269   .bss:00000000000001c0 _ZN12_GLOBAL__N_150testXmlTestReporterFixtureMultipleFailuresInstanceE
     /tmp/ccQioqsS.s:5269   .bss:00000000000001f8 _ZN12_GLOBAL__N_143adderXmlTestReporterFixtureMultipleFailuresE
     /tmp/ccQioqsS.s:5274   .text:0000000000002962 _ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperD2Ev
     /tmp/ccQioqsS.s:5274   .text:0000000000002962 _ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperD1Ev
     /tmp/ccQioqsS.s:5301   .text:000000000000297e _ZNK12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailures7RunImplEv
     /tmp/ccQioqsS.s:8667   .text:0000000000004374 _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccQioqsS.s:5661   .text:0000000000002caa _ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelper7RunImplEv
     /tmp/ccQioqsS.s:9039   .text._ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE:0000000000000000 _ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE
     /tmp/ccQioqsS.s:10213  .data.rel.ro:0000000000000000 _ZTIN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE
     /tmp/ccQioqsS.s:9082   .text:0000000000004664 _ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD1Ev
     /tmp/ccQioqsS.s:9113   .text:0000000000004692 _ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD0Ev
     /tmp/ccQioqsS.s:9082   .text:0000000000004664 _ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD2Ev
     /tmp/ccQioqsS.s:10227  .data.rel.ro:0000000000000018 _ZTIN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE
     /tmp/ccQioqsS.s:9190   .text:00000000000046e2 _ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD1Ev
     /tmp/ccQioqsS.s:9221   .text:0000000000004710 _ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD0Ev
     /tmp/ccQioqsS.s:9190   .text:00000000000046e2 _ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD2Ev
     /tmp/ccQioqsS.s:10241  .data.rel.ro:0000000000000030 _ZTIN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE
     /tmp/ccQioqsS.s:9298   .text:0000000000004760 _ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD1Ev
     /tmp/ccQioqsS.s:9329   .text:000000000000478e _ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD0Ev
     /tmp/ccQioqsS.s:9298   .text:0000000000004760 _ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD2Ev
     /tmp/ccQioqsS.s:10255  .data.rel.ro:0000000000000048 _ZTIN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE
     /tmp/ccQioqsS.s:9406   .text:00000000000047de _ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD1Ev
     /tmp/ccQioqsS.s:9437   .text:000000000000480c _ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD0Ev
     /tmp/ccQioqsS.s:9406   .text:00000000000047de _ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD2Ev
     /tmp/ccQioqsS.s:10269  .data.rel.ro:0000000000000060 _ZTIN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE
     /tmp/ccQioqsS.s:9514   .text:000000000000485c _ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD1Ev
     /tmp/ccQioqsS.s:9545   .text:000000000000488a _ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD0Ev
     /tmp/ccQioqsS.s:9514   .text:000000000000485c _ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD2Ev
     /tmp/ccQioqsS.s:10283  .data.rel.ro:0000000000000078 _ZTIN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE
     /tmp/ccQioqsS.s:9622   .text:00000000000048da _ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD1Ev
     /tmp/ccQioqsS.s:9653   .text:0000000000004908 _ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD0Ev
     /tmp/ccQioqsS.s:9622   .text:00000000000048da _ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD2Ev
     /tmp/ccQioqsS.s:10297  .data.rel.ro:0000000000000090 _ZTIN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE
     /tmp/ccQioqsS.s:9730   .text:0000000000004958 _ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD1Ev
     /tmp/ccQioqsS.s:9761   .text:0000000000004986 _ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD0Ev
     /tmp/ccQioqsS.s:9730   .text:0000000000004958 _ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD2Ev
     /tmp/ccQioqsS.s:10311  .data.rel.ro:00000000000000a8 _ZTIN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE
     /tmp/ccQioqsS.s:9838   .text:00000000000049d6 _ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD1Ev
     /tmp/ccQioqsS.s:9869   .text:0000000000004a04 _ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD0Ev
     /tmp/ccQioqsS.s:9838   .text:00000000000049d6 _ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD2Ev
     /tmp/ccQioqsS.s:10320  .data.rel.ro._ZTIN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTIN8UnitTest15MemoryOutStreamE
     /tmp/ccQioqsS.s:10125  .text._ZN8UnitTest15MemoryOutStreamD0Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamD0Ev
     /tmp/ccQioqsS.s:10110  .text._ZN8UnitTest15MemoryOutStreamD1Ev:00000000000000b6 _ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
     /tmp/ccQioqsS.s:10192  .text._ZN8UnitTest15MemoryOutStreamD0Ev:000000000000004f _ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
     /tmp/ccQioqsS.s:9967   .data.rel.ro._ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE:0000000000000000 _ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
     /tmp/ccQioqsS.s:9984   .data.rel.ro._ZTCN8UnitTest15MemoryOutStreamE0_So:0000000000000000 _ZTCN8UnitTest15MemoryOutStreamE0_So
     /tmp/ccQioqsS.s:10207  .rodata:0000000000000980 _ZTSN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE
     /tmp/ccQioqsS.s:10221  .rodata:00000000000009c0 _ZTSN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE
     /tmp/ccQioqsS.s:10235  .rodata:0000000000000a20 _ZTSN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE
     /tmp/ccQioqsS.s:10249  .rodata:0000000000000a80 _ZTSN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE
     /tmp/ccQioqsS.s:10263  .rodata:0000000000000ae0 _ZTSN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE
     /tmp/ccQioqsS.s:10277  .rodata:0000000000000b40 _ZTSN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE
     /tmp/ccQioqsS.s:10291  .rodata:0000000000000ba0 _ZTSN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE
     /tmp/ccQioqsS.s:10305  .rodata:0000000000000c00 _ZTSN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE
     /tmp/ccQioqsS.s:10329  .rodata._ZTSN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTSN8UnitTest15MemoryOutStreamE
     /tmp/ccQioqsS.s:10333  .text:0000000000004a53 _Z41__static_initialization_and_destruction_0ii
     /tmp/ccQioqsS.s:10517  .text._ZN8UnitTest20DeferredTestReporterD2Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterD2Ev
     /tmp/ccQioqsS.s:10773  .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
     /tmp/ccQioqsS.s:10517  .text._ZN8UnitTest20DeferredTestReporterD2Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterD1Ev
     /tmp/ccQioqsS.s:10602  .text._ZN8UnitTest20DeferredTestReporterD0Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterD0Ev
     /tmp/ccQioqsS.s:10670  .text._ZN8UnitTest15XmlTestReporterD2Ev:0000000000000000 _ZN8UnitTest15XmlTestReporterD2Ev
     /tmp/ccQioqsS.s:10705  .text._ZN8UnitTest15XmlTestReporterD0Ev:0000000000000000 _ZN8UnitTest15XmlTestReporterD0Ev
     /tmp/ccQioqsS.s:10773  .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
     /tmp/ccQioqsS.s:10980  .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
     /tmp/ccQioqsS.s:11003  .text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E:0000000000000000 _ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E
     /tmp/ccQioqsS.s:10893  .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
     /tmp/ccQioqsS.s:10862  .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev
     /tmp/ccQioqsS.s:11036  .text._ZNSaIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEED2Ev
     /tmp/ccQioqsS.s:10862  .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
     /tmp/ccQioqsS.s:11068  .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m
     /tmp/ccQioqsS.s:10893  .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
     /tmp/ccQioqsS.s:11105  .text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_:0000000000000000 _ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_
     /tmp/ccQioqsS.s:11137  .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev
     /tmp/ccQioqsS.s:11036  .text._ZNSaIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEED1Ev
     /tmp/ccQioqsS.s:11162  .text._ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEES2_E10deallocateERS3_PS2_m:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEES2_E10deallocateERS3_PS2_m
     /tmp/ccQioqsS.s:11195  .text._ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_:0000000000000000 _ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_
     /tmp/ccQioqsS.s:11137  .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED1Ev
     /tmp/ccQioqsS.s:11237  .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m
     /tmp/ccQioqsS.s:11266  .text._ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_:0000000000000000 _ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_
     /tmp/ccQioqsS.s:11416  .text._ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_:0000000000000000 _ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_
     /tmp/ccQioqsS.s:11291  .text._ZN8UnitTest18DeferredTestResultD2Ev:0000000000000000 _ZN8UnitTest18DeferredTestResultD2Ev
     /tmp/ccQioqsS.s:11444  .text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:0000000000000000 _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev
     /tmp/ccQioqsS.s:11291  .text._ZN8UnitTest18DeferredTestResultD2Ev:0000000000000000 _ZN8UnitTest18DeferredTestResultD1Ev
     /tmp/ccQioqsS.s:11444  .text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:0000000000000000 _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev
     /tmp/ccQioqsS.s:11653  .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_M_get_Tp_allocatorEv:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_M_get_Tp_allocatorEv
     /tmp/ccQioqsS.s:11676  .text._ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT0_E:0000000000000000 _ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT0_E
     /tmp/ccQioqsS.s:11563  .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev
     /tmp/ccQioqsS.s:11532  .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD2Ev
     /tmp/ccQioqsS.s:11708  .text._ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:0000000000000000 _ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev
     /tmp/ccQioqsS.s:11532  .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD1Ev
     /tmp/ccQioqsS.s:11739  .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_M_deallocateEPS7_m:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_M_deallocateEPS7_m
     /tmp/ccQioqsS.s:11563  .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev
     /tmp/ccQioqsS.s:11776  .text._ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_:0000000000000000 _ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_
     /tmp/ccQioqsS.s:11807  .text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev
     /tmp/ccQioqsS.s:11708  .text._ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:0000000000000000 _ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev
     /tmp/ccQioqsS.s:11831  .text._ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES8_E10deallocateERS9_PS8_m:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES8_E10deallocateERS9_PS8_m
     /tmp/ccQioqsS.s:11863  .text._ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvT_SB_:0000000000000000 _ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvT_SB_
     /tmp/ccQioqsS.s:11807  .text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev
     /tmp/ccQioqsS.s:11905  .text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateEPS8_m:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateEPS8_m
     /tmp/ccQioqsS.s:11934  .text._ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_:0000000000000000 _ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_
     /tmp/ccQioqsS.s:11990  .text._ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_:0000000000000000 _ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_
     /tmp/ccQioqsS.s:11958  .text._ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:0000000000000000 _ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev
     /tmp/ccQioqsS.s:11958  .text._ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:0000000000000000 _ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev
     /tmp/ccQioqsS.s:12016  .text:0000000000004d2f _GLOBAL__sub_I_TestXmlTestReporter.cpp
                           .group:0000000000000000 _ZN8UnitTest20DeferredTestReporterD5Ev
                           .group:0000000000000000 _ZN8UnitTest15XmlTestReporterD5Ev
                           .group:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED5Ev
                           .group:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEED5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED5Ev
                           .group:0000000000000000 _ZN8UnitTest18DeferredTestResultD5Ev
                           .group:0000000000000000 _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED5Ev
                           .group:0000000000000000 _ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED5Ev
                           .group:0000000000000000 _ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED5Ev

UNDEFINED SYMBOLS
_ZNSt9basic_iosIcSt11char_traitsIcEEC2Ev
_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC2Ev
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev
_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
_Unwind_Resume
__gxx_personality_v0
_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC1Ev
_ZN8UnitTest15XmlTestReporterC1ERSo
_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev
_ZN8UnitTest4TestC2EPKcS2_S2_i
__cxa_begin_catch
_ZN8UnitTest11CurrentTest7ResultsEv
_ZNK8UnitTest15AssertException10LineNumberEv
_ZNK8UnitTest15AssertException8FilenameEv
_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
__cxa_end_catch
_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
_ZNK8UnitTest15MemoryOutStream7GetTextEv
_ZN8UnitTest11TestDetailsC1ERKS0_i
__stack_chk_fail
_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif
_ZN8UnitTest11CurrentTest7DetailsEv
_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv
_ZN8UnitTest16SignalTranslatorC1Ev
_ZN8UnitTest16SignalTranslator12s_jumpTargetE
__sigsetjmp
__cxa_allocate_exception
_ZTIPKc
__cxa_throw
_ZN8UnitTest16SignalTranslatorD1Ev
_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
_ZN8UnitTest4TestD2Ev
_ZdlPv
_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
_ZTISo
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTIN8UnitTest4TestE
__dso_handle
__cxa_atexit
_ZN8UnitTest4Test11GetTestListEv
_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
_ZTVN8UnitTest20DeferredTestReporterE
_ZN8UnitTest12TestReporterD2Ev
_ZTVN8UnitTest15XmlTestReporterE
_ZTIN8UnitTest15AssertExceptionE
_ZTISt9exception
