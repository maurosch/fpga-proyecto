   1              		.file	"main.c"
   2              		.text
   3              		.section	.rodata.str1.1,"aMS",@progbits,1
   4              	.LC0:
   5 0000 646F5772 		.string	"doWrite()"
   5      69746528 
   5      2900
   6              		.text
   7              		.p2align 4
   9              	doWrite.constprop.0:
  10              	.LFB44:
  11              		.cfi_startproc
  12 0000 4157     		pushq	%r15
  13              		.cfi_def_cfa_offset 16
  14              		.cfi_offset 15, -16
  15 0002 4156     		pushq	%r14
  16              		.cfi_def_cfa_offset 24
  17              		.cfi_offset 14, -24
  18 0004 4155     		pushq	%r13
  19              		.cfi_def_cfa_offset 32
  20              		.cfi_offset 13, -32
  21 0006 4154     		pushq	%r12
  22              		.cfi_def_cfa_offset 40
  23              		.cfi_offset 12, -40
  24 0008 55       		pushq	%rbp
  25              		.cfi_def_cfa_offset 48
  26              		.cfi_offset 6, -48
  27 0009 53       		pushq	%rbx
  28              		.cfi_def_cfa_offset 56
  29              		.cfi_offset 3, -56
  30 000a 4C8D9C24 		leaq	-65536(%rsp), %r11
  30      0000FFFF 
  31              		.cfi_def_cfa 11, 65592
  32              	.LPSRL0:
  33 0012 4881EC00 		subq	$4096, %rsp
  33      100000
  34 0019 48830C24 		orq	$0, (%rsp)
  34      00
  35 001e 4C39DC   		cmpq	%r11, %rsp
  36 0021 75EF     		jne	.LPSRL0
  37              		.cfi_def_cfa_register 7
  38 0023 4883EC38 		subq	$56, %rsp
  39              		.cfi_def_cfa_offset 65648
  40 0027 4531ED   		xorl	%r13d, %r13d
  41 002a 31DB     		xorl	%ebx, %ebx
  42 002c 48894C24 		movq	%rcx, 16(%rsp)
  42      10
  43 0031 4989FE   		movq	%rdi, %r14
  44 0034 4889D5   		movq	%rdx, %rbp
  45 0037 4D89CC   		movq	%r9, %r12
  46 003a 4C894424 		movq	%r8, 24(%rsp)
  46      18
  47 003f 4C8D7C24 		leaq	32(%rsp), %r15
  47      20
  48 0044 64488B04 		movq	%fs:40, %rax
  48      25280000 
  48      00
  49 004d 48898424 		movq	%rax, 65576(%rsp)
  49      28000100 
  50 0055 31C0     		xorl	%eax, %eax
  51 0057 400FB6C6 		movzbl	%sil, %eax
  52 005b 8944240C 		movl	%eax, 12(%rsp)
  53 005f 90       		.p2align 4,,10
  54              		.p2align 3
  55              	.L9:
  56 0060 BAFBFF00 		movl	$65531, %edx
  56      00
  57 0065 4889E9   		movq	%rbp, %rcx
  58 0068 BE010000 		movl	$1, %esi
  58      00
  59 006d 4C89FF   		movq	%r15, %rdi
  60 0070 E8000000 		call	fread@PLT
  60      00
  61 0075 4889C2   		movq	%rax, %rdx
  62 0078 4885C0   		testq	%rax, %rax
  63 007b 7553     		jne	.L63
  64              	.L2:
  65 007d 4C89E6   		movq	%r12, %rsi
  66 0080 4C89F7   		movq	%r14, %rdi
  67 0083 E8000000 		call	flAwaitAsyncWrites@PLT
  67      00
  68 0088 85C0     		testl	%eax, %eax
  69 008a 0F85C801 		jne	.L3
  69      0000
  70 0090 488B7C24 		movq	24(%rsp), %rdi
  70      18
  71 0095 66891F   		movw	%bx, (%rdi)
  72 0098 488B5C24 		movq	16(%rsp), %rbx
  72      10
  73 009d 4C892B   		movq	%r13, (%rbx)
  74              	.L6:
  75              	.L1:
  76 00a0 488B9424 		movq	65576(%rsp), %rdx
  76      28000100 
  77 00a8 64482B14 		subq	%fs:40, %rdx
  77      25280000 
  77      00
  78 00b1 0F85BA01 		jne	.L64
  78      0000
  79 00b7 4881C438 		addq	$65592, %rsp
  79      000100
  80              		.cfi_remember_state
  81              		.cfi_def_cfa_offset 56
  82 00be 5B       		popq	%rbx
  83              		.cfi_def_cfa_offset 48
  84 00bf 5D       		popq	%rbp
  85              		.cfi_def_cfa_offset 40
  86 00c0 415C     		popq	%r12
  87              		.cfi_def_cfa_offset 32
  88 00c2 415D     		popq	%r13
  89              		.cfi_def_cfa_offset 24
  90 00c4 415E     		popq	%r14
  91              		.cfi_def_cfa_offset 16
  92 00c6 415F     		popq	%r15
  93              		.cfi_def_cfa_offset 8
  94 00c8 C3       		ret
  95 00c9 0F1F8000 		.p2align 4,,10
  95      000000
  96              		.p2align 3
  97              	.L63:
  98              		.cfi_restore_state
  99 00d0 8B74240C 		movl	12(%rsp), %esi
 100 00d4 4D89E0   		movq	%r12, %r8
 101 00d7 4C89F9   		movq	%r15, %rcx
 102 00da 4C89F7   		movq	%r14, %rdi
 103 00dd 4901C5   		addq	%rax, %r13
 104 00e0 48890424 		movq	%rax, (%rsp)
 105 00e4 E8000000 		call	flWriteChannelAsync@PLT
 105      00
 106 00e9 85C0     		testl	%eax, %eax
 107 00eb 0F856701 		jne	.L3
 107      0000
 108 00f1 488B1424 		movq	(%rsp), %rdx
 109 00f5 4C89F8   		movq	%r15, %rax
 110 00f8 488D4AFF 		leaq	-1(%rdx), %rcx
 111 00fc 4883F90E 		cmpq	$14, %rcx
 112 0100 767C     		jbe	.L4
 113 0102 4889D6   		movq	%rdx, %rsi
 114 0105 660FEFC9 		pxor	%xmm1, %xmm1
 115 0109 660FEFD2 		pxor	%xmm2, %xmm2
 116 010d 4883E6F0 		andq	$-16, %rsi
 117 0111 4C01FE   		addq	%r15, %rsi
 118              		.p2align 4,,10
 119 0114 0F1F4000 		.p2align 3
 120              	.L5:
 121 0118 660F6F00 		movdqa	(%rax), %xmm0
 122 011c 4883C010 		addq	$16, %rax
 123 0120 660F6FD8 		movdqa	%xmm0, %xmm3
 124 0124 660F68C2 		punpckhbw	%xmm2, %xmm0
 125 0128 660F60DA 		punpcklbw	%xmm2, %xmm3
 126 012c 660FFDC3 		paddw	%xmm3, %xmm0
 127 0130 660FFDC8 		paddw	%xmm0, %xmm1
 128 0134 4839C6   		cmpq	%rax, %rsi
 129 0137 75DF     		jne	.L5
 130 0139 660F6FC1 		movdqa	%xmm1, %xmm0
 131 013d 4889D6   		movq	%rdx, %rsi
 132 0140 660F73D8 		psrldq	$8, %xmm0
 132      08
 133 0145 4883E6F0 		andq	$-16, %rsi
 134 0149 660FFDC8 		paddw	%xmm0, %xmm1
 135 014d 4829F1   		subq	%rsi, %rcx
 136 0150 660F6FC1 		movdqa	%xmm1, %xmm0
 137 0154 660F73D8 		psrldq	$4, %xmm0
 137      04
 138 0159 660FFDC8 		paddw	%xmm0, %xmm1
 139 015d 660F6FC1 		movdqa	%xmm1, %xmm0
 140 0161 660F73D8 		psrldq	$2, %xmm0
 140      02
 141 0166 660FFDC8 		paddw	%xmm0, %xmm1
 142 016a 660FC5C1 		pextrw	$0, %xmm1, %eax
 142      00
 143 016f 01C3     		addl	%eax, %ebx
 144 0171 498D0437 		leaq	(%r15,%rsi), %rax
 145 0175 4839F2   		cmpq	%rsi, %rdx
 146 0178 0F84C200 		je	.L7
 146      0000
 147              	.L4:
 148 017e 0FB630   		movzbl	(%rax), %esi
 149 0181 01F3     		addl	%esi, %ebx
 150 0183 4885C9   		testq	%rcx, %rcx
 151 0186 0F84B400 		je	.L7
 151      0000
 152 018c 0FB67001 		movzbl	1(%rax), %esi
 153 0190 01F3     		addl	%esi, %ebx
 154 0192 4883F901 		cmpq	$1, %rcx
 155 0196 0F84A400 		je	.L7
 155      0000
 156 019c 0FB67002 		movzbl	2(%rax), %esi
 157 01a0 01F3     		addl	%esi, %ebx
 158 01a2 4883F902 		cmpq	$2, %rcx
 159 01a6 0F849400 		je	.L7
 159      0000
 160 01ac 0FB67003 		movzbl	3(%rax), %esi
 161 01b0 01F3     		addl	%esi, %ebx
 162 01b2 4883F903 		cmpq	$3, %rcx
 163 01b6 0F848400 		je	.L7
 163      0000
 164 01bc 0FB67004 		movzbl	4(%rax), %esi
 165 01c0 01F3     		addl	%esi, %ebx
 166 01c2 4883F904 		cmpq	$4, %rcx
 167 01c6 7478     		je	.L7
 168 01c8 0FB67005 		movzbl	5(%rax), %esi
 169 01cc 01F3     		addl	%esi, %ebx
 170 01ce 4883F905 		cmpq	$5, %rcx
 171 01d2 746C     		je	.L7
 172 01d4 0FB67006 		movzbl	6(%rax), %esi
 173 01d8 01F3     		addl	%esi, %ebx
 174 01da 4883F906 		cmpq	$6, %rcx
 175 01de 7460     		je	.L7
 176 01e0 0FB67007 		movzbl	7(%rax), %esi
 177 01e4 01F3     		addl	%esi, %ebx
 178 01e6 4883F907 		cmpq	$7, %rcx
 179 01ea 7454     		je	.L7
 180 01ec 0FB67008 		movzbl	8(%rax), %esi
 181 01f0 01F3     		addl	%esi, %ebx
 182 01f2 4883F908 		cmpq	$8, %rcx
 183 01f6 7448     		je	.L7
 184 01f8 0FB67009 		movzbl	9(%rax), %esi
 185 01fc 01F3     		addl	%esi, %ebx
 186 01fe 4883F909 		cmpq	$9, %rcx
 187 0202 743C     		je	.L7
 188 0204 0FB6700A 		movzbl	10(%rax), %esi
 189 0208 01F3     		addl	%esi, %ebx
 190 020a 4883F90A 		cmpq	$10, %rcx
 191 020e 7430     		je	.L7
 192 0210 0FB6700B 		movzbl	11(%rax), %esi
 193 0214 01F3     		addl	%esi, %ebx
 194 0216 4883F90B 		cmpq	$11, %rcx
 195 021a 7424     		je	.L7
 196 021c 0FB6700C 		movzbl	12(%rax), %esi
 197 0220 01F3     		addl	%esi, %ebx
 198 0222 4883F90C 		cmpq	$12, %rcx
 199 0226 7418     		je	.L7
 200 0228 0FB6700D 		movzbl	13(%rax), %esi
 201 022c 01F3     		addl	%esi, %ebx
 202 022e 4883F90D 		cmpq	$13, %rcx
 203 0232 740C     		je	.L7
 204 0234 0FB6400E 		movzbl	14(%rax), %eax
 205 0238 01C3     		addl	%eax, %ebx
 206 023a 660F1F44 		.p2align 4,,10
 206      0000
 207              		.p2align 3
 208              	.L7:
 209 0240 4881FAFB 		cmpq	$65531, %rdx
 209      FF0000
 210 0247 0F8413FE 		je	.L9
 210      FFFF
 211 024d E92BFEFF 		jmp	.L2
 211      FF
 212              		.p2align 4,,10
 213 0252 660F1F44 		.p2align 3
 213      0000
 214              	.L3:
 215 0258 488D3500 		leaq	.LC0(%rip), %rsi
 215      000000
 216 025f 4C89E7   		movq	%r12, %rdi
 217 0262 E8000000 		call	errPrefix@PLT
 217      00
 218 0267 B8010000 		movl	$1, %eax
 218      00
 219 026c E92FFEFF 		jmp	.L1
 219      FF
 220              	.L64:
 221 0271 E8000000 		call	__stack_chk_fail@PLT
 221      00
 222              		.cfi_endproc
 223              	.LFE44:
 225              		.section	.rodata.str1.1
 226              	.LC1:
 227 000a 496C6C65 		.string	"Illegal character"
 227      67616C20 
 227      63686172 
 227      61637465 
 227      7200
 228              	.LC2:
 229 001c 776200   		.string	"wb"
 230              	.LC3:
 231 001f 646F5265 		.string	"doRead()"
 231      61642829 
 231      00
 232              		.section	.rodata.str1.8,"aMS",@progbits,1
 233              		.align 8
 234              	.LC6:
 235 0000 52656164 		.string	"Read %d bytes (checksum 0x%04X) from channel %d at %f MiB/s\n"
 235      20256420 
 235      62797465 
 235      73202863 
 235      6865636B 
 236              		.section	.rodata.str1.1
 237              	.LC7:
 238 0028 726200   		.string	"rb"
 239              		.section	.rodata.str1.8
 240 003d 000000   		.align 8
 241              	.LC8:
 242 0040 57726F74 		.string	"Wrote %zu bytes (checksum 0x%04X) to channel %lu at %f MiB/s\n"
 242      6520257A 
 242      75206279 
 242      74657320 
 242      28636865 
 243              		.section	.rodata.str1.1
 244              	.LC9:
 245 002b 25732061 		.string	"%s at column %d\n  %s\n  "
 245      7420636F 
 245      6C756D6E 
 245      2025640A 
 245      20202573 
 246              	.LC10:
 247 0043 5E0A00   		.string	"^\n"
 248              	.LC11:
 249 0046 2000     		.string	" "
 250              		.text
 251 0276 662E0F1F 		.p2align 4
 251      84000000 
 251      0000
 253              	parseLine:
 254              	.LFB42:
 255              		.cfi_startproc
 256 0280 4157     		pushq	%r15
 257              		.cfi_def_cfa_offset 16
 258              		.cfi_offset 15, -16
 259 0282 660FEFC0 		pxor	%xmm0, %xmm0
 260 0286 4889D1   		movq	%rdx, %rcx
 261 0289 4156     		pushq	%r14
 262              		.cfi_def_cfa_offset 24
 263              		.cfi_offset 14, -24
 264 028b 4155     		pushq	%r13
 265              		.cfi_def_cfa_offset 32
 266              		.cfi_offset 13, -32
 267 028d 4154     		pushq	%r12
 268              		.cfi_def_cfa_offset 40
 269              		.cfi_offset 12, -40
 270 028f 4989D4   		movq	%rdx, %r12
 271 0292 31D2     		xorl	%edx, %edx
 272 0294 55       		pushq	%rbp
 273              		.cfi_def_cfa_offset 48
 274              		.cfi_offset 6, -48
 275 0295 4889FD   		movq	%rdi, %rbp
 276 0298 53       		pushq	%rbx
 277              		.cfi_def_cfa_offset 56
 278              		.cfi_offset 3, -56
 279 0299 4889F3   		movq	%rsi, %rbx
 280 029c 4881ECB8 		subq	$184, %rsp
 280      000000
 281              		.cfi_def_cfa_offset 240
 282 02a3 48897424 		movq	%rsi, 40(%rsp)
 282      28
 283 02a8 BE000400 		movl	$1024, %esi
 283      00
 284 02ad 64488B04 		movq	%fs:40, %rax
 284      25280000 
 284      00
 285 02b6 48898424 		movq	%rax, 168(%rsp)
 285      A8000000 
 286 02be 31C0     		xorl	%eax, %eax
 287 02c0 488D8424 		leaq	128(%rsp), %rax
 287      80000000 
 288 02c8 0F298424 		movaps	%xmm0, 128(%rsp)
 288      80000000 
 289 02d0 4889C7   		movq	%rax, %rdi
 290 02d3 48894424 		movq	%rax, 24(%rsp)
 290      18
 291 02d8 0F298424 		movaps	%xmm0, 144(%rsp)
 291      90000000 
 292 02e0 E8000000 		call	bufInitialise@PLT
 292      00
 293 02e5 85C0     		testl	%eax, %eax
 294 02e7 0F852B04 		jne	.L66
 294      0000
 295 02ed 0FB603   		movzbl	(%rbx), %eax
 296 02f0 48891D00 		movq	%rbx, ptr(%rip)
 296      000000
 297 02f7 4889DA   		movq	%rbx, %rdx
 298 02fa 4C8D7C24 		leaq	76(%rsp), %r15
 298      4C
 299 02ff 3C3B     		cmpb	$59, %al
 300 0301 0F848001 		je	.L162
 300      0000
 301              	.L422:
 302 0307 3C72     		cmpb	$114, %al
 303 0309 0F841103 		je	.L69
 303      0000
 304 030f 3C77     		cmpb	$119, %al
 305 0311 0F847901 		je	.L70
 305      0000
 306 0317 3C2B     		cmpb	$43, %al
 307 0319 0F84C900 		je	.L418
 307      0000
 308 031f 488B7C24 		movq	24(%rsp), %rdi
 308      18
 309 0324 BB050000 		movl	$5, %ebx
 309      00
 310 0329 41BD0500 		movl	$5, %r13d
 310      0000
 311 032f E8000000 		call	bufDestroy@PLT
 311      00
 312              		.p2align 4,,10
 313 0334 0F1F4000 		.p2align 3
 314              	.L157:
 315 0338 488D0500 		leaq	errMessages(%rip), %rax
 315      000000
 316 033f 488B0CD8 		movq	(%rax,%rbx,8), %rcx
 317              	.L152:
 318 0343 4C8B3500 		movq	ptr(%rip), %r14
 318      000000
 319 034a 4C8B4C24 		movq	40(%rsp), %r9
 319      28
 320 034f 31C0     		xorl	%eax, %eax
 321 0351 31DB     		xorl	%ebx, %ebx
 322 0353 488B3D00 		movq	stderr(%rip), %rdi
 322      000000
 323 035a 488D1500 		leaq	.LC9(%rip), %rdx
 323      000000
 324 0361 BE010000 		movl	$1, %esi
 324      00
 325 0366 488D2D00 		leaq	.LC11(%rip), %rbp
 325      000000
 326 036d 4D29CE   		subq	%r9, %r14
 327 0370 4589F0   		movl	%r14d, %r8d
 328 0373 4589F4   		movl	%r14d, %r12d
 329 0376 E8000000 		call	__fprintf_chk@PLT
 329      00
 330 037b 4585F6   		testl	%r14d, %r14d
 331 037e 7E1E     		jle	.L154
 332              		.p2align 4,,10
 333              		.p2align 3
 334              	.L153:
 335 0380 488B3D00 		movq	stderr(%rip), %rdi
 335      000000
 336 0387 4889EA   		movq	%rbp, %rdx
 337 038a 31C0     		xorl	%eax, %eax
 338 038c 83C301   		addl	$1, %ebx
 339 038f BE010000 		movl	$1, %esi
 339      00
 340 0394 E8000000 		call	__fprintf_chk@PLT
 340      00
 341 0399 4139DC   		cmpl	%ebx, %r12d
 342 039c 75E2     		jne	.L153
 343              	.L154:
 344 039e 488B3D00 		movq	stderr(%rip), %rdi
 344      000000
 345 03a5 488D1500 		leaq	.LC10(%rip), %rdx
 345      000000
 346 03ac BE010000 		movl	$1, %esi
 346      00
 347 03b1 31C0     		xorl	%eax, %eax
 348 03b3 E8000000 		call	__fprintf_chk@PLT
 348      00
 349              	.L65:
 350 03b8 488B8424 		movq	168(%rsp), %rax
 350      A8000000 
 351 03c0 64482B04 		subq	%fs:40, %rax
 351      25280000 
 351      00
 352 03c9 0F855211 		jne	.L419
 352      0000
 353 03cf 4881C4B8 		addq	$184, %rsp
 353      000000
 354              		.cfi_remember_state
 355              		.cfi_def_cfa_offset 56
 356 03d6 4489E8   		movl	%r13d, %eax
 357 03d9 5B       		popq	%rbx
 358              		.cfi_def_cfa_offset 48
 359 03da 5D       		popq	%rbp
 360              		.cfi_def_cfa_offset 40
 361 03db 415C     		popq	%r12
 362              		.cfi_def_cfa_offset 32
 363 03dd 415D     		popq	%r13
 364              		.cfi_def_cfa_offset 24
 365 03df 415E     		popq	%r14
 366              		.cfi_def_cfa_offset 16
 367 03e1 415F     		popq	%r15
 368              		.cfi_def_cfa_offset 8
 369 03e3 C3       		ret
 370              		.p2align 4,,10
 371 03e4 0F1F4000 		.p2align 3
 372              	.L418:
 373              		.cfi_restore_state
 374 03e8 4C8D6A01 		leaq	1(%rdx), %r13
 375 03ec 4C8D7424 		leaq	88(%rsp), %r14
 375      58
 376 03f1 4C892D00 		movq	%r13, ptr(%rip)
 376      000000
 377 03f8 E8000000 		call	__errno_location@PLT
 377      00
 378 03fd BA100000 		movl	$16, %edx
 378      00
 379 0402 4C89F6   		movq	%r14, %rsi
 380 0405 4C89EF   		movq	%r13, %rdi
 381 0408 C7000000 		movl	$0, (%rax)
 381      0000
 382 040e 4889C3   		movq	%rax, %rbx
 383 0411 E8000000 		call	strtoul@PLT
 383      00
 384 0416 8B13     		movl	(%rbx), %edx
 385 0418 85D2     		testl	%edx, %edx
 386 041a 0F850810 		jne	.L181
 386      0000
 387 0420 3DFF0000 		cmpl	$255, %eax
 387      00
 388 0425 0F870A10 		ja	.L182
 388      0000
 389 042b 488B5424 		movq	88(%rsp), %rdx
 389      58
 390 0430 48891500 		movq	%rdx, ptr(%rip)
 390      000000
 391 0437 0FB612   		movzbl	(%rdx), %edx
 392 043a 84D2     		testb	%dl, %dl
 393 043c 7409     		je	.L190
 394 043e 80FA3B   		cmpb	$59, %dl
 395 0441 0F859B0F 		jne	.L183
 395      0000
 396              	.L190:
 397 0447 0FB6F0   		movzbl	%al, %esi
 398 044a 4C89E2   		movq	%r12, %rdx
 399 044d 4889EF   		movq	%rbp, %rdi
 400 0450 E8000000 		call	flSelectConduit@PLT
 400      00
 401 0455 85C0     		testl	%eax, %eax
 402 0457 0F852110 		jne	.L420
 402      0000
 403              	.L116:
 404 045d 488B0500 		movq	ptr(%rip), %rax
 404      000000
 405 0464 0FB610   		movzbl	(%rax), %edx
 406 0467 80FA3B   		cmpb	$59, %dl
 407 046a 0F85A909 		jne	.L421
 407      0000
 408              	.L68:
 409 0470 488D5001 		leaq	1(%rax), %rdx
 410 0474 0FB64001 		movzbl	1(%rax), %eax
 411 0478 48891500 		movq	%rdx, ptr(%rip)
 411      000000
 412 047f 3C3B     		cmpb	$59, %al
 413 0481 0F8580FE 		jne	.L422
 413      FFFF
 414              	.L162:
 415 0487 4889D0   		movq	%rdx, %rax
 416 048a EBE4     		jmp	.L68
 417 048c 0F1F4000 		.p2align 4,,10
 418              		.p2align 3
 419              	.L70:
 420 0490 4C8D6A01 		leaq	1(%rdx), %r13
 421 0494 4C8D7424 		leaq	88(%rsp), %r14
 421      58
 422 0499 48C74424 		movq	$1, 80(%rsp)
 422      50010000 
 422      00
 423 04a2 4C892D00 		movq	%r13, ptr(%rip)
 423      000000
 424 04a9 E8000000 		call	__errno_location@PLT
 424      00
 425 04ae BA100000 		movl	$16, %edx
 425      00
 426 04b3 4C89F6   		movq	%r14, %rsi
 427 04b6 4C89EF   		movq	%r13, %rdi
 428 04b9 C7000000 		movl	$0, (%rax)
 428      0000
 429 04bf 4889C3   		movq	%rax, %rbx
 430 04c2 E8000000 		call	strtoul@PLT
 430      00
 431 04c7 448B13   		movl	(%rbx), %r10d
 432 04ca 48894424 		movq	%rax, 8(%rsp)
 432      08
 433 04cf 4585D2   		testl	%r10d, %r10d
 434 04d2 0F856A0F 		jne	.L173
 434      0000
 435 04d8 4883F87F 		cmpq	$127, %rax
 436 04dc 0F877E0F 		ja	.L174
 436      0000
 437 04e2 488B5424 		movq	88(%rsp), %rdx
 437      58
 438 04e7 803A20   		cmpb	$32, (%rdx)
 439 04ea 48891500 		movq	%rdx, ptr(%rip)
 439      000000
 440 04f1 0F859003 		jne	.L131
 440      0000
 441 04f7 440FB66A 		movzbl	1(%rdx), %r13d
 441      01
 442 04fc 488D4A01 		leaq	1(%rdx), %rcx
 443 0500 48890D00 		movq	%rcx, ptr(%rip)
 443      000000
 444 0507 4180FD22 		cmpb	$34, %r13b
 445 050b 0F841F02 		je	.L189
 445      0000
 446 0511 4180FD27 		cmpb	$39, %r13b
 447 0515 0F841502 		je	.L189
 447      0000
 448 051b 418D45D0 		leal	-48(%r13), %eax
 449 051f 3C09     		cmpb	$9, %al
 450 0521 0F874F03 		ja	.L423
 450      0000
 451              	.L130:
 452 0527 488D5A02 		leaq	2(%rdx), %rbx
 453 052b 0F1F4400 		.p2align 4,,10
 453      00
 454              		.p2align 3
 455              	.L155:
 456 0530 0FB603   		movzbl	(%rbx), %eax
 457 0533 8D70D0   		leal	-48(%rax), %esi
 458 0536 4080FE09 		cmpb	$9, %sil
 459 053a 0F86D000 		jbe	.L132
 459      0000
 460 0540 83E0DF   		andl	$-33, %eax
 461 0543 83E841   		subl	$65, %eax
 462 0546 3C05     		cmpb	$5, %al
 463 0548 0F86C200 		jbe	.L132
 463      0000
 464 054e 4829CB   		subq	%rcx, %rbx
 465 0551 F6C301   		testb	$1, %bl
 466 0554 0F85430F 		jne	.L424
 466      0000
 467 055a 4989DE   		movq	%rbx, %r14
 468 055d 44891424 		movl	%r10d, (%rsp)
 469 0561 49D1EE   		shrq	%r14
 470 0564 48894C24 		movq	%rcx, 32(%rsp)
 470      20
 471 0569 4C89F7   		movq	%r14, %rdi
 472 056c 48895424 		movq	%rdx, 16(%rsp)
 472      10
 473 0571 4C897424 		movq	%r14, 80(%rsp)
 473      50
 474 0576 E8000000 		call	malloc@PLT
 474      00
 475 057b 4D85F6   		testq	%r14, %r14
 476 057e 448B1424 		movl	(%rsp), %r10d
 477 0582 4989C3   		movq	%rax, %r11
 478 0585 0F845606 		je	.L134
 478      0000
 479 058b 488B5424 		movq	16(%rsp), %rdx
 479      10
 480 0590 488B4C24 		movq	32(%rsp), %rcx
 480      20
 481 0595 31C0     		xorl	%eax, %eax
 482 0597 EB5D     		jmp	.L141
 483 0599 0F1F8000 		.p2align 4,,10
 483      000000
 484              		.p2align 3
 485              	.L136:
 486 05a0 418D75BF 		leal	-65(%r13), %esi
 487 05a4 4080FE05 		cmpb	$5, %sil
 488 05a8 7739     		ja	.L137
 489 05aa 418D75C9 		leal	-55(%r13), %esi
 490              	.L135:
 491 05ae 0FB67C42 		movzbl	2(%rdx,%rax,2), %edi
 491      02
 492 05b3 448D47D0 		leal	-48(%rdi), %r8d
 493 05b7 4180F809 		cmpb	$9, %r8b
 494 05bb 761C     		jbe	.L138
 495 05bd 448D479F 		leal	-97(%rdi), %r8d
 496 05c1 4180F805 		cmpb	$5, %r8b
 497 05c5 0F865503 		jbe	.L425
 497      0000
 498 05cb 448D47BF 		leal	-65(%rdi), %r8d
 499 05cf 4180F805 		cmpb	$5, %r8b
 500 05d3 770E     		ja	.L137
 501 05d5 448D47C9 		leal	-55(%rdi), %r8d
 502              	.L138:
 503 05d9 C1E604   		sall	$4, %esi
 504 05dc 4409C6   		orl	%r8d, %esi
 505 05df 41883403 		movb	%sil, (%r11,%rax)
 506              	.L137:
 507 05e3 4883C001 		addq	$1, %rax
 508 05e7 4939C6   		cmpq	%rax, %r14
 509 05ea 0F843903 		je	.L140
 509      0000
 510 05f0 440FB66C 		movzbl	1(%rdx,%rax,2), %r13d
 510      4201
 511              	.L141:
 512 05f6 418D75D0 		leal	-48(%r13), %esi
 513 05fa 4080FE09 		cmpb	$9, %sil
 514 05fe 76AE     		jbe	.L135
 515 0600 418D759F 		leal	-97(%r13), %esi
 516 0604 4080FE05 		cmpb	$5, %sil
 517 0608 7796     		ja	.L136
 518 060a 418D75A9 		leal	-87(%r13), %esi
 519 060e EB9E     		jmp	.L135
 520              		.p2align 4,,10
 521              		.p2align 3
 522              	.L132:
 523 0610 4883C301 		addq	$1, %rbx
 524 0614 E917FFFF 		jmp	.L155
 524      FF
 525 0619 0F1F8000 		.p2align 4,,10
 525      000000
 526              		.p2align 3
 527              	.L69:
 528 0620 4C8D6A01 		leaq	1(%rdx), %r13
 529 0624 4C892D00 		movq	%r13, ptr(%rip)
 529      000000
 530 062b E8000000 		call	__errno_location@PLT
 530      00
 531 0630 488D7424 		leaq	80(%rsp), %rsi
 531      50
 532 0635 BA100000 		movl	$16, %edx
 532      00
 533 063a 4C89EF   		movq	%r13, %rdi
 534 063d C7000000 		movl	$0, (%rax)
 534      0000
 535 0643 4889C3   		movq	%rax, %rbx
 536 0646 48893424 		movq	%rsi, (%rsp)
 537 064a E8000000 		call	strtoul@PLT
 537      00
 538 064f 448B33   		movl	(%rbx), %r14d
 539 0652 488B3424 		movq	(%rsp), %rsi
 540 0656 48894424 		movq	%rax, 32(%rsp)
 540      20
 541 065b 4585F6   		testl	%r14d, %r14d
 542 065e 0F85640D 		jne	.L78
 542      0000
 543 0664 837C2420 		cmpl	$127, 32(%rsp)
 543      7F
 544 0669 0F879E0D 		ja	.L163
 544      0000
 545 066f 488B4424 		movq	80(%rsp), %rax
 545      50
 546 0674 0FB608   		movzbl	(%rax), %ecx
 547 0677 48890500 		movq	%rax, ptr(%rip)
 547      000000
 548 067e F6C1DF   		testb	$-33, %cl
 549 0681 7409     		je	.L76
 550 0683 80F93B   		cmpb	$59, %cl
 551 0686 0F85FB01 		jne	.L131
 551      0000
 552              	.L76:
 553 068c C744243C 		movl	$1, 60(%rsp)
 553      01000000 
 554 0694 41BD0100 		movl	$1, %r13d
 554      0000
 555 069a 80F920   		cmpb	$32, %cl
 556 069d 0F84E902 		je	.L426
 556      0000
 557              	.L77:
 558 06a3 488B7C24 		movq	24(%rsp), %rdi
 558      18
 559 06a8 31F6     		xorl	%esi, %esi
 560 06aa 4C89E1   		movq	%r12, %rcx
 561 06ad 4C89EA   		movq	%r13, %rdx
 562 06b0 488B9C24 		movq	136(%rsp), %rbx
 562      88000000 
 563 06b8 E8000000 		call	bufAppendConst@PLT
 563      00
 564 06bd 85C0     		testl	%eax, %eax
 565 06bf 7557     		jne	.L66
 566 06c1 31F6     		xorl	%esi, %esi
 567 06c3 488D7C24 		leaq	96(%rsp), %rdi
 567      60
 568 06c8 E8000000 		call	gettimeofday@PLT
 568      00
 569 06cd 0FB67424 		movzbl	32(%rsp), %esi
 569      20
 570 06d2 4D89E0   		movq	%r12, %r8
 571 06d5 4C89EA   		movq	%r13, %rdx
 572 06d8 488B8C24 		movq	128(%rsp), %rcx
 572      80000000 
 573 06e0 4889EF   		movq	%rbp, %rdi
 574 06e3 4801D9   		addq	%rbx, %rcx
 575 06e6 E8000000 		call	flReadChannel@PLT
 575      00
 576 06eb 31F6     		xorl	%esi, %esi
 577 06ed 488D7C24 		leaq	112(%rsp), %rdi
 577      70
 578 06f2 890424   		movl	%eax, (%rsp)
 579 06f5 E8000000 		call	gettimeofday@PLT
 579      00
 580 06fa 803D0000 		cmpb	$0, enableBenchmarking(%rip)
 580      000000
 581 0701 0F853905 		jne	.L427
 581      0000
 582              	.L107:
 583 0707 8B3424   		movl	(%rsp), %esi
 584 070a 85F6     		testl	%esi, %esi
 585 070c 0F844BFD 		je	.L116
 585      FFFF
 586              		.p2align 4,,10
 587 0712 660F1F44 		.p2align 3
 587      0000
 588              	.L66:
 589 0718 488B7C24 		movq	24(%rsp), %rdi
 589      18
 590 071d 41BD0100 		movl	$1, %r13d
 590      0000
 591 0723 E8000000 		call	bufDestroy@PLT
 591      00
 592 0728 E98BFCFF 		jmp	.L65
 592      FF
 593 072d 0F1F00   		.p2align 4,,10
 594              		.p2align 3
 595              	.L189:
 596 0730 31C9     		xorl	%ecx, %ecx
 597 0732 488D7202 		leaq	2(%rdx), %rsi
 598 0736 66894C24 		movw	%cx, 76(%rsp)
 598      4C
 599 073b 0FB64202 		movzbl	2(%rdx), %eax
 600 073f 4889F3   		movq	%rsi, %rbx
 601 0742 48893500 		movq	%rsi, ptr(%rip)
 601      000000
 602 0749 4138C5   		cmpb	%al, %r13b
 603 074c 750F     		jne	.L121
 604 074e EB60     		jmp	.L122
 605              		.p2align 4,,10
 606              		.p2align 3
 607              	.L123:
 608 0750 0FB64301 		movzbl	1(%rbx), %eax
 609 0754 4883C301 		addq	$1, %rbx
 610 0758 4438E8   		cmpb	%r13b, %al
 611 075b 7453     		je	.L122
 612              	.L121:
 613 075d 84C0     		testb	%al, %al
 614 075f 75EF     		jne	.L123
 615              	.L176:
 616 0761 48C70424 		movq	$0, (%rsp)
 616      00000000 
 617 0769 41BD0600 		movl	$6, %r13d
 617      0000
 618 076f 4531F6   		xorl	%r14d, %r14d
 619 0772 BB060000 		movl	$6, %ebx
 619      00
 620              	.L124:
 621 0777 4531FF   		xorl	%r15d, %r15d
 622              	.L115:
 623 077a 488B7C24 		movq	24(%rsp), %rdi
 623      18
 624 077f E8000000 		call	bufDestroy@PLT
 624      00
 625 0784 488B3C24 		movq	(%rsp), %rdi
 626 0788 4885FF   		testq	%rdi, %rdi
 627 078b 7405     		je	.L149
 628 078d E8000000 		call	fclose@PLT
 628      00
 629              	.L149:
 630 0792 4C89F7   		movq	%r14, %rdi
 631 0795 E8000000 		call	free@PLT
 631      00
 632 079a 4C89FF   		movq	%r15, %rdi
 633 079d E8000000 		call	free@PLT
 633      00
 634 07a2 83FB01   		cmpl	$1, %ebx
 635 07a5 0F858DFB 		jne	.L157
 635      FFFF
 636 07ab E908FCFF 		jmp	.L65
 636      FF
 637              	.L122:
 638 07b0 4584ED   		testb	%r13b, %r13b
 639 07b3 74AC     		je	.L176
 640 07b5 4989DD   		movq	%rbx, %r13
 641 07b8 48893424 		movq	%rsi, (%rsp)
 642 07bc 4929F5   		subq	%rsi, %r13
 643 07bf 498D7D01 		leaq	1(%r13), %rdi
 644 07c3 E8000000 		call	malloc@PLT
 644      00
 645 07c8 4989C6   		movq	%rax, %r14
 646 07cb 4885C0   		testq	%rax, %rax
 647 07ce 0F84350D 		je	.L177
 647      0000
 648 07d4 488B3424 		movq	(%rsp), %rsi
 649 07d8 4839DE   		cmpq	%rbx, %rsi
 650 07db 0F84000D 		je	.L178
 650      0000
 651 07e1 4C89EA   		movq	%r13, %rdx
 652 07e4 4889C7   		movq	%rax, %rdi
 653 07e7 4883C301 		addq	$1, %rbx
 654 07eb E8000000 		call	strncpy@PLT
 654      00
 655 07f0 43C6042E 		movb	$0, (%r14,%r13)
 655      00
 656 07f5 4C89F7   		movq	%r14, %rdi
 657 07f8 488D3500 		leaq	.LC7(%rip), %rsi
 657      000000
 658 07ff 48891D00 		movq	%rbx, ptr(%rip)
 658      000000
 659 0806 E8000000 		call	fopen@PLT
 659      00
 660 080b 48890424 		movq	%rax, (%rsp)
 661 080f 4889C3   		movq	%rax, %rbx
 662 0812 4885C0   		testq	%rax, %rax
 663 0815 0F840B0D 		je	.L179
 663      0000
 664 081b 4C89F7   		movq	%r14, %rdi
 665 081e E8000000 		call	free@PLT
 665      00
 666 0823 31F6     		xorl	%esi, %esi
 667 0825 488D7C24 		leaq	96(%rsp), %rdi
 667      60
 668 082a E8000000 		call	gettimeofday@PLT
 668      00
 669 082f 8B742408 		movl	8(%rsp), %esi
 670 0833 4889DA   		movq	%rbx, %rdx
 671 0836 4D89E1   		movq	%r12, %r9
 672 0839 488D4C24 		leaq	80(%rsp), %rcx
 672      50
 673 083e 4D89F8   		movq	%r15, %r8
 674 0841 4889EF   		movq	%rbp, %rdi
 675 0844 E8B7F7FF 		call	doWrite.constprop.0
 675      FF
 676 0849 31F6     		xorl	%esi, %esi
 677 084b 488D7C24 		leaq	112(%rsp), %rdi
 677      70
 678 0850 89C3     		movl	%eax, %ebx
 679 0852 E8000000 		call	gettimeofday@PLT
 679      00
 680 0857 803D0000 		cmpb	$0, enableBenchmarking(%rip)
 680      000000
 681 085e 7541     		jne	.L428
 682              	.L125:
 683 0860 85DB     		testl	%ebx, %ebx
 684 0862 0F859A0B 		jne	.L429
 684      0000
 685 0868 488B3C24 		movq	(%rsp), %rdi
 686 086c E8000000 		call	fclose@PLT
 686      00
 687 0871 E9E7FBFF 		jmp	.L116
 687      FF
 688              	.L423:
 689 0876 4489E8   		movl	%r13d, %eax
 690 0879 83E0DF   		andl	$-33, %eax
 691 087c 83E841   		subl	$65, %eax
 692 087f 3C05     		cmpb	$5, %al
 693 0881 0F86A0FC 		jbe	.L130
 693      FFFF
 694              	.L131:
 695 0887 488B7C24 		movq	24(%rsp), %rdi
 695      18
 696 088c 41BD0500 		movl	$5, %r13d
 696      0000
 697 0892 BB050000 		movl	$5, %ebx
 697      00
 698 0897 E8000000 		call	bufDestroy@PLT
 698      00
 699 089c E997FAFF 		jmp	.L157
 699      FF
 700              	.L428:
 701 08a1 48694424 		imulq	$1000000, 112(%rsp), %rax
 701      7040420F 
 701      00
 702 08aa 488B5424 		movq	80(%rsp), %rdx
 702      50
 703 08af 660FEFC0 		pxor	%xmm0, %xmm0
 704 08b3 48694C24 		imulq	$1000000, 96(%rsp), %rcx
 704      6040420F 
 704      00
 705 08bc 48034424 		addq	120(%rsp), %rax
 705      78
 706 08c1 48034C24 		addq	104(%rsp), %rcx
 706      68
 707 08c6 4829C8   		subq	%rcx, %rax
 708 08c9 F2480F2A 		cvtsi2sdq	%rax, %xmm0
 708      C0
 709 08ce 4885D2   		testq	%rdx, %rdx
 710 08d1 0F88E902 		js	.L126
 710      0000
 711 08d7 660FEFC9 		pxor	%xmm1, %xmm1
 712 08db F2480F2A 		cvtsi2sdq	%rdx, %xmm1
 712      CA
 713              	.L127:
 714 08e0 0FB74C24 		movzwl	76(%rsp), %ecx
 714      4C
 715 08e5 F20F5E05 		divsd	.LC4(%rip), %xmm0
 715      00000000 
 716 08ed F20F5905 		mulsd	.LC5(%rip), %xmm0
 716      00000000 
 717 08f5 488D3500 		leaq	.LC8(%rip), %rsi
 717      000000
 718 08fc 4C8B4424 		movq	8(%rsp), %r8
 718      08
 719 0901 BF010000 		movl	$1, %edi
 719      00
 720 0906 B8010000 		movl	$1, %eax
 720      00
 721 090b F20F5EC8 		divsd	%xmm0, %xmm1
 722 090f 660F28C1 		movapd	%xmm1, %xmm0
 723 0913 E8000000 		call	__printf_chk@PLT
 723      00
 724 0918 E943FFFF 		jmp	.L125
 724      FF
 725 091d 0F1F00   		.p2align 4,,10
 726              		.p2align 3
 727              	.L425:
 728 0920 448D47A9 		leal	-87(%rdi), %r8d
 729 0924 E9B0FCFF 		jmp	.L138
 729      FF
 730              	.L140:
 731 0929 4A8D0471 		leaq	(%rcx,%r14,2), %rax
 732 092d 31F6     		xorl	%esi, %esi
 733 092f 488D7C24 		leaq	96(%rsp), %rdi
 733      60
 734 0934 4C891C24 		movq	%r11, (%rsp)
 735 0938 48890500 		movq	%rax, ptr(%rip)
 735      000000
 736 093f E8000000 		call	gettimeofday@PLT
 736      00
 737 0944 488B0C24 		movq	(%rsp), %rcx
 738 0948 8B742408 		movl	8(%rsp), %esi
 739 094c 4D89E0   		movq	%r12, %r8
 740 094f 4C89F2   		movq	%r14, %rdx
 741 0952 4889EF   		movq	%rbp, %rdi
 742 0955 E8000000 		call	flWriteChannel@PLT
 742      00
 743 095a 31F6     		xorl	%esi, %esi
 744 095c 488D7C24 		leaq	112(%rsp), %rdi
 744      70
 745 0961 4189C5   		movl	%eax, %r13d
 746 0964 E8000000 		call	gettimeofday@PLT
 746      00
 747 0969 803D0000 		cmpb	$0, enableBenchmarking(%rip)
 747      000000
 748 0970 4C8B1C24 		movq	(%rsp), %r11
 749 0974 7574     		jne	.L430
 750              	.L143:
 751 0976 4585ED   		testl	%r13d, %r13d
 752 0979 0F85440B 		jne	.L180
 752      0000
 753 097f 4C89DF   		movq	%r11, %rdi
 754 0982 E8000000 		call	free@PLT
 754      00
 755 0987 E9D1FAFF 		jmp	.L116
 755      FF
 756              	.L426:
 757 098c C7030000 		movl	$0, (%rbx)
 757      0000
 758 0992 488D7801 		leaq	1(%rax), %rdi
 759 0996 BA100000 		movl	$16, %edx
 759      00
 760 099b 48893D00 		movq	%rdi, ptr(%rip)
 760      000000
 761 09a2 E8000000 		call	strtoul@PLT
 761      00
 762 09a7 8B3B     		movl	(%rbx), %edi
 763 09a9 48894424 		movq	%rax, 48(%rsp)
 763      30
 764 09ae 8944243C 		movl	%eax, 60(%rsp)
 765 09b2 85FF     		testl	%edi, %edi
 766 09b4 0F850E0A 		jne	.L78
 766      0000
 767 09ba 488B4424 		movq	80(%rsp), %rax
 767      50
 768 09bf 0FB610   		movzbl	(%rax), %edx
 769 09c2 48890500 		movq	%rax, ptr(%rip)
 769      000000
 770 09c9 F6C2DF   		testb	$-33, %dl
 771 09cc 7409     		je	.L187
 772 09ce 80FA3B   		cmpb	$59, %dl
 773 09d1 0F85B0FE 		jne	.L131
 773      FFFF
 774              	.L187:
 775 09d7 80FA20   		cmpb	$32, %dl
 776 09da 0F846604 		je	.L81
 776      0000
 777 09e0 448B6C24 		movl	48(%rsp), %r13d
 777      30
 778 09e5 E9B9FCFF 		jmp	.L77
 778      FF
 779              	.L430:
 780 09ea 498D56FF 		leaq	-1(%r14), %rdx
 781 09ee 4883FA0E 		cmpq	$14, %rdx
 782 09f2 0F863D02 		jbe	.L431
 782      0000
 783 09f8 48C1EB05 		shrq	$5, %rbx
 784 09fc 660FEFC9 		pxor	%xmm1, %xmm1
 785 0a00 660FEFD2 		pxor	%xmm2, %xmm2
 786 0a04 4C89D8   		movq	%r11, %rax
 787 0a07 4889D9   		movq	%rbx, %rcx
 788 0a0a 48C1E104 		salq	$4, %rcx
 789 0a0e 4C01D9   		addq	%r11, %rcx
 790              		.p2align 4,,10
 791 0a11 0F1F8000 		.p2align 3
 791      000000
 792              	.L144:
 793 0a18 F30F6F00 		movdqu	(%rax), %xmm0
 794 0a1c 4883C010 		addq	$16, %rax
 795 0a20 660F6FD8 		movdqa	%xmm0, %xmm3
 796 0a24 660F68C2 		punpckhbw	%xmm2, %xmm0
 797 0a28 660F60DA 		punpcklbw	%xmm2, %xmm3
 798 0a2c 660FFDC3 		paddw	%xmm3, %xmm0
 799 0a30 660FFDC8 		paddw	%xmm0, %xmm1
 800 0a34 4839C8   		cmpq	%rcx, %rax
 801 0a37 75DF     		jne	.L144
 802 0a39 660F6FC1 		movdqa	%xmm1, %xmm0
 803 0a3d 48C1E304 		salq	$4, %rbx
 804 0a41 660F73D8 		psrldq	$8, %xmm0
 804      08
 805 0a46 498D041B 		leaq	(%r11,%rbx), %rax
 806 0a4a 4829DA   		subq	%rbx, %rdx
 807 0a4d 660FFDC8 		paddw	%xmm0, %xmm1
 808 0a51 660F6FC1 		movdqa	%xmm1, %xmm0
 809 0a55 660F73D8 		psrldq	$4, %xmm0
 809      04
 810 0a5a 660FFDC8 		paddw	%xmm0, %xmm1
 811 0a5e 660F6FC1 		movdqa	%xmm1, %xmm0
 812 0a62 660F73D8 		psrldq	$2, %xmm0
 812      02
 813 0a67 660FFDC8 		paddw	%xmm0, %xmm1
 814 0a6b 66440FC5 		pextrw	$0, %xmm1, %r10d
 814      D100
 815 0a71 4939DE   		cmpq	%rbx, %r14
 816 0a74 0F84CB00 		je	.L145
 816      0000
 817              	.L159:
 818 0a7a 0FB608   		movzbl	(%rax), %ecx
 819 0a7d 4101CA   		addl	%ecx, %r10d
 820 0a80 4885D2   		testq	%rdx, %rdx
 821 0a83 0F84BC00 		je	.L145
 821      0000
 822 0a89 0FB64801 		movzbl	1(%rax), %ecx
 823 0a8d 4101CA   		addl	%ecx, %r10d
 824 0a90 4883FA01 		cmpq	$1, %rdx
 825 0a94 0F84AB00 		je	.L145
 825      0000
 826 0a9a 0FB64802 		movzbl	2(%rax), %ecx
 827 0a9e 4101CA   		addl	%ecx, %r10d
 828 0aa1 4883FA02 		cmpq	$2, %rdx
 829 0aa5 0F849A00 		je	.L145
 829      0000
 830 0aab 0FB64803 		movzbl	3(%rax), %ecx
 831 0aaf 4101CA   		addl	%ecx, %r10d
 832 0ab2 4883FA03 		cmpq	$3, %rdx
 833 0ab6 0F848900 		je	.L145
 833      0000
 834 0abc 0FB64804 		movzbl	4(%rax), %ecx
 835 0ac0 4101CA   		addl	%ecx, %r10d
 836 0ac3 4883FA04 		cmpq	$4, %rdx
 837 0ac7 747C     		je	.L145
 838 0ac9 0FB64805 		movzbl	5(%rax), %ecx
 839 0acd 4101CA   		addl	%ecx, %r10d
 840 0ad0 4883FA05 		cmpq	$5, %rdx
 841 0ad4 746F     		je	.L145
 842 0ad6 0FB64806 		movzbl	6(%rax), %ecx
 843 0ada 4101CA   		addl	%ecx, %r10d
 844 0add 4883FA06 		cmpq	$6, %rdx
 845 0ae1 7462     		je	.L145
 846 0ae3 0FB64807 		movzbl	7(%rax), %ecx
 847 0ae7 4101CA   		addl	%ecx, %r10d
 848 0aea 4883FA07 		cmpq	$7, %rdx
 849 0aee 7455     		je	.L145
 850 0af0 0FB64808 		movzbl	8(%rax), %ecx
 851 0af4 4101CA   		addl	%ecx, %r10d
 852 0af7 4883FA08 		cmpq	$8, %rdx
 853 0afb 7448     		je	.L145
 854 0afd 0FB64809 		movzbl	9(%rax), %ecx
 855 0b01 4101CA   		addl	%ecx, %r10d
 856 0b04 4883FA09 		cmpq	$9, %rdx
 857 0b08 743B     		je	.L145
 858 0b0a 0FB6480A 		movzbl	10(%rax), %ecx
 859 0b0e 4101CA   		addl	%ecx, %r10d
 860 0b11 4883FA0A 		cmpq	$10, %rdx
 861 0b15 742E     		je	.L145
 862 0b17 0FB6480B 		movzbl	11(%rax), %ecx
 863 0b1b 4101CA   		addl	%ecx, %r10d
 864 0b1e 4883FA0B 		cmpq	$11, %rdx
 865 0b22 7421     		je	.L145
 866 0b24 0FB6480C 		movzbl	12(%rax), %ecx
 867 0b28 4101CA   		addl	%ecx, %r10d
 868 0b2b 4883FA0C 		cmpq	$12, %rdx
 869 0b2f 7414     		je	.L145
 870 0b31 0FB6480D 		movzbl	13(%rax), %ecx
 871 0b35 4101CA   		addl	%ecx, %r10d
 872 0b38 4883FA0D 		cmpq	$13, %rdx
 873 0b3c 7407     		je	.L145
 874 0b3e 0FB6400E 		movzbl	14(%rax), %eax
 875 0b42 4101C2   		addl	%eax, %r10d
 876              	.L145:
 877 0b45 450FB7D2 		movzwl	%r10w, %r10d
 878              	.L158:
 879 0b49 660FEFC0 		pxor	%xmm0, %xmm0
 880 0b4d 660FEFC9 		pxor	%xmm1, %xmm1
 881 0b51 4C8B4424 		movq	8(%rsp), %r8
 881      08
 882 0b56 4489D1   		movl	%r10d, %ecx
 883 0b59 F2490F2A 		cvtsi2sdq	%r14, %xmm1
 883      CE
 884 0b5e BF010000 		movl	$1, %edi
 884      00
 885 0b63 4C891C24 		movq	%r11, (%rsp)
 886 0b67 488D3500 		leaq	.LC8(%rip), %rsi
 886      000000
 887 0b6e 48694424 		imulq	$1000000, 112(%rsp), %rax
 887      7040420F 
 887      00
 888 0b77 48034424 		addq	120(%rsp), %rax
 888      78
 889 0b7c 48695424 		imulq	$1000000, 96(%rsp), %rdx
 889      6040420F 
 889      00
 890 0b85 48035424 		addq	104(%rsp), %rdx
 890      68
 891 0b8a 4829D0   		subq	%rdx, %rax
 892 0b8d 4C89F2   		movq	%r14, %rdx
 893 0b90 F2480F2A 		cvtsi2sdq	%rax, %xmm0
 893      C0
 894 0b95 F20F5E05 		divsd	.LC4(%rip), %xmm0
 894      00000000 
 895 0b9d B8010000 		movl	$1, %eax
 895      00
 896 0ba2 F20F5905 		mulsd	.LC5(%rip), %xmm0
 896      00000000 
 897 0baa F20F5EC8 		divsd	%xmm0, %xmm1
 898 0bae 660F28C1 		movapd	%xmm1, %xmm0
 899 0bb2 E8000000 		call	__printf_chk@PLT
 899      00
 900 0bb7 4C8B1C24 		movq	(%rsp), %r11
 901 0bbb E9B6FDFF 		jmp	.L143
 901      FF
 902              	.L126:
 903 0bc0 4889D0   		movq	%rdx, %rax
 904 0bc3 4889D1   		movq	%rdx, %rcx
 905 0bc6 660FEFC9 		pxor	%xmm1, %xmm1
 906 0bca 48D1E8   		shrq	%rax
 907 0bcd 83E101   		andl	$1, %ecx
 908 0bd0 4809C8   		orq	%rcx, %rax
 909 0bd3 F2480F2A 		cvtsi2sdq	%rax, %xmm1
 909      C8
 910 0bd8 F20F58C9 		addsd	%xmm1, %xmm1
 911 0bdc E9FFFCFF 		jmp	.L127
 911      FF
 912              	.L134:
 913 0be1 31F6     		xorl	%esi, %esi
 914 0be3 488D7C24 		leaq	96(%rsp), %rdi
 914      60
 915 0be8 44895424 		movl	%r10d, 16(%rsp)
 915      10
 916 0bed 48890424 		movq	%rax, (%rsp)
 917 0bf1 E8000000 		call	gettimeofday@PLT
 917      00
 918 0bf6 488B0C24 		movq	(%rsp), %rcx
 919 0bfa 8B742408 		movl	8(%rsp), %esi
 920 0bfe 31D2     		xorl	%edx, %edx
 921 0c00 4D89E0   		movq	%r12, %r8
 922 0c03 4889EF   		movq	%rbp, %rdi
 923 0c06 E8000000 		call	flWriteChannel@PLT
 923      00
 924 0c0b 31F6     		xorl	%esi, %esi
 925 0c0d 488D7C24 		leaq	112(%rsp), %rdi
 925      70
 926 0c12 4189C5   		movl	%eax, %r13d
 927 0c15 E8000000 		call	gettimeofday@PLT
 927      00
 928 0c1a 803D0000 		cmpb	$0, enableBenchmarking(%rip)
 928      000000
 929 0c21 4C8B1C24 		movq	(%rsp), %r11
 930 0c25 448B5424 		movl	16(%rsp), %r10d
 930      10
 931 0c2a 0F8446FD 		je	.L143
 931      FFFF
 932 0c30 E914FFFF 		jmp	.L158
 932      FF
 933              	.L431:
 934 0c35 4C89D8   		movq	%r11, %rax
 935 0c38 4531D2   		xorl	%r10d, %r10d
 936 0c3b E93AFEFF 		jmp	.L159
 936      FF
 937              	.L427:
 938 0c40 48039C24 		addq	128(%rsp), %rbx
 938      80000000 
 939 0c48 498D4DFF 		leaq	-1(%r13), %rcx
 940 0c4c 4D85ED   		testq	%r13, %r13
 941 0c4f 0F845101 		je	.L108
 941      0000
 942 0c55 4883F90E 		cmpq	$14, %rcx
 943 0c59 0F865C08 		jbe	.L172
 943      0000
 944 0c5f 4C89EE   		movq	%r13, %rsi
 945 0c62 660FEFC9 		pxor	%xmm1, %xmm1
 946 0c66 660FEFD2 		pxor	%xmm2, %xmm2
 947 0c6a 4889D8   		movq	%rbx, %rax
 948 0c6d 83E6F0   		andl	$4294967280, %esi
 949 0c70 4801DE   		addq	%rbx, %rsi
 950              	.L110:
 951 0c73 F30F6F00 		movdqu	(%rax), %xmm0
 952 0c77 4883C010 		addq	$16, %rax
 953 0c7b 660F6FD8 		movdqa	%xmm0, %xmm3
 954 0c7f 660F68C2 		punpckhbw	%xmm2, %xmm0
 955 0c83 660F60DA 		punpcklbw	%xmm2, %xmm3
 956 0c87 660FFDC3 		paddw	%xmm3, %xmm0
 957 0c8b 660FFDC8 		paddw	%xmm0, %xmm1
 958 0c8f 4839F0   		cmpq	%rsi, %rax
 959 0c92 75DF     		jne	.L110
 960 0c94 660F6FC1 		movdqa	%xmm1, %xmm0
 961 0c98 4C89E8   		movq	%r13, %rax
 962 0c9b 660F73D8 		psrldq	$8, %xmm0
 962      08
 963 0ca0 4883E0F0 		andq	$-16, %rax
 964 0ca4 660FFDC1 		paddw	%xmm1, %xmm0
 965 0ca8 4801C3   		addq	%rax, %rbx
 966 0cab 4829C1   		subq	%rax, %rcx
 967 0cae 660F6FC8 		movdqa	%xmm0, %xmm1
 968 0cb2 660F73D9 		psrldq	$4, %xmm1
 968      04
 969 0cb7 660FFDC1 		paddw	%xmm1, %xmm0
 970 0cbb 660F6FC8 		movdqa	%xmm0, %xmm1
 971 0cbf 660F73D9 		psrldq	$2, %xmm1
 971      02
 972 0cc4 660FFDC1 		paddw	%xmm1, %xmm0
 973 0cc8 66440FC5 		pextrw	$0, %xmm0, %r14d
 973      F000
 974 0cce 4939C5   		cmpq	%rax, %r13
 975 0cd1 0F84CB00 		je	.L111
 975      0000
 976              	.L109:
 977 0cd7 0FB603   		movzbl	(%rbx), %eax
 978 0cda 4101C6   		addl	%eax, %r14d
 979 0cdd 4885C9   		testq	%rcx, %rcx
 980 0ce0 0F84BC00 		je	.L111
 980      0000
 981 0ce6 0FB64301 		movzbl	1(%rbx), %eax
 982 0cea 4101C6   		addl	%eax, %r14d
 983 0ced 4883F901 		cmpq	$1, %rcx
 984 0cf1 0F84AB00 		je	.L111
 984      0000
 985 0cf7 0FB64302 		movzbl	2(%rbx), %eax
 986 0cfb 4101C6   		addl	%eax, %r14d
 987 0cfe 4883F902 		cmpq	$2, %rcx
 988 0d02 0F849A00 		je	.L111
 988      0000
 989 0d08 0FB64303 		movzbl	3(%rbx), %eax
 990 0d0c 4101C6   		addl	%eax, %r14d
 991 0d0f 4883F903 		cmpq	$3, %rcx
 992 0d13 0F848900 		je	.L111
 992      0000
 993 0d19 0FB64304 		movzbl	4(%rbx), %eax
 994 0d1d 4101C6   		addl	%eax, %r14d
 995 0d20 4883F904 		cmpq	$4, %rcx
 996 0d24 747C     		je	.L111
 997 0d26 0FB64305 		movzbl	5(%rbx), %eax
 998 0d2a 4101C6   		addl	%eax, %r14d
 999 0d2d 4883F905 		cmpq	$5, %rcx
 1000 0d31 746F     		je	.L111
 1001 0d33 0FB64306 		movzbl	6(%rbx), %eax
 1002 0d37 4101C6   		addl	%eax, %r14d
 1003 0d3a 4883F906 		cmpq	$6, %rcx
 1004 0d3e 7462     		je	.L111
 1005 0d40 0FB64307 		movzbl	7(%rbx), %eax
 1006 0d44 4101C6   		addl	%eax, %r14d
 1007 0d47 4883F907 		cmpq	$7, %rcx
 1008 0d4b 7455     		je	.L111
 1009 0d4d 0FB64308 		movzbl	8(%rbx), %eax
 1010 0d51 4101C6   		addl	%eax, %r14d
 1011 0d54 4883F908 		cmpq	$8, %rcx
 1012 0d58 7448     		je	.L111
 1013 0d5a 0FB64309 		movzbl	9(%rbx), %eax
 1014 0d5e 4101C6   		addl	%eax, %r14d
 1015 0d61 4883F909 		cmpq	$9, %rcx
 1016 0d65 743B     		je	.L111
 1017 0d67 0FB6430A 		movzbl	10(%rbx), %eax
 1018 0d6b 4101C6   		addl	%eax, %r14d
 1019 0d6e 4883F90A 		cmpq	$10, %rcx
 1020 0d72 742E     		je	.L111
 1021 0d74 0FB6430B 		movzbl	11(%rbx), %eax
 1022 0d78 4101C6   		addl	%eax, %r14d
 1023 0d7b 4883F90B 		cmpq	$11, %rcx
 1024 0d7f 7421     		je	.L111
 1025 0d81 0FB6430C 		movzbl	12(%rbx), %eax
 1026 0d85 4101C6   		addl	%eax, %r14d
 1027 0d88 4883F90C 		cmpq	$12, %rcx
 1028 0d8c 7414     		je	.L111
 1029 0d8e 0FB6430D 		movzbl	13(%rbx), %eax
 1030 0d92 4101C6   		addl	%eax, %r14d
 1031 0d95 4883F90D 		cmpq	$13, %rcx
 1032 0d99 7407     		je	.L111
 1033 0d9b 0FB6430E 		movzbl	14(%rbx), %eax
 1034 0d9f 4101C6   		addl	%eax, %r14d
 1035              	.L111:
 1036 0da2 450FB7F6 		movzwl	%r14w, %r14d
 1037              	.L108:
 1038 0da6 660FEFC0 		pxor	%xmm0, %xmm0
 1039 0daa 660FEFC9 		pxor	%xmm1, %xmm1
 1040 0dae 448B4424 		movl	32(%rsp), %r8d
 1040      20
 1041 0db3 4489F1   		movl	%r14d, %ecx
 1042 0db6 48694424 		imulq	$1000000, 112(%rsp), %rax
 1042      7040420F 
 1042      00
 1043 0dbf 48034424 		addq	120(%rsp), %rax
 1043      78
 1044 0dc4 BF010000 		movl	$1, %edi
 1044      00
 1045 0dc9 48695424 		imulq	$1000000, 96(%rsp), %rdx
 1045      6040420F 
 1045      00
 1046 0dd2 48035424 		addq	104(%rsp), %rdx
 1046      68
 1047 0dd7 488D3500 		leaq	.LC6(%rip), %rsi
 1047      000000
 1048 0dde 4829D0   		subq	%rdx, %rax
 1049 0de1 F2480F2A 		cvtsi2sdq	%rax, %xmm0
 1049      C0
 1050 0de6 8B44243C 		movl	60(%rsp), %eax
 1051 0dea F20F5E05 		divsd	.LC4(%rip), %xmm0
 1051      00000000 
 1052 0df2 F20F5905 		mulsd	.LC5(%rip), %xmm0
 1052      00000000 
 1053 0dfa F2480F2A 		cvtsi2sdq	%rax, %xmm1
 1053      C8
 1054 0dff 4889C2   		movq	%rax, %rdx
 1055 0e02 B8010000 		movl	$1, %eax
 1055      00
 1056 0e07 F20F5EC8 		divsd	%xmm0, %xmm1
 1057 0e0b 660F28C1 		movapd	%xmm1, %xmm0
 1058 0e0f E8000000 		call	__printf_chk@PLT
 1058      00
 1059 0e14 E9EEF8FF 		jmp	.L107
 1059      FF
 1060              	.L421:
 1061 0e19 84D2     		testb	%dl, %dl
 1062 0e1b 7578     		jne	.L150
 1063 0e1d 488B9424 		movq	136(%rsp), %rdx
 1063      88000000 
 1064 0e25 488BB424 		movq	128(%rsp), %rsi
 1064      80000000 
 1065 0e2d 31FF     		xorl	%edi, %edi
 1066 0e2f 4531ED   		xorl	%r13d, %r13d
 1067 0e32 E8000000 		call	dump@PLT
 1067      00
 1068 0e37 488B7C24 		movq	24(%rsp), %rdi
 1068      18
 1069 0e3c E8000000 		call	bufDestroy@PLT
 1069      00
 1070 0e41 E972F5FF 		jmp	.L65
 1070      FF
 1071              	.L81:
 1072 0e46 488D5001 		leaq	1(%rax), %rdx
 1073 0e4a 48891500 		movq	%rdx, ptr(%rip)
 1073      000000
 1074 0e51 0FB65001 		movzbl	1(%rax), %edx
 1075 0e55 80FA22   		cmpb	$34, %dl
 1076 0e58 7409     		je	.L188
 1077 0e5a 80FA27   		cmpb	$39, %dl
 1078 0e5d 0F8524FA 		jne	.L131
 1078      FFFF
 1079              	.L188:
 1080 0e63 488D7002 		leaq	2(%rax), %rsi
 1081 0e67 0FB64002 		movzbl	2(%rax), %eax
 1082 0e6b 48893500 		movq	%rsi, ptr(%rip)
 1082      000000
 1083 0e72 4889F3   		movq	%rsi, %rbx
 1084 0e75 38D0     		cmpb	%dl, %al
 1085 0e77 7513     		jne	.L83
 1086 0e79 EB36     		jmp	.L84
 1087 0e7b 0F1F4400 		.p2align 4,,10
 1087      00
 1088              		.p2align 3
 1089              	.L85:
 1090 0e80 0FB64301 		movzbl	1(%rbx), %eax
 1091 0e84 4883C301 		addq	$1, %rbx
 1092 0e88 38D0     		cmpb	%dl, %al
 1093 0e8a 7425     		je	.L84
 1094              	.L83:
 1095 0e8c 84C0     		testb	%al, %al
 1096 0e8e 75F0     		jne	.L85
 1097 0e90 E9CCF8FF 		jmp	.L176
 1097      FF
 1098              	.L150:
 1099 0e95 488B7C24 		movq	24(%rsp), %rdi
 1099      18
 1100 0e9a 41BD0500 		movl	$5, %r13d
 1100      0000
 1101 0ea0 E8000000 		call	bufDestroy@PLT
 1101      00
 1102 0ea5 488D0D00 		leaq	.LC1(%rip), %rcx
 1102      000000
 1103 0eac E992F4FF 		jmp	.L152
 1103      FF
 1104              	.L84:
 1105 0eb1 84D2     		testb	%dl, %dl
 1106 0eb3 0F84A8F8 		je	.L176
 1106      FFFF
 1107 0eb9 4989DD   		movq	%rbx, %r13
 1108 0ebc 48893424 		movq	%rsi, (%rsp)
 1109 0ec0 4929F5   		subq	%rsi, %r13
 1110 0ec3 498D7D01 		leaq	1(%r13), %rdi
 1111 0ec7 E8000000 		call	malloc@PLT
 1111      00
 1112 0ecc 4989C6   		movq	%rax, %r14
 1113 0ecf 4885C0   		testq	%rax, %rax
 1114 0ed2 0F843106 		je	.L177
 1114      0000
 1115 0ed8 488B3424 		movq	(%rsp), %rsi
 1116 0edc 4839DE   		cmpq	%rbx, %rsi
 1117 0edf 0F84FC05 		je	.L178
 1117      0000
 1118 0ee5 4C89EA   		movq	%r13, %rdx
 1119 0ee8 4889C7   		movq	%rax, %rdi
 1120 0eeb 4883C301 		addq	$1, %rbx
 1121 0eef E8000000 		call	strncpy@PLT
 1121      00
 1122 0ef4 43C6042E 		movb	$0, (%r14,%r13)
 1122      00
 1123 0ef9 4C89F7   		movq	%r14, %rdi
 1124 0efc 488D3500 		leaq	.LC2(%rip), %rsi
 1124      000000
 1125 0f03 48891D00 		movq	%rbx, ptr(%rip)
 1125      000000
 1126 0f0a E8000000 		call	fopen@PLT
 1126      00
 1127 0f0f 48890424 		movq	%rax, (%rsp)
 1128 0f13 4885C0   		testq	%rax, %rax
 1129 0f16 0F84DD05 		je	.L169
 1129      0000
 1130 0f1c 4C89F7   		movq	%r14, %rdi
 1131 0f1f E8000000 		call	free@PLT
 1131      00
 1132 0f24 31F6     		xorl	%esi, %esi
 1133 0f26 488D7C24 		leaq	96(%rsp), %rdi
 1133      60
 1134 0f2b E8000000 		call	gettimeofday@PLT
 1134      00
 1135 0f30 488B4424 		movq	48(%rsp), %rax
 1135      30
 1136 0f35 4D89E0   		movq	%r12, %r8
 1137 0f38 4889EF   		movq	%rbp, %rdi
 1138 0f3b BA000001 		movl	$65536, %edx
 1138      00
 1139 0f40 0FB67424 		movzbl	32(%rsp), %esi
 1139      20
 1140 0f45 39D0     		cmpl	%edx, %eax
 1141 0f47 0F46D0   		cmovbe	%eax, %edx
 1142 0f4a 31C9     		xorl	%ecx, %ecx
 1143 0f4c 89742408 		movl	%esi, 8(%rsp)
 1144 0f50 4189D5   		movl	%edx, %r13d
 1145 0f53 E8000000 		call	flReadChannelAsyncSubmit@PLT
 1145      00
 1146 0f58 85C0     		testl	%eax, %eax
 1147 0f5a 0F853004 		jne	.L89
 1147      0000
 1148 0f60 8B5C2430 		movl	48(%rsp), %ebx
 1149 0f64 4429EB   		subl	%r13d, %ebx
 1150 0f67 41BD0000 		movl	$0, %r13d
 1150      0000
 1151 0f6d 0F841B05 		je	.L170
 1151      0000
 1152              		.p2align 4,,10
 1153 0f73 0F1F4400 		.p2align 3
 1153      00
 1154              	.L95:
 1155 0f78 B8000001 		movl	$65536, %eax
 1155      00
 1156 0f7d 8B742408 		movl	8(%rsp), %esi
 1157 0f81 4D89E0   		movq	%r12, %r8
 1158 0f84 4889EF   		movq	%rbp, %rdi
 1159 0f87 39C3     		cmpl	%eax, %ebx
 1160 0f89 0F46C3   		cmovbe	%ebx, %eax
 1161 0f8c 31C9     		xorl	%ecx, %ecx
 1162 0f8e 89C2     		movl	%eax, %edx
 1163 0f90 4189C6   		movl	%eax, %r14d
 1164 0f93 E8000000 		call	flReadChannelAsyncSubmit@PLT
 1164      00
 1165 0f98 85C0     		testl	%eax, %eax
 1166 0f9a 0F85F003 		jne	.L89
 1166      0000
 1167 0fa0 4429F3   		subl	%r14d, %ebx
 1168 0fa3 4C8D7424 		leaq	88(%rsp), %r14
 1168      58
 1169 0fa8 4D89E0   		movq	%r12, %r8
 1170 0fab 4C89F9   		movq	%r15, %rcx
 1171 0fae 4C89FA   		movq	%r15, %rdx
 1172 0fb1 4C89F6   		movq	%r14, %rsi
 1173 0fb4 4889EF   		movq	%rbp, %rdi
 1174 0fb7 4C897C24 		movq	%r15, 16(%rsp)
 1174      10
 1175 0fbc E8000000 		call	flReadChannelAsyncAwait@PLT
 1175      00
 1176 0fc1 85C0     		testl	%eax, %eax
 1177 0fc3 0F85C703 		jne	.L89
 1177      0000
 1178 0fc9 8B54244C 		movl	76(%rsp), %edx
 1179 0fcd 488B0C24 		movq	(%rsp), %rcx
 1180 0fd1 BE010000 		movl	$1, %esi
 1180      00
 1181 0fd6 488B7C24 		movq	88(%rsp), %rdi
 1181      58
 1182 0fdb E8000000 		call	fwrite@PLT
 1182      00
 1183 0fe0 8B74244C 		movl	76(%rsp), %esi
 1184 0fe4 39C6     		cmpl	%eax, %esi
 1185 0fe6 0F85C003 		jne	.L96
 1185      0000
 1186 0fec 488B5424 		movq	88(%rsp), %rdx
 1186      58
 1187 0ff1 8D4EFF   		leal	-1(%rsi), %ecx
 1188 0ff4 85F6     		testl	%esi, %esi
 1189 0ff6 0F845401 		je	.L91
 1189      0000
 1190 0ffc 83F90E   		cmpl	$14, %ecx
 1191 0fff 0F868700 		jbe	.L92
 1191      0000
 1192 1005 89F7     		movl	%esi, %edi
 1193 1007 660FEFC9 		pxor	%xmm1, %xmm1
 1194 100b 660FEFD2 		pxor	%xmm2, %xmm2
 1195 100f 4889D0   		movq	%rdx, %rax
 1196 1012 C1EF04   		shrl	$4, %edi
 1197 1015 83EF01   		subl	$1, %edi
 1198 1018 48C1E704 		salq	$4, %rdi
 1199 101c 488D7C3A 		leaq	16(%rdx,%rdi), %rdi
 1199      10
 1200              		.p2align 4,,10
 1201 1021 0F1F8000 		.p2align 3
 1201      000000
 1202              	.L93:
 1203 1028 F30F6F00 		movdqu	(%rax), %xmm0
 1204 102c 4883C010 		addq	$16, %rax
 1205 1030 660F6FD8 		movdqa	%xmm0, %xmm3
 1206 1034 660F60C2 		punpcklbw	%xmm2, %xmm0
 1207 1038 660F68DA 		punpckhbw	%xmm2, %xmm3
 1208 103c 660FFDC3 		paddw	%xmm3, %xmm0
 1209 1040 660FFDC8 		paddw	%xmm0, %xmm1
 1210 1044 4839F8   		cmpq	%rdi, %rax
 1211 1047 75DF     		jne	.L93
 1212 1049 660F6FC1 		movdqa	%xmm1, %xmm0
 1213 104d 660F73D8 		psrldq	$8, %xmm0
 1213      08
 1214 1052 660FFDC8 		paddw	%xmm0, %xmm1
 1215 1056 660F6FC1 		movdqa	%xmm1, %xmm0
 1216 105a 660F73D8 		psrldq	$4, %xmm0
 1216      04
 1217 105f 660FFDC8 		paddw	%xmm0, %xmm1
 1218 1063 660F6FC1 		movdqa	%xmm1, %xmm0
 1219 1067 660F73D8 		psrldq	$2, %xmm0
 1219      02
 1220 106c 660FFDC8 		paddw	%xmm0, %xmm1
 1221 1070 660FC5C1 		pextrw	$0, %xmm1, %eax
 1221      00
 1222 1075 4101C5   		addl	%eax, %r13d
 1223 1078 89F0     		movl	%esi, %eax
 1224 107a 83E0F0   		andl	$-16, %eax
 1225 107d 89C7     		movl	%eax, %edi
 1226 107f 29C1     		subl	%eax, %ecx
 1227 1081 4801FA   		addq	%rdi, %rdx
 1228 1084 39F0     		cmpl	%esi, %eax
 1229 1086 0F84C400 		je	.L91
 1229      0000
 1230              	.L92:
 1231 108c 0FB602   		movzbl	(%rdx), %eax
 1232 108f 4101C5   		addl	%eax, %r13d
 1233 1092 85C9     		testl	%ecx, %ecx
 1234 1094 0F84B600 		je	.L91
 1234      0000
 1235 109a 0FB64201 		movzbl	1(%rdx), %eax
 1236 109e 4101C5   		addl	%eax, %r13d
 1237 10a1 83F901   		cmpl	$1, %ecx
 1238 10a4 0F84A600 		je	.L91
 1238      0000
 1239 10aa 0FB64202 		movzbl	2(%rdx), %eax
 1240 10ae 4101C5   		addl	%eax, %r13d
 1241 10b1 83F902   		cmpl	$2, %ecx
 1242 10b4 0F849600 		je	.L91
 1242      0000
 1243 10ba 0FB64203 		movzbl	3(%rdx), %eax
 1244 10be 4101C5   		addl	%eax, %r13d
 1245 10c1 83F903   		cmpl	$3, %ecx
 1246 10c4 0F848600 		je	.L91
 1246      0000
 1247 10ca 0FB64204 		movzbl	4(%rdx), %eax
 1248 10ce 4101C5   		addl	%eax, %r13d
 1249 10d1 83F904   		cmpl	$4, %ecx
 1250 10d4 747A     		je	.L91
 1251 10d6 0FB64205 		movzbl	5(%rdx), %eax
 1252 10da 4101C5   		addl	%eax, %r13d
 1253 10dd 83F905   		cmpl	$5, %ecx
 1254 10e0 746E     		je	.L91
 1255 10e2 0FB64206 		movzbl	6(%rdx), %eax
 1256 10e6 4101C5   		addl	%eax, %r13d
 1257 10e9 83F906   		cmpl	$6, %ecx
 1258 10ec 7462     		je	.L91
 1259 10ee 0FB64207 		movzbl	7(%rdx), %eax
 1260 10f2 4101C5   		addl	%eax, %r13d
 1261 10f5 83F907   		cmpl	$7, %ecx
 1262 10f8 7456     		je	.L91
 1263 10fa 0FB64208 		movzbl	8(%rdx), %eax
 1264 10fe 4101C5   		addl	%eax, %r13d
 1265 1101 83F908   		cmpl	$8, %ecx
 1266 1104 744A     		je	.L91
 1267 1106 0FB64209 		movzbl	9(%rdx), %eax
 1268 110a 4101C5   		addl	%eax, %r13d
 1269 110d 83F909   		cmpl	$9, %ecx
 1270 1110 743E     		je	.L91
 1271 1112 0FB6420A 		movzbl	10(%rdx), %eax
 1272 1116 4101C5   		addl	%eax, %r13d
 1273 1119 83F90A   		cmpl	$10, %ecx
 1274 111c 7432     		je	.L91
 1275 111e 0FB6420B 		movzbl	11(%rdx), %eax
 1276 1122 4101C5   		addl	%eax, %r13d
 1277 1125 83F90B   		cmpl	$11, %ecx
 1278 1128 7426     		je	.L91
 1279 112a 0FB6420C 		movzbl	12(%rdx), %eax
 1280 112e 4101C5   		addl	%eax, %r13d
 1281 1131 83F90C   		cmpl	$12, %ecx
 1282 1134 741A     		je	.L91
 1283 1136 0FB6420D 		movzbl	13(%rdx), %eax
 1284 113a 4101C5   		addl	%eax, %r13d
 1285 113d 83F90D   		cmpl	$13, %ecx
 1286 1140 740E     		je	.L91
 1287 1142 0FB6420E 		movzbl	14(%rdx), %eax
 1288 1146 4101C5   		addl	%eax, %r13d
 1289 1149 0F1F8000 		.p2align 4,,10
 1289      000000
 1290              		.p2align 3
 1291              	.L91:
 1292 1150 85DB     		testl	%ebx, %ebx
 1293 1152 0F8520FE 		jne	.L95
 1293      FFFF
 1294              	.L88:
 1295 1158 488B4C24 		movq	16(%rsp), %rcx
 1295      10
 1296 115d 4D89E0   		movq	%r12, %r8
 1297 1160 4C89F6   		movq	%r14, %rsi
 1298 1163 4889EF   		movq	%rbp, %rdi
 1299 1166 4889CA   		movq	%rcx, %rdx
 1300 1169 E8000000 		call	flReadChannelAsyncAwait@PLT
 1300      00
 1301 116e 89C3     		movl	%eax, %ebx
 1302 1170 85DB     		testl	%ebx, %ebx
 1303 1172 0F851802 		jne	.L89
 1303      0000
 1304 1178 8B54244C 		movl	76(%rsp), %edx
 1305 117c 488B0C24 		movq	(%rsp), %rcx
 1306 1180 BE010000 		movl	$1, %esi
 1306      00
 1307 1185 488B7C24 		movq	88(%rsp), %rdi
 1307      58
 1308 118a E8000000 		call	fwrite@PLT
 1308      00
 1309 118f 8B74244C 		movl	76(%rsp), %esi
 1310 1193 39C6     		cmpl	%eax, %esi
 1311 1195 0F851102 		jne	.L96
 1311      0000
 1312 119b 488B5424 		movq	88(%rsp), %rdx
 1312      58
 1313 11a0 8D4EFF   		leal	-1(%rsi), %ecx
 1314 11a3 85F6     		testl	%esi, %esi
 1315 11a5 0F844D01 		je	.L87
 1315      0000
 1316 11ab 83F90E   		cmpl	$14, %ecx
 1317 11ae 0F868000 		jbe	.L97
 1317      0000
 1318 11b4 89F7     		movl	%esi, %edi
 1319 11b6 660FEFC9 		pxor	%xmm1, %xmm1
 1320 11ba 660FEFD2 		pxor	%xmm2, %xmm2
 1321 11be 4889D0   		movq	%rdx, %rax
 1322 11c1 C1EF04   		shrl	$4, %edi
 1323 11c4 83EF01   		subl	$1, %edi
 1324 11c7 48C1E704 		salq	$4, %rdi
 1325 11cb 488D7C3A 		leaq	16(%rdx,%rdi), %rdi
 1325      10
 1326              	.L98:
 1327 11d0 F30F6F00 		movdqu	(%rax), %xmm0
 1328 11d4 4883C010 		addq	$16, %rax
 1329 11d8 660F6FD8 		movdqa	%xmm0, %xmm3
 1330 11dc 660F60C2 		punpcklbw	%xmm2, %xmm0
 1331 11e0 660F68DA 		punpckhbw	%xmm2, %xmm3
 1332 11e4 660FFDC3 		paddw	%xmm3, %xmm0
 1333 11e8 660FFDC8 		paddw	%xmm0, %xmm1
 1334 11ec 4839F8   		cmpq	%rdi, %rax
 1335 11ef 75DF     		jne	.L98
 1336 11f1 660F6FC1 		movdqa	%xmm1, %xmm0
 1337 11f5 660F73D8 		psrldq	$8, %xmm0
 1337      08
 1338 11fa 660FFDC1 		paddw	%xmm1, %xmm0
 1339 11fe 660F6FC8 		movdqa	%xmm0, %xmm1
 1340 1202 660F73D9 		psrldq	$4, %xmm1
 1340      04
 1341 1207 660FFDC1 		paddw	%xmm1, %xmm0
 1342 120b 660F6FC8 		movdqa	%xmm0, %xmm1
 1343 120f 660F73D9 		psrldq	$2, %xmm1
 1343      02
 1344 1214 660FFDC1 		paddw	%xmm1, %xmm0
 1345 1218 660FC5C0 		pextrw	$0, %xmm0, %eax
 1345      00
 1346 121d 4101C5   		addl	%eax, %r13d
 1347 1220 89F0     		movl	%esi, %eax
 1348 1222 83E0F0   		andl	$-16, %eax
 1349 1225 89C7     		movl	%eax, %edi
 1350 1227 29C1     		subl	%eax, %ecx
 1351 1229 4801FA   		addq	%rdi, %rdx
 1352 122c 39C6     		cmpl	%eax, %esi
 1353 122e 0F84C400 		je	.L87
 1353      0000
 1354              	.L97:
 1355 1234 0FB602   		movzbl	(%rdx), %eax
 1356 1237 4101C5   		addl	%eax, %r13d
 1357 123a 85C9     		testl	%ecx, %ecx
 1358 123c 0F84B600 		je	.L87
 1358      0000
 1359 1242 0FB64201 		movzbl	1(%rdx), %eax
 1360 1246 4101C5   		addl	%eax, %r13d
 1361 1249 83F901   		cmpl	$1, %ecx
 1362 124c 0F84A600 		je	.L87
 1362      0000
 1363 1252 0FB64202 		movzbl	2(%rdx), %eax
 1364 1256 4101C5   		addl	%eax, %r13d
 1365 1259 83F902   		cmpl	$2, %ecx
 1366 125c 0F849600 		je	.L87
 1366      0000
 1367 1262 0FB64203 		movzbl	3(%rdx), %eax
 1368 1266 4101C5   		addl	%eax, %r13d
 1369 1269 83F903   		cmpl	$3, %ecx
 1370 126c 0F848600 		je	.L87
 1370      0000
 1371 1272 0FB64204 		movzbl	4(%rdx), %eax
 1372 1276 4101C5   		addl	%eax, %r13d
 1373 1279 83F904   		cmpl	$4, %ecx
 1374 127c 747A     		je	.L87
 1375 127e 0FB64205 		movzbl	5(%rdx), %eax
 1376 1282 4101C5   		addl	%eax, %r13d
 1377 1285 83F905   		cmpl	$5, %ecx
 1378 1288 746E     		je	.L87
 1379 128a 0FB64206 		movzbl	6(%rdx), %eax
 1380 128e 4101C5   		addl	%eax, %r13d
 1381 1291 83F906   		cmpl	$6, %ecx
 1382 1294 7462     		je	.L87
 1383 1296 0FB64207 		movzbl	7(%rdx), %eax
 1384 129a 4101C5   		addl	%eax, %r13d
 1385 129d 83F907   		cmpl	$7, %ecx
 1386 12a0 7456     		je	.L87
 1387 12a2 0FB64208 		movzbl	8(%rdx), %eax
 1388 12a6 4101C5   		addl	%eax, %r13d
 1389 12a9 83F908   		cmpl	$8, %ecx
 1390 12ac 744A     		je	.L87
 1391 12ae 0FB64209 		movzbl	9(%rdx), %eax
 1392 12b2 4101C5   		addl	%eax, %r13d
 1393 12b5 83F909   		cmpl	$9, %ecx
 1394 12b8 743E     		je	.L87
 1395 12ba 0FB6420A 		movzbl	10(%rdx), %eax
 1396 12be 4101C5   		addl	%eax, %r13d
 1397 12c1 83F90A   		cmpl	$10, %ecx
 1398 12c4 7432     		je	.L87
 1399 12c6 0FB6420B 		movzbl	11(%rdx), %eax
 1400 12ca 4101C5   		addl	%eax, %r13d
 1401 12cd 83F90B   		cmpl	$11, %ecx
 1402 12d0 7426     		je	.L87
 1403 12d2 0FB6420C 		movzbl	12(%rdx), %eax
 1404 12d6 4101C5   		addl	%eax, %r13d
 1405 12d9 83F90C   		cmpl	$12, %ecx
 1406 12dc 741A     		je	.L87
 1407 12de 0FB6420D 		movzbl	13(%rdx), %eax
 1408 12e2 4101C5   		addl	%eax, %r13d
 1409 12e5 83F90D   		cmpl	$13, %ecx
 1410 12e8 740E     		je	.L87
 1411 12ea 0FB6420E 		movzbl	14(%rdx), %eax
 1412 12ee 4101C5   		addl	%eax, %r13d
 1413              		.p2align 4,,10
 1414 12f1 0F1F8000 		.p2align 3
 1414      000000
 1415              	.L87:
 1416 12f8 31F6     		xorl	%esi, %esi
 1417 12fa 488D7C24 		leaq	112(%rsp), %rdi
 1417      70
 1418 12ff E8000000 		call	gettimeofday@PLT
 1418      00
 1419 1304 803D0000 		cmpb	$0, enableBenchmarking(%rip)
 1419      000000
 1420 130b 0F844FF5 		je	.L125
 1420      FFFF
 1421 1311 660FEFC0 		pxor	%xmm0, %xmm0
 1422 1315 660FEFC9 		pxor	%xmm1, %xmm1
 1423 1319 448B4424 		movl	32(%rsp), %r8d
 1423      20
 1424 131e 410FB7CD 		movzwl	%r13w, %ecx
 1425 1322 48694424 		imulq	$1000000, 112(%rsp), %rax
 1425      7040420F 
 1425      00
 1426 132b 48034424 		addq	120(%rsp), %rax
 1426      78
 1427 1330 BF010000 		movl	$1, %edi
 1427      00
 1428 1335 48695424 		imulq	$1000000, 96(%rsp), %rdx
 1428      6040420F 
 1428      00
 1429 133e 48035424 		addq	104(%rsp), %rdx
 1429      68
 1430 1343 488D3500 		leaq	.LC6(%rip), %rsi
 1430      000000
 1431 134a 4829D0   		subq	%rdx, %rax
 1432 134d 8B54243C 		movl	60(%rsp), %edx
 1433 1351 F2480F2A 		cvtsi2sdq	%rax, %xmm0
 1433      C0
 1434 1356 8B442430 		movl	48(%rsp), %eax
 1435 135a F20F5E05 		divsd	.LC4(%rip), %xmm0
 1435      00000000 
 1436 1362 F20F5905 		mulsd	.LC5(%rip), %xmm0
 1436      00000000 
 1437 136a F2480F2A 		cvtsi2sdq	%rax, %xmm1
 1437      C8
 1438 136f B8010000 		movl	$1, %eax
 1438      00
 1439 1374 F20F5EC8 		divsd	%xmm0, %xmm1
 1440 1378 660F28C1 		movapd	%xmm1, %xmm0
 1441 137c E8000000 		call	__printf_chk@PLT
 1441      00
 1442 1381 E9DAF4FF 		jmp	.L125
 1442      FF
 1443 1386 662E0F1F 		.p2align 4,,10
 1443      84000000 
 1443      0000
 1444              		.p2align 3
 1445              	.L89:
 1446 1390 488D3500 		leaq	.LC3(%rip), %rsi
 1446      000000
 1447 1397 4C89E7   		movq	%r12, %rdi
 1448 139a 4531ED   		xorl	%r13d, %r13d
 1449 139d BB010000 		movl	$1, %ebx
 1449      00
 1450 13a2 E8000000 		call	errPrefix@PLT
 1450      00
 1451 13a7 E94CFFFF 		jmp	.L87
 1451      FF
 1452              	.L96:
 1453 13ac 488D3500 		leaq	.LC3(%rip), %rsi
 1453      000000
 1454 13b3 4C89E7   		movq	%r12, %rdi
 1455 13b6 4531ED   		xorl	%r13d, %r13d
 1456 13b9 BB0B0000 		movl	$11, %ebx
 1456      00
 1457 13be E8000000 		call	errPrefix@PLT
 1457      00
 1458 13c3 E930FFFF 		jmp	.L87
 1458      FF
 1459              	.L78:
 1460 13c8 488B7C24 		movq	24(%rsp), %rdi
 1460      18
 1461 13cd 41BD0200 		movl	$2, %r13d
 1461      0000
 1462 13d3 BB020000 		movl	$2, %ebx
 1462      00
 1463 13d8 E8000000 		call	bufDestroy@PLT
 1463      00
 1464 13dd E956EFFF 		jmp	.L157
 1464      FF
 1465              	.L183:
 1466 13e2 41BD0500 		movl	$5, %r13d
 1466      0000
 1467 13e8 BB050000 		movl	$5, %ebx
 1467      00
 1468              	.L146:
 1469 13ed 488B7C24 		movq	24(%rsp), %rdi
 1469      18
 1470 13f2 4531F6   		xorl	%r14d, %r14d
 1471 13f5 4531FF   		xorl	%r15d, %r15d
 1472 13f8 E8000000 		call	bufDestroy@PLT
 1472      00
 1473 13fd E990F3FF 		jmp	.L149
 1473      FF
 1474              	.L429:
 1475 1402 4189DD   		movl	%ebx, %r13d
 1476 1405 4531F6   		xorl	%r14d, %r14d
 1477 1408 E96AF3FF 		jmp	.L124
 1477      FF
 1478              	.L163:
 1479 140d 48C70424 		movq	$0, (%rsp)
 1479      00000000 
 1480 1415 41BD0300 		movl	$3, %r13d
 1480      0000
 1481 141b 4531F6   		xorl	%r14d, %r14d
 1482 141e BB030000 		movl	$3, %ebx
 1482      00
 1483 1423 E94FF3FF 		jmp	.L124
 1483      FF
 1484              	.L181:
 1485 1428 41BD0200 		movl	$2, %r13d
 1485      0000
 1486 142e BB020000 		movl	$2, %ebx
 1486      00
 1487 1433 EBB8     		jmp	.L146
 1488              	.L182:
 1489 1435 41BD0400 		movl	$4, %r13d
 1489      0000
 1490 143b BB040000 		movl	$4, %ebx
 1490      00
 1491 1440 EBAB     		jmp	.L146
 1492              	.L173:
 1493 1442 48C70424 		movq	$0, (%rsp)
 1493      00000000 
 1494 144a 41BD0200 		movl	$2, %r13d
 1494      0000
 1495 1450 4531F6   		xorl	%r14d, %r14d
 1496 1453 4531FF   		xorl	%r15d, %r15d
 1497 1456 BB020000 		movl	$2, %ebx
 1497      00
 1498 145b E91AF3FF 		jmp	.L115
 1498      FF
 1499              	.L174:
 1500 1460 48C70424 		movq	$0, (%rsp)
 1500      00000000 
 1501 1468 41BD0300 		movl	$3, %r13d
 1501      0000
 1502 146e 4531F6   		xorl	%r14d, %r14d
 1503 1471 4531FF   		xorl	%r15d, %r15d
 1504 1474 BB030000 		movl	$3, %ebx
 1504      00
 1505 1479 E9FCF2FF 		jmp	.L115
 1505      FF
 1506              	.L420:
 1507 147e 41BD0100 		movl	$1, %r13d
 1507      0000
 1508 1484 BB010000 		movl	$1, %ebx
 1508      00
 1509 1489 E95FFFFF 		jmp	.L146
 1509      FF
 1510              	.L170:
 1511 148e 4C897C24 		movq	%r15, 16(%rsp)
 1511      10
 1512 1493 4C8D7424 		leaq	88(%rsp), %r14
 1512      58
 1513 1498 E9BBFCFF 		jmp	.L88
 1513      FF
 1514              	.L424:
 1515 149d 48C70424 		movq	$0, (%rsp)
 1515      00000000 
 1516 14a5 41BD0900 		movl	$9, %r13d
 1516      0000
 1517 14ab 4531F6   		xorl	%r14d, %r14d
 1518 14ae 4531FF   		xorl	%r15d, %r15d
 1519 14b1 BB090000 		movl	$9, %ebx
 1519      00
 1520 14b6 E9BFF2FF 		jmp	.L115
 1520      FF
 1521              	.L172:
 1522 14bb 4531F6   		xorl	%r14d, %r14d
 1523 14be E914F8FF 		jmp	.L109
 1523      FF
 1524              	.L180:
 1525 14c3 48C70424 		movq	$0, (%rsp)
 1525      00000000 
 1526 14cb 4D89DF   		movq	%r11, %r15
 1527 14ce 41BD0100 		movl	$1, %r13d
 1527      0000
 1528 14d4 4531F6   		xorl	%r14d, %r14d
 1529 14d7 BB010000 		movl	$1, %ebx
 1529      00
 1530 14dc E999F2FF 		jmp	.L115
 1530      FF
 1531              	.L178:
 1532 14e1 48C70424 		movq	$0, (%rsp)
 1532      00000000 
 1533 14e9 41BD0800 		movl	$8, %r13d
 1533      0000
 1534 14ef BB080000 		movl	$8, %ebx
 1534      00
 1535 14f4 E97EF2FF 		jmp	.L124
 1535      FF
 1536              	.L169:
 1537 14f9 41BD0B00 		movl	$11, %r13d
 1537      0000
 1538 14ff BB0B0000 		movl	$11, %ebx
 1538      00
 1539 1504 E96EF2FF 		jmp	.L124
 1539      FF
 1540              	.L177:
 1541 1509 48C70424 		movq	$0, (%rsp)
 1541      00000000 
 1542 1511 41BD0700 		movl	$7, %r13d
 1542      0000
 1543 1517 BB070000 		movl	$7, %ebx
 1543      00
 1544 151c E956F2FF 		jmp	.L124
 1544      FF
 1545              	.L419:
 1546 1521 E8000000 		call	__stack_chk_fail@PLT
 1546      00
 1547              	.L179:
 1548 1526 41BD0A00 		movl	$10, %r13d
 1548      0000
 1549 152c BB0A0000 		movl	$10, %ebx
 1549      00
 1550 1531 E941F2FF 		jmp	.L124
 1550      FF
 1551              		.cfi_endproc
 1552              	.LFE42:
 1554              		.section	.rodata.str1.8
 1555 007e 0000     		.align 8
 1556              	.LC12:
 1557 0080 20202020 		.string	"            vendor ID and product ID (e.g 04B4:8613)"
 1557      20202020 
 1557      20202020 
 1557      76656E64 
 1557      6F722049 
 1558              		.section	.rodata.str1.1
 1559              	.LC13:
 1560 0048 3C564944 		.string	"<VID:PID>"
 1560      3A504944 
 1560      3E00
 1561              	.LC14:
 1562 0052 69767000 		.string	"ivp"
 1563              	.LC15:
 1564 0056 6900     		.string	"i"
 1565              		.section	.rodata.str1.8
 1566 00b5 000000   		.align 8
 1567              	.LC16:
 1568 00b8 20202020 		.string	"       VID, PID and opt. dev ID (e.g 1D50:602B:0001)"
 1568      20202056 
 1568      49442C20 
 1568      50494420 
 1568      616E6420 
 1569              		.section	.rodata.str1.1
 1570              	.LC17:
 1571 0058 3C564944 		.string	"<VID:PID[:DID]>"
 1571      3A504944 
 1571      5B3A4449 
 1571      445D3E00 
 1572              	.LC18:
 1573 0068 767000   		.string	"vp"
 1574              	.LC19:
 1575 006b 7600     		.string	"v"
 1576              		.section	.rodata.str1.8
 1577 00ed 000000   		.align 8
 1578              	.LC20:
 1579 00f0 20202020 		.string	"        firmware to RAM-load (or use std fw)"
 1579      20202020 
 1579      6669726D 
 1579      77617265 
 1579      20746F20 
 1580              		.section	.rodata.str1.1
 1581              	.LC21:
 1582 006d 3C666972 		.string	"<firmware.hex>"
 1582      6D776172 
 1582      652E6865 
 1582      783E00
 1583              	.LC22:
 1584 007c 667700   		.string	"fw"
 1585              	.LC23:
 1586 007f 6600     		.string	"f"
 1587              		.section	.rodata.str1.8
 1588 011d 000000   		.align 8
 1589              	.LC24:
 1590 0120 20726561 		.string	" read/write digital ports (e.g B13+,C1-,B2?)"
 1590      642F7772 
 1590      69746520 
 1590      64696769 
 1590      74616C20 
 1591              		.section	.rodata.str1.1
 1592              	.LC25:
 1593 0081 3C626974 		.string	"<bitCfg[,bitCfg]*>"
 1593      4366675B 
 1593      2C626974 
 1593      4366675D 
 1593      2A3E00
 1594              	.LC26:
 1595 0094 706F7274 		.string	"ports"
 1595      7300
 1596              	.LC27:
 1597 009a 6400     		.string	"d"
 1598              	.LC28:
 1599 009c 20202020 		.string	"         query the JTAG chain"
 1599      20202020 
 1599      20717565 
 1599      72792074 
 1599      6865204A 
 1600              	.LC29:
 1601 00ba 3C6A7461 		.string	"<jtagBits>"
 1601      67426974 
 1601      733E00
 1602              	.LC30:
 1603 00c5 71756572 		.string	"query"
 1603      7900
 1604              	.LC31:
 1605 00cb 7100     		.string	"q"
 1606              	.LC32:
 1607 00cd 20202020 		.string	"         program a device"
 1607      20202020 
 1607      2070726F 
 1607      6772616D 
 1607      20612064 
 1608              	.LC33:
 1609 00e7 3C636F6E 		.string	"<config>"
 1609      6669673E 
 1609      00
 1610              	.LC34:
 1611 00f0 70726F67 		.string	"program"
 1611      72616D00 
 1612              	.LC35:
 1613 00f8 7000     		.string	"p"
 1614              		.section	.rodata.str1.8
 1615 014d 000000   		.align 8
 1616              	.LC36:
 1617 0150 20202020 		.string	"        which comm conduit to choose (default 0x01)"
 1617      20202020 
 1617      77686963 
 1617      6820636F 
 1617      6D6D2063 
 1618              		.section	.rodata.str1.1
 1619              	.LC37:
 1620 00fa 3C636F6E 		.string	"<conduit>"
 1620      64756974 
 1620      3E00
 1621              	.LC38:
 1622 0104 636F6E64 		.string	"conduit"
 1622      75697400 
 1623              	.LC39:
 1624 010c 6300     		.string	"c"
 1625              		.section	.rodata.str1.8
 1626 0184 00000000 		.align 8
 1627              	.LC40:
 1628 0188 20202020 		.string	"    a series of CommFPGA actions"
 1628      61207365 
 1628      72696573 
 1628      206F6620 
 1628      436F6D6D 
 1629              		.section	.rodata.str1.1
 1630              	.LC41:
 1631 010e 3C616374 		.string	"<actionString>"
 1631      696F6E53 
 1631      7472696E 
 1631      673E00
 1632              	.LC42:
 1633 011d 61637469 		.string	"action"
 1633      6F6E00
 1634              	.LC43:
 1635 0124 6100     		.string	"a"
 1636              		.section	.rodata.str1.8
 1637 01a9 00000000 		.align 8
 1637      000000
 1638              	.LC44:
 1639 01b0 20202020 		.string	"                    start up an interactive CommFPGA session"
 1639      20202020 
 1639      20202020 
 1639      20202020 
 1639      20202020 
 1640              		.section	.rodata.str1.1
 1641              	.LC45:
 1642 0126 7368656C 		.string	"shell"
 1642      6C00
 1643              	.LC46:
 1644 012c 7300     		.string	"s"
 1645              		.section	.rodata.str1.8
 1646 01ed 000000   		.align 8
 1647              	.LC47:
 1648 01f0 20202020 		.string	"                enable benchmarking & checksumming"
 1648      20202020 
 1648      20202020 
 1648      20202020 
 1648      656E6162 
 1649              		.section	.rodata.str1.1
 1650              	.LC48:
 1651 012e 62656E63 		.string	"benchmark"
 1651      686D6172 
 1651      6B00
 1652              	.LC49:
 1653 0138 6200     		.string	"b"
 1654              		.section	.rodata.str1.8
 1655 0223 00000000 		.align 8
 1655      00
 1656              	.LC50:
 1657 0228 20202020 		.string	"                    reset the bulk endpoints"
 1657      20202020 
 1657      20202020 
 1657      20202020 
 1657      20202020 
 1658              		.section	.rodata.str1.1
 1659              	.LC51:
 1660 013a 72657365 		.string	"reset"
 1660      7400
 1661              	.LC52:
 1662 0140 7200     		.string	"r"
 1663              		.section	.rodata.str1.8
 1664 0255 000000   		.align 8
 1665              	.LC53:
 1666 0258 20202077 		.string	"   write data from channel ch to file"
 1666      72697465 
 1666      20646174 
 1666      61206672 
 1666      6F6D2063 
 1667              		.section	.rodata.str1.1
 1668              	.LC54:
 1669 0142 3C63683A 		.string	"<ch:file.bin>"
 1669      66696C65 
 1669      2E62696E 
 1669      3E00
 1670              	.LC55:
 1671 0150 64756D70 		.string	"dumploop"
 1671      6C6F6F70 
 1671      00
 1672              	.LC56:
 1673 0159 6C00     		.string	"l"
 1674              		.section	.rodata.str1.8
 1675 027e 0000     		.align 8
 1676              	.LC57:
 1677 0280 20202020 		.string	"                     print this help and exit"
 1677      20202020 
 1677      20202020 
 1677      20202020 
 1677      20202020 
 1678              		.section	.rodata.str1.1
 1679              	.LC58:
 1680 015b 68656C70 		.string	"help"
 1680      00
 1681              	.LC59:
 1682 0160 6800     		.string	"h"
 1683              		.section	.rodata.str1.8
 1684 02ae 0000     		.align 8
 1685              	.LC60:
 1686 02b0 20202077 		.string	"   write firmware to FX2's EEPROM (!!)"
 1686      72697465 
 1686      20666972 
 1686      6D776172 
 1686      6520746F 
 1687              		.section	.rodata.str1.1
 1688              	.LC61:
 1689 0162 3C737464 		.string	"<std|fw.hex|fw.iic>"
 1689      7C66772E 
 1689      6865787C 
 1689      66772E69 
 1689      69633E00 
 1690              	.LC62:
 1691 0176 65657072 		.string	"eeprom"
 1691      6F6D00
 1692              		.section	.rodata.str1.8
 1693 02d7 00       		.align 8
 1694              	.LC63:
 1695 02d8 20202020 		.string	"     backup FX2's EEPROM (e.g 128:fw.iic)\n"
 1695      20626163 
 1695      6B757020 
 1695      46583227 
 1695      73204545 
 1696              		.section	.rodata.str1.1
 1697              	.LC64:
 1698 017d 3C6B6269 		.string	"<kbitSize:fw.iic>"
 1698      7453697A 
 1698      653A6677 
 1698      2E696963 
 1698      3E00
 1699              	.LC65:
 1700 018f 6261636B 		.string	"backup"
 1700      757000
 1701              	.LC66:
 1702 0196 666C636C 		.string	"flcli"
 1702      6900
 1703              	.LC67:
 1704 019c 25733A20 		.string	"%s: insufficient memory\n"
 1704      696E7375 
 1704      66666963 
 1704      69656E74 
 1704      206D656D 
 1705              		.section	.rodata.str1.8
 1706 0303 00000000 		.align 8
 1706      00
 1707              	.LC68:
 1708 0308 46504741 		.string	"FPGALink Command-Line Interface Copyright (C) 2012-2014 Chris McClelland\n\nUsage: %s"
 1708      4C696E6B 
 1708      20436F6D 
 1708      6D616E64 
 1708      2D4C696E 
 1709              		.section	.rodata.str1.1
 1710              	.LC69:
 1711 01b5 0A00     		.string	"\n"
 1712              		.section	.rodata.str1.8
 1713 035c 00000000 		.align 8
 1714              	.LC70:
 1715 0360 0A496E74 		.string	"\nInteract with an FPGALink device.\n\n"
 1715      65726163 
 1715      74207769 
 1715      74682061 
 1715      6E204650 
 1716              		.section	.rodata.str1.1
 1717              	.LC71:
 1718 01b7 2020252D 		.string	"  %-10s %s\n"
 1718      31307320 
 1718      25730A00 
 1719              		.section	.rodata.str1.8
 1720 0385 000000   		.align 8
 1721              	.LC72:
 1722 0388 54727920 		.string	"Try '%s --help' for more information.\n"
 1722      27257320 
 1722      2D2D6865 
 1722      6C702720 
 1722      666F7220 
 1723 03af 00       		.align 8
 1724              	.LC73:
 1725 03b0 41747465 		.string	"Attempting to open connection to FPGALink device %s...\n"
 1725      6D707469 
 1725      6E672074 
 1725      6F206F70 
 1725      656E2063 
 1726              		.section	.rodata.str1.1
 1727              	.LC74:
 1728 01c3 4C6F6164 		.string	"Loading firmware into %s...\n"
 1728      696E6720 
 1728      6669726D 
 1728      77617265 
 1728      20696E74 
 1729              	.LC75:
 1730 01e0 41776169 		.string	"Awaiting renumeration"
 1730      74696E67 
 1730      2072656E 
 1730      756D6572 
 1730      6174696F 
 1731              	.LC76:
 1732 01f6 2E00     		.string	"."
 1733              		.section	.rodata.str1.8
 1734              		.align 8
 1735              	.LC77:
 1736 03e8 46504741 		.string	"FPGALink device did not renumerate properly as %s\n"
 1736      4C696E6B 
 1736      20646576 
 1736      69636520 
 1736      64696420 
 1737 041b 00000000 		.align 8
 1737      00
 1738              	.LC78:
 1739 0420 41747465 		.string	"Attempting to open connection to FPGLink device %s again...\n"
 1739      6D707469 
 1739      6E672074 
 1739      6F206F70 
 1739      656E2063 
 1740 045d 000000   		.align 8
 1741              	.LC79:
 1742 0460 436F756C 		.string	"Could not open FPGALink device at %s and no initial VID:PID was supplied\n"
 1742      64206E6F 
 1742      74206F70 
 1742      656E2046 
 1742      5047414C 
 1743 04aa 00000000 		.align 8
 1743      0000
 1744              	.LC80:
 1745 04b0 436F6E6E 		.string	"Connected to FPGALink device %s (firmwareID: 0x%04X, firmwareVersion: 0x%08X)\n"
 1745      65637465 
 1745      6420746F 
 1745      20465047 
 1745      414C696E 
 1746              		.section	.rodata.str1.1
 1747              	.LC81:
 1748 01f8 73746400 		.string	"std"
 1749              		.section	.rodata.str1.8
 1750 04ff 00       		.align 8
 1751              	.LC82:
 1752 0500 57726974 		.string	"Writing the standard FPGALink firmware to the FX2's EEPROM...\n"
 1752      696E6720 
 1752      74686520 
 1752      7374616E 
 1752      64617264 
 1753 053f 00       		.align 8
 1754              	.LC83:
 1755 0540 57726974 		.string	"Writing custom FPGALink firmware from %s to the FX2's EEPROM...\n"
 1755      696E6720 
 1755      63757374 
 1755      6F6D2046 
 1755      5047414C 
 1756 0581 00000000 		.align 8
 1756      000000
 1757              	.LC84:
 1758 0588 25733A20 		.string	"%s: invalid argument to option --backup=<kbitSize:fw.iic>\n"
 1758      696E7661 
 1758      6C696420 
 1758      61726775 
 1758      6D656E74 
 1759 05c3 00000000 		.align 8
 1759      00
 1760              	.LC85:
 1761 05c8 53617669 		.string	"Saving a backup of %d kbit from the FX2's EEPROM to %s...\n"
 1761      6E672061 
 1761      20626163 
 1761      6B757020 
 1761      6F662025 
 1762              		.section	.rodata.str1.1
 1763              	.LC86:
 1764 01fc 436F6E66 		.string	"Configuring ports...\n"
 1764      69677572 
 1764      696E6720 
 1764      706F7274 
 1764      732E2E2E 
 1765              	.LC87:
 1766 0212 25303858 		.string	"%08X"
 1766      00
 1767              		.section	.rodata.str1.8
 1768 0603 00000000 		.align 8
 1768      00
 1769              	.LC88:
 1770 0608 52656164 		.string	"Readback:   28   24   20   16    12    8    4    0\n          %s"
 1770      6261636B 
 1770      3A202020 
 1770      32382020 
 1770      20323420 
 1771              		.section	.rodata.str1.1
 1772              	.LC89:
 1773 0217 20257300 		.string	" %s"
 1774              	.LC90:
 1775 021b 20202573 		.string	"  %s"
 1775      00
 1776              	.LC91:
 1777 0220 2025730A 		.string	" %s\n"
 1777      00
 1778              		.section	.rodata.str1.8
 1779              		.align 8
 1780              	.LC92:
 1781 0648 54686520 		.string	"The FPGALink device at %s scanned its JTAG chain, yielding:\n"
 1781      46504741 
 1781      4C696E6B 
 1781      20646576 
 1781      69636520 
 1782              		.section	.rodata.str1.1
 1783              	.LC93:
 1784 0225 20203078 		.string	"  0x%08X\n"
 1784      25303858 
 1784      0A00
 1785              		.section	.rodata.str1.8
 1786 0685 000000   		.align 8
 1787              	.LC94:
 1788 0688 54686520 		.string	"The FPGALink device at %s scanned its JTAG chain but did not find any attached devices\n"
 1788      46504741 
 1788      4C696E6B 
 1788      20646576 
 1788      69636520 
 1789              		.align 8
 1790              	.LC95:
 1791 06e0 4A544147 		.string	"JTAG chain scan requested but FPGALink device at %s does not support NeroProg\n"
 1791      20636861 
 1791      696E2073 
 1791      63616E20 
 1791      72657175 
 1792              		.section	.rodata.str1.1
 1793              	.LC96:
 1794 022f 50726F67 		.string	"Programming device...\n"
 1794      72616D6D 
 1794      696E6720 
 1794      64657669 
 1794      63652E2E 
 1795              		.section	.rodata.str1.8
 1796 072f 00       		.align 8
 1797              	.LC97:
 1798 0730 50726F67 		.string	"Program operation requested but device at %s does not support NeroProg\n"
 1798      72616D20 
 1798      6F706572 
 1798      6174696F 
 1798      6E207265 
 1799              		.align 8
 1800              	.LC98:
 1801 0778 45786563 		.string	"Executing CommFPGA actions on FPGALink device %s...\n"
 1801      7574696E 
 1801      6720436F 
 1801      6D6D4650 
 1801      47412061 
 1802 07ad 000000   		.align 8
 1803              	.LC99:
 1804 07b0 54686520 		.string	"The FPGALink device at %s is not ready to talk - did you forget --program?\n"
 1804      46504741 
 1804      4C696E6B 
 1804      20646576 
 1804      69636520 
 1805 07fc 00000000 		.align 8
 1806              	.LC100:
 1807 0800 41637469 		.string	"Action requested but device at %s does not support CommFPGA\n"
 1807      6F6E2072 
 1807      65717565 
 1807      73746564 
 1807      20627574 
 1808 083d 000000   		.align 8
 1809              	.LC101:
 1810 0840 25733A20 		.string	"%s: invalid argument to option -l|--dumploop=<ch:file.bin>\n"
 1810      696E7661 
 1810      6C696420 
 1810      61726775 
 1810      6D656E74 
 1811 087c 00000000 		.align 8
 1812              	.LC102:
 1813 0880 436F7079 		.string	"Copying from channel %lu to %s"
 1813      696E6720 
 1813      66726F6D 
 1813      20636861 
 1813      6E6E656C 
 1814              		.section	.rodata.str1.1
 1815              	.LC103:
 1816 0246 0A436175 		.string	"\nCaught SIGINT, quitting...\n"
 1816      67687420 
 1816      53494749 
 1816      4E542C20 
 1816      71756974 
 1817              		.section	.rodata.str1.8
 1818 089f 00       		.align 8
 1819              	.LC104:
 1820 08a0 0A456E74 		.string	"\nEntering CommFPGA command-line mode:\n"
 1820      6572696E 
 1820      6720436F 
 1820      6D6D4650 
 1820      47412063 
 1821              		.section	.rodata.str1.1
 1822              	.LC105:
 1823 0263 3E2000   		.string	"> "
 1824              		.section	.rodata.str1.8
 1825 08c7 00       		.align 8
 1826              	.LC106:
 1827 08c8 54686520 		.string	"The FPGALink device at %s is not ready to talk - did you forget --xsvf?\n"
 1827      46504741 
 1827      4C696E6B 
 1827      20646576 
 1827      69636520 
 1828 0911 00000000 		.align 8
 1828      000000
 1829              	.LC107:
 1830 0918 5368656C 		.string	"Shell requested but device at %s does not support CommFPGA\n"
 1830      6C207265 
 1830      71756573 
 1830      74656420 
 1830      62757420 
 1831              		.section	.rodata.str1.1
 1832              	.LC108:
 1833 0266 25730A00 		.string	"%s\n"
 1834              		.section	.text.startup,"ax",@progbits
 1835              		.p2align 4
 1836              		.globl	main
 1838              	main:
 1839              	.LFB43:
 1840              		.cfi_startproc
 1841 0000 F30F1EFA 		endbr64
 1842 0004 4157     		pushq	%r15
 1843              		.cfi_def_cfa_offset 16
 1844              		.cfi_offset 15, -16
 1845 0006 488D0D00 		leaq	.LC12(%rip), %rcx
 1845      000000
 1846 000d 488D1500 		leaq	.LC13(%rip), %rdx
 1846      000000
 1847 0014 4189FF   		movl	%edi, %r15d
 1848 0017 4156     		pushq	%r14
 1849              		.cfi_def_cfa_offset 24
 1850              		.cfi_offset 14, -24
 1851 0019 488D3D00 		leaq	.LC15(%rip), %rdi
 1851      000000
 1852 0020 4155     		pushq	%r13
 1853              		.cfi_def_cfa_offset 32
 1854              		.cfi_offset 13, -32
 1855 0022 4989F5   		movq	%rsi, %r13
 1856 0025 488D3500 		leaq	.LC14(%rip), %rsi
 1856      000000
 1857 002c 4154     		pushq	%r12
 1858              		.cfi_def_cfa_offset 40
 1859              		.cfi_offset 12, -40
 1860 002e 55       		pushq	%rbp
 1861              		.cfi_def_cfa_offset 48
 1862              		.cfi_offset 6, -48
 1863 002f 53       		pushq	%rbx
 1864              		.cfi_def_cfa_offset 56
 1865              		.cfi_offset 3, -56
 1866 0030 4881ECF8 		subq	$504, %rsp
 1866      010000
 1867              		.cfi_def_cfa_offset 560
 1868 0037 64488B04 		movq	%fs:40, %rax
 1868      25280000 
 1868      00
 1869 0040 48898424 		movq	%rax, 488(%rsp)
 1869      E8010000 
 1870 0048 31C0     		xorl	%eax, %eax
 1871 004a E8000000 		call	arg_str0@PLT
 1871      00
 1872 004f 488D0D00 		leaq	.LC16(%rip), %rcx
 1872      000000
 1873 0056 488D1500 		leaq	.LC17(%rip), %rdx
 1873      000000
 1874 005d 488D3500 		leaq	.LC18(%rip), %rsi
 1874      000000
 1875 0064 488D3D00 		leaq	.LC19(%rip), %rdi
 1875      000000
 1876 006b 4889C5   		movq	%rax, %rbp
 1877 006e E8000000 		call	arg_str1@PLT
 1877      00
 1878 0073 66480F6E 		movq	%rbp, %xmm6
 1878      F5
 1879 0078 488D0D00 		leaq	.LC20(%rip), %rcx
 1879      000000
 1880 007f 488D1500 		leaq	.LC21(%rip), %rdx
 1880      000000
 1881 0086 48894424 		movq	%rax, 16(%rsp)
 1881      10
 1882 008b 488D3500 		leaq	.LC22(%rip), %rsi
 1882      000000
 1883 0092 488D3D00 		leaq	.LC23(%rip), %rdi
 1883      000000
 1884 0099 0F167424 		movhps	16(%rsp), %xmm6
 1884      10
 1885 009e 0F29B424 		movaps	%xmm6, 160(%rsp)
 1885      A0000000 
 1886 00a6 E8000000 		call	arg_str0@PLT
 1886      00
 1887 00ab 488D0D00 		leaq	.LC24(%rip), %rcx
 1887      000000
 1888 00b2 488D1500 		leaq	.LC25(%rip), %rdx
 1888      000000
 1889 00b9 488D3500 		leaq	.LC26(%rip), %rsi
 1889      000000
 1890 00c0 488D3D00 		leaq	.LC27(%rip), %rdi
 1890      000000
 1891 00c7 4989C4   		movq	%rax, %r12
 1892 00ca E8000000 		call	arg_str0@PLT
 1892      00
 1893 00cf 66490F6E 		movq	%r12, %xmm5
 1893      EC
 1894 00d4 488D0D00 		leaq	.LC28(%rip), %rcx
 1894      000000
 1895 00db 488D1500 		leaq	.LC29(%rip), %rdx
 1895      000000
 1896 00e2 48894424 		movq	%rax, 32(%rsp)
 1896      20
 1897 00e7 488D3500 		leaq	.LC30(%rip), %rsi
 1897      000000
 1898 00ee 488D3D00 		leaq	.LC31(%rip), %rdi
 1898      000000
 1899 00f5 0F166C24 		movhps	32(%rsp), %xmm5
 1899      20
 1900 00fa 0F29AC24 		movaps	%xmm5, 144(%rsp)
 1900      90000000 
 1901 0102 E8000000 		call	arg_str0@PLT
 1901      00
 1902 0107 488D0D00 		leaq	.LC32(%rip), %rcx
 1902      000000
 1903 010e 488D1500 		leaq	.LC33(%rip), %rdx
 1903      000000
 1904 0115 488D3500 		leaq	.LC34(%rip), %rsi
 1904      000000
 1905 011c 488D3D00 		leaq	.LC35(%rip), %rdi
 1905      000000
 1906 0123 4889C3   		movq	%rax, %rbx
 1907 0126 48898424 		movq	%rax, 208(%rsp)
 1907      D0000000 
 1908 012e E8000000 		call	arg_str0@PLT
 1908      00
 1909 0133 66480F6E 		movq	%rbx, %xmm4
 1909      E3
 1910 0138 488D0D00 		leaq	.LC36(%rip), %rcx
 1910      000000
 1911 013f 488D1500 		leaq	.LC37(%rip), %rdx
 1911      000000
 1912 0146 48894424 		movq	%rax, 40(%rsp)
 1912      28
 1913 014b 488D3500 		leaq	.LC38(%rip), %rsi
 1913      000000
 1914 0152 488D3D00 		leaq	.LC39(%rip), %rdi
 1914      000000
 1915 0159 0F166424 		movhps	40(%rsp), %xmm4
 1915      28
 1916 015e 0F29A424 		movaps	%xmm4, 128(%rsp)
 1916      80000000 
 1917 0166 E8000000 		call	arg_uint0@PLT
 1917      00
 1918 016b 488D0D00 		leaq	.LC40(%rip), %rcx
 1918      000000
 1919 0172 488D1500 		leaq	.LC41(%rip), %rdx
 1919      000000
 1920 0179 488D3500 		leaq	.LC42(%rip), %rsi
 1920      000000
 1921 0180 488D3D00 		leaq	.LC43(%rip), %rdi
 1921      000000
 1922 0187 4889C3   		movq	%rax, %rbx
 1923 018a 48898424 		movq	%rax, 192(%rsp)
 1923      C0000000 
 1924 0192 E8000000 		call	arg_str0@PLT
 1924      00
 1925 0197 66480F6E 		movq	%rbx, %xmm3
 1925      DB
 1926 019c 488D1500 		leaq	.LC44(%rip), %rdx
 1926      000000
 1927 01a3 488D3500 		leaq	.LC45(%rip), %rsi
 1927      000000
 1928 01aa 48894424 		movq	%rax, 48(%rsp)
 1928      30
 1929 01af 488D3D00 		leaq	.LC46(%rip), %rdi
 1929      000000
 1930 01b6 0F165C24 		movhps	48(%rsp), %xmm3
 1930      30
 1931 01bb 0F295C24 		movaps	%xmm3, 112(%rsp)
 1931      70
 1932 01c0 E8000000 		call	arg_lit0@PLT
 1932      00
 1933 01c5 488D1500 		leaq	.LC47(%rip), %rdx
 1933      000000
 1934 01cc 488D3500 		leaq	.LC48(%rip), %rsi
 1934      000000
 1935 01d3 488D3D00 		leaq	.LC49(%rip), %rdi
 1935      000000
 1936 01da 4889C3   		movq	%rax, %rbx
 1937 01dd 48898424 		movq	%rax, 216(%rsp)
 1937      D8000000 
 1938 01e5 E8000000 		call	arg_lit0@PLT
 1938      00
 1939 01ea 66480F6E 		movq	%rbx, %xmm2
 1939      D3
 1940 01ef 488D1500 		leaq	.LC50(%rip), %rdx
 1940      000000
 1941 01f6 488D3500 		leaq	.LC51(%rip), %rsi
 1941      000000
 1942 01fd 48894424 		movq	%rax, 56(%rsp)
 1942      38
 1943 0202 488D3D00 		leaq	.LC52(%rip), %rdi
 1943      000000
 1944 0209 0F165424 		movhps	56(%rsp), %xmm2
 1944      38
 1945 020e 0F295424 		movaps	%xmm2, 96(%rsp)
 1945      60
 1946 0213 E8000000 		call	arg_lit0@PLT
 1946      00
 1947 0218 488D0D00 		leaq	.LC53(%rip), %rcx
 1947      000000
 1948 021f 488D1500 		leaq	.LC54(%rip), %rdx
 1948      000000
 1949 0226 488D3500 		leaq	.LC55(%rip), %rsi
 1949      000000
 1950 022d 488D3D00 		leaq	.LC56(%rip), %rdi
 1950      000000
 1951 0234 4889C3   		movq	%rax, %rbx
 1952 0237 48898424 		movq	%rax, 200(%rsp)
 1952      C8000000 
 1953 023f E8000000 		call	arg_str0@PLT
 1953      00
 1954 0244 66480F6E 		movq	%rbx, %xmm1
 1954      CB
 1955 0249 488D1500 		leaq	.LC57(%rip), %rdx
 1955      000000
 1956 0250 488D3500 		leaq	.LC58(%rip), %rsi
 1956      000000
 1957 0257 48898424 		movq	%rax, 176(%rsp)
 1957      B0000000 
 1958 025f 488D3D00 		leaq	.LC59(%rip), %rdi
 1958      000000
 1959 0266 0F168C24 		movhps	176(%rsp), %xmm1
 1959      B0000000 
 1960 026e 0F294C24 		movaps	%xmm1, 80(%rsp)
 1960      50
 1961 0273 E8000000 		call	arg_lit0@PLT
 1961      00
 1962 0278 31FF     		xorl	%edi, %edi
 1963 027a 488D0D00 		leaq	.LC60(%rip), %rcx
 1963      000000
 1964 0281 488D1500 		leaq	.LC61(%rip), %rdx
 1964      000000
 1965 0288 488D3500 		leaq	.LC62(%rip), %rsi
 1965      000000
 1966 028f 4889C3   		movq	%rax, %rbx
 1967 0292 E8000000 		call	arg_str0@PLT
 1967      00
 1968 0297 66480F6E 		movq	%rbx, %xmm0
 1968      C3
 1969 029c 31FF     		xorl	%edi, %edi
 1970 029e 488D0D00 		leaq	.LC63(%rip), %rcx
 1970      000000
 1971 02a5 48894424 		movq	%rax, 24(%rsp)
 1971      18
 1972 02aa 488D1500 		leaq	.LC64(%rip), %rdx
 1972      000000
 1973 02b1 488D3500 		leaq	.LC65(%rip), %rsi
 1973      000000
 1974 02b8 0F164424 		movhps	24(%rsp), %xmm0
 1974      18
 1975 02bd 0F294424 		movaps	%xmm0, 64(%rsp)
 1975      40
 1976 02c2 E8000000 		call	arg_str0@PLT
 1976      00
 1977 02c7 BF140000 		movl	$20, %edi
 1977      00
 1978 02cc 4989C6   		movq	%rax, %r14
 1979 02cf 48898424 		movq	%rax, 184(%rsp)
 1979      B8000000 
 1980 02d7 E8000000 		call	arg_end@PLT
 1980      00
 1981 02dc 660F6F44 		movdqa	64(%rsp), %xmm0
 1981      2440
 1982 02e2 660F6FB4 		movdqa	160(%rsp), %xmm6
 1982      24A00000 
 1982      00
 1983 02eb 48C78424 		movq	$0, 240(%rsp)
 1983      F0000000 
 1983      00000000 
 1984 02f7 48894424 		movq	%rax, 8(%rsp)
 1984      08
 1985 02fc 660F6F5C 		movdqa	112(%rsp), %xmm3
 1985      2470
 1986 0302 660F6FAC 		movdqa	144(%rsp), %xmm5
 1986      24900000 
 1986      00
 1987 030b 660F6F54 		movdqa	96(%rsp), %xmm2
 1987      2460
 1988 0311 0F298424 		movaps	%xmm0, 432(%rsp)
 1988      B0010000 
 1989 0319 66490F6E 		movq	%r14, %xmm0
 1989      C6
 1990 031e 660F6FA4 		movdqa	128(%rsp), %xmm4
 1990      24800000 
 1990      00
 1991 0327 660F6F4C 		movdqa	80(%rsp), %xmm1
 1991      2450
 1992 032d 4C8DB424 		leaq	336(%rsp), %r14
 1992      50010000 
 1993 0335 48C78424 		movq	$0, 248(%rsp)
 1993      F8000000 
 1993      00000000 
 1994 0341 0F164424 		movhps	8(%rsp), %xmm0
 1994      08
 1995 0346 4C89F7   		movq	%r14, %rdi
 1996 0349 0F29B424 		movaps	%xmm6, 336(%rsp)
 1996      50010000 
 1997 0351 0F29AC24 		movaps	%xmm5, 352(%rsp)
 1997      60010000 
 1998 0359 0F29A424 		movaps	%xmm4, 368(%rsp)
 1998      70010000 
 1999 0361 0F299C24 		movaps	%xmm3, 384(%rsp)
 1999      80010000 
 2000 0369 0F299424 		movaps	%xmm2, 400(%rsp)
 2000      90010000 
 2001 0371 0F298C24 		movaps	%xmm1, 416(%rsp)
 2001      A0010000 
 2002 0379 0F298424 		movaps	%xmm0, 448(%rsp)
 2002      C0010000 
 2003 0381 E8000000 		call	arg_nullcheck@PLT
 2003      00
 2004 0386 85C0     		testl	%eax, %eax
 2005 0388 0F85B700 		jne	.L528
 2005      0000
 2006 038e 4C89F2   		movq	%r14, %rdx
 2007 0391 4C89EE   		movq	%r13, %rsi
 2008 0394 4489FF   		movl	%r15d, %edi
 2009 0397 E8000000 		call	arg_parse@PLT
 2009      00
 2010 039c 837B6000 		cmpl	$0, 96(%rbx)
 2011 03a0 0F8F1001 		jg	.L529
 2011      0000
 2012 03a6 85C0     		testl	%eax, %eax
 2013 03a8 0F8FC400 		jg	.L530
 2013      0000
 2014 03ae 4C8DBC24 		leaq	248(%rsp), %r15
 2014      F8000000 
 2015 03b6 31FF     		xorl	%edi, %edi
 2016 03b8 4C89FE   		movq	%r15, %rsi
 2017 03bb E8000000 		call	flInitialise@PLT
 2017      00
 2018 03c0 89C3     		movl	%eax, %ebx
 2019 03c2 85C0     		testl	%eax, %eax
 2020 03c4 0F844E01 		je	.L437
 2020      0000
 2021              	.L525:
 2022 03ca 31ED     		xorl	%ebp, %ebp
 2023 03cc BB010000 		movl	$1, %ebx
 2023      00
 2024              	.L434:
 2025 03d1 4889EF   		movq	%rbp, %rdi
 2026 03d4 E8000000 		call	free@PLT
 2026      00
 2027 03d9 488BBC24 		movq	240(%rsp), %rdi
 2027      F0000000 
 2028 03e1 E8000000 		call	flClose@PLT
 2028      00
 2029 03e6 488B8C24 		movq	248(%rsp), %rcx
 2029      F8000000 
 2030 03ee 4885C9   		testq	%rcx, %rcx
 2031 03f1 7427     		je	.L490
 2032 03f3 488B3D00 		movq	stderr(%rip), %rdi
 2032      000000
 2033 03fa 488D1500 		leaq	.LC108(%rip), %rdx
 2033      000000
 2034 0401 BE010000 		movl	$1, %esi
 2034      00
 2035 0406 31C0     		xorl	%eax, %eax
 2036 0408 E8000000 		call	__fprintf_chk@PLT
 2036      00
 2037 040d 488BBC24 		movq	248(%rsp), %rdi
 2037      F8000000 
 2038 0415 E8000000 		call	flFreeError@PLT
 2038      00
 2039              	.L490:
 2040 041a 488B8424 		movq	488(%rsp), %rax
 2040      E8010000 
 2041 0422 64482B04 		subq	%fs:40, %rax
 2041      25280000 
 2041      00
 2042 042b 0F85A40B 		jne	.L531
 2042      0000
 2043 0431 4881C4F8 		addq	$504, %rsp
 2043      010000
 2044              		.cfi_remember_state
 2045              		.cfi_def_cfa_offset 56
 2046 0438 89D8     		movl	%ebx, %eax
 2047 043a 5B       		popq	%rbx
 2048              		.cfi_def_cfa_offset 48
 2049 043b 5D       		popq	%rbp
 2050              		.cfi_def_cfa_offset 40
 2051 043c 415C     		popq	%r12
 2052              		.cfi_def_cfa_offset 32
 2053 043e 415D     		popq	%r13
 2054              		.cfi_def_cfa_offset 24
 2055 0440 415E     		popq	%r14
 2056              		.cfi_def_cfa_offset 16
 2057 0442 415F     		popq	%r15
 2058              		.cfi_def_cfa_offset 8
 2059 0444 C3       		ret
 2060              	.L528:
 2061              		.cfi_restore_state
 2062 0445 488B3D00 		movq	stderr(%rip), %rdi
 2062      000000
 2063 044c BE010000 		movl	$1, %esi
 2063      00
 2064 0451 31C0     		xorl	%eax, %eax
 2065 0453 31ED     		xorl	%ebp, %ebp
 2066 0455 488D0D00 		leaq	.LC66(%rip), %rcx
 2066      000000
 2067 045c 488D1500 		leaq	.LC67(%rip), %rdx
 2067      000000
 2068 0463 BB010000 		movl	$1, %ebx
 2068      00
 2069 0468 E8000000 		call	__fprintf_chk@PLT
 2069      00
 2070 046d E95FFFFF 		jmp	.L434
 2070      FF
 2071              	.L530:
 2072 0472 4C8D2500 		leaq	.LC66(%rip), %r12
 2072      000000
 2073 0479 488B7424 		movq	8(%rsp), %rsi
 2073      08
 2074 047e 488B3D00 		movq	stdout(%rip), %rdi
 2074      000000
 2075 0485 4C89E2   		movq	%r12, %rdx
 2076 0488 E8000000 		call	arg_print_errors@PLT
 2076      00
 2077 048d 4C89E1   		movq	%r12, %rcx
 2078 0490 488D1500 		leaq	.LC72(%rip), %rdx
 2078      000000
 2079              	.L524:
 2080 0497 488B3D00 		movq	stderr(%rip), %rdi
 2080      000000
 2081 049e BE010000 		movl	$1, %esi
 2081      00
 2082 04a3 31C0     		xorl	%eax, %eax
 2083 04a5 31ED     		xorl	%ebp, %ebp
 2084 04a7 BB0C0000 		movl	$12, %ebx
 2084      00
 2085 04ac E8000000 		call	__fprintf_chk@PLT
 2085      00
 2086 04b1 E91BFFFF 		jmp	.L434
 2086      FF
 2087              	.L529:
 2088 04b6 488D1500 		leaq	.LC66(%rip), %rdx
 2088      000000
 2089 04bd BF010000 		movl	$1, %edi
 2089      00
 2090 04c2 31C0     		xorl	%eax, %eax
 2091 04c4 31ED     		xorl	%ebp, %ebp
 2092 04c6 488D3500 		leaq	.LC68(%rip), %rsi
 2092      000000
 2093 04cd 31DB     		xorl	%ebx, %ebx
 2094 04cf E8000000 		call	__printf_chk@PLT
 2094      00
 2095 04d4 488B3D00 		movq	stdout(%rip), %rdi
 2095      000000
 2096 04db 488D1500 		leaq	.LC69(%rip), %rdx
 2096      000000
 2097 04e2 4C89F6   		movq	%r14, %rsi
 2098 04e5 E8000000 		call	arg_print_syntax@PLT
 2098      00
 2099 04ea 488D3500 		leaq	.LC70(%rip), %rsi
 2099      000000
 2100 04f1 BF010000 		movl	$1, %edi
 2100      00
 2101 04f6 31C0     		xorl	%eax, %eax
 2102 04f8 E8000000 		call	__printf_chk@PLT
 2102      00
 2103 04fd 488B3D00 		movq	stdout(%rip), %rdi
 2103      000000
 2104 0504 488D1500 		leaq	.LC71(%rip), %rdx
 2104      000000
 2105 050b 4C89F6   		movq	%r14, %rsi
 2106 050e E8000000 		call	arg_print_glossary@PLT
 2106      00
 2107 0513 E9B9FEFF 		jmp	.L434
 2107      FF
 2108              	.L437:
 2109 0518 488B4424 		movq	16(%rsp), %rax
 2109      10
 2110 051d 488D3500 		leaq	.LC73(%rip), %rsi
 2110      000000
 2111 0524 BF010000 		movl	$1, %edi
 2111      00
 2112 0529 488B4068 		movq	104(%rax), %rax
 2113 052d 4C8B30   		movq	(%rax), %r14
 2114 0530 31C0     		xorl	%eax, %eax
 2115 0532 4C89F2   		movq	%r14, %rdx
 2116 0535 E8000000 		call	__printf_chk@PLT
 2116      00
 2117 053a 488D8424 		leaq	240(%rsp), %rax
 2117      F0000000 
 2118 0542 31D2     		xorl	%edx, %edx
 2119 0544 4C89F7   		movq	%r14, %rdi
 2120 0547 4889C6   		movq	%rax, %rsi
 2121 054a 48894424 		movq	%rax, 8(%rsp)
 2121      08
 2122 054f E8000000 		call	flOpen@PLT
 2122      00
 2123 0554 85C0     		testl	%eax, %eax
 2124 0556 0F841601 		je	.L438
 2124      0000
 2125 055c 837D6000 		cmpl	$0, 96(%rbp)
 2126 0560 0F841B04 		je	.L439
 2126      0000
 2127 0566 488B4568 		movq	104(%rbp), %rax
 2128 056a 488D3500 		leaq	.LC74(%rip), %rsi
 2128      000000
 2129 0571 BF010000 		movl	$1, %edi
 2129      00
 2130 0576 488B28   		movq	(%rax), %rbp
 2131 0579 31C0     		xorl	%eax, %eax
 2132 057b 4889EA   		movq	%rbp, %rdx
 2133 057e E8000000 		call	__printf_chk@PLT
 2133      00
 2134 0583 41837C24 		cmpl	$0, 96(%r12)
 2134      6000
 2135 0589 0F858603 		jne	.L532
 2135      0000
 2136 058f 4C89FA   		movq	%r15, %rdx
 2137 0592 4C89F6   		movq	%r14, %rsi
 2138 0595 4889EF   		movq	%rbp, %rdi
 2139 0598 E8000000 		call	flLoadStandardFirmware@PLT
 2139      00
 2140              	.L441:
 2141 059d 85C0     		testl	%eax, %eax
 2142 059f 0F8525FE 		jne	.L525
 2142      FFFF
 2143 05a5 488D3500 		leaq	.LC75(%rip), %rsi
 2143      000000
 2144 05ac BF010000 		movl	$1, %edi
 2144      00
 2145 05b1 BD3C0000 		movl	$60, %ebp
 2145      00
 2146 05b6 E8000000 		call	__printf_chk@PLT
 2146      00
 2147 05bb BFE80300 		movl	$1000, %edi
 2147      00
 2148 05c0 4C8D2500 		leaq	.LC76(%rip), %r12
 2148      000000
 2149 05c7 4C8DAC24 		leaq	264(%rsp), %r13
 2149      08010000 
 2150 05cf E8000000 		call	flSleep@PLT
 2150      00
 2151 05d4 EB1B     		jmp	.L443
 2152              	.L533:
 2153 05d6 BFFA0000 		movl	$250, %edi
 2153      00
 2154 05db 83ED01   		subl	$1, %ebp
 2155 05de E8000000 		call	flSleep@PLT
 2155      00
 2156 05e3 80BC2408 		cmpb	$0, 264(%rsp)
 2156      01000000 
 2157 05eb 7536     		jne	.L497
 2158 05ed 85ED     		testl	%ebp, %ebp
 2159 05ef 7432     		je	.L497
 2160              	.L443:
 2161 05f1 4C89E6   		movq	%r12, %rsi
 2162 05f4 BF010000 		movl	$1, %edi
 2162      00
 2163 05f9 31C0     		xorl	%eax, %eax
 2164 05fb E8000000 		call	__printf_chk@PLT
 2164      00
 2165 0600 488B3D00 		movq	stdout(%rip), %rdi
 2165      000000
 2166 0607 E8000000 		call	fflush@PLT
 2166      00
 2167 060c 4C89FA   		movq	%r15, %rdx
 2168 060f 4C89EE   		movq	%r13, %rsi
 2169 0612 4C89F7   		movq	%r14, %rdi
 2170 0615 E8000000 		call	flIsDeviceAvailable@PLT
 2170      00
 2171 061a 85C0     		testl	%eax, %eax
 2172 061c 74B8     		je	.L533
 2173 061e E9A7FDFF 		jmp	.L525
 2173      FF
 2174              	.L497:
 2175 0623 31C0     		xorl	%eax, %eax
 2176 0625 488D3500 		leaq	.LC69(%rip), %rsi
 2176      000000
 2177 062c BF010000 		movl	$1, %edi
 2177      00
 2178 0631 E8000000 		call	__printf_chk@PLT
 2178      00
 2179 0636 80BC2408 		cmpb	$0, 264(%rsp)
 2179      01000000 
 2180 063e 0F847106 		je	.L534
 2180      0000
 2181 0644 4C89F2   		movq	%r14, %rdx
 2182 0647 488D3500 		leaq	.LC78(%rip), %rsi
 2182      000000
 2183 064e BF010000 		movl	$1, %edi
 2183      00
 2184 0653 31C0     		xorl	%eax, %eax
 2185 0655 E8000000 		call	__printf_chk@PLT
 2185      00
 2186 065a 488B7424 		movq	8(%rsp), %rsi
 2186      08
 2187 065f 4C89FA   		movq	%r15, %rdx
 2188 0662 4C89F7   		movq	%r14, %rdi
 2189 0665 E8000000 		call	flOpen@PLT
 2189      00
 2190 066a 85C0     		testl	%eax, %eax
 2191 066c 0F8558FD 		jne	.L525
 2191      FFFF
 2192              	.L438:
 2193 0672 488BBC24 		movq	240(%rsp), %rdi
 2193      F0000000 
 2194 067a E8000000 		call	flGetFirmwareVersion@PLT
 2194      00
 2195 067f 488BBC24 		movq	240(%rsp), %rdi
 2195      F0000000 
 2196 0687 89C5     		movl	%eax, %ebp
 2197 0689 E8000000 		call	flGetFirmwareID@PLT
 2197      00
 2198 068e 4189E8   		movl	%ebp, %r8d
 2199 0691 4C89F2   		movq	%r14, %rdx
 2200 0694 BF010000 		movl	$1, %edi
 2200      00
 2201 0699 0FB7C8   		movzwl	%ax, %ecx
 2202 069c 488D3500 		leaq	.LC80(%rip), %rsi
 2202      000000
 2203 06a3 31C0     		xorl	%eax, %eax
 2204 06a5 E8000000 		call	__printf_chk@PLT
 2204      00
 2205 06aa 488B4424 		movq	24(%rsp), %rax
 2205      18
 2206 06af 83786000 		cmpl	$0, 96(%rax)
 2207 06b3 0F857402 		jne	.L447
 2207      0000
 2208              	.L453:
 2209 06b9 488B8424 		movq	184(%rsp), %rax
 2209      B8000000 
 2210 06c1 83786000 		cmpl	$0, 96(%rax)
 2211 06c5 0F85C502 		jne	.L535
 2211      0000
 2212              	.L449:
 2213 06cb 488B8424 		movq	200(%rsp), %rax
 2213      C8000000 
 2214 06d3 488BBC24 		movq	240(%rsp), %rdi
 2214      F0000000 
 2215 06db 83786000 		cmpl	$0, 96(%rax)
 2216 06df 0F85AE03 		jne	.L456
 2216      0000
 2217              	.L459:
 2218 06e5 488B8424 		movq	192(%rsp), %rax
 2218      C0000000 
 2219 06ed 41BD0100 		movl	$1, %r13d
 2219      0000
 2220 06f3 83786000 		cmpl	$0, 96(%rax)
 2221 06f7 7410     		je	.L458
 2222 06f9 488B8424 		movq	192(%rsp), %rax
 2222      C0000000 
 2223 0701 488B4068 		movq	104(%rax), %rax
 2224 0705 440FB628 		movzbl	(%rax), %r13d
 2225              	.L458:
 2226 0709 E8000000 		call	flIsNeroCapable@PLT
 2226      00
 2227 070e 488BBC24 		movq	240(%rsp), %rdi
 2227      F0000000 
 2228 0716 4489EE   		movl	%r13d, %esi
 2229 0719 4189C4   		movl	%eax, %r12d
 2230 071c E8000000 		call	flIsCommCapable@PLT
 2230      00
 2231 0721 88442408 		movb	%al, 8(%rsp)
 2232 0725 488B4424 		movq	32(%rsp), %rax
 2232      20
 2233 072a 83786000 		cmpl	$0, 96(%rax)
 2234 072e 0F857C03 		jne	.L536
 2234      0000
 2235              	.L460:
 2236 0734 488B8424 		movq	208(%rsp), %rax
 2236      D0000000 
 2237 073c 83786000 		cmpl	$0, 96(%rax)
 2238 0740 0F84DD02 		je	.L462
 2238      0000
 2239 0746 4584E4   		testb	%r12b, %r12b
 2240 0749 0F848805 		je	.L463
 2240      0000
 2241 074f 488BBC24 		movq	240(%rsp), %rdi
 2241      F0000000 
 2242 0757 31F6     		xorl	%esi, %esi
 2243 0759 4C89FA   		movq	%r15, %rdx
 2244 075c E8000000 		call	flSelectConduit@PLT
 2244      00
 2245 0761 85C0     		testl	%eax, %eax
 2246 0763 0F8561FC 		jne	.L525
 2246      FFFF
 2247 0769 488B8424 		movq	208(%rsp), %rax
 2247      D0000000 
 2248 0771 488DAC24 		leaq	272(%rsp), %rbp
 2248      10010000 
 2249 0779 4D89F9   		movq	%r15, %r9
 2250 077c 488BBC24 		movq	240(%rsp), %rdi
 2250      F0000000 
 2251 0784 488D9424 		leaq	232(%rsp), %rdx
 2251      E8000000 
 2252 078c 41B81000 		movl	$16, %r8d
 2252      0000
 2253 0792 4889E9   		movq	%rbp, %rcx
 2254 0795 488B4068 		movq	104(%rax), %rax
 2255 0799 488B30   		movq	(%rax), %rsi
 2256 079c E8000000 		call	jtagScanChain@PLT
 2256      00
 2257 07a1 85C0     		testl	%eax, %eax
 2258 07a3 0F8521FC 		jne	.L525
 2258      FFFF
 2259 07a9 83BC24E8 		cmpl	$0, 232(%rsp)
 2259      00000000 
 2260 07b1 4C89F2   		movq	%r14, %rdx
 2261 07b4 0F842606 		je	.L464
 2261      0000
 2262 07ba 488D3500 		leaq	.LC92(%rip), %rsi
 2262      000000
 2263 07c1 BF010000 		movl	$1, %edi
 2263      00
 2264 07c6 4531E4   		xorl	%r12d, %r12d
 2265 07c9 E8000000 		call	__printf_chk@PLT
 2265      00
 2266 07ce EB1C     		jmp	.L465
 2267              	.L466:
 2268 07d0 428B54A5 		movl	0(%rbp,%r12,4), %edx
 2268      00
 2269 07d5 488D3500 		leaq	.LC93(%rip), %rsi
 2269      000000
 2270 07dc BF010000 		movl	$1, %edi
 2270      00
 2271 07e1 31C0     		xorl	%eax, %eax
 2272 07e3 4983C401 		addq	$1, %r12
 2273 07e7 E8000000 		call	__printf_chk@PLT
 2273      00
 2274              	.L465:
 2275 07ec 4439A424 		cmpl	%r12d, 232(%rsp)
 2275      E8000000 
 2276 07f4 77DA     		ja	.L466
 2277              	.L467:
 2278 07f6 488B4424 		movq	40(%rsp), %rax
 2278      28
 2279 07fb 83786000 		cmpl	$0, 96(%rax)
 2280 07ff 0F859107 		jne	.L537
 2280      0000
 2281              	.L468:
 2282 0805 488B4424 		movq	56(%rsp), %rax
 2282      38
 2283 080a 83786000 		cmpl	$0, 96(%rax)
 2284 080e 7407     		je	.L470
 2285 0810 C6050000 		movb	$1, enableBenchmarking(%rip)
 2285      000001
 2286              	.L470:
 2287 0817 488B4424 		movq	48(%rsp), %rax
 2287      30
 2288 081c 83786000 		cmpl	$0, 96(%rax)
 2289 0820 0F85C004 		jne	.L538
 2289      0000
 2290              	.L471:
 2291 0826 488B8424 		movq	176(%rsp), %rax
 2291      B0000000 
 2292 082e 83786000 		cmpl	$0, 96(%rax)
 2293 0832 0F854505 		jne	.L539
 2293      0000
 2294              	.L477:
 2295 0838 488B8424 		movq	216(%rsp), %rax
 2295      D8000000 
 2296 0840 31ED     		xorl	%ebp, %ebp
 2297 0842 83786000 		cmpl	$0, 96(%rax)
 2298 0846 0F8485FB 		je	.L434
 2298      FFFF
 2299 084c 31C0     		xorl	%eax, %eax
 2300 084e 488D3500 		leaq	.LC104(%rip), %rsi
 2300      000000
 2301 0855 BF010000 		movl	$1, %edi
 2301      00
 2302 085a E8000000 		call	__printf_chk@PLT
 2302      00
 2303 085f 807C2408 		cmpb	$0, 8(%rsp)
 2303      00
 2304 0864 0F844407 		je	.L483
 2304      0000
 2305 086a 488BBC24 		movq	240(%rsp), %rdi
 2305      F0000000 
 2306 0872 4C89FA   		movq	%r15, %rdx
 2307 0875 4489EE   		movl	%r13d, %esi
 2308 0878 E8000000 		call	flSelectConduit@PLT
 2308      00
 2309 087d 85C0     		testl	%eax, %eax
 2310 087f 0F850307 		jne	.L484
 2310      0000
 2311 0885 488BBC24 		movq	240(%rsp), %rdi
 2311      F0000000 
 2312 088d 488DB424 		leaq	264(%rsp), %rsi
 2312      08010000 
 2313 0895 4C89FA   		movq	%r15, %rdx
 2314 0898 E8000000 		call	flIsFPGARunning@PLT
 2314      00
 2315 089d 89C3     		movl	%eax, %ebx
 2316 089f 85C0     		testl	%eax, %eax
 2317 08a1 0F85E106 		jne	.L484
 2317      0000
 2318 08a7 80BC2408 		cmpb	$0, 264(%rsp)
 2318      01000000 
 2319 08af 0F844E07 		je	.L485
 2319      0000
 2320 08b5 4C8D2500 		leaq	.LC105(%rip), %r12
 2320      000000
 2321              	.L487:
 2322 08bc 4C89E7   		movq	%r12, %rdi
 2323 08bf E8000000 		call	readline@PLT
 2323      00
 2324 08c4 4889C5   		movq	%rax, %rbp
 2325 08c7 4885C0   		testq	%rax, %rax
 2326 08ca 0F8401FB 		je	.L434
 2326      FFFF
 2327 08d0 0FB600   		movzbl	(%rax), %eax
 2328 08d3 84C0     		testb	%al, %al
 2329 08d5 74E5     		je	.L487
 2330 08d7 3C71     		cmpb	$113, %al
 2331 08d9 0F84F2FA 		je	.L434
 2331      FFFF
 2332 08df 4889EF   		movq	%rbp, %rdi
 2333 08e2 E8000000 		call	add_history@PLT
 2333      00
 2334 08e7 488BBC24 		movq	240(%rsp), %rdi
 2334      F0000000 
 2335 08ef 4C89FA   		movq	%r15, %rdx
 2336 08f2 4889EE   		movq	%rbp, %rsi
 2337 08f5 E8000000 		call	parseLine
 2337      00
 2338 08fa 85C0     		testl	%eax, %eax
 2339 08fc 0F858D06 		jne	.L488
 2339      0000
 2340 0902 4889EF   		movq	%rbp, %rdi
 2341 0905 E8000000 		call	free@PLT
 2341      00
 2342 090a 807D0071 		cmpb	$113, 0(%rbp)
 2343 090e 75AC     		jne	.L487
 2344 0910 E9BCFAFF 		jmp	.L434
 2344      FF
 2345              	.L532:
 2346 0915 498B4424 		movq	104(%r12), %rax
 2346      68
 2347 091a 4C89FA   		movq	%r15, %rdx
 2348 091d 4889EF   		movq	%rbp, %rdi
 2349 0920 488B30   		movq	(%rax), %rsi
 2350 0923 E8000000 		call	flLoadCustomFirmware@PLT
 2350      00
 2351 0928 E970FCFF 		jmp	.L441
 2351      FF
 2352              	.L447:
 2353 092d 488B4424 		movq	24(%rsp), %rax
 2353      18
 2354 0932 488D3D00 		leaq	.LC81(%rip), %rdi
 2354      000000
 2355 0939 488B4068 		movq	104(%rax), %rax
 2356 093d 4C8B20   		movq	(%rax), %r12
 2357 0940 4C89E6   		movq	%r12, %rsi
 2358 0943 E8000000 		call	strcmp@PLT
 2358      00
 2359 0948 85C0     		testl	%eax, %eax
 2360 094a 0F859C00 		jne	.L450
 2360      0000
 2361 0950 488D3500 		leaq	.LC82(%rip), %rsi
 2361      000000
 2362 0957 BF010000 		movl	$1, %edi
 2362      00
 2363 095c E8000000 		call	__printf_chk@PLT
 2363      00
 2364 0961 488BBC24 		movq	240(%rsp), %rdi
 2364      F0000000 
 2365 0969 4C89FA   		movq	%r15, %rdx
 2366 096c 4C89F6   		movq	%r14, %rsi
 2367 096f E8000000 		call	flFlashStandardFirmware@PLT
 2367      00
 2368              	.L451:
 2369 0974 85C0     		testl	%eax, %eax
 2370 0976 0F843DFD 		je	.L453
 2370      FFFF
 2371 097c E949FAFF 		jmp	.L525
 2371      FF
 2372              	.L439:
 2373 0981 4C89F1   		movq	%r14, %rcx
 2374 0984 488D1500 		leaq	.LC79(%rip), %rdx
 2374      000000
 2375 098b E907FBFF 		jmp	.L524
 2375      FF
 2376              	.L535:
 2377 0990 488B8424 		movq	184(%rsp), %rax
 2377      B8000000 
 2378 0998 31D2     		xorl	%edx, %edx
 2379 099a 488DB424 		leaq	264(%rsp), %rsi
 2379      08010000 
 2380 09a2 488B4068 		movq	104(%rax), %rax
 2381 09a6 488B38   		movq	(%rax), %rdi
 2382 09a9 E8000000 		call	strtoul@PLT
 2382      00
 2383 09ae 488B9424 		movq	264(%rsp), %rdx
 2383      08010000 
 2384 09b6 803A3A   		cmpb	$58, (%rdx)
 2385 09b9 0F84A502 		je	.L454
 2385      0000
 2386 09bf 488D0D00 		leaq	.LC66(%rip), %rcx
 2386      000000
 2387 09c6 488D1500 		leaq	.LC84(%rip), %rdx
 2387      000000
 2388              	.L527:
 2389 09cd 488B3D00 		movq	stderr(%rip), %rdi
 2389      000000
 2390 09d4 BE010000 		movl	$1, %esi
 2390      00
 2391 09d9 31C0     		xorl	%eax, %eax
 2392 09db 31ED     		xorl	%ebp, %ebp
 2393 09dd BB0C0000 		movl	$12, %ebx
 2393      00
 2394 09e2 E8000000 		call	__fprintf_chk@PLT
 2394      00
 2395 09e7 E9E5F9FF 		jmp	.L434
 2395      FF
 2396              	.L450:
 2397 09ec 4C89E2   		movq	%r12, %rdx
 2398 09ef 488D3500 		leaq	.LC83(%rip), %rsi
 2398      000000
 2399 09f6 BF010000 		movl	$1, %edi
 2399      00
 2400 09fb 31C0     		xorl	%eax, %eax
 2401 09fd E8000000 		call	__printf_chk@PLT
 2401      00
 2402 0a02 488B4424 		movq	24(%rsp), %rax
 2402      18
 2403 0a07 488BBC24 		movq	240(%rsp), %rdi
 2403      F0000000 
 2404 0a0f 4C89FA   		movq	%r15, %rdx
 2405 0a12 488B4068 		movq	104(%rax), %rax
 2406 0a16 488B30   		movq	(%rax), %rsi
 2407 0a19 E8000000 		call	flFlashCustomFirmware@PLT
 2407      00
 2408 0a1e E951FFFF 		jmp	.L451
 2408      FF
 2409              	.L462:
 2410 0a23 488B4424 		movq	40(%rsp), %rax
 2410      28
 2411 0a28 83786000 		cmpl	$0, 96(%rax)
 2412 0a2c 0F84D3FD 		je	.L468
 2412      FFFF
 2413 0a32 31C0     		xorl	%eax, %eax
 2414 0a34 488D3500 		leaq	.LC96(%rip), %rsi
 2414      000000
 2415 0a3b BF010000 		movl	$1, %edi
 2415      00
 2416 0a40 E8000000 		call	__printf_chk@PLT
 2416      00
 2417 0a45 4584E4   		testb	%r12b, %r12b
 2418 0a48 0F846B03 		je	.L469
 2418      0000
 2419              	.L491:
 2420 0a4e 488BBC24 		movq	240(%rsp), %rdi
 2420      F0000000 
 2421 0a56 31F6     		xorl	%esi, %esi
 2422 0a58 4C89FA   		movq	%r15, %rdx
 2423 0a5b E8000000 		call	flSelectConduit@PLT
 2423      00
 2424 0a60 85C0     		testl	%eax, %eax
 2425 0a62 0F8562F9 		jne	.L525
 2425      FFFF
 2426 0a68 488B4424 		movq	40(%rsp), %rax
 2426      28
 2427 0a6d 488BBC24 		movq	240(%rsp), %rdi
 2427      F0000000 
 2428 0a75 31D2     		xorl	%edx, %edx
 2429 0a77 4C89F9   		movq	%r15, %rcx
 2430 0a7a 488B4068 		movq	104(%rax), %rax
 2431 0a7e 488B30   		movq	(%rax), %rsi
 2432 0a81 E8000000 		call	flProgram@PLT
 2432      00
 2433 0a86 85C0     		testl	%eax, %eax
 2434 0a88 0F8477FD 		je	.L468
 2434      FFFF
 2435 0a8e E937F9FF 		jmp	.L525
 2435      FF
 2436              	.L456:
 2437 0a93 4C89FE   		movq	%r15, %rsi
 2438 0a96 E8000000 		call	flResetToggle@PLT
 2438      00
 2439 0a9b 85C0     		testl	%eax, %eax
 2440 0a9d 0F8527F9 		jne	.L525
 2440      FFFF
 2441 0aa3 488BBC24 		movq	240(%rsp), %rdi
 2441      F0000000 
 2442 0aab E935FCFF 		jmp	.L459
 2442      FF
 2443              	.L536:
 2444 0ab0 488D3500 		leaq	.LC86(%rip), %rsi
 2444      000000
 2445 0ab7 BF010000 		movl	$1, %edi
 2445      00
 2446 0abc 31C0     		xorl	%eax, %eax
 2447 0abe E8000000 		call	__printf_chk@PLT
 2447      00
 2448 0ac3 488B4424 		movq	32(%rsp), %rax
 2448      20
 2449 0ac8 488BBC24 		movq	240(%rsp), %rdi
 2449      F0000000 
 2450 0ad0 4C89F9   		movq	%r15, %rcx
 2451 0ad3 488D9424 		leaq	264(%rsp), %rdx
 2451      08010000 
 2452 0adb 488B4068 		movq	104(%rax), %rax
 2453 0adf 488B30   		movq	(%rax), %rsi
 2454 0ae2 E8000000 		call	flMultiBitPortAccess@PLT
 2454      00
 2455 0ae7 85C0     		testl	%eax, %eax
 2456 0ae9 0F85DBF8 		jne	.L525
 2456      FFFF
 2457 0aef 448B8424 		movl	264(%rsp), %r8d
 2457      08010000 
 2458 0af7 488D0D00 		leaq	.LC87(%rip), %rcx
 2458      000000
 2459 0afe BA090000 		movl	$9, %edx
 2459      00
 2460 0b03 31C0     		xorl	%eax, %eax
 2461 0b05 488DBC24 		leaq	479(%rsp), %rdi
 2461      DF010000 
 2462 0b0d BE010000 		movl	$1, %esi
 2462      00
 2463 0b12 488D2D00 		leaq	nibbles(%rip), %rbp
 2463      000000
 2464 0b19 E8000000 		call	__sprintf_chk@PLT
 2464      00
 2465 0b1e 0FB68424 		movzbl	479(%rsp), %eax
 2465      DF010000 
 2466 0b26 BF010000 		movl	$1, %edi
 2466      00
 2467 0b2b 488D3500 		leaq	.LC88(%rip), %rsi
 2467      000000
 2468 0b32 83E830   		subl	$48, %eax
 2469 0b35 4898     		cltq
 2470 0b37 488B54C5 		movq	0(%rbp,%rax,8), %rdx
 2470      00
 2471 0b3c 31C0     		xorl	%eax, %eax
 2472 0b3e E8000000 		call	__printf_chk@PLT
 2472      00
 2473 0b43 0FB68424 		movzbl	480(%rsp), %eax
 2473      E0010000 
 2474 0b4b BF010000 		movl	$1, %edi
 2474      00
 2475 0b50 4C8D0500 		leaq	.LC89(%rip), %r8
 2475      000000
 2476 0b57 4C89C6   		movq	%r8, %rsi
 2477 0b5a 83E830   		subl	$48, %eax
 2478 0b5d 4898     		cltq
 2479 0b5f 488B54C5 		movq	0(%rbp,%rax,8), %rdx
 2479      00
 2480 0b64 31C0     		xorl	%eax, %eax
 2481 0b66 E8000000 		call	__printf_chk@PLT
 2481      00
 2482 0b6b 0FB68424 		movzbl	481(%rsp), %eax
 2482      E1010000 
 2483 0b73 BF010000 		movl	$1, %edi
 2483      00
 2484 0b78 4C8D0500 		leaq	.LC89(%rip), %r8
 2484      000000
 2485 0b7f 4C89C6   		movq	%r8, %rsi
 2486 0b82 83E830   		subl	$48, %eax
 2487 0b85 4898     		cltq
 2488 0b87 488B54C5 		movq	0(%rbp,%rax,8), %rdx
 2488      00
 2489 0b8c 31C0     		xorl	%eax, %eax
 2490 0b8e E8000000 		call	__printf_chk@PLT
 2490      00
 2491 0b93 0FB68424 		movzbl	482(%rsp), %eax
 2491      E2010000 
 2492 0b9b BF010000 		movl	$1, %edi
 2492      00
 2493 0ba0 4C8D0500 		leaq	.LC89(%rip), %r8
 2493      000000
 2494 0ba7 4C89C6   		movq	%r8, %rsi
 2495 0baa 83E830   		subl	$48, %eax
 2496 0bad 4898     		cltq
 2497 0baf 488B54C5 		movq	0(%rbp,%rax,8), %rdx
 2497      00
 2498 0bb4 31C0     		xorl	%eax, %eax
 2499 0bb6 E8000000 		call	__printf_chk@PLT
 2499      00
 2500 0bbb 0FB68424 		movzbl	483(%rsp), %eax
 2500      E3010000 
 2501 0bc3 BF010000 		movl	$1, %edi
 2501      00
 2502 0bc8 488D3500 		leaq	.LC90(%rip), %rsi
 2502      000000
 2503 0bcf 83E830   		subl	$48, %eax
 2504 0bd2 4898     		cltq
 2505 0bd4 488B54C5 		movq	0(%rbp,%rax,8), %rdx
 2505      00
 2506 0bd9 31C0     		xorl	%eax, %eax
 2507 0bdb E8000000 		call	__printf_chk@PLT
 2507      00
 2508 0be0 0FB68424 		movzbl	484(%rsp), %eax
 2508      E4010000 
 2509 0be8 BF010000 		movl	$1, %edi
 2509      00
 2510 0bed 4C8D0500 		leaq	.LC89(%rip), %r8
 2510      000000
 2511 0bf4 4C89C6   		movq	%r8, %rsi
 2512 0bf7 83E830   		subl	$48, %eax
 2513 0bfa 4898     		cltq
 2514 0bfc 488B54C5 		movq	0(%rbp,%rax,8), %rdx
 2514      00
 2515 0c01 31C0     		xorl	%eax, %eax
 2516 0c03 E8000000 		call	__printf_chk@PLT
 2516      00
 2517 0c08 0FB68424 		movzbl	485(%rsp), %eax
 2517      E5010000 
 2518 0c10 BF010000 		movl	$1, %edi
 2518      00
 2519 0c15 4C8D0500 		leaq	.LC89(%rip), %r8
 2519      000000
 2520 0c1c 4C89C6   		movq	%r8, %rsi
 2521 0c1f 83E830   		subl	$48, %eax
 2522 0c22 4898     		cltq
 2523 0c24 488B54C5 		movq	0(%rbp,%rax,8), %rdx
 2523      00
 2524 0c29 31C0     		xorl	%eax, %eax
 2525 0c2b E8000000 		call	__printf_chk@PLT
 2525      00
 2526 0c30 0FB68424 		movzbl	486(%rsp), %eax
 2526      E6010000 
 2527 0c38 BF010000 		movl	$1, %edi
 2527      00
 2528 0c3d 488D3500 		leaq	.LC91(%rip), %rsi
 2528      000000
 2529 0c44 83E830   		subl	$48, %eax
 2530 0c47 4898     		cltq
 2531 0c49 488B54C5 		movq	0(%rbp,%rax,8), %rdx
 2531      00
 2532 0c4e 31C0     		xorl	%eax, %eax
 2533 0c50 E8000000 		call	__printf_chk@PLT
 2533      00
 2534 0c55 BF640000 		movl	$100, %edi
 2534      00
 2535 0c5a E8000000 		call	flSleep@PLT
 2535      00
 2536 0c5f E9D0FAFF 		jmp	.L460
 2536      FF
 2537              	.L454:
 2538 0c64 488D4A01 		leaq	1(%rdx), %rcx
 2539 0c68 89C5     		movl	%eax, %ebp
 2540 0c6a 89C2     		movl	%eax, %edx
 2541 0c6c BF010000 		movl	$1, %edi
 2541      00
 2542 0c71 488D3500 		leaq	.LC85(%rip), %rsi
 2542      000000
 2543 0c78 31C0     		xorl	%eax, %eax
 2544 0c7a 48898C24 		movq	%rcx, 264(%rsp)
 2544      08010000 
 2545 0c82 E8000000 		call	__printf_chk@PLT
 2545      00
 2546 0c87 488B9424 		movq	264(%rsp), %rdx
 2546      08010000 
 2547 0c8f 4C89F9   		movq	%r15, %rcx
 2548 0c92 89EE     		movl	%ebp, %esi
 2549 0c94 488BBC24 		movq	240(%rsp), %rdi
 2549      F0000000 
 2550 0c9c E8000000 		call	flSaveFirmware@PLT
 2550      00
 2551 0ca1 85C0     		testl	%eax, %eax
 2552 0ca3 0F8422FA 		je	.L449
 2552      FFFF
 2553              	.L481:
 2554 0ca9 BB010000 		movl	$1, %ebx
 2554      00
 2555 0cae 31ED     		xorl	%ebp, %ebp
 2556 0cb0 E91CF7FF 		jmp	.L434
 2556      FF
 2557              	.L534:
 2558 0cb5 488B3D00 		movq	stderr(%rip), %rdi
 2558      000000
 2559 0cbc 4C89F1   		movq	%r14, %rcx
 2560 0cbf BE010000 		movl	$1, %esi
 2560      00
 2561 0cc4 31C0     		xorl	%eax, %eax
 2562 0cc6 488D1500 		leaq	.LC77(%rip), %rdx
 2562      000000
 2563 0ccd E8000000 		call	__fprintf_chk@PLT
 2563      00
 2564 0cd2 E9F3F6FF 		jmp	.L525
 2564      FF
 2565              	.L463:
 2566 0cd7 4C89F1   		movq	%r14, %rcx
 2567 0cda 488D1500 		leaq	.LC95(%rip), %rdx
 2567      000000
 2568 0ce1 E9B1F7FF 		jmp	.L524
 2568      FF
 2569              	.L538:
 2570 0ce6 31C0     		xorl	%eax, %eax
 2571 0ce8 4C89F2   		movq	%r14, %rdx
 2572 0ceb BF010000 		movl	$1, %edi
 2572      00
 2573 0cf0 488D3500 		leaq	.LC98(%rip), %rsi
 2573      000000
 2574 0cf7 E8000000 		call	__printf_chk@PLT
 2574      00
 2575 0cfc 807C2408 		cmpb	$0, 8(%rsp)
 2575      00
 2576 0d01 0F84CA00 		je	.L472
 2576      0000
 2577 0d07 488BBC24 		movq	240(%rsp), %rdi
 2577      F0000000 
 2578 0d0f 4C89FA   		movq	%r15, %rdx
 2579 0d12 4489EE   		movl	%r13d, %esi
 2580 0d15 E8000000 		call	flSelectConduit@PLT
 2580      00
 2581 0d1a 85C0     		testl	%eax, %eax
 2582 0d1c 0F85A600 		jne	.L473
 2582      0000
 2583 0d22 488BBC24 		movq	240(%rsp), %rdi
 2583      F0000000 
 2584 0d2a 488DB424 		leaq	264(%rsp), %rsi
 2584      08010000 
 2585 0d32 4C89FA   		movq	%r15, %rdx
 2586 0d35 E8000000 		call	flIsFPGARunning@PLT
 2586      00
 2587 0d3a 85C0     		testl	%eax, %eax
 2588 0d3c 0F858600 		jne	.L473
 2588      0000
 2589 0d42 80BC2408 		cmpb	$0, 264(%rsp)
 2589      01000000 
 2590 0d4a 0F848A02 		je	.L474
 2590      0000
 2591 0d50 488B4424 		movq	48(%rsp), %rax
 2591      30
 2592 0d55 488BBC24 		movq	240(%rsp), %rdi
 2592      F0000000 
 2593 0d5d 4C89FA   		movq	%r15, %rdx
 2594 0d60 488B4068 		movq	104(%rax), %rax
 2595 0d64 488B30   		movq	(%rax), %rsi
 2596 0d67 E8000000 		call	parseLine
 2596      00
 2597 0d6c 85C0     		testl	%eax, %eax
 2598 0d6e 0F84B2FA 		je	.L471
 2598      FFFF
 2599 0d74 89C3     		movl	%eax, %ebx
 2600              	.L540:
 2601 0d76 31ED     		xorl	%ebp, %ebp
 2602 0d78 E954F6FF 		jmp	.L434
 2602      FF
 2603              	.L539:
 2604 0d7d 488B4068 		movq	104(%rax), %rax
 2605 0d81 488DB424 		leaq	256(%rsp), %rsi
 2605      00010000 
 2606 0d89 BA0A0000 		movl	$10, %edx
 2606      00
 2607 0d8e 488B38   		movq	(%rax), %rdi
 2608 0d91 E8000000 		call	strtoul@PLT
 2608      00
 2609 0d96 4989C4   		movq	%rax, %r12
 2610 0d99 488B8424 		movq	256(%rsp), %rax
 2610      00010000 
 2611 0da1 80383A   		cmpb	$58, (%rax)
 2612 0da4 7452     		je	.L478
 2613 0da6 488D0D00 		leaq	.LC66(%rip), %rcx
 2613      000000
 2614 0dad 488D1500 		leaq	.LC101(%rip), %rdx
 2614      000000
 2615 0db4 E914FCFF 		jmp	.L527
 2615      FF
 2616              	.L469:
 2617 0db9 4C89F1   		movq	%r14, %rcx
 2618 0dbc 488D1500 		leaq	.LC97(%rip), %rdx
 2618      000000
 2619 0dc3 E9CFF6FF 		jmp	.L524
 2619      FF
 2620              	.L473:
 2621 0dc8 B8010000 		movl	$1, %eax
 2621      00
 2622 0dcd 89C3     		movl	%eax, %ebx
 2623 0dcf EBA5     		jmp	.L540
 2624              	.L472:
 2625 0dd1 4C89F1   		movq	%r14, %rcx
 2626 0dd4 488D1500 		leaq	.LC100(%rip), %rdx
 2626      000000
 2627 0ddb E9B7F6FF 		jmp	.L524
 2627      FF
 2628              	.L464:
 2629 0de0 488D3500 		leaq	.LC94(%rip), %rsi
 2629      000000
 2630 0de7 BF010000 		movl	$1, %edi
 2630      00
 2631 0dec 31C0     		xorl	%eax, %eax
 2632 0dee E8000000 		call	__printf_chk@PLT
 2632      00
 2633 0df3 E9FEF9FF 		jmp	.L467
 2633      FF
 2634              	.L478:
 2635 0df8 488D4801 		leaq	1(%rax), %rcx
 2636 0dfc 4C89E2   		movq	%r12, %rdx
 2637 0dff BF010000 		movl	$1, %edi
 2637      00
 2638 0e04 31C0     		xorl	%eax, %eax
 2639 0e06 488D3500 		leaq	.LC102(%rip), %rsi
 2639      000000
 2640 0e0d 48898C24 		movq	%rcx, 256(%rsp)
 2640      00010000 
 2641 0e15 E8000000 		call	__printf_chk@PLT
 2641      00
 2642 0e1a 488BBC24 		movq	256(%rsp), %rdi
 2642      00010000 
 2643 0e22 488D3500 		leaq	.LC2(%rip), %rsi
 2643      000000
 2644 0e29 E8000000 		call	fopen@PLT
 2644      00
 2645 0e2e 4889C5   		movq	%rax, %rbp
 2646 0e31 4885C0   		testq	%rax, %rax
 2647 0e34 0F84F201 		je	.L495
 2647      0000
 2648 0e3a E8000000 		call	sigRegisterHandler@PLT
 2648      00
 2649 0e3f 488BBC24 		movq	240(%rsp), %rdi
 2649      F0000000 
 2650 0e47 4C89FA   		movq	%r15, %rdx
 2651 0e4a 4489EE   		movl	%r13d, %esi
 2652 0e4d E8000000 		call	flSelectConduit@PLT
 2652      00
 2653 0e52 85C0     		testl	%eax, %eax
 2654 0e54 0F854FFE 		jne	.L481
 2654      FFFF
 2655 0e5a 450FB6E4 		movzbl	%r12b, %r12d
 2656 0e5e 31C9     		xorl	%ecx, %ecx
 2657 0e60 4D89F8   		movq	%r15, %r8
 2658 0e63 BA005800 		movl	$22528, %edx
 2658      00
 2659 0e68 488BBC24 		movq	240(%rsp), %rdi
 2659      F0000000 
 2660 0e70 4489E6   		movl	%r12d, %esi
 2661 0e73 E8000000 		call	flReadChannelAsyncSubmit@PLT
 2661      00
 2662 0e78 85C0     		testl	%eax, %eax
 2663 0e7a 0F8529FE 		jne	.L481
 2663      FFFF
 2664 0e80 44896C24 		movl	%r13d, 16(%rsp)
 2664      10
 2665 0e85 895C2418 		movl	%ebx, 24(%rsp)
 2666              	.L482:
 2667 0e89 488BBC24 		movq	240(%rsp), %rdi
 2667      F0000000 
 2668 0e91 31C9     		xorl	%ecx, %ecx
 2669 0e93 4D89F8   		movq	%r15, %r8
 2670 0e96 4489E6   		movl	%r12d, %esi
 2671 0e99 BA005800 		movl	$22528, %edx
 2671      00
 2672 0e9e E8000000 		call	flReadChannelAsyncSubmit@PLT
 2672      00
 2673 0ea3 85C0     		testl	%eax, %eax
 2674 0ea5 0F85FEFD 		jne	.L481
 2674      FFFF
 2675 0eab 4C8DAC24 		leaq	236(%rsp), %r13
 2675      EC000000 
 2676 0eb3 488D9C24 		leaq	264(%rsp), %rbx
 2676      08010000 
 2677 0ebb 488BBC24 		movq	240(%rsp), %rdi
 2677      F0000000 
 2678 0ec3 4D89F8   		movq	%r15, %r8
 2679 0ec6 4C89E9   		movq	%r13, %rcx
 2680 0ec9 4C89EA   		movq	%r13, %rdx
 2681 0ecc 4889DE   		movq	%rbx, %rsi
 2682 0ecf E8000000 		call	flReadChannelAsyncAwait@PLT
 2682      00
 2683 0ed4 85C0     		testl	%eax, %eax
 2684 0ed6 0F85CDFD 		jne	.L481
 2684      FFFF
 2685 0edc 8B9424EC 		movl	236(%rsp), %edx
 2685      000000
 2686 0ee3 488BBC24 		movq	264(%rsp), %rdi
 2686      08010000 
 2687 0eeb 4889E9   		movq	%rbp, %rcx
 2688 0eee BE010000 		movl	$1, %esi
 2688      00
 2689 0ef3 E8000000 		call	fwrite@PLT
 2689      00
 2690 0ef8 488D3500 		leaq	.LC76(%rip), %rsi
 2690      000000
 2691 0eff BF010000 		movl	$1, %edi
 2691      00
 2692 0f04 31C0     		xorl	%eax, %eax
 2693 0f06 E8000000 		call	__printf_chk@PLT
 2693      00
 2694 0f0b E8000000 		call	sigIsRaised@PLT
 2694      00
 2695 0f10 84C0     		testb	%al, %al
 2696 0f12 0F8471FF 		je	.L482
 2696      FFFF
 2697 0f18 488D3500 		leaq	.LC103(%rip), %rsi
 2697      000000
 2698 0f1f BF010000 		movl	$1, %edi
 2698      00
 2699 0f24 31C0     		xorl	%eax, %eax
 2700 0f26 4D89EC   		movq	%r13, %r12
 2701 0f29 448B6C24 		movl	16(%rsp), %r13d
 2701      10
 2702 0f2e 48895C24 		movq	%rbx, 16(%rsp)
 2702      10
 2703 0f33 8B5C2418 		movl	24(%rsp), %ebx
 2704 0f37 E8000000 		call	__printf_chk@PLT
 2704      00
 2705 0f3c 488B7424 		movq	16(%rsp), %rsi
 2705      10
 2706 0f41 4D89F8   		movq	%r15, %r8
 2707 0f44 4C89E1   		movq	%r12, %rcx
 2708 0f47 488BBC24 		movq	240(%rsp), %rdi
 2708      F0000000 
 2709 0f4f 4C89E2   		movq	%r12, %rdx
 2710 0f52 E8000000 		call	flReadChannelAsyncAwait@PLT
 2710      00
 2711 0f57 85C0     		testl	%eax, %eax
 2712 0f59 0F854AFD 		jne	.L481
 2712      FFFF
 2713 0f5f 488BBC24 		movq	264(%rsp), %rdi
 2713      08010000 
 2714 0f67 8B9424EC 		movl	236(%rsp), %edx
 2714      000000
 2715 0f6e 4889E9   		movq	%rbp, %rcx
 2716 0f71 BE010000 		movl	$1, %esi
 2716      00
 2717 0f76 E8000000 		call	fwrite@PLT
 2717      00
 2718 0f7b 4889EF   		movq	%rbp, %rdi
 2719 0f7e E8000000 		call	fclose@PLT
 2719      00
 2720 0f83 E9B0F8FF 		jmp	.L477
 2720      FF
 2721              	.L484:
 2722 0f88 31ED     		xorl	%ebp, %ebp
 2723 0f8a B8010000 		movl	$1, %eax
 2723      00
 2724              	.L488:
 2725 0f8f 89C3     		movl	%eax, %ebx
 2726 0f91 E93BF4FF 		jmp	.L434
 2726      FF
 2727              	.L537:
 2728 0f96 488D3500 		leaq	.LC96(%rip), %rsi
 2728      000000
 2729 0f9d BF010000 		movl	$1, %edi
 2729      00
 2730 0fa2 31C0     		xorl	%eax, %eax
 2731 0fa4 E8000000 		call	__printf_chk@PLT
 2731      00
 2732 0fa9 E9A0FAFF 		jmp	.L491
 2732      FF
 2733              	.L483:
 2734 0fae 4C89F1   		movq	%r14, %rcx
 2735 0fb1 BE010000 		movl	$1, %esi
 2735      00
 2736 0fb6 31C0     		xorl	%eax, %eax
 2737 0fb8 BB0C0000 		movl	$12, %ebx
 2737      00
 2738 0fbd 488B3D00 		movq	stderr(%rip), %rdi
 2738      000000
 2739 0fc4 488D1500 		leaq	.LC107(%rip), %rdx
 2739      000000
 2740 0fcb E8000000 		call	__fprintf_chk@PLT
 2740      00
 2741 0fd0 E9FCF3FF 		jmp	.L434
 2741      FF
 2742              	.L531:
 2743 0fd5 E8000000 		call	__stack_chk_fail@PLT
 2743      00
 2744              	.L474:
 2745 0fda 488B3D00 		movq	stderr(%rip), %rdi
 2745      000000
 2746 0fe1 4C89F1   		movq	%r14, %rcx
 2747 0fe4 BE010000 		movl	$1, %esi
 2747      00
 2748 0fe9 31C0     		xorl	%eax, %eax
 2749 0feb 488D1500 		leaq	.LC99(%rip), %rdx
 2749      000000
 2750 0ff2 E8000000 		call	__fprintf_chk@PLT
 2750      00
 2751 0ff7 B80C0000 		movl	$12, %eax
 2751      00
 2752 0ffc 89C3     		movl	%eax, %ebx
 2753 0ffe E973FDFF 		jmp	.L540
 2753      FF
 2754              	.L485:
 2755 1003 488B3D00 		movq	stderr(%rip), %rdi
 2755      000000
 2756 100a 4C89F1   		movq	%r14, %rcx
 2757 100d BE010000 		movl	$1, %esi
 2757      00
 2758 1012 31C0     		xorl	%eax, %eax
 2759 1014 488D1500 		leaq	.LC106(%rip), %rdx
 2759      000000
 2760 101b E8000000 		call	__fprintf_chk@PLT
 2760      00
 2761 1020 B80C0000 		movl	$12, %eax
 2761      00
 2762 1025 89C3     		movl	%eax, %ebx
 2763 1027 E9A5F3FF 		jmp	.L434
 2763      FF
 2764              	.L495:
 2765 102c BB0B0000 		movl	$11, %ebx
 2765      00
 2766 1031 31ED     		xorl	%ebp, %ebp
 2767 1033 E999F3FF 		jmp	.L434
 2767      FF
 2768              		.cfi_endproc
 2769              	.LFE43:
 2771              		.section	.rodata.str1.1
 2772              	.LC109:
 2773 026a 30303030 		.string	"0000"
 2773      00
 2774              	.LC110:
 2775 026f 30303031 		.string	"0001"
 2775      00
 2776              	.LC111:
 2777 0274 30303130 		.string	"0010"
 2777      00
 2778              	.LC112:
 2779 0279 30303131 		.string	"0011"
 2779      00
 2780              	.LC113:
 2781 027e 30313030 		.string	"0100"
 2781      00
 2782              	.LC114:
 2783 0283 30313031 		.string	"0101"
 2783      00
 2784              	.LC115:
 2785 0288 30313130 		.string	"0110"
 2785      00
 2786              	.LC116:
 2787 028d 30313131 		.string	"0111"
 2787      00
 2788              	.LC117:
 2789 0292 31303030 		.string	"1000"
 2789      00
 2790              	.LC118:
 2791 0297 31303031 		.string	"1001"
 2791      00
 2792              	.LC119:
 2793 029c 58585858 		.string	"XXXX"
 2793      00
 2794              	.LC120:
 2795 02a1 31303130 		.string	"1010"
 2795      00
 2796              	.LC121:
 2797 02a6 31303131 		.string	"1011"
 2797      00
 2798              	.LC122:
 2799 02ab 31313030 		.string	"1100"
 2799      00
 2800              	.LC123:
 2801 02b0 31313031 		.string	"1101"
 2801      00
 2802              	.LC124:
 2803 02b5 31313130 		.string	"1110"
 2803      00
 2804              	.LC125:
 2805 02ba 31313131 		.string	"1111"
 2805      00
 2806              		.section	.data.rel.ro.local,"aw"
 2807              		.align 32
 2810              	nibbles:
 2811 0000 00000000 		.quad	.LC109
 2811      00000000 
 2812 0008 00000000 		.quad	.LC110
 2812      00000000 
 2813 0010 00000000 		.quad	.LC111
 2813      00000000 
 2814 0018 00000000 		.quad	.LC112
 2814      00000000 
 2815 0020 00000000 		.quad	.LC113
 2815      00000000 
 2816 0028 00000000 		.quad	.LC114
 2816      00000000 
 2817 0030 00000000 		.quad	.LC115
 2817      00000000 
 2818 0038 00000000 		.quad	.LC116
 2818      00000000 
 2819 0040 00000000 		.quad	.LC117
 2819      00000000 
 2820 0048 00000000 		.quad	.LC118
 2820      00000000 
 2821 0050 00000000 		.quad	.LC119
 2821      00000000 
 2822 0058 00000000 		.quad	.LC119
 2822      00000000 
 2823 0060 00000000 		.quad	.LC119
 2823      00000000 
 2824 0068 00000000 		.quad	.LC119
 2824      00000000 
 2825 0070 00000000 		.quad	.LC119
 2825      00000000 
 2826 0078 00000000 		.quad	.LC119
 2826      00000000 
 2827 0080 00000000 		.quad	.LC119
 2827      00000000 
 2828 0088 00000000 		.quad	.LC120
 2828      00000000 
 2829 0090 00000000 		.quad	.LC121
 2829      00000000 
 2830 0098 00000000 		.quad	.LC122
 2830      00000000 
 2831 00a0 00000000 		.quad	.LC123
 2831      00000000 
 2832 00a8 00000000 		.quad	.LC124
 2832      00000000 
 2833 00b0 00000000 		.quad	.LC125
 2833      00000000 
 2834              		.section	.rodata.str1.1
 2835              	.LC126:
 2836 02bf 556E7061 		.string	"Unparseable hex number"
 2836      72736561 
 2836      626C6520 
 2836      68657820 
 2836      6E756D62 
 2837              	.LC127:
 2838 02d6 4368616E 		.string	"Channel out of range"
 2838      6E656C20 
 2838      6F757420 
 2838      6F662072 
 2838      616E6765 
 2839              	.LC128:
 2840 02eb 436F6E64 		.string	"Conduit out of range"
 2840      75697420 
 2840      6F757420 
 2840      6F662072 
 2840      616E6765 
 2841              	.LC129:
 2842 0300 556E7465 		.string	"Unterminated string"
 2842      726D696E 
 2842      61746564 
 2842      20737472 
 2842      696E6700 
 2843              	.LC130:
 2844 0314 4E6F206D 		.string	"No memory"
 2844      656D6F72 
 2844      7900
 2845              	.LC131:
 2846 031e 456D7074 		.string	"Empty string"
 2846      79207374 
 2846      72696E67 
 2846      00
 2847              	.LC132:
 2848 032b 4F646420 		.string	"Odd number of digits"
 2848      6E756D62 
 2848      6572206F 
 2848      66206469 
 2848      67697473 
 2849              	.LC133:
 2850 0340 43616E6E 		.string	"Cannot load file"
 2850      6F74206C 
 2850      6F616420 
 2850      66696C65 
 2850      00
 2851              	.LC134:
 2852 0351 43616E6E 		.string	"Cannot save file"
 2852      6F742073 
 2852      61766520 
 2852      66696C65 
 2852      00
 2853              	.LC135:
 2854 0362 42616420 		.string	"Bad arguments"
 2854      61726775 
 2854      6D656E74 
 2854      7300
 2855              		.section	.data.rel.ro.local
 2856 00b8 00000000 		.align 32
 2856      00000000 
 2859              	errMessages:
 2860 00c0 00000000 		.quad	0
 2860      00000000 
 2861 00c8 00000000 		.quad	0
 2861      00000000 
 2862 00d0 00000000 		.quad	.LC126
 2862      00000000 
 2863 00d8 00000000 		.quad	.LC127
 2863      00000000 
 2864 00e0 00000000 		.quad	.LC128
 2864      00000000 
 2865 00e8 00000000 		.quad	.LC1
 2865      00000000 
 2866 00f0 00000000 		.quad	.LC129
 2866      00000000 
 2867 00f8 00000000 		.quad	.LC130
 2867      00000000 
 2868 0100 00000000 		.quad	.LC131
 2868      00000000 
 2869 0108 00000000 		.quad	.LC132
 2869      00000000 
 2870 0110 00000000 		.quad	.LC133
 2870      00000000 
 2871 0118 00000000 		.quad	.LC134
 2871      00000000 
 2872 0120 00000000 		.quad	.LC135
 2872      00000000 
 2873              		.local	enableBenchmarking
 2874              		.comm	enableBenchmarking,1,1
 2875              		.local	ptr
 2876              		.comm	ptr,8,8
 2877              		.section	.rodata.cst8,"aM",@progbits,8
 2878              		.align 8
 2879              	.LC4:
 2880 0000 00000000 		.long	0
 2881 0004 80842E41 		.long	1093567616
 2882              		.align 8
 2883              	.LC5:
 2884 0008 00000000 		.long	0
 2885 000c 00003041 		.long	1093664768
 2886              		.ident	"GCC: (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0"
 2887              		.section	.note.GNU-stack,"",@progbits
 2888              		.section	.note.gnu.property,"a"
 2889              		.align 8
 2890 0000 04000000 		.long	1f - 0f
 2891 0004 10000000 		.long	4f - 1f
 2892 0008 05000000 		.long	5
 2893              	0:
 2894 000c 474E5500 		.string	"GNU"
 2895              	1:
 2896              		.align 8
 2897 0010 020000C0 		.long	0xc0000002
 2898 0014 04000000 		.long	3f - 2f
 2899              	2:
 2900 0018 03000000 		.long	0x3
 2901              	3:
 2902 001c 00000000 		.align 8
 2903              	4:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cckTeh74.s:9      .text:0000000000000000 doWrite.constprop.0
     /tmp/cckTeh74.s:253    .text:0000000000000280 parseLine
     /tmp/cckTeh74.s:2876   .bss:0000000000000008 ptr
     /tmp/cckTeh74.s:2859   .data.rel.ro.local:00000000000000c0 errMessages
                             .bss:0000000000000000 enableBenchmarking
     /tmp/cckTeh74.s:1838   .text.startup:0000000000000000 main
     /tmp/cckTeh74.s:2810   .data.rel.ro.local:0000000000000000 nibbles
     /tmp/cckTeh74.s:4      .rodata.str1.1:0000000000000000 .LC0
     /tmp/cckTeh74.s:244    .rodata.str1.1:000000000000002b .LC9
     /tmp/cckTeh74.s:248    .rodata.str1.1:0000000000000046 .LC11
     /tmp/cckTeh74.s:246    .rodata.str1.1:0000000000000043 .LC10
     /tmp/cckTeh74.s:237    .rodata.str1.1:0000000000000028 .LC7
     /tmp/cckTeh74.s:2879   .rodata.cst8:0000000000000000 .LC4
     /tmp/cckTeh74.s:2883   .rodata.cst8:0000000000000008 .LC5
     /tmp/cckTeh74.s:241    .rodata.str1.8:0000000000000040 .LC8
     /tmp/cckTeh74.s:234    .rodata.str1.8:0000000000000000 .LC6
     /tmp/cckTeh74.s:226    .rodata.str1.1:000000000000000a .LC1
     /tmp/cckTeh74.s:228    .rodata.str1.1:000000000000001c .LC2
     /tmp/cckTeh74.s:230    .rodata.str1.1:000000000000001f .LC3
     /tmp/cckTeh74.s:1556   .rodata.str1.8:0000000000000080 .LC12
     /tmp/cckTeh74.s:1559   .rodata.str1.1:0000000000000048 .LC13
     /tmp/cckTeh74.s:1563   .rodata.str1.1:0000000000000056 .LC15
     /tmp/cckTeh74.s:1561   .rodata.str1.1:0000000000000052 .LC14
     /tmp/cckTeh74.s:1567   .rodata.str1.8:00000000000000b8 .LC16
     /tmp/cckTeh74.s:1570   .rodata.str1.1:0000000000000058 .LC17
     /tmp/cckTeh74.s:1572   .rodata.str1.1:0000000000000068 .LC18
     /tmp/cckTeh74.s:1574   .rodata.str1.1:000000000000006b .LC19
     /tmp/cckTeh74.s:1578   .rodata.str1.8:00000000000000f0 .LC20
     /tmp/cckTeh74.s:1581   .rodata.str1.1:000000000000006d .LC21
     /tmp/cckTeh74.s:1583   .rodata.str1.1:000000000000007c .LC22
     /tmp/cckTeh74.s:1585   .rodata.str1.1:000000000000007f .LC23
     /tmp/cckTeh74.s:1589   .rodata.str1.8:0000000000000120 .LC24
     /tmp/cckTeh74.s:1592   .rodata.str1.1:0000000000000081 .LC25
     /tmp/cckTeh74.s:1594   .rodata.str1.1:0000000000000094 .LC26
     /tmp/cckTeh74.s:1596   .rodata.str1.1:000000000000009a .LC27
     /tmp/cckTeh74.s:1598   .rodata.str1.1:000000000000009c .LC28
     /tmp/cckTeh74.s:1600   .rodata.str1.1:00000000000000ba .LC29
     /tmp/cckTeh74.s:1602   .rodata.str1.1:00000000000000c5 .LC30
     /tmp/cckTeh74.s:1604   .rodata.str1.1:00000000000000cb .LC31
     /tmp/cckTeh74.s:1606   .rodata.str1.1:00000000000000cd .LC32
     /tmp/cckTeh74.s:1608   .rodata.str1.1:00000000000000e7 .LC33
     /tmp/cckTeh74.s:1610   .rodata.str1.1:00000000000000f0 .LC34
     /tmp/cckTeh74.s:1612   .rodata.str1.1:00000000000000f8 .LC35
     /tmp/cckTeh74.s:1616   .rodata.str1.8:0000000000000150 .LC36
     /tmp/cckTeh74.s:1619   .rodata.str1.1:00000000000000fa .LC37
     /tmp/cckTeh74.s:1621   .rodata.str1.1:0000000000000104 .LC38
     /tmp/cckTeh74.s:1623   .rodata.str1.1:000000000000010c .LC39
     /tmp/cckTeh74.s:1627   .rodata.str1.8:0000000000000188 .LC40
     /tmp/cckTeh74.s:1630   .rodata.str1.1:000000000000010e .LC41
     /tmp/cckTeh74.s:1632   .rodata.str1.1:000000000000011d .LC42
     /tmp/cckTeh74.s:1634   .rodata.str1.1:0000000000000124 .LC43
     /tmp/cckTeh74.s:1638   .rodata.str1.8:00000000000001b0 .LC44
     /tmp/cckTeh74.s:1641   .rodata.str1.1:0000000000000126 .LC45
     /tmp/cckTeh74.s:1643   .rodata.str1.1:000000000000012c .LC46
     /tmp/cckTeh74.s:1647   .rodata.str1.8:00000000000001f0 .LC47
     /tmp/cckTeh74.s:1650   .rodata.str1.1:000000000000012e .LC48
     /tmp/cckTeh74.s:1652   .rodata.str1.1:0000000000000138 .LC49
     /tmp/cckTeh74.s:1656   .rodata.str1.8:0000000000000228 .LC50
     /tmp/cckTeh74.s:1659   .rodata.str1.1:000000000000013a .LC51
     /tmp/cckTeh74.s:1661   .rodata.str1.1:0000000000000140 .LC52
     /tmp/cckTeh74.s:1665   .rodata.str1.8:0000000000000258 .LC53
     /tmp/cckTeh74.s:1668   .rodata.str1.1:0000000000000142 .LC54
     /tmp/cckTeh74.s:1670   .rodata.str1.1:0000000000000150 .LC55
     /tmp/cckTeh74.s:1672   .rodata.str1.1:0000000000000159 .LC56
     /tmp/cckTeh74.s:1676   .rodata.str1.8:0000000000000280 .LC57
     /tmp/cckTeh74.s:1679   .rodata.str1.1:000000000000015b .LC58
     /tmp/cckTeh74.s:1681   .rodata.str1.1:0000000000000160 .LC59
     /tmp/cckTeh74.s:1685   .rodata.str1.8:00000000000002b0 .LC60
     /tmp/cckTeh74.s:1688   .rodata.str1.1:0000000000000162 .LC61
     /tmp/cckTeh74.s:1690   .rodata.str1.1:0000000000000176 .LC62
     /tmp/cckTeh74.s:1694   .rodata.str1.8:00000000000002d8 .LC63
     /tmp/cckTeh74.s:1697   .rodata.str1.1:000000000000017d .LC64
     /tmp/cckTeh74.s:1699   .rodata.str1.1:000000000000018f .LC65
     /tmp/cckTeh74.s:1832   .rodata.str1.1:0000000000000266 .LC108
     /tmp/cckTeh74.s:1701   .rodata.str1.1:0000000000000196 .LC66
     /tmp/cckTeh74.s:1703   .rodata.str1.1:000000000000019c .LC67
     /tmp/cckTeh74.s:1721   .rodata.str1.8:0000000000000388 .LC72
     /tmp/cckTeh74.s:1707   .rodata.str1.8:0000000000000308 .LC68
     /tmp/cckTeh74.s:1710   .rodata.str1.1:00000000000001b5 .LC69
     /tmp/cckTeh74.s:1714   .rodata.str1.8:0000000000000360 .LC70
     /tmp/cckTeh74.s:1717   .rodata.str1.1:00000000000001b7 .LC71
     /tmp/cckTeh74.s:1724   .rodata.str1.8:00000000000003b0 .LC73
     /tmp/cckTeh74.s:1727   .rodata.str1.1:00000000000001c3 .LC74
     /tmp/cckTeh74.s:1729   .rodata.str1.1:00000000000001e0 .LC75
     /tmp/cckTeh74.s:1731   .rodata.str1.1:00000000000001f6 .LC76
     /tmp/cckTeh74.s:1738   .rodata.str1.8:0000000000000420 .LC78
     /tmp/cckTeh74.s:1744   .rodata.str1.8:00000000000004b0 .LC80
     /tmp/cckTeh74.s:1780   .rodata.str1.8:0000000000000648 .LC92
     /tmp/cckTeh74.s:1783   .rodata.str1.1:0000000000000225 .LC93
     /tmp/cckTeh74.s:1819   .rodata.str1.8:00000000000008a0 .LC104
     /tmp/cckTeh74.s:1822   .rodata.str1.1:0000000000000263 .LC105
     /tmp/cckTeh74.s:1747   .rodata.str1.1:00000000000001f8 .LC81
     /tmp/cckTeh74.s:1751   .rodata.str1.8:0000000000000500 .LC82
     /tmp/cckTeh74.s:1741   .rodata.str1.8:0000000000000460 .LC79
     /tmp/cckTeh74.s:1757   .rodata.str1.8:0000000000000588 .LC84
     /tmp/cckTeh74.s:1754   .rodata.str1.8:0000000000000540 .LC83
     /tmp/cckTeh74.s:1793   .rodata.str1.1:000000000000022f .LC96
     /tmp/cckTeh74.s:1763   .rodata.str1.1:00000000000001fc .LC86
     /tmp/cckTeh74.s:1765   .rodata.str1.1:0000000000000212 .LC87
     /tmp/cckTeh74.s:1769   .rodata.str1.8:0000000000000608 .LC88
     /tmp/cckTeh74.s:1772   .rodata.str1.1:0000000000000217 .LC89
     /tmp/cckTeh74.s:1774   .rodata.str1.1:000000000000021b .LC90
     /tmp/cckTeh74.s:1776   .rodata.str1.1:0000000000000220 .LC91
     /tmp/cckTeh74.s:1760   .rodata.str1.8:00000000000005c8 .LC85
     /tmp/cckTeh74.s:1735   .rodata.str1.8:00000000000003e8 .LC77
     /tmp/cckTeh74.s:1790   .rodata.str1.8:00000000000006e0 .LC95
     /tmp/cckTeh74.s:1800   .rodata.str1.8:0000000000000778 .LC98
     /tmp/cckTeh74.s:1809   .rodata.str1.8:0000000000000840 .LC101
     /tmp/cckTeh74.s:1797   .rodata.str1.8:0000000000000730 .LC97
     /tmp/cckTeh74.s:1806   .rodata.str1.8:0000000000000800 .LC100
     /tmp/cckTeh74.s:1787   .rodata.str1.8:0000000000000688 .LC94
     /tmp/cckTeh74.s:1812   .rodata.str1.8:0000000000000880 .LC102
     /tmp/cckTeh74.s:1815   .rodata.str1.1:0000000000000246 .LC103
     /tmp/cckTeh74.s:1829   .rodata.str1.8:0000000000000918 .LC107
     /tmp/cckTeh74.s:1803   .rodata.str1.8:00000000000007b0 .LC99
     /tmp/cckTeh74.s:1826   .rodata.str1.8:00000000000008c8 .LC106

UNDEFINED SYMBOLS
fread
flAwaitAsyncWrites
flWriteChannelAsync
errPrefix
__stack_chk_fail
bufInitialise
bufDestroy
stderr
__fprintf_chk
__errno_location
strtoul
flSelectConduit
malloc
bufAppendConst
gettimeofday
flReadChannel
fclose
free
strncpy
fopen
__printf_chk
flWriteChannel
dump
flReadChannelAsyncSubmit
flReadChannelAsyncAwait
fwrite
arg_str0
arg_str1
arg_uint0
arg_lit0
arg_end
arg_nullcheck
arg_parse
flInitialise
flClose
flFreeError
stdout
arg_print_errors
arg_print_syntax
arg_print_glossary
flOpen
flLoadStandardFirmware
flSleep
fflush
flIsDeviceAvailable
flGetFirmwareVersion
flGetFirmwareID
flIsNeroCapable
flIsCommCapable
jtagScanChain
flIsFPGARunning
readline
add_history
flLoadCustomFirmware
strcmp
flFlashStandardFirmware
flFlashCustomFirmware
flProgram
flResetToggle
flMultiBitPortAccess
__sprintf_chk
flSaveFirmware
sigRegisterHandler
sigIsRaised
